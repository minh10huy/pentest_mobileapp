/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.graphics.Bitmap
 *  android.graphics.Bitmap$CompressFormat
 *  android.os.Environment
 */
package fec.mobile.activity.Manager;

import android.content.Context;
import android.graphics.Bitmap;
import android.os.Environment;
import b.d.j;
import b.e.b.f;
import c.a.a.a.c;
import c.a.a.e.l;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Image;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfWriter;
import fec.mobile.activity.Activity.MainApplication;
import fec.mobile.activity.Entity.ImageEntity;
import fec.mobile.activity.Entity.UserEntity;
import fec.mobile.activity.Manager.BitmapManager;
import fec.mobile.activity.Model.UserModel;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

public final class FileManager {
    private final String a = "123456";
    private final BitmapManager b = new BitmapManager();
    private final UserModel c = new UserModel();
    private final String d;

    public FileManager() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(MainApplication.a.m().getExternalFilesDir(null));
        stringBuilder.append("/fe/");
        stringBuilder.append(this.c.f().c());
        this.d = stringBuilder.toString();
    }

    public final File a(String object) {
        f.b(object, "nameFolder");
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(this.d);
        stringBuilder.append('/');
        stringBuilder.append((String)object);
        object = new File(stringBuilder.toString());
        if (!object.exists()) {
            object.mkdirs();
        }
        return object;
    }

    public final void a(File file, File file2) {
        f.b(file, "fileCopy");
        f.b(file2, "target");
        j.a(file, file2, true, 0, 4, null);
    }

    public final void a(String string2, String object) {
        f.b(string2, "sourcePath");
        f.b(object, "toLocation");
        Object object2 = new File((String)object);
        if (object2.exists()) {
            object2.delete();
        }
        object = new c((String)object);
        object2 = new l();
        object2.a(8);
        object2.c(9);
        object2.a(true);
        object2.b(0);
        object2.a(this.a);
        object.a(string2, (l)object2);
        j.b(new File(string2));
    }

    public final boolean a() {
        return f.a((Object)Environment.getExternalStorageState(), (Object)"mounted");
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public final boolean a(ImageEntity[] arrimageEntity, String object, String object2) {
        boolean bl2;
        File file;
        block13 : {
            Document document;
            FileOutputStream fileOutputStream;
            block12 : {
                Object object3;
                f.b(object, "path");
                f.b(object3, "nameFile");
                bl2 = false;
                if (arrimageEntity == null) return bl2;
                document = new Document();
                File file2 = new File((String)object);
                if (!file2.exists()) {
                    file2.mkdirs();
                }
                file = new File(file2, (String)object3);
                fileOutputStream = new FileOutputStream(file);
                PdfWriter.getInstance(document, fileOutputStream);
                document.open();
                int n2 = arrimageEntity.length;
                int n3 = 0;
                do {
                    void var2_11;
                    void var2_14;
                    Bitmap bitmap;
                    block11 : {
                        block10 : {
                            if (n3 < n2) {
                                String string2;
                                ImageEntity imageEntity = arrimageEntity[n3];
                                object3 = this.b;
                                File file3 = imageEntity.a();
                                if (file3 == null || (string2 = file3.getAbsolutePath()) == null) break block10;
                                break block11;
                            }
                            bl2 = true;
                            break block12;
                            catch (Exception exception) {
                                break;
                            }
                        }
                        String string3 = "";
                    }
                    object3 = object3.a((String)var2_11, 1240, 1754);
                    BitmapManager bitmapManager = object3;
                    if (object3.getWidth() > object3.getHeight()) {
                        Bitmap bitmap2 = this.b.a((Bitmap)object3, 90.0f);
                    }
                    if ((bitmap = Bitmap.createScaledBitmap((Bitmap)var2_14, (int)1240, (int)1754, (boolean)false)) == null) break;
                    object3 = new ByteArrayOutputStream();
                    bitmap.compress(Bitmap.CompressFormat.JPEG, 80, (OutputStream)object3);
                    Image image = Image.getInstance(object3.toByteArray());
                    f.a((Object)image, "image");
                    document.setPageSize(new Rectangle(image.getWidth(), image.getHeight()));
                    image.setAbsolutePosition(0.0f, 0.0f);
                    document.newPage();
                    document.add(image);
                    ++n3;
                } while (true);
                bl2 = false;
            }
            try {
                document.close();
                fileOutputStream.flush();
                fileOutputStream.close();
                break block13;
            }
            catch (Exception exception) {}
            bl2 = false;
        }
        try {
            new PdfReader(file.getAbsolutePath()).close();
            return bl2;
        }
        catch (Exception exception) {
            return false;
        }
    }

    public final File b(String string2) {
        String string3 = new SimpleDateFormat("yyyyMMdd_HHmmss", Locale.ENGLISH).format(new Date());
        f.a((Object)string3, "SimpleDateFormat(\"yyyyMM\u2026e.ENGLISH).format(Date())");
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(MainApplication.a.d());
        stringBuilder.append("_8");
        stringBuilder.append(string3);
        stringBuilder.append("_.jpg");
        return new File(string2, stringBuilder.toString());
    }

    public final boolean b(ImageEntity[] object, String object2, String string2) {
        boolean bl2;
        f.b(object2, "path");
        f.b(string2, "nameFile");
        boolean bl3 = bl2 = false;
        if (object != null) {
            if (!(object2 = new File((String)object2)).exists()) {
                object2.mkdirs();
            }
            object2 = new File((File)object2, string2);
            object = (object = object[((ImageEntity[])object).length - 1].a()) != null ? j.a((File)object, (File)object2, true, 0, 4, null) : null;
            bl3 = bl2;
            if (object != null) {
                bl3 = true;
            }
        }
        return bl3;
    }

    public final void c(String object) {
        f.b(object, "nameFolder");
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(this.d);
        stringBuilder.append('/');
        stringBuilder.append((String)object);
        object = new File(stringBuilder.toString());
        if (object.exists()) {
            j.b((File)object);
        }
    }

    public final boolean d(String arrfile) {
        f.b(arrfile, "nameFolder");
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(this.d);
        stringBuilder.append('/');
        stringBuilder.append((String)arrfile);
        arrfile = new File(stringBuilder.toString());
        boolean bl2 = arrfile.exists();
        boolean bl3 = false;
        if (bl2) {
            arrfile = arrfile.listFiles();
            f.a((Object)arrfile, "file.listFiles()");
            if (arrfile.length == 0) {
                bl3 = true;
            }
            return bl3 ^ true;
        }
        return false;
    }
}

