/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.res.Resources
 *  android.os.Bundle
 *  android.view.LayoutInflater
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.view.ViewGroup
 *  android.widget.Button
 *  android.widget.CheckBox
 *  android.widget.CompoundButton
 *  android.widget.CompoundButton$OnCheckedChangeListener
 *  android.widget.ImageButton
 *  fec.mobile.activity.Fragment.FragmentHistoryUploaded$onActivityCreated
 */
package fec.mobile.activity.Fragment;

import android.content.Context;
import android.content.res.Resources;
import android.os.Bundle;
import android.support.v4.app.j;
import android.support.v4.app.k;
import android.support.v4.app.o;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.ImageButton;
import b.e.b.f;
import fec.mobile.activity.Activity.MainApplication;
import fec.mobile.activity.Apdater.AdapterHistoryUploaded;
import fec.mobile.activity.DialogManager.DialogDatePicker;
import fec.mobile.activity.Entity.HistoryFINONE;
import fec.mobile.activity.Entity.HistoryTTHSEntity;
import fec.mobile.activity.Fragment.FragmentHistoryUploaded;
import fec.mobile.activity.Presenter.HistoryUploadedPresenter;
import fec.mobile.activity.View.HistoryView;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;

public final class FragmentHistoryUploaded
extends j
implements HistoryView {
    public CheckBox a;
    public CheckBox b;
    public Button c;
    public Button d;
    public ImageButton e;
    public RecyclerView f;
    private boolean g = true;
    private final HistoryUploadedPresenter h = new HistoryUploadedPresenter(this);
    private HashMap i;

    public static final /* synthetic */ HistoryUploadedPresenter a(FragmentHistoryUploaded fragmentHistoryUploaded) {
        return fragmentHistoryUploaded.h;
    }

    public static final /* synthetic */ void a(FragmentHistoryUploaded fragmentHistoryUploaded, View view) {
        fragmentHistoryUploaded.b(view);
    }

    private final String aj() {
        Object object = Calendar.getInstance();
        f.a(object, "Calendar.getInstance()");
        object = object.getTime();
        object = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH).format((Date)object);
        f.a(object, "formatter.format(todayDate)");
        return object;
    }

    private final void b(View object) {
        Bundle bundle = new Bundle();
        bundle.putInt("id", object.getId());
        DialogDatePicker dialogDatePicker = new DialogDatePicker();
        dialogDatePicker.g(bundle);
        dialogDatePicker.a(this, 123);
        object = this.o();
        object = object != null ? object.g() : null;
        dialogDatePicker.a((o)object, "dialogPicker");
    }

    private final void c(View view) {
        View view2 = view.findViewById(2131296374);
        f.a((Object)view2, "view.findViewById(R.id.cbNewApp)");
        this.a = (CheckBox)view2;
        view2 = view.findViewById(2131296375);
        f.a((Object)view2, "view.findViewById(R.id.cbQDE)");
        this.b = (CheckBox)view2;
        view2 = view.findViewById(2131296319);
        f.a((Object)view2, "view.findViewById(R.id.btnFromDateTTHS)");
        this.c = (Button)view2;
        view2 = view.findViewById(2131296341);
        f.a((Object)view2, "view.findViewById(R.id.btnToDateTTHS)");
        this.d = (Button)view2;
        view2 = view.findViewById(2131296333);
        f.a((Object)view2, "view.findViewById(R.id.btnSearch)");
        this.e = (ImageButton)view2;
        view = view.findViewById(2131296592);
        f.a((Object)view, "view.findViewById(R.id.r\u2026yclerViewHistoryUploaded)");
        this.f = (RecyclerView)view;
        view = this.c;
        if (view == null) {
            f.b("btnFromDate");
        }
        view.setText((CharSequence)this.aj());
        view = this.d;
        if (view == null) {
            f.b("btnToDate");
        }
        view.setText((CharSequence)this.aj());
    }

    @Override
    public View a(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        f.b((Object)layoutInflater, "inflater");
        layoutInflater = layoutInflater.inflate(2131492924, viewGroup, false);
        f.a((Object)layoutInflater, "view");
        this.c((View)layoutInflater);
        return layoutInflater;
    }

    @Override
    public void a(List<String> list) {
        Context context;
        Object object;
        f.b(list, "listUploaded");
        if (!(((Collection)list).isEmpty() ^ true)) {
            object = this.m();
            if (object == null || (object = object.getResources()) == null || (object = object.getString(2131689587)) == null) {
                object = "";
            }
            this.b((String)object);
        }
        if ((object = this.f) == null) {
            f.b("recyclerUpladed");
        }
        object.setLayoutManager(new LinearLayoutManager(this.m()));
        object = this.f;
        if (object == null) {
            f.b("recyclerUpladed");
        }
        if ((context = this.m()) == null) {
            f.a();
        }
        f.a((Object)context, "context!!");
        object.setAdapter(new AdapterHistoryUploaded(context, list));
    }

    public final void a(boolean bl2) {
        this.g = bl2;
    }

    public final Button ag() {
        Button button = this.d;
        if (button == null) {
            f.b("btnToDate");
        }
        return button;
    }

    public final boolean ah() {
        return this.g;
    }

    public void ai() {
        if (this.i != null) {
            this.i.clear();
        }
    }

    public final CheckBox b() {
        CheckBox checkBox = this.a;
        if (checkBox == null) {
            f.b("cbNewApp");
        }
        return checkBox;
    }

    @Override
    public void b(String string2) {
        f.b(string2, "message");
        MainApplication.a.a(string2);
    }

    @Override
    public void b(List<HistoryTTHSEntity> list) {
        f.b(list, "listTTHS");
    }

    public final CheckBox c() {
        CheckBox checkBox = this.b;
        if (checkBox == null) {
            f.b("cbQDE");
        }
        return checkBox;
    }

    @Override
    public void c(List<HistoryFINONE> list) {
        f.b(list, "listFINNONE");
    }

    public final Button d() {
        Button button = this.c;
        if (button == null) {
            f.b("btnFromDate");
        }
        return button;
    }

    @Override
    public void d(Bundle bundle) {
        super.d(bundle);
        bundle = this.a;
        if (bundle == null) {
            f.b("cbNewApp");
        }
        bundle.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(this){
            final /* synthetic */ FragmentHistoryUploaded a;
            {
                this.a = fragmentHistoryUploaded;
            }

            public final void onCheckedChanged(CompoundButton compoundButton, boolean bl2) {
                if (bl2) {
                    this.a.a(true);
                    this.a.c().setChecked(false);
                }
            }
        });
        bundle = this.b;
        if (bundle == null) {
            f.b("cbQDE");
        }
        bundle.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(this){
            final /* synthetic */ FragmentHistoryUploaded a;
            {
                this.a = fragmentHistoryUploaded;
            }

            public final void onCheckedChanged(CompoundButton compoundButton, boolean bl2) {
                if (bl2) {
                    this.a.a(false);
                    this.a.b().setChecked(false);
                }
            }
        });
        bundle = this.c;
        if (bundle == null) {
            f.b("btnFromDate");
        }
        bundle.setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ FragmentHistoryUploaded a;
            {
                this.a = fragmentHistoryUploaded;
            }

            public final void onClick(View view) {
                FragmentHistoryUploaded fragmentHistoryUploaded = this.a;
                f.a((Object)view, "it");
                FragmentHistoryUploaded.a(fragmentHistoryUploaded, view);
            }
        });
        bundle = this.d;
        if (bundle == null) {
            f.b("btnToDate");
        }
        bundle.setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ FragmentHistoryUploaded a;
            {
                this.a = fragmentHistoryUploaded;
            }

            public final void onClick(View view) {
                FragmentHistoryUploaded fragmentHistoryUploaded = this.a;
                f.a((Object)view, "it");
                FragmentHistoryUploaded.a(fragmentHistoryUploaded, view);
            }
        });
        bundle = this.e;
        if (bundle == null) {
            f.b("btnSearch");
        }
        bundle.setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ FragmentHistoryUploaded a;
            {
                this.a = fragmentHistoryUploaded;
            }

            public final void onClick(View object) {
                object = this.a.ah() ? "HOSOMOI" : "HOSOBOSUNG";
                FragmentHistoryUploaded.a(this.a).a(this.a.d().getText().toString(), this.a.ag().getText().toString(), (String)object);
            }
        });
    }

    @Override
    public /* synthetic */ void h() {
        super.h();
        this.ai();
    }
}

