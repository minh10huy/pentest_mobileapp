/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.Intent
 *  android.graphics.Bitmap
 *  android.graphics.Bitmap$CompressFormat
 *  android.graphics.Bitmap$Config
 *  android.graphics.Canvas
 *  android.graphics.Paint
 *  android.location.Address
 *  android.location.Geocoder
 *  android.location.Location
 *  android.os.Bundle
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.widget.ImageButton
 *  fec.mobile.activity.Activity.MapActivity$captureMapScreen
 *  fec.mobile.activity.Activity.MapActivity$captureMapScreen$callBack
 *  fec.mobile.activity.Activity.MapActivity$onCreate
 */
package fec.mobile.activity.Activity;

import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.os.Bundle;
import android.support.v4.app.j;
import android.support.v4.app.o;
import android.support.v7.app.c;
import android.view.View;
import android.widget.ImageButton;
import b.e.b.f;
import b.g;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.a;
import com.google.android.gms.maps.b;
import com.google.android.gms.maps.c;
import com.google.android.gms.maps.e;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.d;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Image;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfWriter;
import fec.mobile.activity.Activity.MapActivity;
import fec.mobile.activity.Service.GPSTracker;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.List;

public final class MapActivity
extends c
implements e {
    private GPSTracker n;
    private com.google.android.gms.maps.c o;
    private String p = "";
    private String q = "";
    private String r = "pdf";
    private String s = "HINHBD";

    public static final /* synthetic */ void a(MapActivity mapActivity) {
        mapActivity.m();
    }

    private final boolean a(Bitmap bitmap, Bitmap object, String string2) {
        Bitmap bitmap2 = Bitmap.createScaledBitmap((Bitmap)bitmap, (int)1754, (int)1240, (boolean)true);
        f.a((Object)bitmap2, "Bitmap.createScaledBitma\u2026bitmap, 1754, 1240, true)");
        object = Bitmap.createScaledBitmap((Bitmap)object, (int)1754, (int)1240, (boolean)true);
        f.a(object, "Bitmap.createScaledBitma\u2026hinhkh, 1754, 1240, true)");
        bitmap = Bitmap.createBitmap((int)1754, (int)2480, (Bitmap.Config)Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(bitmap);
        Paint paint = new Paint();
        canvas.drawBitmap((Bitmap)object, 0.0f, 0.0f, paint);
        canvas.drawBitmap(bitmap2, 0.0f, 1240.0f, paint);
        object = null;
        object = new StringBuilder();
        object.append(new File(this.p).getAbsolutePath());
        object.append("/");
        object.append(string2);
        object.append(".jpg");
        object = new FileOutputStream(object.toString());
        bitmap.compress(Bitmap.CompressFormat.JPEG, 80, (OutputStream)object);
        try {
            object.flush();
            object.close();
        }
        catch (IOException iOException) {
            try {
                iOException.printStackTrace();
            }
            catch (FileNotFoundException fileNotFoundException) {
                fileNotFoundException.printStackTrace();
            }
        }
        this.finish();
        return true;
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private final boolean a(Bitmap object, String object2) {
        Document document;
        Throwable throwable22222;
        block5 : {
            block4 : {
                document = new Document();
                File file = new File(this.p);
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append((String)object2);
                stringBuilder.append(".pdf");
                object2 = new File(file, stringBuilder.toString());
                try {
                    PdfWriter.getInstance(document, new FileOutputStream((File)object2));
                    document.open();
                    object = Bitmap.createScaledBitmap((Bitmap)object, (int)1240, (int)1754, (boolean)true);
                    f.a(object, "Bitmap.createScaledBitma\u2026onvert, 1240, 1754, true)");
                    object2 = new ByteArrayOutputStream();
                    object.compress(Bitmap.CompressFormat.JPEG, 80, (OutputStream)object2);
                    object = Image.getInstance(object2.toByteArray());
                    f.a(object, "myImg");
                    document.setPageSize(new Rectangle(object.getWidth(), object.getHeight()));
                    object.setAbsolutePosition(0.0f, 0.0f);
                    document.newPage();
                    document.add((Element)object);
                    break block4;
                }
                catch (Throwable throwable22222) {
                    break block5;
                }
                catch (Exception exception) {
                    exception.printStackTrace();
                }
            }
            document.close();
            this.finish();
            return true;
        }
        document.close();
        throw throwable22222;
    }

    public static final /* synthetic */ boolean a(MapActivity mapActivity, Bitmap bitmap, Bitmap bitmap2, String string2) {
        return mapActivity.a(bitmap, bitmap2, string2);
    }

    public static final /* synthetic */ boolean a(MapActivity mapActivity, Bitmap bitmap, String string2) {
        return mapActivity.a(bitmap, string2);
    }

    public static final /* synthetic */ String b(MapActivity mapActivity) {
        return mapActivity.r;
    }

    public static final /* synthetic */ String c(MapActivity mapActivity) {
        return mapActivity.s;
    }

    public static final /* synthetic */ String d(MapActivity mapActivity) {
        return mapActivity.q;
    }

    private final void m() {
        c.a a2 = new c.a(this){
            final /* synthetic */ MapActivity a;
            {
                this.a = mapActivity;
            }

            public final void a(Bitmap bitmap) {
                Object object = MapActivity.b(this.a);
                if (object != null) {
                    object = object.toLowerCase();
                    f.a(object, "(this as java.lang.String).toLowerCase()");
                    if (f.a(object, (Object)".pdf")) {
                        object = this.a;
                        f.a((Object)bitmap, "it");
                        MapActivity.a((MapActivity)object, bitmap, MapActivity.c(this.a));
                        return;
                    }
                    object = android.graphics.BitmapFactory.decodeFile((String)MapActivity.d(this.a));
                    MapActivity mapActivity = this.a;
                    f.a((Object)bitmap, "it");
                    f.a(object, "bitmapHinhKH");
                    MapActivity.a(mapActivity, bitmap, (Bitmap)object, MapActivity.c(this.a));
                    return;
                }
                throw new g("null cannot be cast to non-null type java.lang.String");
            }
        };
        com.google.android.gms.maps.c c2 = this.o;
        if (c2 != null) {
            c2.a(a2);
        }
    }

    @Override
    public void a(com.google.android.gms.maps.c c2) {
        this.o = c2;
        Object object = new Geocoder((Context)this);
        Object object2 = this.n;
        double d2 = 0.0;
        double d3 = object2 != null ? object2.b() : 0.0;
        object2 = this.n;
        double d4 = object2 != null ? object2.c() : 0.0;
        object2 = object.getFromLocation(d3, d4, 1);
        object = this.n;
        d3 = object != null ? object.b() : 0.0;
        object = this.n;
        d4 = d2;
        if (object != null) {
            d4 = object.c();
        }
        LatLng latLng = new LatLng(d3, d4);
        object = this.o;
        object = object != null ? object.a(new d().a(latLng)) : null;
        if (object != null) {
            object.a(((Address)object2.get(0)).getAddressLine(0));
        }
        if (object != null) {
            object.a();
        }
        object = b.a(latLng, 10.0f);
        if (c2 != null) {
            c2.a((a)object);
        }
    }

    @Override
    protected void onCreate(Bundle object) {
        super.onCreate((Bundle)object);
        this.setContentView(2131492897);
        object = this.getIntent().getStringExtra("pathfoldertwo");
        f.a(object, "intent.getStringExtra(\"pathfoldertwo\")");
        this.p = object;
        object = this.getIntent().getStringExtra("formattype");
        f.a(object, "intent.getStringExtra(\"formattype\")");
        this.r = object;
        object = this.getIntent().getStringExtra("pathfilehinhkh");
        f.a(object, "intent.getStringExtra(\"pathfilehinhkh\")");
        this.q = object;
        object = this.getIntent().getStringExtra("namefile");
        f.a(object, "intent.getStringExtra(\"namefile\")");
        this.s = object;
        this.n = new GPSTracker((Context)this);
        object = this.n;
        if (object != null) {
            object.a();
        }
        if ((object = this.g().a(2131296515)) != null) {
            ((SupportMapFragment)object).a(this);
            ((ImageButton)this.findViewById(2131296313)).setOnClickListener(new View.OnClickListener(this){
                final /* synthetic */ MapActivity a;
                {
                    this.a = mapActivity;
                }

                public final void onClick(View view) {
                    MapActivity.a(this.a);
                }
            });
            return;
        }
        throw new g("null cannot be cast to non-null type com.google.android.gms.maps.SupportMapFragment");
    }
}

