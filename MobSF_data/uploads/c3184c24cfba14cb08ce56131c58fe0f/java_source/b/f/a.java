/*
 * Decompiled with CFR 0_132.
 */
package b.f;

import b.a.w;
import b.c.c;
import b.e.b.d;
import b.f.b;
import java.util.Iterator;

public class a
implements Iterable<Integer> {
    public static final a a = new a(null);
    private final int b;
    private final int c;
    private final int d;

    public a(int n2, int n3, int n4) {
        if (n4 != 0) {
            this.b = n2;
            this.c = c.a(n2, n3, n4);
            this.d = n4;
            return;
        }
        throw (Throwable)new IllegalArgumentException("Step must be non-zero");
    }

    public final int a() {
        return this.b;
    }

    public final int b() {
        return this.c;
    }

    public final int c() {
        return this.d;
    }

    public w d() {
        return new b(this.b, this.c, this.d);
    }

    /*
     * Enabled aggressive block sorting
     */
    public boolean e() {
        if (this.d > 0) {
            if (this.b <= this.c) return false;
            return true;
        }
        if (this.b >= this.c) return false;
        return true;
    }

    public boolean equals(Object object) {
        block2 : {
            block3 : {
                if (!(object instanceof a)) break block2;
                if (this.e() && ((a)object).e()) break block3;
                int n2 = this.b;
                object = (a)object;
                if (n2 != object.b || this.c != object.c || this.d != object.d) break block2;
            }
            return true;
        }
        return false;
    }

    public int hashCode() {
        if (this.e()) {
            return -1;
        }
        return (this.b * 31 + this.c) * 31 + this.d;
    }

    @Override
    public /* synthetic */ Iterator iterator() {
        return this.d();
    }

    /*
     * Enabled aggressive block sorting
     */
    public String toString() {
        int n2;
        StringBuilder stringBuilder;
        if (this.d > 0) {
            stringBuilder = new StringBuilder();
            stringBuilder.append(this.b);
            stringBuilder.append("..");
            stringBuilder.append(this.c);
            stringBuilder.append(" step ");
            n2 = this.d;
        } else {
            stringBuilder = new StringBuilder();
            stringBuilder.append(this.b);
            stringBuilder.append(" downTo ");
            stringBuilder.append(this.c);
            stringBuilder.append(" step ");
            n2 = - this.d;
        }
        stringBuilder.append(n2);
        return stringBuilder.toString();
    }

    public static final class a {
        private a() {
        }

        public /* synthetic */ a(d d2) {
            this();
        }

        public final a a(int n2, int n3, int n4) {
            return new a(n2, n3, n4);
        }
    }

}

