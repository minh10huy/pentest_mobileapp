/*
 * Decompiled with CFR 0_132.
 */
package b.a;

import b.a.d;
import b.a.g;
import b.e.b.f;
import java.util.NoSuchElementException;

class h
extends g {
    public static final char a(char[] arrc) {
        f.b(arrc, "$receiver");
        switch (arrc.length) {
            default: {
                throw (Throwable)new IllegalArgumentException("Array has more than one element.");
            }
            case 1: {
                return arrc[0];
            }
            case 0: 
        }
        throw (Throwable)new NoSuchElementException("Array is empty.");
    }

    public static final <T> boolean a(T[] arrT, T t2) {
        f.b(arrT, "$receiver");
        if (d.b(arrT, t2) >= 0) {
            return true;
        }
        return false;
    }

    public static final <T> int b(T[] arrT, T t2) {
        int n2;
        f.b(arrT, "$receiver");
        int n3 = 0;
        if (t2 == null) {
            n3 = arrT.length;
            for (n2 = 0; n2 < n3; ++n2) {
                if (arrT[n2] != null) continue;
                return n2;
            }
        } else {
            int n4 = arrT.length;
            for (n2 = n3; n2 < n4; ++n2) {
                if (!f.a(t2, arrT[n2])) continue;
                return n2;
            }
        }
        return -1;
    }
}

