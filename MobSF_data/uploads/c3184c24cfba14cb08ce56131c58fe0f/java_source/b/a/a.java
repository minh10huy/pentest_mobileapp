/*
 * Decompiled with CFR 0_132.
 */
package b.a;

import b.a.b;
import b.a.x;
import java.util.Iterator;
import java.util.NoSuchElementException;

public abstract class a<T>
implements Iterator<T> {
    private x a = x.b;
    private T b;

    private final boolean c() {
        this.a = x.d;
        this.a();
        if (this.a == x.a) {
            return true;
        }
        return false;
    }

    protected abstract void a();

    protected final void a(T t2) {
        this.b = t2;
        this.a = x.a;
    }

    protected final void b() {
        this.a = x.c;
    }

    @Override
    public boolean hasNext() {
        x x2 = this.a;
        x x3 = x.d;
        boolean bl2 = false;
        boolean bl3 = x2 != x3;
        if (bl3) {
            x2 = this.a;
            switch (b.a[x2.ordinal()]) {
                default: {
                    return this.c();
                }
                case 2: {
                    bl2 = true;
                }
                case 1: 
            }
            return bl2;
        }
        throw (Throwable)new IllegalArgumentException("Failed requirement.".toString());
    }

    @Override
    public T next() {
        if (this.hasNext()) {
            this.a = x.b;
            return this.b;
        }
        throw (Throwable)new NoSuchElementException();
    }

    @Override
    public void remove() {
        throw new UnsupportedOperationException("Operation is not supported for read-only collection");
    }
}

