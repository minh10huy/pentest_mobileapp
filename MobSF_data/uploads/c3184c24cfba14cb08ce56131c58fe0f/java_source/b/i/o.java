/*
 * Decompiled with CFR 0_132.
 */
package b.i;

import b.a.d;
import b.a.j;
import b.e.b.g;
import b.f.c;
import b.h.b;
import b.i.a;
import b.i.e;
import b.i.f;
import b.i.n;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

class o
extends n {
    public static final int a(CharSequence charSequence, char c2, int n2, boolean bl2) {
        b.e.b.f.b(charSequence, "$receiver");
        if (!bl2 && charSequence instanceof String) {
            return ((String)charSequence).indexOf(c2, n2);
        }
        return f.a(charSequence, new char[]{c2}, n2, bl2);
    }

    public static /* bridge */ /* synthetic */ int a(CharSequence charSequence, char c2, int n2, boolean bl2, int n3, Object object) {
        if ((n3 & 2) != 0) {
            n2 = 0;
        }
        if ((n3 & 4) != 0) {
            bl2 = false;
        }
        return f.a(charSequence, c2, n2, bl2);
    }

    private static final int a(CharSequence charSequence, CharSequence charSequence2, int n2, int n3, boolean bl2, boolean bl3) {
        b.f.a a2 = !bl3 ? (b.f.a)new c(b.f.d.c(n2, 0), b.f.d.d(n3, charSequence.length())) : b.f.d.a(b.f.d.d(n2, f.b(charSequence)), b.f.d.c(n3, 0));
        if (charSequence instanceof String && charSequence2 instanceof String) {
            n2 = a2.a();
            n3 = a2.b();
            int n4 = a2.c();
            if (n4 > 0 ? n2 <= n3 : n2 >= n3) {
                do {
                    if (f.a((String)charSequence2, 0, (String)charSequence, n2, charSequence2.length(), bl2)) {
                        return n2;
                    }
                    if (n2 != n3) {
                        n2 += n4;
                        continue;
                    }
                    break;
                } while (true);
            }
        } else {
            n2 = a2.a();
            n3 = a2.b();
            int n5 = a2.c();
            if (n5 > 0 ? n2 <= n3 : n2 >= n3) {
                do {
                    if (f.a(charSequence2, 0, charSequence, n2, charSequence2.length(), bl2)) {
                        return n2;
                    }
                    if (n2 == n3) break;
                    n2 += n5;
                } while (true);
            }
        }
        return -1;
    }

    static /* bridge */ /* synthetic */ int a(CharSequence charSequence, CharSequence charSequence2, int n2, int n3, boolean bl2, boolean bl3, int n4, Object object) {
        block0 : {
            if ((n4 & 16) == 0) break block0;
            bl3 = false;
        }
        return o.a(charSequence, charSequence2, n2, n3, bl2, bl3);
    }

    public static final int a(CharSequence charSequence, String string2, int n2, boolean bl2) {
        b.e.b.f.b(charSequence, "$receiver");
        b.e.b.f.b(string2, "string");
        if (!bl2 && charSequence instanceof String) {
            return ((String)charSequence).indexOf(string2, n2);
        }
        return o.a(charSequence, string2, n2, charSequence.length(), bl2, false, 16, null);
    }

    public static /* bridge */ /* synthetic */ int a(CharSequence charSequence, String string2, int n2, boolean bl2, int n3, Object object) {
        if ((n3 & 2) != 0) {
            n2 = 0;
        }
        if ((n3 & 4) != 0) {
            bl2 = false;
        }
        return f.a(charSequence, string2, n2, bl2);
    }

    public static final int a(CharSequence charSequence, char[] arrc, int n2, boolean bl2) {
        int n3;
        b.e.b.f.b(charSequence, "$receiver");
        b.e.b.f.b(arrc, "chars");
        if (!bl2 && arrc.length == 1 && charSequence instanceof String) {
            char c2 = d.a(arrc);
            return ((String)charSequence).indexOf(c2, n2);
        }
        if ((n2 = b.f.d.c(n2, 0)) <= (n3 = f.b(charSequence))) {
            do {
                int n4;
                block5 : {
                    char c3 = charSequence.charAt(n2);
                    int n5 = arrc.length;
                    for (n4 = 0; n4 < n5; ++n4) {
                        if (!a.a(arrc[n4], c3, bl2)) continue;
                        n4 = 1;
                        break block5;
                    }
                    n4 = 0;
                }
                if (n4 != 0) {
                    return n2;
                }
                if (n2 == n3) break;
                ++n2;
            } while (true);
        }
        return -1;
    }

    private static final b.h.a<c> a(CharSequence charSequence, String[] arrstring, int n2, boolean bl2, int n3) {
        boolean bl3 = n3 >= 0;
        if (bl3) {
            return new e(charSequence, n2, n3, (b.e.a.b<? super CharSequence, ? super Integer, b.e<Integer, Integer>>)new b.e.a.b<CharSequence, Integer, b.e<? extends Integer, ? extends Integer>>(d.a(arrstring), bl2){
                final /* synthetic */ List a;
                final /* synthetic */ boolean b;
                {
                    this.a = list;
                    this.b = bl2;
                    super(2);
                }

                @Override
                public final b.e<Integer, Integer> a(CharSequence object, int n2) {
                    b.e.b.f.b(object, "$receiver");
                    object = o.b((CharSequence)object, this.a, n2, this.b, false);
                    if (object != null) {
                        return b.f.a(object.a(), ((String)object.b()).length());
                    }
                    return null;
                }

                @Override
                public /* synthetic */ Object a(Object object, Object object2) {
                    return this.a((CharSequence)object, ((Number)object2).intValue());
                }
            });
        }
        charSequence = new StringBuilder();
        charSequence.append("Limit must be non-negative, but was ");
        charSequence.append(n3);
        charSequence.append('.');
        throw (Throwable)new IllegalArgumentException(charSequence.toString().toString());
    }

    static /* bridge */ /* synthetic */ b.h.a a(CharSequence charSequence, String[] arrstring, int n2, boolean bl2, int n3, int n4, Object object) {
        if ((n4 & 2) != 0) {
            n2 = 0;
        }
        if ((n4 & 4) != 0) {
            bl2 = false;
        }
        if ((n4 & 8) != 0) {
            n3 = 0;
        }
        return o.a(charSequence, arrstring, n2, bl2, n3);
    }

    public static final b.h.a<String> a(final CharSequence charSequence, String[] arrstring, boolean bl2, int n2) {
        b.e.b.f.b(charSequence, "$receiver");
        b.e.b.f.b(arrstring, "delimiters");
        return b.a(o.a(charSequence, arrstring, 0, bl2, n2, 2, null), (b.e.a.a)new b.e.a.a<c, String>(){

            @Override
            public final String a(c c2) {
                b.e.b.f.b(c2, "it");
                return f.a(charSequence, c2);
            }
        });
    }

    public static /* bridge */ /* synthetic */ b.h.a a(CharSequence charSequence, String[] arrstring, boolean bl2, int n2, int n3, Object object) {
        if ((n3 & 2) != 0) {
            bl2 = false;
        }
        if ((n3 & 4) != 0) {
            n2 = 0;
        }
        return f.a(charSequence, arrstring, bl2, n2);
    }

    public static final CharSequence a(CharSequence charSequence) {
        b.e.b.f.b(charSequence, "$receiver");
        int n2 = charSequence.length() - 1;
        int n3 = 0;
        boolean bl2 = false;
        while (n3 <= n2) {
            int n4 = !bl2 ? n3 : n2;
            boolean bl3 = a.a(charSequence.charAt(n4));
            if (!bl2) {
                if (!bl3) {
                    bl2 = true;
                    continue;
                }
                ++n3;
                continue;
            }
            if (!bl3) break;
            --n2;
        }
        return charSequence.subSequence(n3, n2 + 1);
    }

    public static final String a(CharSequence charSequence, c c2) {
        b.e.b.f.b(charSequence, "$receiver");
        b.e.b.f.b(c2, "range");
        return charSequence.subSequence(c2.f(), c2.g() + 1).toString();
    }

    private static final List<String> a(CharSequence charSequence, String string2, boolean bl2, int n2) {
        int n3 = 0;
        boolean bl3 = n2 >= 0;
        if (bl3) {
            int n4 = f.a(charSequence, string2, 0, bl2);
            if (n4 != -1 && n2 != 1) {
                int n5;
                bl3 = n2 > 0;
                int n6 = 10;
                if (bl3) {
                    n6 = b.f.d.d(n2, 10);
                }
                ArrayList<String> arrayList = new ArrayList<String>(n6);
                n6 = n4;
                do {
                    arrayList.add(charSequence.subSequence(n3, n6).toString());
                    n4 = string2.length() + n6;
                    if (bl3 && arrayList.size() == n2 - 1) break;
                    n5 = f.a(charSequence, string2, n4, bl2);
                    n3 = n4;
                    n6 = n5;
                } while (n5 != -1);
                arrayList.add(charSequence.subSequence(n4, charSequence.length()).toString());
                return arrayList;
            }
            return j.a(charSequence.toString());
        }
        charSequence = new StringBuilder();
        charSequence.append("Limit must be non-negative, but was ");
        charSequence.append(n2);
        charSequence.append('.');
        throw (Throwable)new IllegalArgumentException(charSequence.toString().toString());
    }

    public static final boolean a(CharSequence charSequence, int n2, CharSequence charSequence2, int n3, int n4, boolean bl2) {
        b.e.b.f.b(charSequence, "$receiver");
        b.e.b.f.b(charSequence2, "other");
        if (n3 >= 0 && n2 >= 0 && n2 <= charSequence.length() - n4) {
            if (n3 > charSequence2.length() - n4) {
                return false;
            }
            for (int i2 = 0; i2 < n4; ++i2) {
                if (a.a(charSequence.charAt(n2 + i2), charSequence2.charAt(n3 + i2), bl2)) continue;
                return false;
            }
            return true;
        }
        return false;
    }

    /*
     * Enabled aggressive block sorting
     */
    public static final boolean a(CharSequence charSequence, CharSequence charSequence2, boolean bl2) {
        b.e.b.f.b(charSequence, "$receiver");
        b.e.b.f.b(charSequence2, "other");
        if (charSequence2 instanceof String) {
            if (f.a(charSequence, (String)charSequence2, 0, bl2, 2, null) < 0) return false;
            return true;
        }
        if (o.a(charSequence, charSequence2, 0, charSequence.length(), bl2, false, 16, null) < 0) return false;
        return true;
    }

    public static /* bridge */ /* synthetic */ boolean a(CharSequence charSequence, CharSequence charSequence2, boolean bl2, int n2, Object object) {
        if ((n2 & 2) != 0) {
            bl2 = false;
        }
        return f.a(charSequence, charSequence2, bl2);
    }

    public static final int b(CharSequence charSequence) {
        b.e.b.f.b(charSequence, "$receiver");
        return charSequence.length() - 1;
    }

    public static final int b(CharSequence charSequence, String string2, int n2, boolean bl2) {
        b.e.b.f.b(charSequence, "$receiver");
        b.e.b.f.b(string2, "string");
        if (!bl2 && charSequence instanceof String) {
            return ((String)charSequence).lastIndexOf(string2, n2);
        }
        return o.a(charSequence, (CharSequence)string2, n2, 0, bl2, true);
    }

    public static /* bridge */ /* synthetic */ int b(CharSequence charSequence, String string2, int n2, boolean bl2, int n3, Object object) {
        if ((n3 & 2) != 0) {
            n2 = f.b(charSequence);
        }
        if ((n3 & 4) != 0) {
            bl2 = false;
        }
        return f.b(charSequence, string2, n2, bl2);
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private static final b.e<Integer, String> b(CharSequence object, Collection<String> object2, int n2, boolean bl2, boolean bl3) {
        if (!bl2 && object2.size() == 1) {
            object2 = (String)j.a((Iterable)object2);
            n2 = !bl3 ? f.a((CharSequence)object, (String)object2, n2, false, 4, null) : f.b((CharSequence)object, (String)object2, n2, false, 4, null);
            if (n2 >= 0) return b.f.a(n2, object2);
            return null;
        }
        Object object32 = !bl3 ? (b.f.a)new c(b.f.d.c(n2, 0), object.length()) : b.f.d.a(b.f.d.d(n2, f.b((CharSequence)object)), 0);
        if (object instanceof String) {
            n2 = object32.a();
            int n3 = object32.b();
            int n4 = object32.c();
            if (!(n4 > 0 ? n2 <= n3 : n2 >= n3)) return null;
            do {
                block9 : {
                    for (Object object32 : (Iterable)object2) {
                        String string2 = (String)object32;
                        if (!f.a(string2, 0, (String)object, n2, string2.length(), bl2)) continue;
                        break block9;
                    }
                    object32 = null;
                }
                object32 = (String)object32;
                if (object32 != null) {
                    object = object32;
                    do {
                        return b.f.a(n2, object);
                        break;
                    } while (true);
                }
                if (n2 == n3) return null;
                n2 += n4;
            } while (true);
        }
        n2 = object32.a();
        int n5 = object32.b();
        int n6 = object32.c();
        if (!(n6 > 0 ? n2 <= n5 : n2 >= n5)) return null;
        do {
            block10 : {
                for (Object object32 : (Iterable)object2) {
                    String string3 = (String)object32;
                    if (!f.a((CharSequence)string3, 0, (CharSequence)object, n2, string3.length(), bl2)) continue;
                    break block10;
                }
                object32 = null;
            }
            object32 = (String)object32;
            if (object32 != null) {
                object = object32;
                return b.f.a(n2, object);
            }
            if (n2 == n5) return null;
            n2 += n6;
        } while (true);
    }

    public static final List<String> b(CharSequence charSequence, String[] object, boolean bl2, int n2) {
        Object object2;
        b.e.b.f.b(charSequence, "$receiver");
        b.e.b.f.b(object, "delimiters");
        if (((String[])object).length == 1) {
            boolean bl3 = false;
            object2 = object[0];
            if (((CharSequence)object2).length() == 0) {
                bl3 = true;
            }
            if (!bl3) {
                return o.a(charSequence, (String)object2, bl2, n2);
            }
        }
        object2 = b.a(o.a(charSequence, (String[])object, 0, bl2, n2, 2, null));
        object = new ArrayList(j.a(object2, 10));
        object2 = object2.iterator();
        while (object2.hasNext()) {
            object.add(f.a(charSequence, (c)object2.next()));
        }
        return (List)object;
    }

    public static /* bridge */ /* synthetic */ List b(CharSequence charSequence, String[] arrstring, boolean bl2, int n2, int n3, Object object) {
        if ((n3 & 2) != 0) {
            bl2 = false;
        }
        if ((n3 & 4) != 0) {
            n2 = 0;
        }
        return f.b(charSequence, arrstring, bl2, n2);
    }

}

