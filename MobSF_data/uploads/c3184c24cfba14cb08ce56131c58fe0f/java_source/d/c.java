/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  javax.annotation.Nullable
 */
package d;

import d.a.a.d;
import d.a.c.e;
import d.a.c.f;
import d.a.c.k;
import d.aa;
import d.ab;
import d.ac;
import d.ad;
import d.af;
import d.h;
import d.r;
import d.s;
import d.t;
import d.v;
import d.y;
import e.g;
import e.l;
import java.io.Closeable;
import java.io.File;
import java.io.Flushable;
import java.io.IOException;
import java.io.InputStream;
import java.security.cert.Certificate;
import java.security.cert.CertificateEncodingException;
import java.security.cert.CertificateException;
import java.security.cert.CertificateFactory;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.annotation.Nullable;

public final class c
implements Closeable,
Flushable {
    final d.a.a.f a = new d.a.a.f(){

        @Override
        public d.a.a.b a(ac ac2) {
            return c.this.a(ac2);
        }

        @Override
        public ac a(aa aa2) {
            return c.this.a(aa2);
        }

        @Override
        public void a() {
            c.this.a();
        }

        @Override
        public void a(d.a.a.c c2) {
            c.this.a(c2);
        }

        @Override
        public void a(ac ac2, ac ac3) {
            c.this.a(ac2, ac3);
        }

        @Override
        public void b(aa aa2) {
            c.this.b(aa2);
        }
    };
    final d b;
    int c;
    int d;
    private int e;
    private int f;
    private int g;

    public c(File file, long l2) {
        this(file, l2, d.a.f.a.a);
    }

    c(File file, long l2, d.a.f.a a2) {
        this.b = d.a(a2, file, 201105, 2, l2);
    }

    static int a(e.e object) {
        long l2;
        block4 : {
            try {
                l2 = object.n();
                object = object.r();
                if (l2 < 0L || l2 > Integer.MAX_VALUE) break block4;
            }
            catch (NumberFormatException numberFormatException) {
                throw new IOException(numberFormatException.getMessage());
            }
            if (!object.isEmpty()) break block4;
            return (int)l2;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("expected an int but was \"");
        stringBuilder.append(l2);
        stringBuilder.append((String)object);
        stringBuilder.append("\"");
        throw new IOException(stringBuilder.toString());
    }

    public static String a(t t2) {
        return e.f.a(t2.toString()).c().f();
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private void a(@Nullable d.a a2) {
        if (a2 == null) return;
        try {
            a2.c();
            return;
        }
        catch (IOException iOException) {
            return;
        }
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Nullable
    d.a.a.b a(ac object) {
        Object object2;
        block9 : {
            object2 = object.a().b();
            if (f.a(object.a().b())) {
                this.b(object.a());
                return null;
            }
            if (!object2.equals("GET")) {
                return null;
            }
            if (e.b((ac)object)) {
                return null;
            }
            object2 = new c((ac)object);
            try {
                object = this.b.b(c.a(object.a().a()));
                if (object != null) break block9;
                return null;
            }
            catch (IOException iOException) {}
        }
        try {
            object2.a((d.a)object);
            return new a((d.a)object);
        }
        catch (IOException iOException) {}
        catch (IOException iOException) {
            return null;
        }
        object = null;
        this.a((d.a)object);
        return null;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Nullable
    ac a(aa aa2) {
        Object object;
        block5 : {
            block4 : {
                object = c.a(aa2.a());
                try {
                    object = this.b.a((String)object);
                    if (object != null) break block4;
                    return null;
                }
                catch (IOException iOException) {
                    return null;
                }
            }
            try {
                c c2 = new c(object.a(0));
                object = c2.a((d.c)object);
                if (c2.a(aa2, (ac)object)) break block5;
            }
            catch (IOException iOException) {}
            d.a.c.a(object.h());
            return null;
        }
        return object;
        d.a.c.a((Closeable)object);
        return null;
    }

    void a() {
        synchronized (this) {
            ++this.f;
            return;
        }
    }

    void a(d.a.a.c c2) {
        synchronized (this) {
            ++this.g;
            if (c2.a != null) {
                ++this.e;
            } else if (c2.b != null) {
                ++this.f;
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    void a(ac object, ac object2) {
        object2 = new c((ac)object2);
        object = ((b)object.h()).a;
        try {
            object = object.a();
            if (object == null) return;
        }
        catch (IOException iOException) {}
        try {
            object2.a((d.a)object);
            object.b();
            return;
        }
        catch (IOException iOException) {}
        object = null;
        this.a((d.a)object);
    }

    void b(aa aa2) {
        this.b.c(c.a(aa2.a()));
    }

    @Override
    public void close() {
        this.b.close();
    }

    @Override
    public void flush() {
        this.b.flush();
    }

    private final class a
    implements d.a.a.b {
        boolean a;
        private final d.a c;
        private e.r d;
        private e.r e;

        a(d.a a2) {
            this.c = a2;
            this.d = a2.a(1);
            this.e = new g(this.d, c.this, a2){
                final /* synthetic */ c a;
                final /* synthetic */ d.a b;
                {
                    this.a = c2;
                    this.b = a3;
                    super(r2);
                }

                /*
                 * Enabled aggressive block sorting
                 * Enabled unnecessary exception pruning
                 * Enabled aggressive exception aggregation
                 */
                @Override
                public void close() {
                    c c2 = c.this;
                    synchronized (c2) {
                        if (a.this.a) {
                            return;
                        }
                        a.this.a = true;
                        c c3 = c.this;
                        ++c3.c;
                    }
                    super.close();
                    this.b.b();
                }
            };
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        public void a() {
            c c2 = c.this;
            synchronized (c2) {
                if (this.a) {
                    return;
                }
                this.a = true;
                c c3 = c.this;
                ++c3.d;
            }
            d.a.c.a(this.d);
            try {
                this.c.c();
                return;
            }
            catch (IOException iOException) {
                return;
            }
        }

        @Override
        public e.r b() {
            return this.e;
        }

    }

    private static class b
    extends ad {
        final d.c a;
        private final e.e b;
        @Nullable
        private final String c;
        @Nullable
        private final String d;

        b(final d.c c2, String string2, String string3) {
            this.a = c2;
            this.c = string2;
            this.d = string3;
            this.b = l.a(new e.h(c2.a(1)){

                @Override
                public void close() {
                    c2.close();
                    super.close();
                }
            });
        }

        @Override
        public v a() {
            if (this.c != null) {
                return v.a(this.c);
            }
            return null;
        }

        @Override
        public long b() {
            long l2 = -1L;
            try {
                if (this.d != null) {
                    l2 = Long.parseLong(this.d);
                }
                return l2;
            }
            catch (NumberFormatException numberFormatException) {
                return -1L;
            }
        }

        @Override
        public e.e c() {
            return this.b;
        }

    }

    private static final class c {
        private static final String a;
        private static final String b;
        private final String c;
        private final s d;
        private final String e;
        private final y f;
        private final int g;
        private final String h;
        private final s i;
        @Nullable
        private final r j;
        private final long k;
        private final long l;

        static {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append(d.a.g.f.c().d());
            stringBuilder.append("-Sent-Millis");
            a = stringBuilder.toString();
            stringBuilder = new StringBuilder();
            stringBuilder.append(d.a.g.f.c().d());
            stringBuilder.append("-Received-Millis");
            b = stringBuilder.toString();
        }

        c(ac ac2) {
            this.c = ac2.a().a().toString();
            this.d = e.c(ac2);
            this.e = ac2.a().b();
            this.f = ac2.b();
            this.g = ac2.c();
            this.h = ac2.e();
            this.i = ac2.g();
            this.j = ac2.f();
            this.k = ac2.n();
            this.l = ac2.o();
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        c(e.s s2) {
            e.e e2;
            Object object;
            try {
                int n2;
                e2 = l.a(s2);
                this.c = e2.r();
                this.e = e2.r();
                object = new s.a();
                int n3 = c.a(e2);
                int n4 = 0;
                for (n2 = 0; n2 < n3; ++n2) {
                    object.a(e2.r());
                }
                this.d = object.a();
                object = k.a(e2.r());
                this.f = object.a;
                this.g = object.b;
                this.h = object.c;
                object = new s.a();
                n3 = c.a(e2);
                for (n2 = n4; n2 < n3; ++n2) {
                    object.a(e2.r());
                }
            }
            catch (Throwable throwable) {
                s2.close();
                throw throwable;
            }
            Object object2 = object.c(a);
            Object object3 = object.c(b);
            object.b(a);
            object.b(b);
            long l2 = 0L;
            long l3 = object2 != null ? Long.parseLong((String)object2) : 0L;
            this.k = l3;
            l3 = l2;
            if (object3 != null) {
                l3 = Long.parseLong((String)object3);
            }
            this.l = l3;
            this.i = object.a();
            if (this.a()) {
                void var9_5;
                object = e2.r();
                if (object.length() > 0) {
                    StringBuilder stringBuilder = new StringBuilder();
                    stringBuilder.append("expected \"\" but was \"");
                    stringBuilder.append((String)object);
                    stringBuilder.append("\"");
                    throw new IOException(stringBuilder.toString());
                }
                object = h.a(e2.r());
                object2 = this.a(e2);
                object3 = this.a(e2);
                if (!e2.f()) {
                    af af2 = af.a(e2.r());
                } else {
                    af af3 = af.e;
                }
                this.j = r.a((af)var9_5, (h)object, (List<Certificate>)object2, (List<Certificate>)object3);
            } else {
                this.j = null;
            }
            s2.close();
        }

        private List<Certificate> a(e.e e2) {
            CertificateFactory certificateFactory;
            ArrayList<Certificate> arrayList;
            int n2 = c.a(e2);
            if (n2 == -1) {
                return Collections.emptyList();
            }
            try {
                certificateFactory = CertificateFactory.getInstance("X.509");
                arrayList = new ArrayList<Certificate>(n2);
            }
            catch (CertificateException certificateException) {
                throw new IOException(certificateException.getMessage());
            }
            for (int i2 = 0; i2 < n2; ++i2) {
                String string2 = e2.r();
                e.c c2 = new e.c();
                c2.a(e.f.b(string2));
                arrayList.add(certificateFactory.generateCertificate(c2.g()));
                continue;
            }
            return arrayList;
        }

        private void a(e.d d2, List<Certificate> list) {
            int n2;
            d2.l(list.size()).i(10);
            try {
                n2 = list.size();
            }
            catch (CertificateEncodingException certificateEncodingException) {
                throw new IOException(certificateEncodingException.getMessage());
            }
            for (int i2 = 0; i2 < n2; ++i2) {
                d2.b(e.f.a(list.get(i2).getEncoded()).b()).i(10);
                continue;
            }
            return;
        }

        private boolean a() {
            return this.c.startsWith("https://");
        }

        public ac a(d.c c2) {
            String string2 = this.i.a("Content-Type");
            String string3 = this.i.a("Content-Length");
            aa aa2 = new aa.a().a(this.c).a(this.e, (ab)null).a(this.d).a();
            return new ac.a().a(aa2).a(this.f).a(this.g).a(this.h).a(this.i).a(new b(c2, string2, string3)).a(this.j).a(this.k).b(this.l).a();
        }

        public void a(d.a object) {
            int n2;
            int n3 = 0;
            object = l.a(object.a(0));
            object.b(this.c).i(10);
            object.b(this.e).i(10);
            object.l(this.d.a()).i(10);
            int n4 = this.d.a();
            for (n2 = 0; n2 < n4; ++n2) {
                object.b(this.d.a(n2)).b(": ").b(this.d.b(n2)).i(10);
            }
            object.b(new k(this.f, this.g, this.h).toString()).i(10);
            object.l(this.i.a() + 2).i(10);
            n4 = this.i.a();
            for (n2 = n3; n2 < n4; ++n2) {
                object.b(this.i.a(n2)).b(": ").b(this.i.b(n2)).i(10);
            }
            object.b(a).b(": ").l(this.k).i(10);
            object.b(b).b(": ").l(this.l).i(10);
            if (this.a()) {
                object.i(10);
                object.b(this.j.b().a()).i(10);
                this.a((e.d)object, this.j.c());
                this.a((e.d)object, this.j.d());
                object.b(this.j.a().a()).i(10);
            }
            object.close();
        }

        public boolean a(aa aa2, ac ac2) {
            if (this.c.equals(aa2.a().toString()) && this.e.equals(aa2.b()) && e.a(ac2, this.d, aa2)) {
                return true;
            }
            return false;
        }
    }

}

