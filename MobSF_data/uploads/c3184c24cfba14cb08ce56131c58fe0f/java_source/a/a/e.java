/*
 * Decompiled with CFR 0_132.
 */
package a.a;

import a.a.a;
import a.a.b;
import a.a.c;
import a.a.d;
import a.a.f;
import a.a.g;
import a.a.h;
import a.a.i;

public abstract class e<T>
implements f<T> {
    public static int a() {
        return c.a();
    }

    public final a.a.b.b a(a.a.d.d<? super T> d2, a.a.d.d<? super Throwable> d3) {
        return this.a(d2, d3, a.a.e.b.a.c, a.a.e.b.a.a());
    }

    public final a.a.b.b a(a.a.d.d<? super T> object, a.a.d.d<? super Throwable> d2, a.a.d.a a2, a.a.d.d<? super a.a.b.b> d3) {
        a.a.e.b.b.a(object, "onNext is null");
        a.a.e.b.b.a(d2, "onError is null");
        a.a.e.b.b.a(a2, "onComplete is null");
        a.a.e.b.b.a(d3, "onSubscribe is null");
        object = new a.a.e.d.b<T>((a.a.d.d<? super T>)object, (a.a.d.d<Throwable>)d2, a2, (a.a.d.d<a.a.b.b>)d3);
        this.a((g<? super T>)object);
        return object;
    }

    public final c<T> a(a a2) {
        a.a.e.e.a.b b2 = new a.a.e.e.a.b(this);
        switch (.a[a2.ordinal()]) {
            default: {
                return b2.b();
            }
            case 4: {
                return a.a.f.a.a(new a.a.e.e.a.e(b2));
            }
            case 3: {
                return b2;
            }
            case 2: {
                return b2.d();
            }
            case 1: 
        }
        return b2.c();
    }

    public final e<T> a(h h2) {
        return this.a(h2, false, e.a());
    }

    public final e<T> a(h h2, boolean bl2, int n2) {
        a.a.e.b.b.a(h2, "scheduler is null");
        a.a.e.b.b.a(n2, "bufferSize");
        return a.a.f.a.a(new a.a.e.e.b.c(this, h2, bl2, n2));
    }

    @Override
    public final void a(g<? super T> g2) {
        a.a.e.b.b.a(g2, "observer is null");
        try {
            g2 = a.a.f.a.a(this, g2);
            a.a.e.b.b.a(g2, "Plugin returned null Observer");
            this.b(g2);
            return;
        }
        catch (Throwable throwable) {
            a.a.c.b.b(throwable);
            a.a.f.a.a(throwable);
            NullPointerException nullPointerException = new NullPointerException("Actually not, but can't throw other exceptions due to RS");
            nullPointerException.initCause(throwable);
            throw nullPointerException;
        }
        catch (NullPointerException nullPointerException) {
            throw nullPointerException;
        }
    }

    public final b b() {
        return a.a.f.a.a(new a.a.e.e.b.b(this));
    }

    public final e<T> b(h h2) {
        a.a.e.b.b.a(h2, "scheduler is null");
        return a.a.f.a.a(new a.a.e.e.b.f(this, h2));
    }

    protected abstract void b(g<? super T> var1);

    public final d<T> c() {
        return a.a.f.a.a(new a.a.e.e.b.d<T>(this));
    }

    public final i<T> d() {
        return a.a.f.a.a(new a.a.e.e.b.e<Object>(this, null));
    }

}

