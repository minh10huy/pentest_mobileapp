/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.graphics.Canvas
 *  android.graphics.ColorFilter
 *  android.graphics.Paint
 *  android.graphics.Path
 *  android.graphics.Rect
 *  android.graphics.drawable.ColorDrawable
 */
package com.a;

import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Rect;
import android.graphics.drawable.ColorDrawable;
import com.a.g;

final class a
extends ColorDrawable {
    private final Paint a = new Paint(1);
    private final int b;
    private final int c;
    private Path d;

    a(int n2, int n3) {
        this.c = g.a(n3);
        this.b = 0;
        this.a.setColor(n2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private void a(Rect rect) {
        synchronized (this) {
            block6 : {
                block3 : {
                    block7 : {
                        block4 : {
                            block5 : {
                                this.d = new Path();
                                int n2 = this.c;
                                if (n2 == 48) break block3;
                                if (n2 == 80) break block4;
                                if (n2 == 8388611) break block5;
                                if (n2 != 8388613) break block6;
                                this.d.moveTo(0.0f, 0.0f);
                                this.d.lineTo((float)rect.width(), (float)(rect.height() / 2));
                                this.d.lineTo(0.0f, (float)rect.height());
                                rect = this.d;
                                break block7;
                            }
                            this.d.moveTo((float)rect.width(), (float)rect.height());
                            this.d.lineTo(0.0f, (float)(rect.height() / 2));
                            this.d.lineTo((float)rect.width(), 0.0f);
                            this.d.lineTo((float)rect.width(), (float)rect.height());
                            break block6;
                        }
                        this.d.moveTo(0.0f, 0.0f);
                        this.d.lineTo((float)(rect.width() / 2), (float)rect.height());
                        this.d.lineTo((float)rect.width(), 0.0f);
                        rect = this.d;
                    }
                    rect.lineTo(0.0f, 0.0f);
                    break block6;
                }
                this.d.moveTo(0.0f, (float)rect.height());
                this.d.lineTo((float)(rect.width() / 2), 0.0f);
                this.d.lineTo((float)rect.width(), (float)rect.height());
                this.d.lineTo(0.0f, (float)rect.height());
            }
            this.d.close();
            return;
        }
    }

    public void draw(Canvas canvas) {
        canvas.drawColor(this.b);
        if (this.d == null) {
            this.a(this.getBounds());
        }
        canvas.drawPath(this.d, this.a);
    }

    public int getOpacity() {
        if (this.a.getColorFilter() != null) {
            return -3;
        }
        int n2 = this.a.getColor() >>> 24;
        if (n2 != 0) {
            if (n2 != 255) {
                return -3;
            }
            return -1;
        }
        return -2;
    }

    protected void onBoundsChange(Rect rect) {
        super.onBoundsChange(rect);
        this.a(rect);
    }

    public void setAlpha(int n2) {
        this.a.setAlpha(n2);
    }

    public void setColor(int n2) {
        this.a.setColor(n2);
    }

    public void setColorFilter(ColorFilter colorFilter) {
        this.a.setColorFilter(colorFilter);
    }
}

