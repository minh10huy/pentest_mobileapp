/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.awt.geom;

import com.itextpdf.awt.geom.Dimension2D;
import com.itextpdf.awt.geom.misc.HashCode;
import java.io.Serializable;

public class Dimension
extends Dimension2D
implements Serializable {
    private static final long serialVersionUID = 4723952579491349524L;
    public double height;
    public double width;

    public Dimension() {
        this(0, 0);
    }

    public Dimension(double d2, double d3) {
        this.setSize(d2, d3);
    }

    public Dimension(int n2, int n3) {
        this.setSize(n2, n3);
    }

    public Dimension(Dimension dimension) {
        this(dimension.width, dimension.height);
    }

    public boolean equals(Object object) {
        if (object == this) {
            return true;
        }
        if (object instanceof Dimension) {
            object = (Dimension)object;
            if (object.width == this.width && object.height == this.height) {
                return true;
            }
            return false;
        }
        return false;
    }

    @Override
    public double getHeight() {
        return this.height;
    }

    public Dimension getSize() {
        return new Dimension(this.width, this.height);
    }

    @Override
    public double getWidth() {
        return this.width;
    }

    public int hashCode() {
        HashCode hashCode = new HashCode();
        hashCode.append(this.width);
        hashCode.append(this.height);
        return hashCode.hashCode();
    }

    @Override
    public void setSize(double d2, double d3) {
        this.setSize((int)Math.ceil(d2), (int)Math.ceil(d3));
    }

    public void setSize(int n2, int n3) {
        this.width = n2;
        this.height = n3;
    }

    public void setSize(Dimension dimension) {
        this.setSize(dimension.width, dimension.height);
    }

    public String toString() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(this.getClass().getName());
        stringBuilder.append("[width=");
        stringBuilder.append(this.width);
        stringBuilder.append(",height=");
        stringBuilder.append(this.height);
        stringBuilder.append("]");
        return stringBuilder.toString();
    }
}

