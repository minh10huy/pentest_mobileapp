/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import java.util.ArrayList;
import java.util.HashMap;

public class ZapfDingbatsList
extends List {
    protected int zn;

    public ZapfDingbatsList(int n2) {
        super(true);
        this.zn = n2;
        float f2 = this.symbol.getFont().getSize();
        this.symbol.setFont(FontFactory.getFont("ZapfDingbats", f2, 0));
        this.postSymbol = " ";
    }

    public ZapfDingbatsList(int n2, int n3) {
        super(true, n3);
        this.zn = n2;
        float f2 = this.symbol.getFont().getSize();
        this.symbol.setFont(FontFactory.getFont("ZapfDingbats", f2, 0));
        this.postSymbol = " ";
    }

    public ZapfDingbatsList(int n2, int n3, BaseColor baseColor) {
        super(true, n3);
        this.zn = n2;
        float f2 = this.symbol.getFont().getSize();
        this.symbol.setFont(FontFactory.getFont("ZapfDingbats", f2, 0, baseColor));
        this.postSymbol = " ";
    }

    @Override
    public boolean add(Element element) {
        if (element instanceof ListItem) {
            element = (ListItem)element;
            Chunk chunk = new Chunk(this.preSymbol, this.symbol.getFont());
            chunk.setAttributes(this.symbol.getAttributes());
            chunk.append(String.valueOf((char)this.zn));
            chunk.append(this.postSymbol);
            element.setListSymbol(chunk);
            element.setIndentationLeft(this.symbolIndent, this.autoindent);
            element.setIndentationRight(0.0f);
            this.list.add(element);
        } else if (element instanceof List) {
            element = (List)element;
            element.setIndentationLeft(element.getIndentationLeft() + this.symbolIndent);
            --this.first;
            return this.list.add(element);
        }
        return false;
    }

    @Override
    public List cloneShallow() {
        ZapfDingbatsList zapfDingbatsList = new ZapfDingbatsList(this.zn);
        this.populateProperties(zapfDingbatsList);
        return zapfDingbatsList;
    }

    public int getCharNumber() {
        return this.zn;
    }

    public void setCharNumber(int n2) {
        this.zn = n2;
    }

    public void setDingbatColor(BaseColor baseColor) {
        float f2 = this.symbol.getFont().getSize();
        this.symbol.setFont(FontFactory.getFont("ZapfDingbats", f2, 0, baseColor));
    }
}

