/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text;

import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Utilities;
import com.itextpdf.text.error_messages.MessageLocalization;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.pdf.codec.wmf.InputMeta;
import com.itextpdf.text.pdf.codec.wmf.MetaDo;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.net.URL;

public class ImgWMF
extends Image {
    ImgWMF(Image image) {
        super(image);
    }

    public ImgWMF(String string2) {
        this(Utilities.toURL(string2));
    }

    public ImgWMF(URL uRL) {
        super(uRL);
        this.processParameters();
    }

    public ImgWMF(byte[] arrby) {
        super((URL)null);
        this.rawData = arrby;
        this.originalData = arrby;
        this.processParameters();
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private void processParameters() {
        block9 : {
            block10 : {
                block11 : {
                    block8 : {
                        this.type = 35;
                        this.originalType = 6;
                        var8_2 = var9_1 = null;
                        if (this.rawData != null) break block8;
                        var8_2 = var9_1;
                        var9_1 = this.url.openStream();
                        try {
                            var10_4 = this.url.toString();
                            var8_2 = var9_1;
                            var9_1 = var10_4;
                            ** GOTO lbl22
                        }
                        catch (Throwable var8_3) {
                            var10_5 = var8_3;
                            break block9;
                        }
                    }
                    var8_2 = var9_1;
                    var10_4 = new ByteArrayInputStream(this.rawData);
                    var9_1 = "Byte array";
                    var8_2 = var10_4;
lbl22: // 2 sources:
                    var10_4 = var8_2;
                    var8_2 = var10_4;
                    var11_7 = new InputMeta((InputStream)var10_4);
                    var8_2 = var10_4;
                    if (var11_7.readInt() != -1698247209) break block10;
                    var8_2 = var10_4;
                    var11_7.readWord();
                    var8_2 = var10_4;
                    var3_8 = var11_7.readShort();
                    var8_2 = var10_4;
                    var4_9 = var11_7.readShort();
                    var8_2 = var10_4;
                    var5_10 = var11_7.readShort();
                    var8_2 = var10_4;
                    var6_11 = var11_7.readShort();
                    var8_2 = var10_4;
                    var7_12 = var11_7.readWord();
                    var8_2 = var10_4;
                    this.dpiX = 72;
                    var8_2 = var10_4;
                    this.dpiY = 72;
                    var1_13 = var6_11 - var4_9;
                    var2_14 = var7_12;
                    var8_2 = var10_4;
                    this.scaledHeight = var1_13 / var2_14 * 72.0f;
                    var8_2 = var10_4;
                    this.setTop(this.scaledHeight);
                    var8_2 = var10_4;
                    this.scaledWidth = (float)(var5_10 - var3_8) / var2_14 * 72.0f;
                    var8_2 = var10_4;
                    this.setRight(this.scaledWidth);
                    if (var10_4 == null) break block11;
                    var10_4.close();
                }
                this.plainWidth = this.getWidth();
                this.plainHeight = this.getHeight();
                return;
            }
            var8_2 = var10_4;
            try {
                throw new BadElementException(MessageLocalization.getComposedMessage("1.is.not.a.valid.placeable.windows.metafile", new Object[]{var9_1}));
            }
            catch (Throwable var10_6) {
                var9_1 = var8_2;
            }
        }
        if (var9_1 != null) {
            var9_1.close();
        }
        this.plainWidth = this.getWidth();
        this.plainHeight = this.getHeight();
        throw var10_5;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public void readWMF(PdfTemplate pdfTemplate) {
        InputStream inputStream;
        this.setTemplateData(pdfTemplate);
        pdfTemplate.setWidth(this.getWidth());
        pdfTemplate.setHeight(this.getHeight());
        InputStream inputStream2 = inputStream = null;
        try {
            if (this.rawData == null) {
                inputStream2 = inputStream;
                inputStream2 = inputStream = this.url.openStream();
            } else {
                inputStream2 = inputStream;
                inputStream2 = inputStream = new ByteArrayInputStream(this.rawData);
            }
        }
        catch (Throwable throwable) {
            if (inputStream2 != null) {
                inputStream2.close();
            }
            throw throwable;
        }
        inputStream = inputStream2;
        inputStream2 = inputStream;
        new MetaDo(inputStream, pdfTemplate).readAll();
        if (inputStream != null) {
            inputStream.close();
        }
    }
}

