/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text;

import com.itextpdf.text.Image;
import com.itextpdf.text.Utilities;
import com.itextpdf.text.error_messages.MessageLocalization;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.ArrayList;

public class Jpeg2000
extends Image {
    public static final int JP2_BPCC = 1651532643;
    public static final int JP2_COLR = 1668246642;
    public static final int JP2_DBTL = 1685348972;
    public static final int JP2_FTYP = 1718909296;
    public static final int JP2_IHDR = 1768449138;
    public static final int JP2_JP = 1783636000;
    public static final int JP2_JP2 = 1785737760;
    public static final int JP2_JP2C = 1785737827;
    public static final int JP2_JP2H = 1785737832;
    public static final int JP2_URL = 1970433056;
    public static final int JPIP_JPIP = 1785751920;
    int boxLength;
    int boxType;
    byte[] bpcBoxData;
    ArrayList<ColorSpecBox> colorSpecBoxes = null;
    InputStream inp;
    boolean isJp2 = false;
    int numOfComps;

    Jpeg2000(Image image) {
        super(image);
        if (image instanceof Jpeg2000) {
            image = (Jpeg2000)image;
            this.numOfComps = image.numOfComps;
            if (this.colorSpecBoxes != null) {
                this.colorSpecBoxes = (ArrayList)image.colorSpecBoxes.clone();
            }
            this.isJp2 = image.isJp2;
            if (this.bpcBoxData != null) {
                this.bpcBoxData = (byte[])image.bpcBoxData.clone();
            }
        }
    }

    public Jpeg2000(URL uRL) {
        super(uRL);
        this.processParameters();
    }

    public Jpeg2000(byte[] arrby) {
        super((URL)null);
        this.rawData = arrby;
        this.originalData = arrby;
        this.processParameters();
    }

    public Jpeg2000(byte[] arrby, float f2, float f3) {
        this(arrby);
        this.scaledWidth = f2;
        this.scaledHeight = f3;
    }

    private int cio_read(int n2) {
        --n2;
        int n3 = 0;
        while (n2 >= 0) {
            n3 += this.inp.read() << (n2 << 3);
            --n2;
        }
        return n3;
    }

    private ColorSpecBox jp2_read_colr() {
        ColorSpecBox colorSpecBox = new ColorSpecBox();
        int n2 = 8;
        for (int i2 = 0; i2 < 3; ++i2) {
            colorSpecBox.add(this.cio_read(1));
            ++n2;
        }
        if (colorSpecBox.getMeth() == 1) {
            colorSpecBox.add(this.cio_read(4));
            n2 += 4;
        } else {
            colorSpecBox.add(0);
        }
        if (this.boxLength - n2 > 0) {
            byte[] arrby = new byte[this.boxLength - n2];
            this.inp.read(arrby, 0, this.boxLength - n2);
            colorSpecBox.setColorProfile(arrby);
        }
        return colorSpecBox;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private void processParameters() {
        block22 : {
            block23 : {
                block20 : {
                    block21 : {
                        this.type = 33;
                        this.originalType = 8;
                        this.inp = null;
                        InputStream inputStream = this.rawData == null ? this.url.openStream() : new ByteArrayInputStream(this.rawData);
                        this.inp = inputStream;
                        this.boxLength = this.cio_read(4);
                        if (this.boxLength != 12) break block20;
                        this.isJp2 = true;
                        this.boxType = this.cio_read(4);
                        if (1783636000 != this.boxType) {
                            throw new IOException(MessageLocalization.getComposedMessage("expected.jp.marker", new Object[0]));
                        }
                        if (218793738 != this.cio_read(4)) {
                            throw new IOException(MessageLocalization.getComposedMessage("error.with.jp.marker", new Object[0]));
                        }
                        this.jp2_read_boxhdr();
                        if (1718909296 != this.boxType) {
                            throw new IOException(MessageLocalization.getComposedMessage("expected.ftyp.marker", new Object[0]));
                        }
                        Utilities.skip(this.inp, this.boxLength - 8);
                        this.jp2_read_boxhdr();
                        do {
                            if (1785737832 == this.boxType) continue;
                            if (this.boxType == 1785737827) {
                                throw new IOException(MessageLocalization.getComposedMessage("expected.jp2h.marker", new Object[0]));
                            }
                            Utilities.skip(this.inp, this.boxLength - 8);
                            this.jp2_read_boxhdr();
                        } while (1785737832 != this.boxType);
                        this.jp2_read_boxhdr();
                        if (1768449138 != this.boxType) {
                            throw new IOException(MessageLocalization.getComposedMessage("expected.ihdr.marker", new Object[0]));
                        }
                        this.scaledHeight = this.cio_read(4);
                        this.setTop(this.scaledHeight);
                        this.scaledWidth = this.cio_read(4);
                        this.setRight(this.scaledWidth);
                        this.numOfComps = this.cio_read(2);
                        this.bpc = -1;
                        this.bpc = this.cio_read(1);
                        Utilities.skip(this.inp, 3);
                        this.jp2_read_boxhdr();
                        if (this.boxType != 1651532643) break block21;
                        this.bpcBoxData = new byte[this.boxLength - 8];
                        this.inp.read(this.bpcBoxData, 0, this.boxLength - 8);
                        break block22;
                    }
                    if (this.boxType != 1668246642) break block22;
                    break block23;
                }
                if (this.boxLength != -11534511) {
                    throw new IOException(MessageLocalization.getComposedMessage("not.a.valid.jpeg2000.file", new Object[0]));
                }
                Utilities.skip(this.inp, 4);
                int n2 = this.cio_read(4);
                int n3 = this.cio_read(4);
                int n4 = this.cio_read(4);
                int n5 = this.cio_read(4);
                Utilities.skip(this.inp, 16);
                this.colorspace = this.cio_read(2);
                this.bpc = 8;
                this.scaledHeight = n3 - n5;
                this.setTop(this.scaledHeight);
                this.scaledWidth = n2 - n4;
                this.setRight(this.scaledWidth);
                break block22;
            }
            do {
                if (this.colorSpecBoxes == null) {
                    this.colorSpecBoxes = new ArrayList();
                }
                this.colorSpecBoxes.add(this.jp2_read_colr());
                try {
                    this.jp2_read_boxhdr();
                }
                catch (ZeroBoxSizeException zeroBoxSizeException) {}
            } while (1668246642 == this.boxType);
        }
        this.plainWidth = this.getWidth();
        this.plainHeight = this.getHeight();
        return;
        finally {
            if (this.inp != null) {
                this.inp.close();
                this.inp = null;
            }
        }
    }

    public byte[] getBpcBoxData() {
        return this.bpcBoxData;
    }

    public ArrayList<ColorSpecBox> getColorSpecBoxes() {
        return this.colorSpecBoxes;
    }

    public int getNumOfComps() {
        return this.numOfComps;
    }

    public boolean isJp2() {
        return this.isJp2;
    }

    public void jp2_read_boxhdr() {
        this.boxLength = this.cio_read(4);
        this.boxType = this.cio_read(4);
        if (this.boxLength == 1) {
            if (this.cio_read(4) == 0) {
                this.boxLength = this.cio_read(4);
                if (this.boxLength != 0) {
                    return;
                }
                throw new IOException(MessageLocalization.getComposedMessage("unsupported.box.size.eq.eq.0", new Object[0]));
            }
            throw new IOException(MessageLocalization.getComposedMessage("cannot.handle.box.sizes.higher.than.2.32", new Object[0]));
        }
        if (this.boxLength != 0) {
            return;
        }
        throw new ZeroBoxSizeException(MessageLocalization.getComposedMessage("unsupported.box.size.eq.eq.0", new Object[0]));
    }

    public static class ColorSpecBox
    extends ArrayList<Integer> {
        private byte[] colorProfile;

        public int getApprox() {
            return (Integer)this.get(2);
        }

        public byte[] getColorProfile() {
            return this.colorProfile;
        }

        public int getEnumCs() {
            return (Integer)this.get(3);
        }

        public int getMeth() {
            return (Integer)this.get(0);
        }

        public int getPrec() {
            return (Integer)this.get(1);
        }

        void setColorProfile(byte[] arrby) {
            this.colorProfile = arrby;
        }
    }

    private class ZeroBoxSizeException
    extends IOException {
        public ZeroBoxSizeException() {
        }

        public ZeroBoxSizeException(String string2) {
            super(string2);
        }
    }

}

