/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.draw;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Font;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.draw.VerticalPositionMark;

public class LineSeparator
extends VerticalPositionMark {
    protected int alignment = 6;
    protected BaseColor lineColor;
    protected float lineWidth = 1.0f;
    protected float percentage = 100.0f;

    public LineSeparator() {
    }

    public LineSeparator(float f2, float f3, BaseColor baseColor, int n2, float f4) {
        this.lineWidth = f2;
        this.percentage = f3;
        this.lineColor = baseColor;
        this.alignment = n2;
        this.offset = f4;
    }

    public LineSeparator(Font font) {
        this.lineWidth = font.getSize() * 0.06666667f;
        this.offset = font.getSize() * -0.33333334f;
        this.percentage = 100.0f;
        this.lineColor = font.getColor();
    }

    @Override
    public void draw(PdfContentByte pdfContentByte, float f2, float f3, float f4, float f5, float f6) {
        pdfContentByte.saveState();
        this.drawLine(pdfContentByte, f2, f4, f6);
        pdfContentByte.restoreState();
    }

    public void drawLine(PdfContentByte pdfContentByte, float f2, float f3, float f4) {
        float f5 = this.getPercentage();
        float f6 = 0.0f;
        f5 = f5 < 0.0f ? - this.getPercentage() : (f3 - f2) * this.getPercentage() / 100.0f;
        int n2 = this.getAlignment();
        if (n2 != 0) {
            f6 = n2 != 2 ? (f3 - f2 - f5) / 2.0f : f3 - f2 - f5;
        }
        pdfContentByte.setLineWidth(this.getLineWidth());
        if (this.getLineColor() != null) {
            pdfContentByte.setColorStroke(this.getLineColor());
        }
        pdfContentByte.moveTo(f6 + f2, this.offset + f4);
        pdfContentByte.lineTo(f6 + f5 + f2, f4 + this.offset);
        pdfContentByte.stroke();
    }

    public int getAlignment() {
        return this.alignment;
    }

    public BaseColor getLineColor() {
        return this.lineColor;
    }

    public float getLineWidth() {
        return this.lineWidth;
    }

    public float getPercentage() {
        return this.percentage;
    }

    public void setAlignment(int n2) {
        this.alignment = n2;
    }

    public void setLineColor(BaseColor baseColor) {
        this.lineColor = baseColor;
    }

    public void setLineWidth(float f2) {
        this.lineWidth = f2;
    }

    public void setPercentage(float f2) {
        this.percentage = f2;
    }
}

