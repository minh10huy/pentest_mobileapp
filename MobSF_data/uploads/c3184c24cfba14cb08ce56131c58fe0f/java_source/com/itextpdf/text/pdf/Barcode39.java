/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.ExceptionConverter;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.error_messages.MessageLocalization;
import com.itextpdf.text.pdf.Barcode;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfContentByte;

public class Barcode39
extends Barcode {
    private static final byte[][] BARS;
    private static final String CHARS = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%*";
    private static final String EXTENDED = "%U$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$S$T$U$V$W$X$Y$Z%A%B%C%D%E  /A/B/C/D/E/F/G/H/I/J/K/L - ./O 0 1 2 3 4 5 6 7 8 9/Z%F%G%H%I%J%V A B C D E F G H I J K L M N O P Q R S T U V W X Y Z%K%L%M%N%O%W+A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z%P%Q%R%S%T";

    static {
        byte[] arrby = new byte[]{1, 0, 0, 1, 0, 0, 0, 0, 1};
        byte[] arrby2 = new byte[]{1, 0, 1, 1, 0, 0, 0, 0, 0};
        byte[] arrby3 = new byte[]{0, 0, 0, 1, 1, 0, 0, 0, 1};
        byte[] arrby4 = new byte[]{1, 0, 0, 1, 1, 0, 0, 0, 0};
        byte[] arrby5 = new byte[]{1, 0, 0, 1, 0, 0, 1, 0, 0};
        byte[] arrby6 = new byte[]{0, 0, 1, 1, 0, 0, 1, 0, 0};
        byte[] arrby7 = new byte[]{0, 0, 1, 0, 0, 1, 0, 0, 1};
        byte[] arrby8 = new byte[]{1, 0, 1, 0, 0, 1, 0, 0, 0};
        byte[] arrby9 = new byte[]{1, 0, 0, 0, 1, 1, 0, 0, 0};
        byte[] arrby10 = new byte[]{0, 0, 1, 0, 1, 1, 0, 0, 0};
        byte[] arrby11 = new byte[]{0, 0, 0, 0, 0, 1, 1, 0, 1};
        byte[] arrby12 = new byte[]{1, 0, 0, 0, 0, 1, 1, 0, 0};
        byte[] arrby13 = new byte[]{0, 0, 0, 0, 1, 1, 1, 0, 0};
        byte[] arrby14 = new byte[]{0, 0, 1, 0, 0, 0, 0, 1, 1};
        byte[] arrby15 = new byte[]{0, 0, 0, 0, 0, 0, 1, 1, 1};
        byte[] arrby16 = new byte[]{1, 1, 0, 0, 0, 0, 0, 0, 1};
        byte[] arrby17 = new byte[]{0, 1, 1, 0, 0, 0, 0, 0, 1};
        byte[] arrby18 = new byte[]{1, 1, 1, 0, 0, 0, 0, 0, 0};
        byte[] arrby19 = new byte[]{0, 1, 0, 0, 0, 0, 1, 0, 1};
        byte[] arrby20 = new byte[]{1, 1, 0, 0, 0, 0, 1, 0, 0};
        byte[] arrby21 = new byte[]{0, 1, 0, 0, 0, 1, 0, 1, 0};
        BARS = new byte[][]{{0, 0, 0, 1, 1, 0, 1, 0, 0}, arrby, {0, 0, 1, 1, 0, 0, 0, 0, 1}, arrby2, arrby3, arrby4, {0, 0, 1, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 1, 0, 1}, arrby5, arrby6, {1, 0, 0, 0, 0, 1, 0, 0, 1}, arrby7, arrby8, {0, 0, 0, 0, 1, 1, 0, 0, 1}, arrby9, arrby10, arrby11, arrby12, {0, 0, 1, 0, 0, 1, 1, 0, 0}, arrby13, {1, 0, 0, 0, 0, 0, 0, 1, 1}, arrby14, {1, 0, 1, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 1, 0, 0, 1, 1}, {1, 0, 0, 0, 1, 0, 0, 1, 0}, {0, 0, 1, 0, 1, 0, 0, 1, 0}, arrby15, {1, 0, 0, 0, 0, 0, 1, 1, 0}, {0, 0, 1, 0, 0, 0, 1, 1, 0}, {0, 0, 0, 0, 1, 0, 1, 1, 0}, arrby16, arrby17, arrby18, {0, 1, 0, 0, 1, 0, 0, 0, 1}, {1, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 1, 1, 0, 1, 0, 0, 0, 0}, arrby19, arrby20, {0, 1, 1, 0, 0, 0, 1, 0, 0}, {0, 1, 0, 1, 0, 1, 0, 0, 0}, {0, 1, 0, 1, 0, 0, 0, 1, 0}, arrby21, {0, 0, 0, 1, 0, 1, 0, 1, 0}, {0, 1, 0, 0, 1, 0, 1, 0, 0}};
    }

    public Barcode39() {
        try {
            this.x = 0.8f;
            this.n = 2.0f;
            this.font = BaseFont.createFont("Helvetica", "winansi", false);
            this.baseline = this.size = 8.0f;
            this.barHeight = this.size * 3.0f;
            this.textAlignment = 1;
            this.generateChecksum = false;
            this.checksumText = false;
            this.startStopText = true;
            this.extended = false;
            return;
        }
        catch (Exception exception) {
            throw new ExceptionConverter(exception);
        }
    }

    public static byte[] getBarsCode39(String string2) {
        byte[] arrby = new byte[]();
        arrby.append("*");
        arrby.append(string2);
        arrby.append("*");
        string2 = arrby.toString();
        arrby = new byte[string2.length() * 10 - 1];
        for (int i2 = 0; i2 < string2.length(); ++i2) {
            int n2 = CHARS.indexOf(string2.charAt(i2));
            if (n2 >= 0) {
                System.arraycopy(BARS[n2], 0, arrby, i2 * 10, 9);
                continue;
            }
            throw new IllegalArgumentException(MessageLocalization.getComposedMessage("the.character.1.is.illegal.in.code.39", string2.charAt(i2)));
        }
        return arrby;
    }

    static char getChecksum(String string2) {
        int n2 = 0;
        for (int i2 = 0; i2 < string2.length(); ++i2) {
            int n3 = CHARS.indexOf(string2.charAt(i2));
            if (n3 >= 0) {
                n2 += n3;
                continue;
            }
            throw new IllegalArgumentException(MessageLocalization.getComposedMessage("the.character.1.is.illegal.in.code.39", string2.charAt(i2)));
        }
        return CHARS.charAt(n2 % 43);
    }

    public static String getCode39Ex(String string2) {
        StringBuilder stringBuilder = new StringBuilder("");
        for (int i2 = 0; i2 < string2.length(); ++i2) {
            int n2 = string2.charAt(i2);
            if (n2 <= 127) {
                char c2 = EXTENDED.charAt(n2 *= 2);
                char c3 = EXTENDED.charAt(n2 + 1);
                if (c2 != ' ') {
                    stringBuilder.append(c2);
                }
                stringBuilder.append(c3);
                continue;
            }
            throw new IllegalArgumentException(MessageLocalization.getComposedMessage("the.character.1.is.illegal.in.code.39.extended", n2));
        }
        return stringBuilder.toString();
    }

    @Override
    public Rectangle getBarcodeSize() {
        int n2;
        float f2;
        String string2 = this.code;
        if (this.extended) {
            string2 = Barcode39.getCode39Ex(this.code);
        }
        Object object = this.font;
        float f3 = 0.0f;
        if (object != null) {
            Object object2;
            f3 = this.baseline > 0.0f ? this.baseline - this.font.getFontDescriptor(3, this.size) : - this.baseline + this.size;
            object = object2 = this.code;
            if (this.generateChecksum) {
                object = object2;
                if (this.checksumText) {
                    object = new StringBuilder();
                    object.append((String)object2);
                    object.append(Barcode39.getChecksum(string2));
                    object = object.toString();
                }
            }
            object2 = object;
            if (this.startStopText) {
                object2 = new StringBuilder();
                object2.append("*");
                object2.append((String)object);
                object2.append("*");
                object2 = object2.toString();
            }
            object = this.font;
            if (this.altText != null) {
                object2 = this.altText;
            }
            f2 = object.getWidthPoint((String)object2, this.size);
        } else {
            f2 = 0.0f;
        }
        int n3 = n2 = string2.length() + 2;
        if (this.generateChecksum) {
            n3 = n2 + 1;
        }
        return new Rectangle(Math.max((float)n3 * (this.x * 6.0f + this.x * 3.0f * this.n) + (float)(n3 - 1) * this.x, f2), this.barHeight + f3);
    }

    /*
     * Enabled aggressive block sorting
     */
    @Override
    public Rectangle placeBarcode(PdfContentByte pdfContentByte, BaseColor baseColor, BaseColor baseColor2) {
        Object object;
        boolean bl2;
        float f2;
        float f3;
        byte[] arrby;
        int n2;
        float f4;
        Object object2;
        float f5;
        float f6;
        block22 : {
            block19 : {
                block16 : {
                    block20 : {
                        block21 : {
                            block17 : {
                                block18 : {
                                    object = this.code;
                                    arrby = this.code;
                                    if (this.extended) {
                                        arrby = Barcode39.getCode39Ex(this.code);
                                    }
                                    object2 = this.font;
                                    f4 = 0.0f;
                                    if (object2 != null) {
                                        object2 = object;
                                        if (this.generateChecksum) {
                                            object2 = object;
                                            if (this.checksumText) {
                                                object2 = new StringBuilder();
                                                object2.append((String)object);
                                                object2.append(Barcode39.getChecksum((String)arrby));
                                                object2 = object2.toString();
                                            }
                                        }
                                        object = object2;
                                        if (this.startStopText) {
                                            object = new StringBuilder();
                                            object.append("*");
                                            object.append((String)object2);
                                            object.append("*");
                                            object = object.toString();
                                        }
                                        object2 = this.font;
                                        if (this.altText != null) {
                                            object = this.altText;
                                        }
                                        f3 = object2.getWidthPoint((String)object, this.size);
                                    } else {
                                        f3 = 0.0f;
                                    }
                                    object2 = arrby;
                                    if (this.generateChecksum) {
                                        object2 = new StringBuilder();
                                        object2.append((String)arrby);
                                        object2.append(Barcode39.getChecksum((String)arrby));
                                        object2 = object2.toString();
                                    }
                                    n2 = object2.length() + 2;
                                    f5 = n2;
                                    f6 = this.x;
                                    f2 = this.x;
                                    float f7 = this.n;
                                    bl2 = true;
                                    f5 = f5 * (f6 * 6.0f + f2 * 3.0f * f7) + (float)(n2 - 1) * this.x;
                                    n2 = this.textAlignment;
                                    if (n2 == 0) break block16;
                                    if (n2 == 2) break block17;
                                    if (f3 <= f5) break block18;
                                    f3 = (f3 - f5) / 2.0f;
                                    break block19;
                                }
                                f3 = (f5 - f3) / 2.0f;
                                break block20;
                            }
                            if (f3 <= f5) break block21;
                            f3 -= f5;
                            break block19;
                        }
                        f3 = f5 - f3;
                    }
                    f6 = f3;
                    f3 = 0.0f;
                    break block22;
                }
                f3 = 0.0f;
            }
            f6 = 0.0f;
        }
        if (this.font != null) {
            if (this.baseline <= 0.0f) {
                f5 = this.barHeight - this.baseline;
            } else {
                f4 = - this.font.getFontDescriptor(3, this.size);
                f2 = this.baseline;
                f5 = f4;
                f4 = f2 + f4;
            }
        } else {
            f5 = 0.0f;
        }
        arrby = Barcode39.getBarsCode39((String)object2);
        if (baseColor != null) {
            pdfContentByte.setColorFill(baseColor);
        }
        for (n2 = 0; n2 < arrby.length; bl2 ^= true, f3 += f2, ++n2) {
            f2 = arrby[n2] == 0 ? this.x : this.x * this.n;
            if (!bl2) continue;
            pdfContentByte.rectangle(f3, f4, f2 - this.inkSpreading, this.barHeight);
        }
        pdfContentByte.fill();
        if (this.font != null) {
            if (baseColor2 != null) {
                pdfContentByte.setColorFill(baseColor2);
            }
            pdfContentByte.beginText();
            pdfContentByte.setFontAndSize(this.font, this.size);
            pdfContentByte.setTextMatrix(f6, f5);
            pdfContentByte.showText((String)object);
            pdfContentByte.endText();
        }
        return this.getBarcodeSize();
    }
}

