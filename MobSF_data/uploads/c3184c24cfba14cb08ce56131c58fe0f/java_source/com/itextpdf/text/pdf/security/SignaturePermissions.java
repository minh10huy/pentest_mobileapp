/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.security;

import com.itextpdf.text.pdf.PdfArray;
import com.itextpdf.text.pdf.PdfDictionary;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfNumber;
import com.itextpdf.text.pdf.PdfObject;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

public class SignaturePermissions {
    boolean annotationsAllowed = true;
    boolean certification = false;
    List<FieldLock> fieldLocks = new ArrayList<FieldLock>();
    boolean fillInAllowed = true;

    public SignaturePermissions(PdfDictionary pdfObject, SignaturePermissions object) {
        if (object != null) {
            this.annotationsAllowed &= object.isAnnotationsAllowed();
            this.fillInAllowed &= object.isFillInAllowed();
            this.fieldLocks.addAll(object.getFieldLocks());
        }
        if ((pdfObject = pdfObject.getAsArray(PdfName.REFERENCE)) != null) {
            block4 : for (int i2 = 0; i2 < pdfObject.size(); ++i2) {
                PdfObject pdfObject2 = pdfObject.getAsDict(i2);
                object = pdfObject2.getAsDict(PdfName.TRANSFORMPARAMS);
                if (PdfName.DOCMDP.equals(pdfObject2.getAsName(PdfName.TRANSFORMMETHOD))) {
                    this.certification = true;
                }
                if ((pdfObject2 = object.getAsName(PdfName.ACTION)) != null) {
                    this.fieldLocks.add(new FieldLock((PdfName)pdfObject2, object.getAsArray(PdfName.FIELDS)));
                }
                if ((object = object.getAsNumber(PdfName.P)) == null) continue;
                switch (object.intValue()) {
                    default: {
                        continue block4;
                    }
                    case 1: {
                        this.fillInAllowed &= false;
                    }
                    case 2: {
                        this.annotationsAllowed &= false;
                    }
                }
            }
        }
    }

    public List<FieldLock> getFieldLocks() {
        return this.fieldLocks;
    }

    public boolean isAnnotationsAllowed() {
        return this.annotationsAllowed;
    }

    public boolean isCertification() {
        return this.certification;
    }

    public boolean isFillInAllowed() {
        return this.fillInAllowed;
    }

    public class FieldLock {
        PdfName action;
        PdfArray fields;

        public FieldLock(PdfName pdfName, PdfArray pdfArray) {
            this.action = pdfName;
            this.fields = pdfArray;
        }

        public PdfName getAction() {
            return this.action;
        }

        public PdfArray getFields() {
            return this.fields;
        }

        public String toString() {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append(this.action.toString());
            String string2 = this.fields == null ? "" : this.fields.toString();
            stringBuilder.append(string2);
            return stringBuilder.toString();
        }
    }

}

