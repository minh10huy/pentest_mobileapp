/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf;

import com.itextpdf.text.pdf.PdfArray;
import com.itextpdf.text.pdf.PdfDictionary;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfNumber;
import com.itextpdf.text.pdf.PdfObject;
import com.itextpdf.text.pdf.PdfString;

public class PdfSigLockDictionary
extends PdfDictionary {
    public PdfSigLockDictionary() {
        super(PdfName.SIGFIELDLOCK);
        this.put(PdfName.ACTION, LockAction.ALL.getValue());
    }

    public /* varargs */ PdfSigLockDictionary(LockAction object, LockPermissions lockPermissions, String ... arrstring) {
        super(PdfName.SIGFIELDLOCK);
        this.put(PdfName.ACTION, object.getValue());
        if (lockPermissions != null) {
            this.put(PdfName.P, lockPermissions.getValue());
        }
        object = new PdfArray();
        int n2 = arrstring.length;
        for (int i2 = 0; i2 < n2; ++i2) {
            object.add(new PdfString(arrstring[i2]));
        }
        this.put(PdfName.FIELDS, (PdfObject)object);
    }

    public /* varargs */ PdfSigLockDictionary(LockAction lockAction, String ... arrstring) {
        this(lockAction, (LockPermissions)null, arrstring);
    }

    public PdfSigLockDictionary(LockPermissions lockPermissions) {
        this();
        this.put(PdfName.P, lockPermissions.getValue());
    }

    public static enum LockAction {
        ALL(PdfName.ALL),
        INCLUDE(PdfName.INCLUDE),
        EXCLUDE(PdfName.EXCLUDE);
        
        private PdfName name;

        private LockAction(PdfName pdfName) {
            this.name = pdfName;
        }

        public PdfName getValue() {
            return this.name;
        }
    }

    public static enum LockPermissions {
        NO_CHANGES_ALLOWED(1),
        FORM_FILLING(2),
        FORM_FILLING_AND_ANNOTATION(3);
        
        private PdfNumber number;

        private LockPermissions(int n3) {
            this.number = new PdfNumber(n3);
        }

        public PdfNumber getValue() {
            return this.number;
        }
    }

}

