/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.parser;

import com.itextpdf.text.pdf.PdfDictionary;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.parser.ContentByteUtils;
import com.itextpdf.text.pdf.parser.ContentOperator;
import com.itextpdf.text.pdf.parser.PdfContentStreamProcessor;
import com.itextpdf.text.pdf.parser.RenderListener;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public class PdfReaderContentParser {
    private final PdfReader reader;

    public PdfReaderContentParser(PdfReader pdfReader) {
        this.reader = pdfReader;
    }

    public <E extends RenderListener> E processContent(int n2, E e2) {
        return this.processContent(n2, e2, new HashMap<String, ContentOperator>());
    }

    public <E extends RenderListener> E processContent(int n2, E e2, Map<String, ContentOperator> object) {
        PdfDictionary pdfDictionary = this.reader.getPageN(n2).getAsDict(PdfName.RESOURCES);
        PdfContentStreamProcessor pdfContentStreamProcessor = new PdfContentStreamProcessor((RenderListener)e2);
        for (Map.Entry entry : object.entrySet()) {
            pdfContentStreamProcessor.registerContentOperator((String)entry.getKey(), (ContentOperator)entry.getValue());
        }
        pdfContentStreamProcessor.processContent(ContentByteUtils.getContentBytesForPage(this.reader, n2), pdfDictionary);
        return e2;
    }
}

