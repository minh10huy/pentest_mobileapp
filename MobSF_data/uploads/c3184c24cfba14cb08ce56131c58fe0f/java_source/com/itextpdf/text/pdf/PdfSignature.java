/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf;

import com.itextpdf.text.pdf.PdfArray;
import com.itextpdf.text.pdf.PdfDate;
import com.itextpdf.text.pdf.PdfDictionary;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfNumber;
import com.itextpdf.text.pdf.PdfObject;
import com.itextpdf.text.pdf.PdfString;
import com.itextpdf.text.pdf.security.PdfSignatureBuildProperties;

public class PdfSignature
extends PdfDictionary {
    public PdfSignature(PdfName pdfName, PdfName pdfName2) {
        super(PdfName.SIG);
        this.put(PdfName.FILTER, pdfName);
        this.put(PdfName.SUBFILTER, pdfName2);
    }

    PdfSignatureBuildProperties getPdfSignatureBuildProperties() {
        PdfSignatureBuildProperties pdfSignatureBuildProperties;
        PdfSignatureBuildProperties pdfSignatureBuildProperties2 = pdfSignatureBuildProperties = (PdfSignatureBuildProperties)this.getAsDict(PdfName.PROP_BUILD);
        if (pdfSignatureBuildProperties == null) {
            pdfSignatureBuildProperties2 = new PdfSignatureBuildProperties();
            this.put(PdfName.PROP_BUILD, pdfSignatureBuildProperties2);
        }
        return pdfSignatureBuildProperties2;
    }

    public void setByteRange(int[] arrn) {
        PdfArray pdfArray = new PdfArray();
        for (int i2 = 0; i2 < arrn.length; ++i2) {
            pdfArray.add(new PdfNumber(arrn[i2]));
        }
        this.put(PdfName.BYTERANGE, pdfArray);
    }

    public void setCert(byte[] arrby) {
        this.put(PdfName.CERT, new PdfString(arrby));
    }

    public void setContact(String string2) {
        this.put(PdfName.CONTACTINFO, new PdfString(string2, "UnicodeBig"));
    }

    public void setContents(byte[] arrby) {
        this.put(PdfName.CONTENTS, new PdfString(arrby).setHexWriting(true));
    }

    public void setDate(PdfDate pdfDate) {
        this.put(PdfName.M, pdfDate);
    }

    public void setLocation(String string2) {
        this.put(PdfName.LOCATION, new PdfString(string2, "UnicodeBig"));
    }

    public void setName(String string2) {
        this.put(PdfName.NAME, new PdfString(string2, "UnicodeBig"));
    }

    public void setReason(String string2) {
        this.put(PdfName.REASON, new PdfString(string2, "UnicodeBig"));
    }

    public void setSignatureCreator(String string2) {
        if (string2 != null) {
            this.getPdfSignatureBuildProperties().setSignatureCreator(string2);
        }
    }
}

