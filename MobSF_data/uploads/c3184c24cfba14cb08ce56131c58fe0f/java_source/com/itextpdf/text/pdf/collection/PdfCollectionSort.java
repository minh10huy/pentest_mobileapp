/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.collection;

import com.itextpdf.text.error_messages.MessageLocalization;
import com.itextpdf.text.pdf.PdfArray;
import com.itextpdf.text.pdf.PdfBoolean;
import com.itextpdf.text.pdf.PdfDictionary;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfObject;

public class PdfCollectionSort
extends PdfDictionary {
    public PdfCollectionSort(String string2) {
        super(PdfName.COLLECTIONSORT);
        this.put(PdfName.S, new PdfName(string2));
    }

    public PdfCollectionSort(String[] arrstring) {
        super(PdfName.COLLECTIONSORT);
        PdfArray pdfArray = new PdfArray();
        for (int i2 = 0; i2 < arrstring.length; ++i2) {
            pdfArray.add(new PdfName(arrstring[i2]));
        }
        this.put(PdfName.S, pdfArray);
    }

    public void setSortOrder(boolean bl2) {
        if (this.get(PdfName.S) instanceof PdfName) {
            this.put(PdfName.A, new PdfBoolean(bl2));
            return;
        }
        throw new IllegalArgumentException(MessageLocalization.getComposedMessage("you.have.to.define.a.boolean.array.for.this.collection.sort.dictionary", new Object[0]));
    }

    public void setSortOrder(boolean[] arrbl) {
        PdfObject pdfObject = this.get(PdfName.S);
        boolean bl2 = pdfObject instanceof PdfArray;
        if (bl2) {
            if (((PdfArray)pdfObject).size() == arrbl.length) {
                pdfObject = new PdfArray();
                for (int i2 = 0; i2 < arrbl.length; ++i2) {
                    pdfObject.add(new PdfBoolean(arrbl[i2]));
                }
                this.put(PdfName.A, pdfObject);
                return;
            }
            throw new IllegalArgumentException(MessageLocalization.getComposedMessage("the.number.of.booleans.in.this.array.doesn.t.correspond.with.the.number.of.fields", new Object[0]));
        }
        throw new IllegalArgumentException(MessageLocalization.getComposedMessage("you.need.a.single.boolean.for.this.collection.sort.dictionary", new Object[0]));
    }
}

