/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.internal;

import com.itextpdf.text.pdf.PdfArray;
import com.itextpdf.text.pdf.PdfBoolean;
import com.itextpdf.text.pdf.PdfDictionary;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfNumber;
import com.itextpdf.text.pdf.PdfObject;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.interfaces.PdfViewerPreferences;

public class PdfViewerPreferencesImp
implements PdfViewerPreferences {
    public static final PdfName[] DIRECTION_PREFERENCES;
    public static final PdfName[] DUPLEX_PREFERENCES;
    public static final PdfName[] NONFULLSCREENPAGEMODE_PREFERENCES;
    public static final PdfName[] PAGE_BOUNDARIES;
    public static final PdfName[] PRINTSCALING_PREFERENCES;
    public static final PdfName[] VIEWER_PREFERENCES;
    private static final int viewerPreferencesMask = 16773120;
    private int pageLayoutAndMode = 0;
    private PdfDictionary viewerPreferences = new PdfDictionary();

    static {
        VIEWER_PREFERENCES = new PdfName[]{PdfName.HIDETOOLBAR, PdfName.HIDEMENUBAR, PdfName.HIDEWINDOWUI, PdfName.FITWINDOW, PdfName.CENTERWINDOW, PdfName.DISPLAYDOCTITLE, PdfName.NONFULLSCREENPAGEMODE, PdfName.DIRECTION, PdfName.VIEWAREA, PdfName.VIEWCLIP, PdfName.PRINTAREA, PdfName.PRINTCLIP, PdfName.PRINTSCALING, PdfName.DUPLEX, PdfName.PICKTRAYBYPDFSIZE, PdfName.PRINTPAGERANGE, PdfName.NUMCOPIES};
        NONFULLSCREENPAGEMODE_PREFERENCES = new PdfName[]{PdfName.USENONE, PdfName.USEOUTLINES, PdfName.USETHUMBS, PdfName.USEOC};
        DIRECTION_PREFERENCES = new PdfName[]{PdfName.L2R, PdfName.R2L};
        PAGE_BOUNDARIES = new PdfName[]{PdfName.MEDIABOX, PdfName.CROPBOX, PdfName.BLEEDBOX, PdfName.TRIMBOX, PdfName.ARTBOX};
        PRINTSCALING_PREFERENCES = new PdfName[]{PdfName.APPDEFAULT, PdfName.NONE};
        DUPLEX_PREFERENCES = new PdfName[]{PdfName.SIMPLEX, PdfName.DUPLEXFLIPSHORTEDGE, PdfName.DUPLEXFLIPLONGEDGE};
    }

    private int getIndex(PdfName pdfName) {
        for (int i2 = 0; i2 < VIEWER_PREFERENCES.length; ++i2) {
            if (!VIEWER_PREFERENCES[i2].equals(pdfName)) continue;
            return i2;
        }
        return -1;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    public static PdfViewerPreferencesImp getViewerPreferences(PdfDictionary var0) {
        var4_1 = new PdfViewerPreferencesImp();
        var5_2 = PdfReader.getPdfObjectRelease(var0.get(PdfName.PAGELAYOUT));
        var3_3 = 0;
        if (var5_2 == null || !var5_2.isName()) ** GOTO lbl-1000
        if ((var5_2 = (PdfName)var5_2).equals(PdfName.SINGLEPAGE)) {
            var1_4 = 1;
        } else if (var5_2.equals(PdfName.ONECOLUMN)) {
            var1_4 = 2;
        } else if (var5_2.equals(PdfName.TWOCOLUMNLEFT)) {
            var1_4 = 4;
        } else if (var5_2.equals(PdfName.TWOCOLUMNRIGHT)) {
            var1_4 = 8;
        } else if (var5_2.equals(PdfName.TWOPAGELEFT)) {
            var1_4 = 16;
        } else if (var5_2.equals(PdfName.TWOPAGERIGHT)) {
            var1_4 = 32;
        } else lbl-1000: // 2 sources:
        {
            var1_4 = 0;
        }
        var5_2 = PdfReader.getPdfObjectRelease(var0.get(PdfName.PAGEMODE));
        var2_5 = var1_4;
        if (var5_2 != null) {
            var2_5 = var1_4;
            if (var5_2.isName()) {
                if ((var5_2 = (PdfName)var5_2).equals(PdfName.USENONE)) {
                    var2_5 = var1_4 | 64;
                } else if (var5_2.equals(PdfName.USEOUTLINES)) {
                    var2_5 = var1_4 | 128;
                } else if (var5_2.equals(PdfName.USETHUMBS)) {
                    var2_5 = var1_4 | 256;
                } else if (var5_2.equals(PdfName.FULLSCREEN)) {
                    var2_5 = var1_4 | 512;
                } else if (var5_2.equals(PdfName.USEOC)) {
                    var2_5 = var1_4 | 1024;
                } else {
                    var2_5 = var1_4;
                    if (var5_2.equals(PdfName.USEATTACHMENTS)) {
                        var2_5 = var1_4 | 2048;
                    }
                }
            }
        }
        var4_1.setViewerPreferences(var2_5);
        var0 = PdfReader.getPdfObjectRelease(var0.get(PdfName.VIEWERPREFERENCES));
        if (var0 == null) return var4_1;
        if (var0.isDictionary() == false) return var4_1;
        var0 = (PdfDictionary)var0;
        var1_4 = var3_3;
        while (var1_4 < PdfViewerPreferencesImp.VIEWER_PREFERENCES.length) {
            var5_2 = PdfReader.getPdfObjectRelease(var0.get(PdfViewerPreferencesImp.VIEWER_PREFERENCES[var1_4]));
            var4_1.addViewerPreference(PdfViewerPreferencesImp.VIEWER_PREFERENCES[var1_4], var5_2);
            ++var1_4;
        }
        return var4_1;
    }

    private boolean isPossibleValue(PdfName pdfName, PdfName[] arrpdfName) {
        for (int i2 = 0; i2 < arrpdfName.length; ++i2) {
            if (!arrpdfName[i2].equals(pdfName)) continue;
            return true;
        }
        return false;
    }

    /*
     * Enabled aggressive block sorting
     */
    public void addToCatalog(PdfDictionary pdfDictionary) {
        block20 : {
            PdfName pdfName;
            PdfName pdfName2;
            block15 : {
                block19 : {
                    block18 : {
                        block17 : {
                            block16 : {
                                block14 : {
                                    block13 : {
                                        block8 : {
                                            block12 : {
                                                block11 : {
                                                    block10 : {
                                                        block9 : {
                                                            block7 : {
                                                                pdfDictionary.remove(PdfName.PAGELAYOUT);
                                                                if ((this.pageLayoutAndMode & 1) == 0) break block7;
                                                                pdfName2 = PdfName.PAGELAYOUT;
                                                                pdfName = PdfName.SINGLEPAGE;
                                                                break block8;
                                                            }
                                                            if ((this.pageLayoutAndMode & 2) == 0) break block9;
                                                            pdfName2 = PdfName.PAGELAYOUT;
                                                            pdfName = PdfName.ONECOLUMN;
                                                            break block8;
                                                        }
                                                        if ((this.pageLayoutAndMode & 4) == 0) break block10;
                                                        pdfName2 = PdfName.PAGELAYOUT;
                                                        pdfName = PdfName.TWOCOLUMNLEFT;
                                                        break block8;
                                                    }
                                                    if ((this.pageLayoutAndMode & 8) == 0) break block11;
                                                    pdfName2 = PdfName.PAGELAYOUT;
                                                    pdfName = PdfName.TWOCOLUMNRIGHT;
                                                    break block8;
                                                }
                                                if ((this.pageLayoutAndMode & 16) == 0) break block12;
                                                pdfName2 = PdfName.PAGELAYOUT;
                                                pdfName = PdfName.TWOPAGELEFT;
                                                break block8;
                                            }
                                            if ((this.pageLayoutAndMode & 32) == 0) break block13;
                                            pdfName2 = PdfName.PAGELAYOUT;
                                            pdfName = PdfName.TWOPAGERIGHT;
                                        }
                                        pdfDictionary.put(pdfName2, pdfName);
                                    }
                                    pdfDictionary.remove(PdfName.PAGEMODE);
                                    if ((this.pageLayoutAndMode & 64) == 0) break block14;
                                    pdfName2 = PdfName.PAGEMODE;
                                    pdfName = PdfName.USENONE;
                                    break block15;
                                }
                                if ((this.pageLayoutAndMode & 128) == 0) break block16;
                                pdfName2 = PdfName.PAGEMODE;
                                pdfName = PdfName.USEOUTLINES;
                                break block15;
                            }
                            if ((this.pageLayoutAndMode & 256) == 0) break block17;
                            pdfName2 = PdfName.PAGEMODE;
                            pdfName = PdfName.USETHUMBS;
                            break block15;
                        }
                        if ((this.pageLayoutAndMode & 512) == 0) break block18;
                        pdfName2 = PdfName.PAGEMODE;
                        pdfName = PdfName.FULLSCREEN;
                        break block15;
                    }
                    if ((this.pageLayoutAndMode & 1024) == 0) break block19;
                    pdfName2 = PdfName.PAGEMODE;
                    pdfName = PdfName.USEOC;
                    break block15;
                }
                if ((this.pageLayoutAndMode & 2048) == 0) break block20;
                pdfName2 = PdfName.PAGEMODE;
                pdfName = PdfName.USEATTACHMENTS;
            }
            pdfDictionary.put(pdfName2, pdfName);
        }
        pdfDictionary.remove(PdfName.VIEWERPREFERENCES);
        if (this.viewerPreferences.size() > 0) {
            pdfDictionary.put(PdfName.VIEWERPREFERENCES, this.viewerPreferences);
        }
    }

    @Override
    public void addViewerPreference(PdfName pdfName, PdfObject pdfObject) {
        block17 : {
            switch (this.getIndex(pdfName)) {
                default: {
                    return;
                }
                case 16: {
                    if (pdfObject instanceof PdfNumber) {
                        break;
                    }
                    break block17;
                }
                case 15: {
                    if (pdfObject instanceof PdfArray) {
                        break;
                    }
                    break block17;
                }
                case 13: {
                    if (pdfObject instanceof PdfName && this.isPossibleValue((PdfName)pdfObject, DUPLEX_PREFERENCES)) {
                        break;
                    }
                    break block17;
                }
                case 12: {
                    if (pdfObject instanceof PdfName && this.isPossibleValue((PdfName)pdfObject, PRINTSCALING_PREFERENCES)) {
                        break;
                    }
                    break block17;
                }
                case 8: 
                case 9: 
                case 10: 
                case 11: {
                    if (pdfObject instanceof PdfName && this.isPossibleValue((PdfName)pdfObject, PAGE_BOUNDARIES)) {
                        break;
                    }
                    break block17;
                }
                case 7: {
                    if (pdfObject instanceof PdfName && this.isPossibleValue((PdfName)pdfObject, DIRECTION_PREFERENCES)) {
                        break;
                    }
                    break block17;
                }
                case 6: {
                    if (pdfObject instanceof PdfName && this.isPossibleValue((PdfName)pdfObject, NONFULLSCREENPAGEMODE_PREFERENCES)) {
                        break;
                    }
                    break block17;
                }
                case 0: 
                case 1: 
                case 2: 
                case 3: 
                case 4: 
                case 5: 
                case 14: {
                    if (!(pdfObject instanceof PdfBoolean)) break block17;
                }
            }
            this.viewerPreferences.put(pdfName, pdfObject);
        }
    }

    public int getPageLayoutAndMode() {
        return this.pageLayoutAndMode;
    }

    public PdfDictionary getViewerPreferences() {
        return this.viewerPreferences;
    }

    /*
     * Enabled aggressive block sorting
     */
    @Override
    public void setViewerPreferences(int n2) {
        block13 : {
            block21 : {
                PdfName pdfName;
                PdfDictionary pdfDictionary;
                PdfName pdfName2;
                block20 : {
                    block19 : {
                        block18 : {
                            block15 : {
                                block17 : {
                                    block16 : {
                                        block14 : {
                                            this.pageLayoutAndMode |= n2;
                                            if ((16773120 & n2) == 0) break block13;
                                            this.pageLayoutAndMode = -16773121 & this.pageLayoutAndMode;
                                            if ((n2 & 4096) != 0) {
                                                this.viewerPreferences.put(PdfName.HIDETOOLBAR, PdfBoolean.PDFTRUE);
                                            }
                                            if ((n2 & 8192) != 0) {
                                                this.viewerPreferences.put(PdfName.HIDEMENUBAR, PdfBoolean.PDFTRUE);
                                            }
                                            if ((n2 & 16384) != 0) {
                                                this.viewerPreferences.put(PdfName.HIDEWINDOWUI, PdfBoolean.PDFTRUE);
                                            }
                                            if ((32768 & n2) != 0) {
                                                this.viewerPreferences.put(PdfName.FITWINDOW, PdfBoolean.PDFTRUE);
                                            }
                                            if ((65536 & n2) != 0) {
                                                this.viewerPreferences.put(PdfName.CENTERWINDOW, PdfBoolean.PDFTRUE);
                                            }
                                            if ((131072 & n2) != 0) {
                                                this.viewerPreferences.put(PdfName.DISPLAYDOCTITLE, PdfBoolean.PDFTRUE);
                                            }
                                            if ((262144 & n2) == 0) break block14;
                                            pdfDictionary = this.viewerPreferences;
                                            pdfName = PdfName.NONFULLSCREENPAGEMODE;
                                            pdfName2 = PdfName.USENONE;
                                            break block15;
                                        }
                                        if ((524288 & n2) == 0) break block16;
                                        pdfDictionary = this.viewerPreferences;
                                        pdfName = PdfName.NONFULLSCREENPAGEMODE;
                                        pdfName2 = PdfName.USEOUTLINES;
                                        break block15;
                                    }
                                    if ((1048576 & n2) == 0) break block17;
                                    pdfDictionary = this.viewerPreferences;
                                    pdfName = PdfName.NONFULLSCREENPAGEMODE;
                                    pdfName2 = PdfName.USETHUMBS;
                                    break block15;
                                }
                                if ((2097152 & n2) == 0) break block18;
                                pdfDictionary = this.viewerPreferences;
                                pdfName = PdfName.NONFULLSCREENPAGEMODE;
                                pdfName2 = PdfName.USEOC;
                            }
                            pdfDictionary.put(pdfName, pdfName2);
                        }
                        if ((4194304 & n2) == 0) break block19;
                        pdfDictionary = this.viewerPreferences;
                        pdfName = PdfName.DIRECTION;
                        pdfName2 = PdfName.L2R;
                        break block20;
                    }
                    if ((8388608 & n2) == 0) break block21;
                    pdfDictionary = this.viewerPreferences;
                    pdfName = PdfName.DIRECTION;
                    pdfName2 = PdfName.R2L;
                }
                pdfDictionary.put(pdfName, pdfName2);
            }
            if ((n2 & 16777216) != 0) {
                this.viewerPreferences.put(PdfName.PRINTSCALING, PdfName.NONE);
            }
        }
    }
}

