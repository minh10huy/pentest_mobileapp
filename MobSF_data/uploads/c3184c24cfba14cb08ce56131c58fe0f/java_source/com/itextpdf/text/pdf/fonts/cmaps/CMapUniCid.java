/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.fonts.cmaps;

import com.itextpdf.text.Utilities;
import com.itextpdf.text.pdf.IntHashtable;
import com.itextpdf.text.pdf.PdfNumber;
import com.itextpdf.text.pdf.PdfObject;
import com.itextpdf.text.pdf.PdfString;
import com.itextpdf.text.pdf.fonts.cmaps.AbstractCMap;
import com.itextpdf.text.pdf.fonts.cmaps.CMapToUnicode;

public class CMapUniCid
extends AbstractCMap {
    private IntHashtable map = new IntHashtable(65537);

    @Override
    void addChar(PdfString object, PdfObject pdfObject) {
        if (!(pdfObject instanceof PdfNumber)) {
            return;
        }
        int n2 = Utilities.isSurrogatePair((String)(object = this.decodeStringToUnicode((PdfString)object)), 0) ? Utilities.convertToUtf32((String)object, 0) : (int)object.charAt(0);
        this.map.put(n2, ((PdfNumber)pdfObject).intValue());
    }

    public CMapToUnicode exportToUnicode() {
        CMapToUnicode cMapToUnicode = new CMapToUnicode();
        for (int n2 : this.map.toOrderedKeys()) {
            cMapToUnicode.addChar(this.map.get(n2), Utilities.convertFromUtf32(n2));
        }
        return cMapToUnicode;
    }

    public int lookup(int n2) {
        return this.map.get(n2);
    }
}

