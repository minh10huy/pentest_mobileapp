/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.collection;

import com.itextpdf.text.error_messages.MessageLocalization;
import com.itextpdf.text.pdf.PdfDate;
import com.itextpdf.text.pdf.PdfDictionary;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfNumber;
import com.itextpdf.text.pdf.PdfObject;
import com.itextpdf.text.pdf.PdfString;
import com.itextpdf.text.pdf.collection.PdfCollectionField;
import com.itextpdf.text.pdf.collection.PdfCollectionSchema;
import java.util.Calendar;

public class PdfCollectionItem
extends PdfDictionary {
    PdfCollectionSchema schema;

    public PdfCollectionItem(PdfCollectionSchema pdfCollectionSchema) {
        super(PdfName.COLLECTIONITEM);
        this.schema = pdfCollectionSchema;
    }

    public void addItem(String string2, double d2) {
        this.addItem(string2, new PdfNumber(d2));
    }

    public void addItem(String string2, float f2) {
        this.addItem(string2, new PdfNumber(f2));
    }

    public void addItem(String string2, int n2) {
        this.addItem(string2, new PdfNumber(n2));
    }

    public void addItem(String object, PdfDate pdfDate) {
        object = new PdfName((String)object);
        if (((PdfCollectionField)this.schema.get((PdfName)object)).fieldType == 1) {
            this.put((PdfName)object, pdfDate);
        }
    }

    public void addItem(String object, PdfNumber pdfNumber) {
        object = new PdfName((String)object);
        if (((PdfCollectionField)this.schema.get((PdfName)object)).fieldType == 2) {
            this.put((PdfName)object, pdfNumber);
        }
    }

    public void addItem(String object, PdfString pdfString) {
        object = new PdfName((String)object);
        if (((PdfCollectionField)this.schema.get((PdfName)object)).fieldType == 0) {
            this.put((PdfName)object, pdfString);
        }
    }

    public void addItem(String object, String string2) {
        object = new PdfName((String)object);
        this.put((PdfName)object, ((PdfCollectionField)this.schema.get((PdfName)object)).getValue(string2));
    }

    public void addItem(String string2, Calendar calendar) {
        this.addItem(string2, new PdfDate(calendar));
    }

    public void setPrefix(String object, String string2) {
        PdfObject pdfObject = this.get((PdfName)(object = new PdfName((String)object)));
        if (pdfObject != null) {
            PdfDictionary pdfDictionary = new PdfDictionary(PdfName.COLLECTIONSUBITEM);
            pdfDictionary.put(PdfName.D, pdfObject);
            pdfDictionary.put(PdfName.P, new PdfString(string2, "UnicodeBig"));
            this.put((PdfName)object, pdfDictionary);
            return;
        }
        throw new IllegalArgumentException(MessageLocalization.getComposedMessage("you.must.set.a.value.before.adding.a.prefix", new Object[0]));
    }
}

