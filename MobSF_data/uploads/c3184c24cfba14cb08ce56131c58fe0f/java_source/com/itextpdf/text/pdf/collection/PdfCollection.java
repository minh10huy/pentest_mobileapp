/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.collection;

import com.itextpdf.text.pdf.PdfDictionary;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfObject;
import com.itextpdf.text.pdf.PdfString;
import com.itextpdf.text.pdf.collection.PdfCollectionSchema;
import com.itextpdf.text.pdf.collection.PdfCollectionSort;

public class PdfCollection
extends PdfDictionary {
    public static final int CUSTOM = 3;
    public static final int DETAILS = 0;
    public static final int HIDDEN = 2;
    public static final int TILE = 1;

    /*
     * Enabled aggressive block sorting
     */
    public PdfCollection(int n2) {
        PdfName pdfName;
        PdfName pdfName2;
        super(PdfName.COLLECTION);
        switch (n2) {
            default: {
                pdfName2 = PdfName.VIEW;
                pdfName = PdfName.D;
                break;
            }
            case 3: {
                pdfName2 = PdfName.VIEW;
                pdfName = PdfName.C;
                break;
            }
            case 2: {
                pdfName2 = PdfName.VIEW;
                pdfName = PdfName.H;
                break;
            }
            case 1: {
                pdfName2 = PdfName.VIEW;
                pdfName = PdfName.T;
            }
        }
        this.put(pdfName2, pdfName);
    }

    public PdfCollectionSchema getSchema() {
        return (PdfCollectionSchema)this.get(PdfName.SCHEMA);
    }

    public void setInitialDocument(String string2) {
        this.put(PdfName.D, new PdfString(string2, null));
    }

    public void setSchema(PdfCollectionSchema pdfCollectionSchema) {
        this.put(PdfName.SCHEMA, pdfCollectionSchema);
    }

    public void setSort(PdfCollectionSort pdfCollectionSort) {
        this.put(PdfName.SORT, pdfCollectionSort);
    }
}

