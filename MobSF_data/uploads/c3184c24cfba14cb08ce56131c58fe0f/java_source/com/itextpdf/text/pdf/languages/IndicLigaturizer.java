/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.languages;

import com.itextpdf.text.pdf.languages.LanguageProcessor;

public abstract class IndicLigaturizer
implements LanguageProcessor {
    public static final int HALANTA = 10;
    public static final int LETTER_A = 6;
    public static final int LETTER_AU = 7;
    public static final int LETTER_HA = 9;
    public static final int LETTER_KA = 8;
    public static final int MATRA_AA = 0;
    public static final int MATRA_AI = 3;
    public static final int MATRA_E = 2;
    public static final int MATRA_HLR = 4;
    public static final int MATRA_HLRR = 5;
    public static final int MATRA_I = 1;
    protected char[] langTable;

    private static void swap(StringBuilder stringBuilder, int n2, int n3) {
        char c2 = stringBuilder.charAt(n2);
        stringBuilder.setCharAt(n2, stringBuilder.charAt(n3));
        stringBuilder.setCharAt(n3, c2);
    }

    protected boolean IsSwaraLetter(char c2) {
        if (c2 >= this.langTable[6] && c2 <= this.langTable[7]) {
            return true;
        }
        return false;
    }

    protected boolean IsSwaraMatra(char c2) {
        char[] arrc = this.langTable;
        boolean bl2 = false;
        if (c2 >= arrc[0] && c2 <= this.langTable[3] || c2 == this.langTable[4] || c2 == this.langTable[5]) {
            bl2 = true;
        }
        return bl2;
    }

    protected boolean IsVyanjana(char c2) {
        if (c2 >= this.langTable[8] && c2 <= this.langTable[9]) {
            return true;
        }
        return false;
    }

    @Override
    public boolean isRTL() {
        return false;
    }

    @Override
    public String process(String string2) {
        if (string2 != null && string2.length() != 0) {
            StringBuilder stringBuilder = new StringBuilder();
            for (int i2 = 0; i2 < string2.length(); ++i2) {
                int n2;
                char c2 = string2.charAt(i2);
                if (!this.IsVyanjana(c2) && !this.IsSwaraLetter(c2) && this.IsSwaraMatra(c2) && (n2 = stringBuilder.length() - 1) >= 0) {
                    if (stringBuilder.charAt(n2) == this.langTable[10]) {
                        stringBuilder.deleteCharAt(n2);
                    }
                    stringBuilder.append(c2);
                    n2 = stringBuilder.length() - 2;
                    if (c2 != this.langTable[1] || n2 < 0) continue;
                    IndicLigaturizer.swap(stringBuilder, n2, stringBuilder.length() - 1);
                    continue;
                }
                stringBuilder.append(c2);
            }
            return stringBuilder.toString();
        }
        return "";
    }
}

