/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.parser.clipper;

import com.itextpdf.text.pdf.parser.clipper.Path;
import com.itextpdf.text.pdf.parser.clipper.Paths;
import com.itextpdf.text.pdf.parser.clipper.Point;
import com.itextpdf.text.pdf.parser.clipper.PolyTree;

public interface Clipper {
    public static final int PRESERVE_COLINEAR = 4;
    public static final int REVERSE_SOLUTION = 1;
    public static final int STRICTLY_SIMPLE = 2;

    public boolean addPath(Path var1, PolyType var2, boolean var3);

    public boolean addPaths(Paths var1, PolyType var2, boolean var3);

    public void clear();

    public boolean execute(ClipType var1, Paths var2);

    public boolean execute(ClipType var1, Paths var2, PolyFillType var3, PolyFillType var4);

    public boolean execute(ClipType var1, PolyTree var2);

    public boolean execute(ClipType var1, PolyTree var2, PolyFillType var3, PolyFillType var4);

    public static enum ClipType {
        INTERSECTION,
        UNION,
        DIFFERENCE,
        XOR;
        

        private ClipType() {
        }
    }

    public static enum Direction {
        RIGHT_TO_LEFT,
        LEFT_TO_RIGHT;
        

        private Direction() {
        }
    }

    public static enum EndType {
        CLOSED_POLYGON,
        CLOSED_LINE,
        OPEN_BUTT,
        OPEN_SQUARE,
        OPEN_ROUND;
        

        private EndType() {
        }
    }

    public static enum JoinType {
        BEVEL,
        ROUND,
        MITER;
        

        private JoinType() {
        }
    }

    public static enum PolyFillType {
        EVEN_ODD,
        NON_ZERO,
        POSITIVE,
        NEGATIVE;
        

        private PolyFillType() {
        }
    }

    public static enum PolyType {
        SUBJECT,
        CLIP;
        

        private PolyType() {
        }
    }

    public static interface ZFillCallback {
        public void zFill(Point.LongPoint var1, Point.LongPoint var2, Point.LongPoint var3, Point.LongPoint var4, Point.LongPoint var5);
    }

}

