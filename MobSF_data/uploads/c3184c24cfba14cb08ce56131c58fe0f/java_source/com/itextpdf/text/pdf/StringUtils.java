/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf;

import com.itextpdf.text.DocWriter;
import com.itextpdf.text.pdf.ByteBuffer;

public class StringUtils {
    private static final byte[] b;
    private static final byte[] f;
    private static final byte[] n;
    private static final byte[] r;
    private static final byte[] t;

    static {
        r = DocWriter.getISOBytes("\\r");
        n = DocWriter.getISOBytes("\\n");
        t = DocWriter.getISOBytes("\\t");
        b = DocWriter.getISOBytes("\\b");
        f = DocWriter.getISOBytes("\\f");
    }

    private StringUtils() {
    }

    public static byte[] convertCharsToBytes(char[] arrc) {
        byte[] arrby = new byte[arrc.length * 2];
        for (int i2 = 0; i2 < arrc.length; ++i2) {
            int n2 = i2 * 2;
            arrby[n2] = (byte)(arrc[i2] / 256);
            arrby[n2 + 1] = (byte)(arrc[i2] % 256);
        }
        return arrby;
    }

    public static void escapeString(byte[] arrby, ByteBuffer byteBuffer) {
        byteBuffer.append_i(40);
        block8 : for (int i2 = 0; i2 < arrby.length; ++i2) {
            byte[] arrby2;
            byte by2 = arrby[i2];
            switch (by2) {
                default: {
                    byteBuffer.append_i(by2);
                    continue block8;
                }
                case 40: 
                case 41: 
                case 92: {
                    byteBuffer.append_i(92).append_i(by2);
                    continue block8;
                }
                case 13: {
                    arrby2 = r;
                    break;
                }
                case 12: {
                    arrby2 = f;
                    break;
                }
                case 10: {
                    arrby2 = n;
                    break;
                }
                case 9: {
                    arrby2 = t;
                    break;
                }
                case 8: {
                    arrby2 = b;
                }
            }
            byteBuffer.append(arrby2);
        }
        byteBuffer.append_i(41);
    }

    public static byte[] escapeString(byte[] arrby) {
        ByteBuffer byteBuffer = new ByteBuffer();
        StringUtils.escapeString(arrby, byteBuffer);
        return byteBuffer.toByteArray();
    }
}

