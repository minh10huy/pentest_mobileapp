/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf;

import com.itextpdf.text.Document;
import com.itextpdf.text.pdf.PdfCopy;
import com.itextpdf.text.pdf.PdfImportedPage;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfSmartCopy;
import java.io.OutputStream;

public class PdfConcatenate {
    protected PdfCopy copy;
    protected Document document = new Document();

    public PdfConcatenate(OutputStream outputStream) {
        this(outputStream, false);
    }

    /*
     * Enabled aggressive block sorting
     */
    public PdfConcatenate(OutputStream object, boolean bl2) {
        object = bl2 ? new PdfSmartCopy(this.document, (OutputStream)object) : new PdfCopy(this.document, (OutputStream)object);
        this.copy = object;
    }

    public int addPages(PdfReader pdfReader) {
        this.open();
        int n2 = pdfReader.getNumberOfPages();
        for (int i2 = 1; i2 <= n2; ++i2) {
            this.copy.addPage(this.copy.getImportedPage(pdfReader, i2));
        }
        this.copy.freeReader(pdfReader);
        pdfReader.close();
        return n2;
    }

    public void close() {
        this.document.close();
    }

    public PdfCopy getWriter() {
        return this.copy;
    }

    public void open() {
        if (!this.document.isOpen()) {
            this.document.open();
        }
    }
}

