/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf;

import com.itextpdf.text.pdf.PdfEncodings;
import com.itextpdf.text.pdf.PdfObject;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.OutputStream;

public class PdfIndirectReference
extends PdfObject {
    protected int generation;
    protected int number;

    protected PdfIndirectReference() {
        super(0);
        this.generation = 0;
    }

    protected PdfIndirectReference(int n2, int n3) {
        this(n2, n3, 0);
    }

    PdfIndirectReference(int n2, int n3, int n4) {
        StringBuffer stringBuffer = new StringBuffer();
        stringBuffer.append(n3);
        stringBuffer.append(" ");
        stringBuffer.append(n4);
        stringBuffer.append(" R");
        super(0, stringBuffer.toString());
        this.generation = 0;
        this.number = n3;
        this.generation = n4;
    }

    public int getGeneration() {
        return this.generation;
    }

    public int getNumber() {
        return this.number;
    }

    @Override
    public void toPdf(PdfWriter pdfWriter, OutputStream outputStream) {
        outputStream.write(PdfEncodings.convertToBytes(this.toString(), null));
    }

    @Override
    public String toString() {
        StringBuffer stringBuffer = new StringBuffer();
        stringBuffer.append(this.number);
        stringBuffer.append(" ");
        stringBuffer.append(this.generation);
        stringBuffer.append(" R");
        return stringBuffer.toString();
    }
}

