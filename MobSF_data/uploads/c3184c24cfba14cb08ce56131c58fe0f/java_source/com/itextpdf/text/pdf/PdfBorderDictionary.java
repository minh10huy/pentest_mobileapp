/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf;

import com.itextpdf.text.error_messages.MessageLocalization;
import com.itextpdf.text.pdf.PdfDashPattern;
import com.itextpdf.text.pdf.PdfDictionary;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfNumber;
import com.itextpdf.text.pdf.PdfObject;

public class PdfBorderDictionary
extends PdfDictionary {
    public static final int STYLE_BEVELED = 2;
    public static final int STYLE_DASHED = 1;
    public static final int STYLE_INSET = 3;
    public static final int STYLE_SOLID = 0;
    public static final int STYLE_UNDERLINE = 4;

    public PdfBorderDictionary(float f2, int n2) {
        this(f2, n2, null);
    }

    public PdfBorderDictionary(float f2, int n2, PdfDashPattern pdfObject) {
        PdfName pdfName;
        this.put(PdfName.W, new PdfNumber(f2));
        switch (n2) {
            default: {
                throw new IllegalArgumentException(MessageLocalization.getComposedMessage("invalid.border.style", new Object[0]));
            }
            case 4: {
                pdfObject = PdfName.S;
                pdfName = PdfName.U;
                break;
            }
            case 3: {
                pdfObject = PdfName.S;
                pdfName = PdfName.I;
                break;
            }
            case 2: {
                pdfObject = PdfName.S;
                pdfName = PdfName.B;
                break;
            }
            case 1: {
                if (pdfObject != null) {
                    this.put(PdfName.D, pdfObject);
                }
                pdfObject = PdfName.S;
                pdfName = PdfName.D;
                break;
            }
            case 0: {
                pdfObject = PdfName.S;
                pdfName = PdfName.S;
            }
        }
        this.put((PdfName)pdfObject, pdfName);
    }
}

