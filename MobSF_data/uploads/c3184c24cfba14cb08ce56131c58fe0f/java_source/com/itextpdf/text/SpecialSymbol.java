/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Font;

public class SpecialSymbol {
    public static Chunk get(char c2, Font font) {
        char c3 = SpecialSymbol.getCorrespondingSymbol(c2);
        if (c3 == ' ') {
            return new Chunk(String.valueOf(c2), font);
        }
        return new Chunk(String.valueOf(c3), new Font(Font.FontFamily.SYMBOL, font.getSize(), font.getStyle(), font.getColor()));
    }

    public static char getCorrespondingSymbol(char c2) {
        switch (c2) {
            default: {
                switch (c2) {
                    default: {
                        switch (c2) {
                            default: {
                                return ' ';
                            }
                            case '\u03c9': {
                                return 'w';
                            }
                            case '\u03c8': {
                                return 'y';
                            }
                            case '\u03c7': {
                                return 'c';
                            }
                            case '\u03c6': {
                                return 'f';
                            }
                            case '\u03c5': {
                                return 'u';
                            }
                            case '\u03c4': {
                                return 't';
                            }
                            case '\u03c3': {
                                return 's';
                            }
                            case '\u03c2': {
                                return 'V';
                            }
                            case '\u03c1': {
                                return 'r';
                            }
                            case '\u03c0': {
                                return 'p';
                            }
                            case '\u03bf': {
                                return 'o';
                            }
                            case '\u03be': {
                                return 'x';
                            }
                            case '\u03bd': {
                                return 'n';
                            }
                            case '\u03bc': {
                                return 'm';
                            }
                            case '\u03bb': {
                                return 'l';
                            }
                            case '\u03ba': {
                                return 'k';
                            }
                            case '\u03b9': {
                                return 'i';
                            }
                            case '\u03b8': {
                                return 'q';
                            }
                            case '\u03b7': {
                                return 'h';
                            }
                            case '\u03b6': {
                                return 'z';
                            }
                            case '\u03b5': {
                                return 'e';
                            }
                            case '\u03b4': {
                                return 'd';
                            }
                            case '\u03b3': {
                                return 'g';
                            }
                            case '\u03b2': {
                                return 'b';
                            }
                            case '\u03b1': 
                        }
                        return 'a';
                    }
                    case '\u03a9': {
                        return 'W';
                    }
                    case '\u03a8': {
                        return 'Y';
                    }
                    case '\u03a7': {
                        return 'C';
                    }
                    case '\u03a6': {
                        return 'F';
                    }
                    case '\u03a5': {
                        return 'U';
                    }
                    case '\u03a4': {
                        return 'T';
                    }
                    case '\u03a3': 
                }
                return 'S';
            }
            case '\u03a1': {
                return 'R';
            }
            case '\u03a0': {
                return 'P';
            }
            case '\u039f': {
                return 'O';
            }
            case '\u039e': {
                return 'X';
            }
            case '\u039d': {
                return 'N';
            }
            case '\u039c': {
                return 'M';
            }
            case '\u039b': {
                return 'L';
            }
            case '\u039a': {
                return 'K';
            }
            case '\u0399': {
                return 'I';
            }
            case '\u0398': {
                return 'Q';
            }
            case '\u0397': {
                return 'H';
            }
            case '\u0396': {
                return 'Z';
            }
            case '\u0395': {
                return 'E';
            }
            case '\u0394': {
                return 'D';
            }
            case '\u0393': {
                return 'G';
            }
            case '\u0392': {
                return 'B';
            }
            case '\u0391': 
        }
        return 'A';
    }

    public static int index(String string2) {
        int n2 = string2.length();
        for (int i2 = 0; i2 < n2; ++i2) {
            if (SpecialSymbol.getCorrespondingSymbol(string2.charAt(i2)) == ' ') continue;
            return i2;
        }
        return -1;
    }
}

