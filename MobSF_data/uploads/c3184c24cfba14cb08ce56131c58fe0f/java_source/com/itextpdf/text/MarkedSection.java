/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.ElementListener;
import com.itextpdf.text.MarkedObject;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Section;
import com.itextpdf.text.api.Indentable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.Properties;

@Deprecated
public class MarkedSection
extends MarkedObject
implements Indentable {
    protected MarkedObject title = null;

    public MarkedSection(Section section) {
        if (section.title != null) {
            this.title = new MarkedObject(section.title);
            section.setTitle(null);
        }
        this.element = section;
    }

    public void add(int n2, Element element) {
        ((Section)this.element).add(n2, element);
    }

    public boolean add(Element element) {
        return ((Section)this.element).add(element);
    }

    public boolean addAll(Collection<? extends Element> collection) {
        return ((Section)this.element).addAll(collection);
    }

    public MarkedSection addSection() {
        return ((Section)this.element).addMarkedSection();
    }

    public MarkedSection addSection(float f2) {
        MarkedSection markedSection = ((Section)this.element).addMarkedSection();
        markedSection.setIndentation(f2);
        return markedSection;
    }

    public MarkedSection addSection(float f2, int n2) {
        MarkedSection markedSection = ((Section)this.element).addMarkedSection();
        markedSection.setIndentation(f2);
        markedSection.setNumberDepth(n2);
        return markedSection;
    }

    public MarkedSection addSection(int n2) {
        MarkedSection markedSection = ((Section)this.element).addMarkedSection();
        markedSection.setNumberDepth(n2);
        return markedSection;
    }

    @Override
    public float getIndentationLeft() {
        return ((Section)this.element).getIndentationLeft();
    }

    @Override
    public float getIndentationRight() {
        return ((Section)this.element).getIndentationRight();
    }

    public MarkedObject getTitle() {
        MarkedObject markedObject = new MarkedObject(Section.constructTitle((Paragraph)this.title.element, ((Section)this.element).numbers, ((Section)this.element).numberDepth, ((Section)this.element).numberStyle));
        markedObject.markupAttributes = this.title.markupAttributes;
        return markedObject;
    }

    public void newPage() {
        ((Section)this.element).newPage();
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Override
    public boolean process(ElementListener elementListener) {
        try {
            Iterator iterator = ((Section)this.element).iterator();
            while (iterator.hasNext()) {
                elementListener.add((Element)iterator.next());
            }
            return true;
        }
        catch (DocumentException documentException) {
            return false;
        }
    }

    public void setBookmarkOpen(boolean bl2) {
        ((Section)this.element).setBookmarkOpen(bl2);
    }

    public void setBookmarkTitle(String string2) {
        ((Section)this.element).setBookmarkTitle(string2);
    }

    public void setIndentation(float f2) {
        ((Section)this.element).setIndentation(f2);
    }

    @Override
    public void setIndentationLeft(float f2) {
        ((Section)this.element).setIndentationLeft(f2);
    }

    @Override
    public void setIndentationRight(float f2) {
        ((Section)this.element).setIndentationRight(f2);
    }

    public void setNumberDepth(int n2) {
        ((Section)this.element).setNumberDepth(n2);
    }

    public void setTitle(MarkedObject markedObject) {
        if (markedObject.element instanceof Paragraph) {
            this.title = markedObject;
        }
    }

    public void setTriggerNewPage(boolean bl2) {
        ((Section)this.element).setTriggerNewPage(bl2);
    }
}

