/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.io;

import com.itextpdf.text.io.RandomAccessSource;

public class WindowRandomAccessSource
implements RandomAccessSource {
    private final long length;
    private final long offset;
    private final RandomAccessSource source;

    public WindowRandomAccessSource(RandomAccessSource randomAccessSource, long l2) {
        this(randomAccessSource, l2, randomAccessSource.length() - l2);
    }

    public WindowRandomAccessSource(RandomAccessSource randomAccessSource, long l2, long l3) {
        this.source = randomAccessSource;
        this.offset = l2;
        this.length = l3;
    }

    @Override
    public void close() {
        this.source.close();
    }

    @Override
    public int get(long l2) {
        if (l2 >= this.length) {
            return -1;
        }
        return this.source.get(this.offset + l2);
    }

    @Override
    public int get(long l2, byte[] arrby, int n2, int n3) {
        if (l2 >= this.length) {
            return -1;
        }
        long l3 = Math.min((long)n3, this.length - l2);
        return this.source.get(this.offset + l2, arrby, n2, (int)l3);
    }

    @Override
    public long length() {
        return this.length;
    }
}

