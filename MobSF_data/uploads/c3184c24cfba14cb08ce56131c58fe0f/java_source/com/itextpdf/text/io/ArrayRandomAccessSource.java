/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.io;

import com.itextpdf.text.io.RandomAccessSource;

class ArrayRandomAccessSource
implements RandomAccessSource {
    private byte[] array;

    public ArrayRandomAccessSource(byte[] arrby) {
        if (arrby != null) {
            this.array = arrby;
            return;
        }
        throw new NullPointerException();
    }

    @Override
    public void close() {
        this.array = null;
    }

    @Override
    public int get(long l2) {
        if (l2 >= (long)this.array.length) {
            return -1;
        }
        return this.array[(int)l2] & 255;
    }

    @Override
    public int get(long l2, byte[] arrby, int n2, int n3) {
        if (this.array != null) {
            if (l2 >= (long)this.array.length) {
                return -1;
            }
            int n4 = n3;
            if ((long)n3 + l2 > (long)this.array.length) {
                n4 = (int)((long)this.array.length - l2);
            }
            System.arraycopy(this.array, (int)l2, arrby, n2, n4);
            return n4;
        }
        throw new IllegalStateException("Already closed");
    }

    @Override
    public long length() {
        return this.array.length;
    }
}

