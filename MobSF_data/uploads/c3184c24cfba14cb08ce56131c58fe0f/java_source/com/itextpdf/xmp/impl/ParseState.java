/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.xmp.impl;

import com.itextpdf.xmp.XMPException;

class ParseState {
    private int pos = 0;
    private String str;

    public ParseState(String string2) {
        this.str = string2;
    }

    public char ch() {
        if (this.pos < this.str.length()) {
            return this.str.charAt(this.pos);
        }
        return '\u0000';
    }

    public char ch(int n2) {
        if (n2 < this.str.length()) {
            return this.str.charAt(n2);
        }
        return '\u0000';
    }

    public int gatherInt(String string2, int n2) {
        char c2 = this.ch(this.pos);
        boolean bl2 = false;
        int n3 = 0;
        while ('0' <= c2 && c2 <= '9') {
            n3 = n3 * 10 + (c2 - 48);
            ++this.pos;
            c2 = this.ch(this.pos);
            bl2 = true;
        }
        if (bl2) {
            if (n3 > n2) {
                return n2;
            }
            if (n3 < 0) {
                return 0;
            }
            return n3;
        }
        throw new XMPException(string2, 5);
    }

    public boolean hasNext() {
        if (this.pos < this.str.length()) {
            return true;
        }
        return false;
    }

    public int length() {
        return this.str.length();
    }

    public int pos() {
        return this.pos;
    }

    public void skip() {
        ++this.pos;
    }
}

