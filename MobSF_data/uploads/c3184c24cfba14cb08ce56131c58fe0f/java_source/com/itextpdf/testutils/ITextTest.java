/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.testutils;

import com.itextpdf.text.log.Logger;
import com.itextpdf.text.log.LoggerFactory;
import java.io.File;
import java.io.IOException;

public abstract class ITextTest {
    private static final Logger LOGGER = LoggerFactory.getLogger(ITextTest.class.getName());

    protected void assertPdf(String string2) {
    }

    protected void comparePdf(String string2, String string3) {
    }

    protected void deleteDirectory(File file) {
        if (file == null) {
            return;
        }
        if (file.exists()) {
            for (File file2 : file.listFiles()) {
                if (file2.isDirectory()) {
                    this.deleteDirectory(file2);
                }
                file2.delete();
            }
            file.delete();
        }
    }

    protected void deleteFiles(File arrfile) {
        if (arrfile != null && arrfile.exists()) {
            arrfile = arrfile.listFiles();
            int n2 = arrfile.length;
            for (int i2 = 0; i2 < n2; ++i2) {
                arrfile[i2].delete();
            }
        }
    }

    protected String getCmpPdf() {
        return "";
    }

    protected abstract String getOutPdf();

    protected abstract void makePdf(String var1);

    public void runTest() {
        LOGGER.info("Starting test.");
        String string2 = this.getOutPdf();
        if (string2 != null && string2.length() != 0) {
            this.makePdf(string2);
            this.assertPdf(string2);
            this.comparePdf(string2, this.getCmpPdf());
            LOGGER.info("Test complete.");
            return;
        }
        throw new IOException("outPdf cannot be empty!");
    }
}

