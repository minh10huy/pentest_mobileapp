/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.SuppressLint
 *  android.content.Context
 *  android.graphics.Bitmap
 *  android.graphics.Bitmap$Config
 *  android.net.Uri
 *  android.os.Handler
 *  android.os.Looper
 *  android.os.Message
 *  android.os.Process
 *  android.widget.ImageView
 */
package com.squareup.picasso;

import android.annotation.SuppressLint;
import android.content.Context;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.os.Process;
import android.widget.ImageView;
import com.squareup.picasso.PicassoProvider;
import com.squareup.picasso.a;
import com.squareup.picasso.aa;
import com.squareup.picasso.ad;
import com.squareup.picasso.g;
import com.squareup.picasso.h;
import com.squareup.picasso.i;
import com.squareup.picasso.j;
import com.squareup.picasso.k;
import com.squareup.picasso.m;
import com.squareup.picasso.o;
import com.squareup.picasso.p;
import com.squareup.picasso.r;
import com.squareup.picasso.s;
import com.squareup.picasso.v;
import com.squareup.picasso.w;
import com.squareup.picasso.x;
import com.squareup.picasso.y;
import com.squareup.picasso.z;
import java.io.File;
import java.lang.ref.Reference;
import java.lang.ref.ReferenceQueue;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.WeakHashMap;
import java.util.concurrent.ExecutorService;

public class t {
    static final Handler a = new Handler(Looper.getMainLooper()){

        /*
         * Enabled aggressive block sorting
         */
        public void handleMessage(Message object) {
            int n2 = object.what;
            if (n2 != 3) {
                int n3;
                int n4 = 0;
                if (n2 != 8) {
                    if (n2 != 13) {
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("Unknown handler message received: ");
                        stringBuilder.append(object.what);
                        throw new AssertionError((Object)stringBuilder.toString());
                    }
                    object = (List)object.obj;
                    n4 = object.size();
                    for (n3 = 0; n3 < n4; ++n3) {
                        com.squareup.picasso.a a2 = (com.squareup.picasso.a)object.get(n3);
                        a2.a.c(a2);
                    }
                    return;
                } else {
                    object = (List)object.obj;
                    n2 = object.size();
                    for (n3 = n4; n3 < n2; ++n3) {
                        com.squareup.picasso.c c2 = (com.squareup.picasso.c)object.get(n3);
                        c2.b.a(c2);
                    }
                }
                return;
            } else {
                object = (com.squareup.picasso.a)object.obj;
                if (object.i().l) {
                    ad.a("Main", "canceled", object.b.a(), "target got garbage collected");
                }
                object.a.a(object.c());
            }
        }
    };
    @SuppressLint(value={"StaticFieldLeak"})
    static volatile t b = null;
    final Context c;
    final i d;
    final com.squareup.picasso.d e;
    final aa f;
    final Map<Object, com.squareup.picasso.a> g;
    final Map<ImageView, h> h;
    final ReferenceQueue<Object> i;
    final Bitmap.Config j;
    boolean k;
    volatile boolean l;
    boolean m;
    private final c n;
    private final f o;
    private final b p;
    private final List<y> q;

    t(Context context, i i2, com.squareup.picasso.d object, c c2, f f2, List<y> list, aa aa2, Bitmap.Config config, boolean bl2, boolean bl3) {
        this.c = context;
        this.d = i2;
        this.e = object;
        this.n = c2;
        this.o = f2;
        this.j = config;
        int n2 = list != null ? list.size() : 0;
        object = new ArrayList(n2 + 7);
        object.add(new z(context));
        if (list != null) {
            object.addAll(list);
        }
        object.add(new com.squareup.picasso.f(context));
        object.add(new o(context));
        object.add(new g(context));
        object.add(new com.squareup.picasso.b(context));
        object.add(new k(context));
        object.add(new r(i2.d, aa2));
        this.q = Collections.unmodifiableList(object);
        this.f = aa2;
        this.g = new WeakHashMap<Object, com.squareup.picasso.a>();
        this.h = new WeakHashMap<ImageView, h>();
        this.k = bl2;
        this.l = bl3;
        this.i = new ReferenceQueue();
        this.p = new b(this.i, a);
        this.p.start();
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private void a(Bitmap object, d d2, com.squareup.picasso.a object2, Exception exception) {
        StringBuilder stringBuilder;
        void var4_5;
        if (stringBuilder.e()) {
            return;
        }
        if (!stringBuilder.f()) {
            this.g.remove(stringBuilder.c());
        }
        if (object != null) {
            void var2_3;
            if (var2_3 == null) throw new AssertionError((Object)"LoadedFrom cannot be null.");
            stringBuilder.a((Bitmap)object, (d)var2_3);
            if (!this.l) return;
            String string2 = stringBuilder.b.a();
            stringBuilder = new StringBuilder();
            stringBuilder.append("from ");
            stringBuilder.append(var2_3);
            ad.a("Main", "completed", string2, stringBuilder.toString());
            return;
        }
        stringBuilder.a((Exception)var4_5);
        if (!this.l) return;
        ad.a("Main", "errored", stringBuilder.b.a(), var4_5.getMessage());
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static t b() {
        if (b != null) return b;
        synchronized (t.class) {
            if (b != null) return b;
            if (PicassoProvider.a == null) throw new IllegalStateException("context == null");
            b = new a(PicassoProvider.a).a();
            return b;
        }
    }

    Bitmap a(String string2) {
        if ((string2 = this.e.a(string2)) != null) {
            this.f.a();
            return string2;
        }
        this.f.b();
        return string2;
    }

    w a(w w2) {
        Object object = this.o.a(w2);
        if (object != null) {
            return object;
        }
        object = new StringBuilder();
        object.append("Request transformer ");
        object.append(this.o.getClass().getCanonicalName());
        object.append(" returned null for ");
        object.append(w2);
        throw new IllegalStateException(object.toString());
    }

    public x a(int n2) {
        if (n2 != 0) {
            return new x(this, null, n2);
        }
        throw new IllegalArgumentException("Resource ID must not be zero.");
    }

    public x a(Uri uri) {
        return new x(this, uri, 0);
    }

    public x a(File file) {
        if (file == null) {
            return new x(this, null, 0);
        }
        return this.a(Uri.fromFile((File)file));
    }

    List<y> a() {
        return this.q;
    }

    public void a(ImageView imageView) {
        if (imageView != null) {
            this.a((Object)imageView);
            return;
        }
        throw new IllegalArgumentException("view cannot be null.");
    }

    void a(ImageView imageView, h h2) {
        if (this.h.containsKey((Object)imageView)) {
            this.a((Object)imageView);
        }
        this.h.put(imageView, h2);
    }

    void a(com.squareup.picasso.a a2) {
        Object t2 = a2.c();
        if (t2 != null && this.g.get(t2) != a2) {
            this.a(t2);
            this.g.put(t2, a2);
        }
        this.b(a2);
    }

    void a(com.squareup.picasso.c object) {
        com.squareup.picasso.a a2 = object.i();
        List<com.squareup.picasso.a> list = object.k();
        int n2 = 1;
        int n3 = 0;
        int n4 = list != null && !list.isEmpty() ? 1 : 0;
        int n5 = n2;
        if (a2 == null) {
            n5 = n4 != 0 ? n2 : 0;
        }
        if (n5 == 0) {
            return;
        }
        Uri uri = object.h().d;
        Exception exception = object.l();
        Bitmap bitmap = object.e();
        object = object.m();
        if (a2 != null) {
            this.a(bitmap, (d)((Object)object), a2, exception);
        }
        if (n4 != 0) {
            n5 = list.size();
            for (n4 = n3; n4 < n5; ++n4) {
                this.a(bitmap, (d)((Object)object), list.get(n4), exception);
            }
        }
        if (this.n != null && exception != null) {
            this.n.a(this, uri, exception);
        }
    }

    void a(Object object) {
        ad.a();
        com.squareup.picasso.a a2 = this.g.remove(object);
        if (a2 != null) {
            a2.a();
            this.d.b(a2);
        }
        if (object instanceof ImageView) {
            object = (ImageView)object;
            if ((object = this.h.remove(object)) != null) {
                object.a();
            }
        }
    }

    void b(com.squareup.picasso.a a2) {
        this.d.a(a2);
    }

    void c(com.squareup.picasso.a object) {
        Object object2 = p.a(object.e) ? this.a(object.d()) : null;
        if (object2 != null) {
            this.a((Bitmap)object2, d.a, (com.squareup.picasso.a)object, null);
            if (this.l) {
                object = object.b.a();
                object2 = new StringBuilder();
                object2.append("from ");
                object2.append((Object)d.a);
                ad.a("Main", "completed", (String)object, object2.toString());
                return;
            }
        } else {
            this.a((com.squareup.picasso.a)object);
            if (this.l) {
                ad.a("Main", "resumed", object.b.a());
            }
        }
    }

    public static class a {
        private final Context a;
        private j b;
        private ExecutorService c;
        private com.squareup.picasso.d d;
        private c e;
        private f f;
        private List<y> g;
        private Bitmap.Config h;
        private boolean i;
        private boolean j;

        public a(Context context) {
            if (context != null) {
                this.a = context.getApplicationContext();
                return;
            }
            throw new IllegalArgumentException("Context must not be null.");
        }

        public t a() {
            Context context = this.a;
            if (this.b == null) {
                this.b = new s(context);
            }
            if (this.d == null) {
                this.d = new m(context);
            }
            if (this.c == null) {
                this.c = new v();
            }
            if (this.f == null) {
                this.f = f.a;
            }
            aa aa2 = new aa(this.d);
            return new t(context, new i(context, this.c, t.a, this.b, this.d, aa2), this.d, this.e, this.f, this.g, aa2, this.h, this.i, this.j);
        }
    }

    private static class b
    extends Thread {
        private final ReferenceQueue<Object> a;
        private final Handler b;

        b(ReferenceQueue<Object> referenceQueue, Handler handler) {
            this.a = referenceQueue;
            this.b = handler;
            this.setDaemon(true);
            this.setName("Picasso-refQueue");
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        public void run() {
            Process.setThreadPriority((int)10);
            try {
                do {
                    a.a a2 = (a.a)this.a.remove(1000L);
                    Message message = this.b.obtainMessage();
                    if (a2 != null) {
                        message.what = 3;
                        message.obj = a2.a;
                        this.b.sendMessage(message);
                        continue;
                    }
                    message.recycle();
                } while (true);
            }
            catch (Exception exception) {
                this.b.post(new Runnable(){

                    @Override
                    public void run() {
                        throw new RuntimeException(exception);
                    }
                });
                return;
            }
            catch (InterruptedException interruptedException) {
                return;
            }
        }

    }

    public static interface c {
        public void a(t var1, Uri var2, Exception var3);
    }

    public static enum d {
        a(-16711936),
        b(-16776961),
        c(-65536);
        
        final int d;

        private d(int n3) {
            this.d = n3;
        }
    }

    public static enum e {
        a,
        b,
        c;
        

        private e() {
        }
    }

    public static interface f {
        public static final f a = new f(){

            @Override
            public w a(w w2) {
                return w2;
            }
        };

        public w a(w var1);

    }

}

