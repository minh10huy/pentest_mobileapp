/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.res.Resources
 *  android.graphics.Bitmap
 *  android.graphics.Bitmap$Config
 *  android.graphics.drawable.Drawable
 *  android.net.Uri
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.util.TypedValue
 *  android.widget.ImageView
 */
package com.squareup.picasso;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Build;
import android.util.TypedValue;
import android.widget.ImageView;
import com.squareup.picasso.a;
import com.squareup.picasso.ad;
import com.squareup.picasso.e;
import com.squareup.picasso.h;
import com.squareup.picasso.l;
import com.squareup.picasso.p;
import com.squareup.picasso.t;
import com.squareup.picasso.u;
import com.squareup.picasso.w;
import java.util.concurrent.atomic.AtomicInteger;

public class x {
    private static final AtomicInteger a = new AtomicInteger();
    private final t b;
    private final w.a c;
    private boolean d;
    private boolean e;
    private boolean f = true;
    private int g;
    private int h;
    private int i;
    private int j;
    private Drawable k;
    private Drawable l;
    private Object m;

    x() {
        this.b = null;
        this.c = new w.a(null, 0, null);
    }

    x(t t2, Uri uri, int n2) {
        if (!t2.m) {
            this.b = t2;
            this.c = new w.a(uri, n2, t2.j);
            return;
        }
        throw new IllegalStateException("Picasso instance already shut down. Cannot submit new requests.");
    }

    private w a(long l2) {
        w w2;
        int n2 = a.getAndIncrement();
        Object object = this.c.c();
        object.a = n2;
        object.b = l2;
        boolean bl2 = this.b.l;
        if (bl2) {
            ad.a("Main", "created", object.b(), object.toString());
        }
        if ((w2 = this.b.a((w)object)) != object) {
            w2.a = n2;
            w2.b = l2;
            if (bl2) {
                object = w2.a();
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("into ");
                stringBuilder.append(w2);
                ad.a("Main", "changed", (String)object, stringBuilder.toString());
            }
        }
        return w2;
    }

    private Drawable c() {
        if (this.g != 0) {
            if (Build.VERSION.SDK_INT >= 21) {
                return this.b.c.getDrawable(this.g);
            }
            if (Build.VERSION.SDK_INT >= 16) {
                return this.b.c.getResources().getDrawable(this.g);
            }
            TypedValue typedValue = new TypedValue();
            this.b.c.getResources().getValue(this.g, typedValue, true);
            return this.b.c.getResources().getDrawable(typedValue.resourceId);
        }
        return this.k;
    }

    x a() {
        this.e = false;
        return this;
    }

    public x a(int n2, int n3) {
        this.c.a(n2, n3);
        return this;
    }

    public void a(ImageView imageView) {
        this.a(imageView, null);
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public void a(ImageView object, e e2) {
        void var2_4;
        Bitmap bitmap;
        long l2 = System.nanoTime();
        ad.a();
        if (object == null) throw new IllegalArgumentException("Target must not be null.");
        if (!this.c.a()) {
            this.b.a((ImageView)object);
            if (!this.f) return;
            u.a(object, this.c());
            return;
        }
        if (this.e) {
            if (this.c.b()) throw new IllegalStateException("Fit cannot be used with resize.");
            int n2 = object.getWidth();
            int n3 = object.getHeight();
            if (n2 != 0 && n3 != 0) {
                this.c.a(n2, n3);
            } else {
                if (this.f) {
                    u.a(object, this.c());
                }
                this.b.a((ImageView)object, new h(this, (ImageView)object, (e)var2_4));
                return;
            }
        }
        Object object2 = this.a(l2);
        String string2 = ad.a((w)object2);
        if (p.a(this.i) && (bitmap = this.b.a(string2)) != null) {
            this.b.a((ImageView)object);
            u.a(object, this.b.c, bitmap, t.d.a, this.d, this.b.k);
            if (this.b.l) {
                String string3 = object2.b();
                object2 = new StringBuilder();
                object2.append("from ");
                object2.append((Object)t.d.a);
                ad.a("Main", "completed", string3, object2.toString());
            }
            if (var2_4 == null) return;
            var2_4.a();
            return;
        }
        if (this.f) {
            u.a(object, this.c());
        }
        l l3 = new l(this.b, (ImageView)object, (w)object2, this.i, this.j, this.h, this.l, string2, this.m, (e)var2_4, this.d);
        this.b.a(l3);
    }

    x b() {
        this.m = null;
        return this;
    }
}

