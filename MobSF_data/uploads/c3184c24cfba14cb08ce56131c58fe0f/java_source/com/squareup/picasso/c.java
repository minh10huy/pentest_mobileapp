/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.graphics.Bitmap
 *  android.graphics.BitmapFactory
 *  android.graphics.BitmapFactory$Options
 *  android.graphics.Matrix
 *  android.net.NetworkInfo
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Handler
 */
package com.squareup.picasso;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Matrix;
import android.net.NetworkInfo;
import android.os.Build;
import android.os.Handler;
import com.squareup.picasso.a;
import com.squareup.picasso.aa;
import com.squareup.picasso.ac;
import com.squareup.picasso.ad;
import com.squareup.picasso.d;
import com.squareup.picasso.i;
import com.squareup.picasso.n;
import com.squareup.picasso.p;
import com.squareup.picasso.q;
import com.squareup.picasso.t;
import com.squareup.picasso.w;
import com.squareup.picasso.y;
import e.e;
import e.l;
import e.s;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.Future;
import java.util.concurrent.atomic.AtomicInteger;

class c
implements Runnable {
    private static final Object t = new Object();
    private static final ThreadLocal<StringBuilder> u = new ThreadLocal<StringBuilder>(){

        protected StringBuilder a() {
            return new StringBuilder("Picasso-");
        }

        @Override
        protected /* synthetic */ Object initialValue() {
            return this.a();
        }
    };
    private static final AtomicInteger v = new AtomicInteger();
    private static final y w = new y(){

        @Override
        public y.a a(w w2, int n2) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Unrecognized type of request: ");
            stringBuilder.append(w2);
            throw new IllegalStateException(stringBuilder.toString());
        }

        @Override
        public boolean a(w w2) {
            return true;
        }
    };
    final int a = v.incrementAndGet();
    final t b;
    final i c;
    final d d;
    final aa e;
    final String f;
    final w g;
    final int h;
    int i;
    final y j;
    a k;
    List<a> l;
    Bitmap m;
    Future<?> n;
    t.d o;
    Exception p;
    int q;
    int r;
    t.e s;

    c(t t2, i i2, d d2, aa aa2, a a2, y y2) {
        this.b = t2;
        this.c = i2;
        this.d = d2;
        this.e = aa2;
        this.k = a2;
        this.f = a2.d();
        this.g = a2.b();
        this.s = a2.j();
        this.h = a2.g();
        this.i = a2.h();
        this.j = y2;
        this.r = y2.a();
    }

    static int a(int n2) {
        switch (n2) {
            default: {
                return 0;
            }
            case 7: 
            case 8: {
                return 270;
            }
            case 5: 
            case 6: {
                return 90;
            }
            case 3: 
            case 4: 
        }
        return 180;
    }

    /*
     * Enabled aggressive block sorting
     */
    static Bitmap a(w w2, Bitmap bitmap, int n2) {
        int n3;
        int n4;
        int n5;
        Matrix matrix;
        block37 : {
            int n6;
            block32 : {
                int n7;
                Matrix matrix2;
                float f2;
                int n8;
                int n9;
                boolean bl2;
                float f3;
                block40 : {
                    block39 : {
                        block38 : {
                            float f4;
                            block36 : {
                                float f5;
                                float f6;
                                block33 : {
                                    int n10;
                                    block34 : {
                                        block35 : {
                                            block31 : {
                                                n9 = bitmap.getWidth();
                                                n6 = bitmap.getHeight();
                                                bl2 = w2.m;
                                                matrix = new Matrix();
                                                if (w2.f() || n2 != 0) break block31;
                                                n3 = n6;
                                                n2 = n9;
                                                break block32;
                                            }
                                            n3 = w2.h;
                                            n5 = w2.i;
                                            f2 = w2.n;
                                            if (f2 != 0.0f) {
                                                double d2 = f2;
                                                double d3 = Math.cos(Math.toRadians(d2));
                                                d2 = Math.sin(Math.toRadians(d2));
                                                if (w2.q) {
                                                    matrix.setRotate(f2, w2.o, w2.p);
                                                    double d4 = w2.o;
                                                    double d5 = 1.0 - d3;
                                                    double d6 = d4 * d5 + (double)w2.p * d2;
                                                    d5 = (double)w2.p * d5 - (double)w2.o * d2;
                                                    double d7 = (double)w2.h * d3 + d6;
                                                    d4 = (double)w2.h * d2 + d5;
                                                    double d8 = (double)w2.h * d3 + d6 - (double)w2.i * d2;
                                                    double d9 = (double)w2.h * d2 + d5 + (double)w2.i * d3;
                                                    double d10 = d6 - (double)w2.i * d2;
                                                    d2 = (double)w2.i * d3 + d5;
                                                    d3 = Math.max(d10, Math.max(d8, Math.max(d6, d7)));
                                                    d6 = Math.min(d10, Math.min(d8, Math.min(d6, d7)));
                                                    d7 = Math.max(d2, Math.max(d9, Math.max(d5, d4)));
                                                    d2 = Math.min(d2, Math.min(d9, Math.min(d5, d4)));
                                                    n3 = (int)Math.floor(d3 - d6);
                                                    n5 = (int)Math.floor(d7 - d2);
                                                } else {
                                                    matrix.setRotate(f2);
                                                    double d11 = (double)w2.h * d3;
                                                    double d12 = (double)w2.h * d2;
                                                    double d13 = (double)w2.h * d3 - (double)w2.i * d2;
                                                    double d14 = (double)w2.h * d2 + (double)w2.i * d3;
                                                    double d15 = - (double)w2.i * d2;
                                                    d2 = (double)w2.i * d3;
                                                    d3 = Math.max(d15, Math.max(d13, Math.max(0.0, d11)));
                                                    d11 = Math.min(d15, Math.min(d13, Math.min(0.0, d11)));
                                                    d13 = Math.max(d2, Math.max(d14, Math.max(0.0, d12)));
                                                    d2 = Math.min(d2, Math.min(d14, Math.min(0.0, d12)));
                                                    n3 = (int)Math.floor(d3 - d11);
                                                    n5 = (int)Math.floor(d13 - d2);
                                                }
                                            }
                                            matrix2 = matrix;
                                            n8 = n3;
                                            n7 = n5;
                                            if (n2 == 0) break block33;
                                            n8 = c.a(n2);
                                            n10 = c.b(n2);
                                            n4 = n3;
                                            n2 = n5;
                                            if (n8 == 0) break block34;
                                            matrix2.preRotate((float)n8);
                                            if (n8 == 90) break block35;
                                            n4 = n3;
                                            n2 = n5;
                                            if (n8 != 270) break block34;
                                        }
                                        n2 = n3;
                                        n4 = n5;
                                    }
                                    n8 = n4;
                                    n7 = n2;
                                    if (n10 != 1) {
                                        matrix2.postScale((float)n10, 1.0f);
                                        n7 = n2;
                                        n8 = n4;
                                    }
                                }
                                if (!w2.j) break block36;
                                f2 = n8 != 0 ? (float)n8 / (float)n9 : (float)n7 / (float)n6;
                                if (n7 != 0) {
                                    f6 = n7;
                                    f5 = n6;
                                } else {
                                    f6 = n8;
                                    f5 = n9;
                                }
                                if (f2 > (f6 /= f5)) {
                                    n5 = (int)Math.ceil((float)n6 * (f6 / f2));
                                    n2 = (w2.k & 48) == 48 ? 0 : ((w2.k & 80) == 80 ? n6 - n5 : (n6 - n5) / 2);
                                    f5 = (float)n7 / (float)n5;
                                    n3 = n9;
                                    n4 = 0;
                                    f6 = f2;
                                    f2 = f5;
                                } else if (f2 < f6) {
                                    n3 = (int)Math.ceil((float)n9 * (f2 / f6));
                                    n2 = (w2.k & 3) == 3 ? 0 : ((w2.k & 5) == 5 ? n9 - n3 : (n9 - n3) / 2);
                                    f5 = (float)n8 / (float)n3;
                                    n4 = n2;
                                    n5 = n6;
                                    n2 = 0;
                                    f2 = f6;
                                    f6 = f5;
                                } else {
                                    n3 = n9;
                                    n5 = n6;
                                    f2 = f6;
                                    n2 = 0;
                                    n4 = 0;
                                }
                                if (c.a(bl2, n9, n6, n8, n7)) {
                                    matrix2.preScale(f6, f2);
                                }
                                break block37;
                            }
                            if (!w2.l) break block38;
                            if (n8 != 0) {
                                f2 = n8;
                                f4 = n9;
                            } else {
                                f2 = n7;
                                f4 = n6;
                            }
                            float f7 = f2 / f4;
                            if (n7 != 0) {
                                f2 = n7;
                                f4 = n6;
                            } else {
                                f2 = n8;
                                f4 = n9;
                            }
                            if (f7 < (f2 /= f4)) {
                                f2 = f7;
                            }
                            n2 = n9;
                            n3 = n6;
                            if (c.a(bl2, n9, n6, n8, n7)) {
                                matrix2.preScale(f2, f2);
                                n2 = n9;
                                n3 = n6;
                            }
                            break block32;
                        }
                        if (n8 != 0) break block39;
                        n2 = n9;
                        n3 = n6;
                        if (n7 == 0) break block32;
                    }
                    if (n8 != n9) break block40;
                    n2 = n9;
                    n3 = n6;
                    if (n7 == n6) break block32;
                }
                if (n8 != 0) {
                    f2 = n8;
                    f3 = n9;
                } else {
                    f2 = n7;
                    f3 = n6;
                }
                float f8 = f2 / f3;
                if (n7 != 0) {
                    f2 = n7;
                    f3 = n6;
                } else {
                    f2 = n8;
                    f3 = n9;
                }
                f2 /= f3;
                n2 = n9;
                n3 = n6;
                if (c.a(bl2, n9, n6, n8, n7)) {
                    matrix2.preScale(f8, f2);
                    n3 = n6;
                    n2 = n9;
                }
            }
            n4 = 0;
            n6 = 0;
            n5 = n3;
            n3 = n2;
            n2 = n6;
        }
        w2 = Bitmap.createBitmap((Bitmap)bitmap, (int)n4, (int)n2, (int)n3, (int)n5, (Matrix)matrix, (boolean)true);
        if (w2 != bitmap) {
            bitmap.recycle();
            return w2;
        }
        return bitmap;
    }

    static Bitmap a(s bitmap, w w2) {
        bitmap = l.a((s)bitmap);
        boolean bl2 = ad.a((e)bitmap);
        boolean bl3 = w2.r && Build.VERSION.SDK_INT < 21;
        BitmapFactory.Options options = y.c(w2);
        boolean bl4 = y.a(options);
        if (!bl2 && !bl3) {
            InputStream inputStream = bitmap.g();
            bitmap = inputStream;
            if (bl4) {
                bitmap = new n(inputStream);
                bitmap.a(false);
                long l2 = bitmap.a(1024);
                BitmapFactory.decodeStream((InputStream)bitmap, null, (BitmapFactory.Options)options);
                y.a(w2.h, w2.i, options, w2);
                bitmap.a(l2);
                bitmap.a(true);
            }
            if ((bitmap = BitmapFactory.decodeStream((InputStream)bitmap, null, (BitmapFactory.Options)options)) != null) {
                return bitmap;
            }
            throw new IOException("Failed to decode stream.");
        }
        bitmap = bitmap.s();
        if (bl4) {
            BitmapFactory.decodeByteArray((byte[])bitmap, (int)0, (int)((byte[])bitmap).length, (BitmapFactory.Options)options);
            y.a(w2.h, w2.i, options, w2);
        }
        return BitmapFactory.decodeByteArray((byte[])bitmap, (int)0, (int)((byte[])bitmap).length, (BitmapFactory.Options)options);
    }

    static Bitmap a(List<ac> object, Bitmap object2) {
        int n2 = object.size();
        for (int i2 = 0; i2 < n2; ++i2) {
            Bitmap bitmap;
            ac ac2;
            block6 : {
                ac2 = object.get(i2);
                try {
                    bitmap = ac2.a((Bitmap)object2);
                    if (bitmap != null) break block6;
                }
                catch (RuntimeException runtimeException) {
                    t.a.post(new Runnable(){

                        @Override
                        public void run() {
                            StringBuilder stringBuilder = new StringBuilder();
                            stringBuilder.append("Transformation ");
                            stringBuilder.append(ac2.a());
                            stringBuilder.append(" crashed with exception.");
                            throw new RuntimeException(stringBuilder.toString(), runtimeException);
                        }
                    });
                    return null;
                }
                object2 = new StringBuilder();
                object2.append("Transformation ");
                object2.append(ac2.a());
                object2.append(" returned null after ");
                object2.append(i2);
                object2.append(" previous transformation(s).\n\nTransformation list:\n");
                object = object.iterator();
                while (object.hasNext()) {
                    object2.append(((ac)object.next()).a());
                    object2.append('\n');
                }
                t.a.post(new Runnable((StringBuilder)object2){
                    final /* synthetic */ StringBuilder a;
                    {
                        this.a = stringBuilder;
                    }

                    @Override
                    public void run() {
                        throw new NullPointerException(this.a.toString());
                    }
                });
                return null;
            }
            if (bitmap == object2 && object2.isRecycled()) {
                t.a.post(new Runnable(){

                    @Override
                    public void run() {
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("Transformation ");
                        stringBuilder.append(ac2.a());
                        stringBuilder.append(" returned input Bitmap but recycled it.");
                        throw new IllegalStateException(stringBuilder.toString());
                    }
                });
                return null;
            }
            if (bitmap != object2 && !object2.isRecycled()) {
                t.a.post(new Runnable(){

                    @Override
                    public void run() {
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("Transformation ");
                        stringBuilder.append(ac2.a());
                        stringBuilder.append(" mutated input Bitmap but failed to recycle the original.");
                        throw new IllegalStateException(stringBuilder.toString());
                    }
                });
                return null;
            }
            object2 = bitmap;
            continue;
        }
        return object2;
    }

    static c a(t t2, i i2, d d2, aa aa2, a a2) {
        w w2 = a2.b();
        List<y> list = t2.a();
        int n2 = list.size();
        for (int i3 = 0; i3 < n2; ++i3) {
            y y2 = list.get(i3);
            if (!y2.a(w2)) continue;
            return new c(t2, i2, d2, aa2, a2, y2);
        }
        return new c(t2, i2, d2, aa2, a2, w);
    }

    static void a(w object) {
        object = object.c();
        StringBuilder stringBuilder = u.get();
        stringBuilder.ensureCapacity("Picasso-".length() + object.length());
        stringBuilder.replace("Picasso-".length(), stringBuilder.length(), (String)object);
        Thread.currentThread().setName(stringBuilder.toString());
    }

    private static boolean a(boolean bl2, int n2, int n3, int n4, int n5) {
        if (!(!bl2 || n4 != 0 && n2 > n4 || n5 != 0 && n3 > n5)) {
            return false;
        }
        return true;
    }

    static int b(int n2) {
        if (n2 != 2 && n2 != 7) {
            switch (n2) {
                default: {
                    return 1;
                }
                case 4: 
                case 5: 
            }
        }
        return -1;
    }

    private t.e o() {
        Object object = t.e.a;
        Object object2 = this.l;
        int n2 = 1;
        int n3 = 0;
        int n4 = object2 != null && !this.l.isEmpty() ? 1 : 0;
        int n5 = n2;
        if (this.k == null) {
            n5 = n4 != 0 ? n2 : 0;
        }
        if (n5 == 0) {
            return object;
        }
        if (this.k != null) {
            object = this.k.j();
        }
        object2 = object;
        if (n4 != 0) {
            n5 = this.l.size();
            n4 = n3;
            do {
                object2 = object;
                if (n4 >= n5) break;
                t.e e2 = this.l.get(n4).j();
                object2 = object;
                if (e2.ordinal() > object.ordinal()) {
                    object2 = e2;
                }
                ++n4;
                object = object2;
            } while (true);
        }
        return object2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    Bitmap a() {
        Object object;
        block25 : {
            Object object2;
            Object object3;
            block26 : {
                if (p.a(this.h)) {
                    object = this.d.a(this.f);
                    object2 = object;
                    if (object != null) {
                        this.e.a();
                        this.o = t.d.a;
                        if (this.b.l) {
                            ad.a("Hunter", "decoded", this.g.a(), "from cache");
                        }
                        return object;
                    }
                } else {
                    object2 = null;
                }
                int n2 = this.r == 0 ? q.c.d : this.i;
                this.i = n2;
                object3 = this.j.a(this.g, this.i);
                if (object3 != null) {
                    this.o = object3.c();
                    this.q = object3.d();
                    object = object3.a();
                    object2 = object;
                    if (object == null) {
                        object = object3.b();
                        object2 = c.a((s)object, this.g);
                    }
                }
                object = object2;
                if (object2 == null) break block25;
                if (this.b.l) {
                    ad.a("Hunter", "decoded", this.g.a());
                }
                this.e.a((Bitmap)object2);
                if (this.g.e()) break block26;
                object = object2;
                if (this.q == 0) break block25;
            }
            object3 = t;
            synchronized (object3) {
                block28 : {
                    block27 : {
                        if (this.g.f()) break block27;
                        object = object2;
                        if (this.q == 0) break block28;
                    }
                    object2 = c.a(this.g, object2, this.q);
                    object = object2;
                    if (this.b.l) {
                        ad.a("Hunter", "transformed", this.g.a());
                        object = object2;
                    }
                }
                object2 = object;
                if (this.g.g()) {
                    object = c.a(this.g.g, (Bitmap)object);
                    object2 = object;
                    if (this.b.l) {
                        ad.a("Hunter", "transformed", this.g.a(), "from custom transformations");
                        object2 = object;
                    }
                }
            }
            object = object2;
            if (object2 != null) {
                this.e.b((Bitmap)object2);
                return object2;
            }
        }
        return object;
        finally {
            object.close();
        }
    }

    void a(a object) {
        boolean bl2 = this.b.l;
        Object object2 = object.b;
        if (this.k == null) {
            this.k = object;
            if (bl2) {
                if (this.l != null && !this.l.isEmpty()) {
                    object = object2.a();
                    object2 = ad.a(this, "to ");
                } else {
                    object = object2.a();
                    object2 = "to empty hunter";
                }
                ad.a("Hunter", "joined", (String)object, (String)object2);
            }
            return;
        }
        if (this.l == null) {
            this.l = new ArrayList<a>(3);
        }
        this.l.add((a)object);
        if (bl2) {
            ad.a("Hunter", "joined", object2.a(), ad.a(this, "to "));
        }
        if ((object = object.j()).ordinal() > this.s.ordinal()) {
            this.s = object;
        }
    }

    boolean a(boolean bl2, NetworkInfo networkInfo) {
        boolean bl3 = this.r > 0;
        if (!bl3) {
            return false;
        }
        --this.r;
        return this.j.a(bl2, networkInfo);
    }

    void b(a a2) {
        boolean bl2;
        if (this.k == a2) {
            this.k = null;
            bl2 = true;
        } else {
            bl2 = this.l != null ? this.l.remove(a2) : false;
        }
        if (bl2 && a2.j() == this.s) {
            this.s = this.o();
        }
        if (this.b.l) {
            ad.a("Hunter", "removed", a2.b.a(), ad.a(this, "from "));
        }
    }

    boolean b() {
        boolean bl2;
        block5 : {
            boolean bl3;
            block6 : {
                a a2 = this.k;
                bl2 = bl3 = false;
                if (a2 != null) break block5;
                if (this.l == null) break block6;
                bl2 = bl3;
                if (!this.l.isEmpty()) break block5;
            }
            bl2 = bl3;
            if (this.n != null) {
                bl2 = bl3;
                if (this.n.cancel(false)) {
                    bl2 = true;
                }
            }
        }
        return bl2;
    }

    boolean c() {
        if (this.n != null && this.n.isCancelled()) {
            return true;
        }
        return false;
    }

    boolean d() {
        return this.j.b();
    }

    Bitmap e() {
        return this.m;
    }

    String f() {
        return this.f;
    }

    int g() {
        return this.h;
    }

    w h() {
        return this.g;
    }

    a i() {
        return this.k;
    }

    t j() {
        return this.b;
    }

    List<a> k() {
        return this.l;
    }

    Exception l() {
        return this.p;
    }

    t.d m() {
        return this.o;
    }

    t.e n() {
        return this.s;
    }

    /*
     * Exception decompiling
     */
    @Override
    public void run() {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [0[TRYBLOCK]], but top level block is 7[CATCHBLOCK]
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:416)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:468)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:2960)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:818)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }

}

