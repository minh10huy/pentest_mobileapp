/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.ContentResolver
 *  android.content.ContentUris
 *  android.content.Context
 *  android.database.Cursor
 *  android.graphics.Bitmap
 *  android.graphics.BitmapFactory
 *  android.graphics.BitmapFactory$Options
 *  android.net.Uri
 *  android.provider.MediaStore
 *  android.provider.MediaStore$Images
 *  android.provider.MediaStore$Images$Thumbnails
 *  android.provider.MediaStore$Video
 *  android.provider.MediaStore$Video$Thumbnails
 */
package com.squareup.picasso;

import android.content.ContentResolver;
import android.content.ContentUris;
import android.content.Context;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.provider.MediaStore;
import com.squareup.picasso.g;
import com.squareup.picasso.t;
import com.squareup.picasso.w;
import com.squareup.picasso.y;
import e.l;
import e.s;
import java.io.InputStream;

class o
extends g {
    private static final String[] b = new String[]{"orientation"};

    o(Context context) {
        super(context);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    static int a(ContentResolver var0, Uri var1_2) {
        block13 : {
            block11 : {
                block12 : {
                    var0 = var0.query(var1_2, o.b, null, null, null);
                    if (var0 == null) break block11;
                    try {
                        if (!var0.moveToFirst()) break block11;
                        var2_7 = var0.getInt(0);
                        if (var0 == null) break block12;
                    }
                    catch (Throwable var1_3) {
                        break block13;
                    }
                    var0.close();
                }
                return var2_7;
            }
            if (var0 != null) {
                var0.close();
            }
            return 0;
            catch (Throwable var1_4) {
                var0 = null;
            }
        }
        if (var0 != null) {
            var0.close();
        }
        throw var1_5;
lbl23: // 1 sources:
        do {
            var0 = null;
lbl25: // 2 sources:
            do {
                if (var0 != null) {
                    var0.close();
                }
                return 0;
                break;
            } while (true);
            break;
        } while (true);
        catch (RuntimeException var0_1) {
            ** continue;
        }
        catch (RuntimeException var1_6) {
            ** continue;
        }
    }

    static a a(int n2, int n3) {
        if (n2 <= a.a.e && n3 <= a.a.f) {
            return a.a;
        }
        if (n2 <= a.b.e && n3 <= a.b.f) {
            return a.b;
        }
        return a.c;
    }

    @Override
    public y.a a(w w2, int n2) {
        ContentResolver contentResolver = this.a.getContentResolver();
        int n3 = o.a(contentResolver, w2.d);
        Object object = contentResolver.getType(w2.d);
        n2 = object != null && object.startsWith("video/") ? 1 : 0;
        if (w2.d()) {
            object = o.a(w2.h, w2.i);
            if (n2 == 0 && object == a.c) {
                return new y.a(null, l.a(this.b(w2)), t.d.b, n3);
            }
            long l2 = ContentUris.parseId((Uri)w2.d);
            BitmapFactory.Options options = o.c(w2);
            options.inJustDecodeBounds = true;
            o.a(w2.h, w2.i, object.e, object.f, options, w2);
            if (n2 != 0) {
                n2 = object == a.c ? 1 : object.d;
                contentResolver = MediaStore.Video.Thumbnails.getThumbnail((ContentResolver)contentResolver, (long)l2, (int)n2, (BitmapFactory.Options)options);
            } else {
                contentResolver = MediaStore.Images.Thumbnails.getThumbnail((ContentResolver)contentResolver, (long)l2, (int)object.d, (BitmapFactory.Options)options);
            }
            if (contentResolver != null) {
                return new y.a((Bitmap)contentResolver, null, t.d.b, n3);
            }
        }
        return new y.a(null, l.a(this.b(w2)), t.d.b, n3);
    }

    @Override
    public boolean a(w w2) {
        w2 = w2.d;
        if ("content".equals(w2.getScheme()) && "media".equals(w2.getAuthority())) {
            return true;
        }
        return false;
    }

    static enum a {
        a(3, 96, 96),
        b(1, 512, 384),
        c(2, -1, -1);
        
        final int d;
        final int e;
        final int f;

        private a(int n3, int n4, int n5) {
            this.d = n3;
            this.e = n4;
            this.f = n5;
        }
    }

}

