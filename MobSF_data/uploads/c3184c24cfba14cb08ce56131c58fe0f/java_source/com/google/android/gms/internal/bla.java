/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.Intent
 *  android.content.IntentFilter
 *  android.content.pm.ActivityInfo
 *  android.content.pm.PackageManager
 *  android.content.pm.ResolveInfo
 *  android.net.Uri
 *  android.text.TextUtils
 *  android.util.Log
 */
package com.google.android.gms.internal;

import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.pm.ActivityInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.net.Uri;
import android.text.TextUtils;
import android.util.Log;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public final class bla {
    private static String a;

    /*
     * Enabled aggressive block sorting
     */
    public static String a(Context object) {
        Intent intent;
        void var0_2;
        if (a != null) {
            return a;
        }
        PackageManager packageManager = object.getPackageManager();
        ResolveInfo resolveInfo = packageManager.resolveActivity(intent = new Intent("android.intent.action.VIEW", Uri.parse((String)"http://www.example.com")), 0);
        if (resolveInfo != null) {
            String string2 = resolveInfo.activityInfo.packageName;
        } else {
            Object var1_11 = null;
        }
        Object object2 = packageManager.queryIntentActivities(intent, 0);
        ArrayList<String> arrayList = new ArrayList<String>();
        object2 = object2.iterator();
        while (object2.hasNext()) {
            ResolveInfo resolveInfo2 = (ResolveInfo)object2.next();
            Intent intent2 = new Intent();
            intent2.setAction("android.support.customtabs.action.CustomTabsService");
            intent2.setPackage(resolveInfo2.activityInfo.packageName);
            if (packageManager.resolveService(intent2, 0) == null) continue;
            arrayList.add(resolveInfo2.activityInfo.packageName);
        }
        if (arrayList.isEmpty()) {
            a = null;
            return a;
        }
        if (arrayList.size() == 1) {
            String string3 = (String)arrayList.get(0);
        } else {
            void var1_12;
            if (!TextUtils.isEmpty((CharSequence)var1_12) && !bla.a(object, intent) && arrayList.contains(var1_12)) {
                a = var1_12;
                return a;
            }
            if (arrayList.contains("com.android.chrome")) {
                String string4 = "com.android.chrome";
            } else if (arrayList.contains("com.chrome.beta")) {
                String string5 = "com.chrome.beta";
            } else if (arrayList.contains("com.chrome.dev")) {
                String string6 = "com.chrome.dev";
            } else {
                if (!arrayList.contains("com.google.android.apps.chrome")) return a;
                String string7 = "com.google.android.apps.chrome";
            }
        }
        a = var0_2;
        return a;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static boolean a(Context object, Intent intent) {
        try {
            IntentFilter intentFilter;
            object = object.getPackageManager().queryIntentActivities(intent, 64);
            if (object == null) return false;
            if (object.size() == 0) {
                return false;
            }
            object = object.iterator();
            do {
                if (!object.hasNext()) return false;
                intent = (ResolveInfo)object.next();
            } while ((intentFilter = intent.filter) == null || intentFilter.countDataAuthorities() == 0 || intentFilter.countDataPaths() == 0 || (intent = intent.activityInfo) == null);
            return true;
        }
        catch (RuntimeException runtimeException) {}
        Log.e((String)"CustomTabsHelper", (String)"Runtime exception while getting specialized handlers");
        return false;
    }
}

