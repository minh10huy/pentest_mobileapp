/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.rz;
import com.google.android.gms.internal.sh;
import com.google.android.gms.internal.si;
import com.google.android.gms.internal.sm;
import com.google.android.gms.internal.ss;
import com.google.android.gms.internal.su;
import java.io.ByteArrayOutputStream;
import java.io.IOException;

final class sv {
    private int a;
    private ByteArrayOutputStream b = new ByteArrayOutputStream();
    private /* synthetic */ su c;

    public sv(su su2) {
        this.c = su2;
    }

    public final int a() {
        return this.a;
    }

    public final boolean a(sm sm2) {
        ah.a(sm2);
        if (this.a + 1 > rz.g()) {
            return false;
        }
        byte[] arrby = this.c.a(sm2, false);
        if (arrby == null) {
            this.c.j().a(sm2, "Error formatting hit");
            return true;
        }
        int n2 = (arrby = arrby.getBytes()).length;
        if (n2 > rz.c()) {
            this.c.j().a(sm2, "Hit size exceeds the maximum size limit");
            return true;
        }
        int n3 = n2;
        if (this.b.size() > 0) {
            n3 = n2 + 1;
        }
        if (this.b.size() + n3 > sh.t.a()) {
            return false;
        }
        try {
            if (this.b.size() > 0) {
                this.b.write(su.c());
            }
            this.b.write(arrby);
            ++this.a;
            return true;
        }
        catch (IOException iOException) {
            this.c.e("Failed to write payload when batching hits", iOException);
            return true;
        }
    }

    public final byte[] b() {
        return this.b.toByteArray();
    }
}

