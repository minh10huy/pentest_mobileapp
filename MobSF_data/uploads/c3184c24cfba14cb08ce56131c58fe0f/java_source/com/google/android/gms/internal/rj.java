/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.database.sqlite.SQLiteException
 *  android.text.TextUtils
 *  android.util.Pair
 */
package com.google.android.gms.internal;

import android.content.Context;
import android.database.sqlite.SQLiteException;
import android.text.TextUtils;
import android.util.Pair;
import com.google.android.gms.analytics.a;
import com.google.android.gms.analytics.f;
import com.google.android.gms.analytics.l;
import com.google.android.gms.analytics.n;
import com.google.android.gms.analytics.p;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.qa;
import com.google.android.gms.internal.qb;
import com.google.android.gms.internal.qe;
import com.google.android.gms.internal.qj;
import com.google.android.gms.internal.qu;
import com.google.android.gms.internal.qv;
import com.google.android.gms.internal.qx;
import com.google.android.gms.internal.qz;
import com.google.android.gms.internal.ra;
import com.google.android.gms.internal.rb;
import com.google.android.gms.internal.rg;
import com.google.android.gms.internal.rk;
import com.google.android.gms.internal.rl;
import com.google.android.gms.internal.rm;
import com.google.android.gms.internal.ro;
import com.google.android.gms.internal.rt;
import com.google.android.gms.internal.rz;
import com.google.android.gms.internal.sb;
import com.google.android.gms.internal.se;
import com.google.android.gms.internal.sf;
import com.google.android.gms.internal.sh;
import com.google.android.gms.internal.si;
import com.google.android.gms.internal.sm;
import com.google.android.gms.internal.ss;
import com.google.android.gms.internal.st;
import com.google.android.gms.internal.su;
import com.google.android.gms.internal.sw;
import com.google.android.gms.internal.sy;
import com.google.android.gms.internal.sz;
import com.google.android.gms.internal.ta;
import com.google.android.gms.internal.te;
import com.google.android.gms.internal.tf;
import com.google.android.gms.internal.tg;
import com.google.android.gms.internal.ye;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

final class rj
extends qv {
    private boolean a;
    private final rg b;
    private final su c;
    private final st d;
    private final rb e;
    private long f;
    private final sb g;
    private final sb h;
    private final te i;
    private long j;
    private boolean k;

    protected rj(qx qx2, qz qz2) {
        super(qx2);
        ah.a(qz2);
        this.f = Long.MIN_VALUE;
        this.d = new st(qx2);
        this.b = new rg(qx2);
        this.c = new su(qx2);
        this.e = new rb(qx2);
        this.i = new te(this.h());
        this.g = new rk(this, qx2);
        this.h = new rl(this, qx2);
    }

    private final void A() {
        try {
            this.b.f();
            this.f();
        }
        catch (SQLiteException sQLiteException) {
            this.d("Failed to delete stale hits", (Object)sQLiteException);
        }
        this.h.a(86400000L);
    }

    private final void B() {
        if (this.k) {
            return;
        }
        if (!rz.b()) {
            return;
        }
        if (this.e.b()) {
            return;
        }
        long l2 = sh.C.a();
        if (this.i.a(l2)) {
            this.i.a();
            this.b("Connecting to service");
            if (this.e.c()) {
                this.b("Connected to service");
                this.i.b();
                this.e();
            }
        }
    }

    /*
     * Exception decompiling
     */
    private final boolean C() {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [0[TRYBLOCK], 3[TRYBLOCK]], but top level block is 26[CATCHBLOCK]
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:416)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:468)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:2960)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:818)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }

    private final long D() {
        p.d();
        this.x();
        try {
            long l2 = this.b.z();
            return l2;
        }
        catch (SQLiteException sQLiteException) {
            this.e("Failed to get min/max hit times from local store", (Object)sQLiteException);
            return 0L;
        }
    }

    private final void E() {
        long l2;
        se se2 = this.o();
        if (!se2.b()) {
            return;
        }
        if (!se2.c() && (l2 = this.D()) != 0L && Math.abs(this.h().a() - l2) <= sh.h.a()) {
            this.a("Dispatch alarm scheduled (ms)", rz.e());
            se2.d();
        }
    }

    private final void F() {
        if (this.g.c()) {
            this.b("All hits dispatched or no network/service. Going to power save mode");
        }
        this.g.d();
        se se2 = this.o();
        if (se2.c()) {
            se2.e();
        }
    }

    private final long G() {
        if (this.f != Long.MIN_VALUE) {
            return this.f;
        }
        long l2 = sh.e.a();
        tg tg2 = this.p();
        tg2.x();
        if (tg2.a) {
            tg2 = this.p();
            tg2.x();
            l2 = (long)tg2.b * 1000L;
        }
        return l2;
    }

    private final void H() {
        this.x();
        p.d();
        this.k = true;
        this.e.d();
        this.f();
    }

    private final void a(ra ra2, qb qb2) {
        ah.a(ra2);
        ah.a(qb2);
        Object object = new f(this.g());
        object.b(ra2.c());
        object.b(ra2.d());
        object = object.g();
        qj qj2 = object.b(qj.class);
        qj2.a("data");
        qj2.b(true);
        object.a(qb2);
        qe qe2 = object.b(qe.class);
        qa qa2 = object.b(qa.class);
        for (Map.Entry<String, String> entry : ra2.f().entrySet()) {
            String string2 = entry.getKey();
            String object2 = entry.getValue();
            if ("an".equals(string2)) {
                qa2.a(object2);
                continue;
            }
            if ("av".equals(string2)) {
                qa2.b(object2);
                continue;
            }
            if ("aid".equals(string2)) {
                qa2.c(object2);
                continue;
            }
            if ("aiid".equals(string2)) {
                qa2.d(object2);
                continue;
            }
            if ("uid".equals(string2)) {
                qj2.c(object2);
                continue;
            }
            qe2.a(string2, object2);
        }
        this.b("Sending installation campaign to", ra2.c(), qb2);
        object.a(this.q().b());
        object.e();
    }

    static /* synthetic */ void a(rj rj2) {
        rj2.z();
    }

    static /* synthetic */ void b(rj rj2) {
        rj2.A();
    }

    private final boolean g(String string2) {
        if (ye.a(this.i()).a(string2) == 0) {
            return true;
        }
        return false;
    }

    private final void z() {
        this.a(new ro(this));
    }

    public final long a(ra ra2, boolean bl2) {
        RuntimeException runtimeException;
        super("d2j fail translate: java.lang.RuntimeException: can not merge I and Z\n\tat com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.provideAs(TypeTransformer.java:780)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.enexpr(TypeTransformer.java:659)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:719)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.enexpr(TypeTransformer.java:698)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:719)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.enexpr(TypeTransformer.java:698)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:719)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.s1stmt(TypeTransformer.java:810)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.sxStmt(TypeTransformer.java:840)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:206)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\n");
        throw runtimeException;
    }

    @Override
    protected final void a() {
        this.b.y();
        this.c.y();
        this.e.y();
    }

    protected final void a(ra ra2) {
        p.d();
        this.b("Sending first hit to property", ra2.c());
        if (this.q().c().a(rz.l())) {
            return;
        }
        Object object = this.q().f();
        if (TextUtils.isEmpty((CharSequence)object)) {
            return;
        }
        object = tf.a(this.j(), (String)object);
        this.b("Found relevant installation campaign", object);
        this.a(ra2, (qb)object);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a(sf sf2) {
        long l2 = this.j;
        p.d();
        this.x();
        long l3 = this.q().d();
        l3 = l3 != 0L ? Math.abs(this.h().a() - l3) : -1L;
        this.b("Dispatching local hits. Elapsed time since last dispatch (ms)", l3);
        this.B();
        try {
            this.C();
            this.q().e();
            this.f();
            if (sf2 != null) {
                sf2.a(null);
            }
            if (this.j != l2) {
                this.d.c();
            }
            return;
        }
        catch (Throwable throwable) {
            this.e("Local dispatch failed", throwable);
            this.q().e();
            this.f();
            if (sf2 != null) {
                sf2.a(throwable);
            }
            return;
        }
    }

    public final void a(sm sm2) {
        Object object;
        ah.a(sm2);
        p.d();
        this.x();
        if (this.k) {
            this.c("Hit delivery not possible. Missing network permissions. See http://goo.gl/8Rd3yj for instructions");
        } else {
            this.a("Delivering hit", sm2);
        }
        if (TextUtils.isEmpty((CharSequence)sm2.h()) && (object = this.q().z().a()) != null) {
            HashMap<String, String> hashMap = (Long)object.second;
            object = (String)object.first;
            hashMap = String.valueOf(hashMap);
            StringBuilder stringBuilder = new StringBuilder(String.valueOf(hashMap).length() + 1 + String.valueOf(object).length());
            stringBuilder.append((String)((Object)hashMap));
            stringBuilder.append(":");
            stringBuilder.append((String)object);
            object = stringBuilder.toString();
            hashMap = new HashMap<String, String>(sm2.b());
            hashMap.put("_m", (String)object);
            sm2 = new sm(this, hashMap, sm2.d(), sm2.f(), sm2.c(), sm2.a(), sm2.e());
        }
        this.B();
        if (this.e.a(sm2)) {
            this.c("Hit sent to the device AnalyticsService for delivery");
            return;
        }
        try {
            this.b.a(sm2);
            this.f();
            return;
        }
        catch (SQLiteException sQLiteException) {
            this.e("Delivery failed to save hit to a database", (Object)sQLiteException);
            this.j().a(sm2, "deliver: failed to insert hit to database");
            return;
        }
    }

    public final void a(String object) {
        ah.a((String)object);
        p.d();
        qb qb2 = tf.a(this.j(), (String)object);
        if (qb2 == null) {
            this.d("Parsing failed. Ignoring invalid campaign data", object);
            return;
        }
        String string2 = this.q().f();
        if (object.equals(string2)) {
            this.e("Ignoring duplicate install campaign");
            return;
        }
        if (!TextUtils.isEmpty((CharSequence)string2)) {
            this.d("Ignoring multiple install campaigns. original, new", string2, object);
            return;
        }
        this.q().a((String)object);
        if (this.q().c().a(rz.l())) {
            this.d("Campaign received too late, ignoring", qb2);
            return;
        }
        this.b("Received installation campaign", qb2);
        object = this.b.c(0L).iterator();
        while (object.hasNext()) {
            this.a((ra)object.next(), qb2);
        }
    }

    final void b() {
        this.x();
        ah.a(this.a ^ true, (Object)"Analytics backend already started");
        this.a = true;
        this.l().a(new rm(this));
    }

    protected final void c() {
        this.x();
        p.d();
        Context context = this.g().a();
        if (!sz.a(context)) {
            this.e("AnalyticsReceiver is not registered or is disabled. Register the receiver for reliable dispatching on non-Google Play devices. See http://goo.gl/8Rd3yj for instructions.");
        } else if (!ta.a(context)) {
            this.f("AnalyticsService is not registered or is disabled. Analytics service at risk of not starting. See http://goo.gl/8Rd3yj for instructions.");
        }
        if (!a.a(context)) {
            this.e("CampaignTrackingReceiver is not registered, not exported or is disabled. Installation campaign tracking is not possible. See http://goo.gl/8Rd3yj for instructions.");
        }
        this.q().b();
        if (!this.g("android.permission.ACCESS_NETWORK_STATE")) {
            this.f("Missing required android.permission.ACCESS_NETWORK_STATE. Google Analytics disabled. See http://goo.gl/8Rd3yj for instructions");
            this.H();
        }
        if (!this.g("android.permission.INTERNET")) {
            this.f("Missing required android.permission.INTERNET. Google Analytics disabled. See http://goo.gl/8Rd3yj for instructions");
            this.H();
        }
        if (ta.a(this.i())) {
            this.b("AnalyticsService registered in the app manifest and enabled");
        } else {
            this.e("AnalyticsService not registered in the app manifest. Hits might not be delivered reliably. See http://goo.gl/8Rd3yj for instructions.");
        }
        if (!this.k && !this.b.e()) {
            this.B();
        }
        this.f();
    }

    final void d() {
        p.d();
        this.j = this.h().a();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    protected final void e() {
        p.d();
        p.d();
        this.x();
        if (!rz.b()) {
            this.e("Service client disabled. Can't dispatch local hits to device AnalyticsService");
        }
        if (!this.e.b()) {
            this.b("Service not connected");
            return;
        }
        if (this.b.e()) return;
        this.b("Dispatching local hits to device AnalyticsService");
        block4 : do {
            List<sm> list;
            block10 : {
                try {
                    list = this.b.a(rz.f());
                    if (list.isEmpty()) {
                        this.f();
                        return;
                    }
                    break block10;
                }
                catch (SQLiteException sQLiteException) {
                    this.e("Failed to read hits from store", (Object)sQLiteException);
                    this.F();
                }
                return;
            }
            do {
                if (list.isEmpty()) continue block4;
                sm sm2 = list.get(0);
                if (!this.e.a(sm2)) {
                    this.f();
                    return;
                }
                list.remove(sm2);
                try {
                    this.b.b(sm2.c());
                    continue;
                }
                catch (SQLiteException sQLiteException) {
                    this.e("Failed to remove hit that was send for delivery", (Object)sQLiteException);
                    this.F();
                    return;
                    continue;
                }
                break;
            } while (true);
            break;
        } while (true);
    }

    public final void f() {
        p.d();
        this.x();
        boolean bl2 = this.k;
        boolean bl3 = true;
        boolean bl4 = !bl2 && this.G() > 0L;
        if (!bl4) {
            this.d.b();
            this.F();
            return;
        }
        if (this.b.e()) {
            this.d.b();
            this.F();
            return;
        }
        if (!sh.z.a().booleanValue()) {
            this.d.a();
            bl3 = this.d.d();
        }
        if (bl3) {
            this.E();
            long l2 = this.G();
            long l3 = this.q().d();
            if (l3 == 0L || (l3 = l2 - Math.abs(this.h().a() - l3)) <= 0L) {
                l3 = Math.min(rz.d(), l2);
            }
            this.a("Dispatch scheduled (ms)", l3);
            if (this.g.c()) {
                l3 = Math.max(1L, l3 + this.g.b());
                this.g.b(l3);
                return;
            }
            this.g.a(l3);
            return;
        }
        this.F();
        this.E();
    }
}

