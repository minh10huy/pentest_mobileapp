/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.Activity
 *  android.app.Application
 *  android.app.Application$ActivityLifecycleCallbacks
 *  android.app.KeyguardManager
 *  android.content.BroadcastReceiver
 *  android.content.Context
 *  android.content.Intent
 *  android.content.IntentFilter
 *  android.graphics.Rect
 *  android.os.Bundle
 *  android.os.Handler
 *  android.os.IBinder
 *  android.os.Looper
 *  android.os.PowerManager
 *  android.os.SystemClock
 *  android.view.View
 *  android.view.View$OnAttachStateChangeListener
 *  android.view.ViewTreeObserver
 *  android.view.ViewTreeObserver$OnGlobalLayoutListener
 *  android.view.ViewTreeObserver$OnScrollChangedListener
 *  android.view.Window
 *  android.view.WindowManager
 *  android.view.WindowManager$LayoutParams
 */
package com.google.android.gms.internal;

import android.app.Activity;
import android.app.Application;
import android.app.KeyguardManager;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Rect;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.PowerManager;
import android.os.SystemClock;
import android.view.View;
import android.view.ViewTreeObserver;
import android.view.Window;
import android.view.WindowManager;
import com.google.android.gms.internal.aij;
import com.google.android.gms.internal.ata;
import com.google.android.gms.internal.ath;
import com.google.android.gms.internal.avm;
import com.google.android.gms.internal.awn;
import java.lang.ref.WeakReference;

public final class aul
implements Application.ActivityLifecycleCallbacks,
View.OnAttachStateChangeListener,
ViewTreeObserver.OnGlobalLayoutListener,
ViewTreeObserver.OnScrollChangedListener {
    private static final Handler a = new Handler(Looper.getMainLooper());
    private final Context b;
    private Application c;
    private final PowerManager d;
    private final KeyguardManager e;
    private final ata f;
    private BroadcastReceiver g;
    private WeakReference<ViewTreeObserver> h;
    private WeakReference<View> i;
    private aij j;
    private boolean k = false;
    private int l = -1;
    private long m = -3L;

    public aul(ata ata2, View view) {
        this.f = ata2;
        this.b = ata2.a;
        this.d = (PowerManager)this.b.getSystemService("power");
        this.e = (KeyguardManager)this.b.getSystemService("keyguard");
        if (this.b instanceof Application) {
            this.c = (Application)this.b;
            this.j = new aij((Application)this.b, this);
        }
        this.a(view);
    }

    private final void a(Activity activity, int n2) {
        if (this.i == null) {
            return;
        }
        if ((activity = activity.getWindow()) == null) {
            return;
        }
        activity = activity.peekDecorView();
        View view = this.i.get();
        if (view != null && activity != null && view.getRootView() == activity.getRootView()) {
            this.l = n2;
        }
    }

    static /* synthetic */ void a(aul aul2) {
        aul2.c();
    }

    private final void b() {
        a.post((Runnable)new avm(this));
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private final void b(View view) {
        if ((view = view.getViewTreeObserver()).isAlive()) {
            this.h = new WeakReference<View>(view);
            view.addOnScrollChangedListener((ViewTreeObserver.OnScrollChangedListener)this);
            view.addOnGlobalLayoutListener((ViewTreeObserver.OnGlobalLayoutListener)this);
        }
        if (this.g == null) {
            view = new IntentFilter();
            view.addAction("android.intent.action.SCREEN_ON");
            view.addAction("android.intent.action.SCREEN_OFF");
            view.addAction("android.intent.action.USER_PRESENT");
            this.g = new awn(this);
            this.b.registerReceiver(this.g, (IntentFilter)view);
        }
        if (this.c == null) return;
        try {
            this.c.registerActivityLifecycleCallbacks((Application.ActivityLifecycleCallbacks)this.j);
            return;
        }
        catch (Exception exception) {
            return;
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    private final void c() {
        if (this.i == null) {
            return;
        }
        var10_1 = this.i.get();
        var4_2 = false;
        if (var10_1 == null) {
            this.m = -3L;
            this.k = false;
            return;
        }
        var5_3 = var10_1.getGlobalVisibleRect(new Rect());
        var6_4 = var10_1.getLocalVisibleRect(new Rect());
        if (this.f.j()) ** GOTO lbl-1000
        if (!this.e.inKeyguardRestrictedInputMode()) ** GOTO lbl-1000
        var9_5 = ath.a(var10_1);
        if (var9_5 == null) ** GOTO lbl-1000
        var9_6 = var9_5.getWindow();
        if (var9_6 == null) {
            var9_7 = null;
        } else {
            var9_8 = var9_6.getAttributes();
        }
        if (var9_9 != null && (var9_9.flags & 524288) != 0) {
            var1_10 = true;
        } else lbl-1000: // 2 sources:
        {
            var1_10 = false;
        }
        if (!var1_10) lbl-1000: // 2 sources:
        {
            var1_10 = false;
        } else lbl-1000: // 2 sources:
        {
            var1_10 = true;
        }
        var2_11 = var10_1.getWindowVisibility();
        if (this.l != -1) {
            var2_11 = this.l;
        }
        var3_12 = var4_2;
        if (var10_1.getVisibility() == 0) {
            var3_12 = var4_2;
            if (var10_1.isShown()) {
                var3_12 = var4_2;
                if (this.d.isScreenOn()) {
                    var3_12 = var4_2;
                    if (var1_10) {
                        var3_12 = var4_2;
                        if (var6_4) {
                            var3_12 = var4_2;
                            if (var5_3) {
                                var3_12 = var4_2;
                                if (var2_11 == 0) {
                                    var3_12 = true;
                                }
                            }
                        }
                    }
                }
            }
        }
        if (this.k == var3_12) return;
        var7_13 = var3_12 != false ? SystemClock.elapsedRealtime() : -2L;
        this.m = var7_13;
        this.k = var3_12;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private final void c(View view) {
        try {
            if (this.h != null) {
                ViewTreeObserver viewTreeObserver = this.h.get();
                if (viewTreeObserver != null && viewTreeObserver.isAlive()) {
                    viewTreeObserver.removeOnScrollChangedListener((ViewTreeObserver.OnScrollChangedListener)this);
                    viewTreeObserver.removeGlobalOnLayoutListener((ViewTreeObserver.OnGlobalLayoutListener)this);
                }
                this.h = null;
            }
        }
        catch (Exception exception) {}
        try {
            view = view.getViewTreeObserver();
            if (view.isAlive()) {
                view.removeOnScrollChangedListener((ViewTreeObserver.OnScrollChangedListener)this);
                view.removeGlobalOnLayoutListener((ViewTreeObserver.OnGlobalLayoutListener)this);
            }
        }
        catch (Exception exception) {}
        if (this.g != null) {
            try {
                this.b.unregisterReceiver(this.g);
            }
            catch (Exception exception) {}
            this.g = null;
        }
        if (this.c == null) return;
        try {
            this.c.unregisterActivityLifecycleCallbacks((Application.ActivityLifecycleCallbacks)this.j);
            return;
        }
        catch (Exception exception) {
            return;
        }
    }

    public final long a() {
        if (this.m == -2L && this.i.get() == null) {
            this.m = -3L;
        }
        return this.m;
    }

    /*
     * Enabled aggressive block sorting
     */
    final void a(View view) {
        long l2;
        View view2 = this.i != null ? this.i.get() : null;
        if (view2 != null) {
            view2.removeOnAttachStateChangeListener((View.OnAttachStateChangeListener)this);
            this.c(view2);
        }
        this.i = new WeakReference<View>(view);
        if (view != null) {
            boolean bl2 = view.getWindowToken() != null || view.getWindowVisibility() != 8;
            if (bl2) {
                this.b(view);
            }
            view.addOnAttachStateChangeListener((View.OnAttachStateChangeListener)this);
            l2 = -2L;
        } else {
            l2 = -3L;
        }
        this.m = l2;
    }

    public final void onActivityCreated(Activity activity, Bundle bundle) {
        this.a(activity, 0);
        this.c();
    }

    public final void onActivityDestroyed(Activity activity) {
        this.c();
    }

    public final void onActivityPaused(Activity activity) {
        this.a(activity, 4);
        this.c();
    }

    public final void onActivityResumed(Activity activity) {
        this.a(activity, 0);
        this.c();
        this.b();
    }

    public final void onActivitySaveInstanceState(Activity activity, Bundle bundle) {
        this.c();
    }

    public final void onActivityStarted(Activity activity) {
        this.a(activity, 0);
        this.c();
    }

    public final void onActivityStopped(Activity activity) {
        this.c();
    }

    public final void onGlobalLayout() {
        this.c();
    }

    public final void onScrollChanged() {
        this.c();
    }

    public final void onViewAttachedToWindow(View view) {
        this.l = -1;
        this.b(view);
        this.c();
    }

    public final void onViewDetachedFromWindow(View view) {
        this.l = -1;
        this.c();
        this.b();
        this.c(view);
    }
}

