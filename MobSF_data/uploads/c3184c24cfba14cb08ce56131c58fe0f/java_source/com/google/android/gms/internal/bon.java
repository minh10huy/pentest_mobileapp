/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.bjp;
import com.google.android.gms.internal.bjq;
import com.google.android.gms.internal.bjs;
import com.google.android.gms.internal.bju;
import com.google.android.gms.internal.bjw;
import com.google.android.gms.internal.bjy;
import com.google.android.gms.internal.bpb;

public final class bon
extends bjs<bon> {
    private static volatile bon[] a;
    private Integer b = null;
    private bpb c = null;

    public bon() {
        this.X = null;
        this.Y = -1;
    }

    /*
     * Exception decompiling
     */
    private final bon b(bjp var1_1) {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // org.benf.cfr.reader.util.ConfusedCFRException: First case is not immediately after switch.
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.examineSwitchContiguity(SwitchReplacer.java:366)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.replaceRawSwitches(SwitchReplacer.java:65)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:416)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static bon[] b() {
        if (a != null) return a;
        Object object = bjw.b;
        synchronized (object) {
            if (a != null) return a;
            a = new bon[0];
            return a;
        }
    }

    @Override
    protected final int a() {
        int n2;
        int n3 = n2 = super.a();
        if (this.b != null) {
            n3 = n2 + bjq.b(1, this.b);
        }
        n2 = n3;
        if (this.c != null) {
            n2 = n3 + bjq.b(2, this.c);
        }
        return n2;
    }

    @Override
    public final /* synthetic */ bjy a(bjp bjp2) {
        return this.b(bjp2);
    }

    @Override
    public final void a(bjq bjq2) {
        if (this.b != null) {
            bjq2.a(1, this.b);
        }
        if (this.c != null) {
            bjq2.a(2, this.c);
        }
        super.a(bjq2);
    }
}

