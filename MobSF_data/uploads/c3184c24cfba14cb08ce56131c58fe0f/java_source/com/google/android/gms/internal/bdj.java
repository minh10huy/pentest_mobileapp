/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.bcl;
import com.google.android.gms.internal.bcn;
import com.google.android.gms.internal.bdk;
import com.google.android.gms.internal.bdl;
import com.google.android.gms.internal.bdm;
import com.google.android.gms.internal.bdn;
import com.google.android.gms.internal.bdo;
import com.google.android.gms.internal.bdx;
import com.google.android.gms.internal.beh;
import com.google.android.gms.internal.bei;
import com.google.android.gms.internal.bes;
import com.google.android.gms.internal.bff;
import java.io.IOException;
import java.io.Serializable;
import java.net.URI;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.TimeUnit;

final class bdj {
    private static long a;
    private bdn b;
    private boolean c = false;
    private boolean d = false;
    private long e = 0L;
    private bdx f;
    private bdm g;
    private ScheduledFuture<?> h;
    private ScheduledFuture<?> i;
    private final bcl j;
    private final ScheduledExecutorService k;
    private final beh l;

    public bdj(bcl object, bcn serializable, String string2, bdm object2, String string3) {
        this.j = object;
        this.k = object.c();
        this.g = object2;
        long l2 = a;
        a = 1L + l2;
        object = object.a();
        object2 = new StringBuilder(23);
        object2.append("ws_");
        object2.append(l2);
        this.l = new beh((bei)object, "WebSocket", object2.toString());
        if (string2 == null) {
            string2 = serializable.a();
        }
        boolean bl2 = serializable.c();
        serializable = serializable.b();
        object = bl2 ? "wss" : "ws";
        object2 = new StringBuilder(String.valueOf(object).length() + 15 + String.valueOf(string2).length() + String.valueOf(serializable).length());
        object2.append((String)object);
        object2.append("://");
        object2.append(string2);
        object2.append("/.ws?ns=");
        object2.append((String)((Object)serializable));
        object2.append("&v=5");
        serializable = object2.toString();
        object = serializable;
        if (string3 != null) {
            object = String.valueOf(serializable);
            serializable = new StringBuilder(String.valueOf(object).length() + 4 + String.valueOf(string3).length());
            serializable.append((String)object);
            serializable.append("&ls=");
            serializable.append(string3);
            object = serializable.toString();
        }
        object = URI.create((String)object);
        serializable = new HashMap<String, String>();
        serializable.put("User-Agent", this.j.f());
        this.b = new bdo(this, new bes(this.j, (URI)object, null, (Map<String, String>)((Object)serializable)), null);
    }

    static /* synthetic */ ScheduledFuture a(bdj bdj2) {
        return bdj2.i;
    }

    private final void a(int n2) {
        this.e = n2;
        this.f = new bdx();
        if (this.l.a()) {
            beh beh2 = this.l;
            long l2 = this.e;
            StringBuilder stringBuilder = new StringBuilder(41);
            stringBuilder.append("HandleNewFrameCount: ");
            stringBuilder.append(l2);
            beh2.a(stringBuilder.toString(), null, new Object[0]);
        }
    }

    static /* synthetic */ void a(bdj bdj2, String string2) {
        bdj2.c(string2);
    }

    private final void a(String object) {
        this.f.a((String)object);
        --this.e;
        if (this.e == 0L) {
            try {
                this.f.a();
                object = bff.a(this.f.toString());
                this.f = null;
                if (this.l.a()) {
                    beh beh2 = this.l;
                    String string2 = String.valueOf(object);
                    StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 36);
                    stringBuilder.append("handleIncomingFrame complete frame: ");
                    stringBuilder.append(string2);
                    beh2.a(stringBuilder.toString(), null, new Object[0]);
                }
                this.g.a((Map<String, Object>)object);
                return;
            }
            catch (ClassCastException classCastException) {
                beh beh3 = this.l;
                object = String.valueOf(this.f.toString());
                object = object.length() != 0 ? "Error parsing frame (cast error): ".concat((String)object) : new String("Error parsing frame (cast error): ");
                beh3.a((String)object, classCastException);
                this.b();
                this.e();
                return;
            }
            catch (IOException iOException) {
                beh beh4 = this.l;
                object = String.valueOf(this.f.toString());
                object = object.length() != 0 ? "Error parsing frame: ".concat((String)object) : new String("Error parsing frame: ");
                beh4.a((String)object, iOException);
                this.b();
                this.e();
            }
        }
    }

    static /* synthetic */ boolean a(bdj bdj2, boolean bl2) {
        bdj2.c = true;
        return true;
    }

    static /* synthetic */ beh b(bdj bdj2) {
        return bdj2.l;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final String b(String string2) {
        if (string2.length() <= 6) {
            try {
                int n2 = Integer.parseInt(string2);
                if (n2 > 0) {
                    this.a(n2);
                }
                return null;
            }
            catch (NumberFormatException numberFormatException) {}
        }
        this.a(1);
        return string2;
    }

    /*
     * Enabled aggressive block sorting
     */
    private final void c() {
        block2 : {
            block4 : {
                CharSequence charSequence;
                beh beh2;
                block5 : {
                    block3 : {
                        if (this.d) break block2;
                        if (this.h == null) break block3;
                        this.h.cancel(false);
                        if (!this.l.a()) break block4;
                        beh2 = this.l;
                        long l2 = this.h.getDelay(TimeUnit.MILLISECONDS);
                        charSequence = new StringBuilder(48);
                        charSequence.append("Reset keepAlive. Remaining: ");
                        charSequence.append(l2);
                        charSequence = charSequence.toString();
                        break block5;
                    }
                    if (!this.l.a()) break block4;
                    beh2 = this.l;
                    charSequence = "Reset keepAlive";
                }
                beh2.a((String)charSequence, null, new Object[0]);
            }
            this.h = this.k.schedule(new bdl(this), 45000L, TimeUnit.MILLISECONDS);
        }
    }

    static /* synthetic */ void c(bdj bdj2) {
        bdj2.c();
    }

    private final void c(String string2) {
        if (!this.d) {
            this.c();
            boolean bl2 = this.f != null;
            if (bl2) {
                this.a(string2);
                return;
            }
            if ((string2 = this.b(string2)) != null) {
                this.a(string2);
            }
        }
    }

    static /* synthetic */ ScheduledExecutorService d(bdj bdj2) {
        return bdj2.k;
    }

    private final void d() {
        if (!this.d) {
            if (this.l.a()) {
                this.l.a("closing itself", null, new Object[0]);
            }
            this.e();
        }
        this.b = null;
        if (this.h != null) {
            this.h.cancel(false);
        }
    }

    private final void e() {
        this.d = true;
        this.g.a(this.c);
    }

    static /* synthetic */ void e(bdj bdj2) {
        bdj2.d();
    }

    private final void f() {
        if (!this.c && !this.d) {
            if (this.l.a()) {
                this.l.a("timed out on connect", null, new Object[0]);
            }
            this.b.b();
        }
    }

    static /* synthetic */ void f(bdj bdj2) {
        bdj2.f();
    }

    static /* synthetic */ bdn g(bdj bdj2) {
        return bdj2.b;
    }

    public final void a() {
        this.b.a();
        this.i = this.k.schedule(new bdk(this), 30000L, TimeUnit.MILLISECONDS);
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public final void a(Map<String, Object> object) {
        int n2;
        Object object2;
        block13 : {
            Object object3;
            int n3;
            block12 : {
                block11 : {
                    this.c();
                    object3 = bff.a(object);
                    n2 = object3.length();
                    n3 = 0;
                    if (n2 > 16384) break block11;
                    object2 = new String[]{object3};
                    break block12;
                }
                object2 = new ArrayList();
                n2 = 0;
                do {
                    if (n2 >= object3.length()) break;
                    int n4 = n2 + 16384;
                    object2.add(object3.substring(n2, Math.min(n4, object3.length())));
                    n2 = n4;
                    continue;
                    break;
                } while (true);
                object2 = object2.toArray(new String[object2.size()]);
            }
            n2 = n3;
            try {
                if (((String[])object2).length <= 1) break block13;
                object3 = this.b;
                n2 = ((Object)object2).length;
                StringBuilder stringBuilder = new StringBuilder(11);
                stringBuilder.append(n2);
                object3.a(stringBuilder.toString());
                n2 = n3;
            }
            catch (IOException iOException) {
                object3 = this.l;
                object = String.valueOf(object.toString());
                object = object.length() != 0 ? "Failed to serialize message: ".concat((String)object) : new String("Failed to serialize message: ");
                object3.a((String)object, iOException);
                this.e();
                return;
            }
        }
        do {
            if (n2 >= ((Object)object2).length) return;
            this.b.a((String)object2[n2]);
            ++n2;
            continue;
            break;
        } while (true);
    }

    public final void b() {
        if (this.l.a()) {
            this.l.a("websocket is being closed", null, new Object[0]);
        }
        this.d = true;
        this.b.b();
        if (this.i != null) {
            this.i.cancel(true);
        }
        if (this.h != null) {
            this.h.cancel(true);
        }
    }
}

