/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.bjy;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public final class bjz {
    public static <T extends bjy> String a(T t2) {
        if (t2 == null) {
            return "";
        }
        StringBuffer stringBuffer = new StringBuffer();
        try {
            bjz.a(null, t2, new StringBuffer(), stringBuffer);
            return stringBuffer.toString();
        }
        catch (InvocationTargetException invocationTargetException) {
            String string2 = String.valueOf(invocationTargetException.getMessage());
            if (string2.length() != 0) {
                return "Error printing proto: ".concat(string2);
            }
            return new String("Error printing proto: ");
        }
        catch (IllegalAccessException illegalAccessException) {
            String string3 = String.valueOf(illegalAccessException.getMessage());
            if (string3.length() != 0) {
                return "Error printing proto: ".concat(string3);
            }
            return new String("Error printing proto: ");
        }
    }

    /*
     * Enabled aggressive block sorting
     */
    private static String a(String string2) {
        StringBuffer stringBuffer = new StringBuffer();
        int n2 = 0;
        while (n2 < string2.length()) {
            char c2;
            block4 : {
                char c3;
                block3 : {
                    c3 = string2.charAt(n2);
                    if (n2 == 0) break block3;
                    c2 = c3;
                    if (!Character.isUpperCase(c3)) break block4;
                    stringBuffer.append('_');
                }
                c2 = Character.toLowerCase(c3);
            }
            stringBuffer.append(c2);
            ++n2;
        }
        return stringBuffer.toString();
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    private static void a(String var0, Object var1_1, StringBuffer var2_2, StringBuffer var3_3) {
        if (var1_1 != null) {
            if (var1_1 instanceof bjy) {
                var7_4 = var2_2.length();
                if (var0 != null) {
                    var3_3.append(var2_2);
                    var3_3.append(bjz.a((String)var0));
                    var3_3.append(" <\n");
                    var2_2.append("  ");
                }
                var10_5 = var1_1.getClass();
                var9_6 = var10_5.getFields();
                var8_8 = ((Field[])var9_6).length;
                for (var4_9 = 0; var4_9 < var8_8; ++var4_9) {
                    var13_14 = var9_6[var4_9];
                    var5_10 = var13_14.getModifiers();
                    var11_12 = var13_14.getName();
                    if ("cachedSize".equals(var11_12) || (var5_10 & 1) != 1 || (var5_10 & 8) == 8 || var11_12.startsWith("_") || var11_12.endsWith("_")) continue;
                    var12_13 = var13_14.getType();
                    var13_14 = var13_14.get(var1_1);
                    if (var12_13.isArray() && var12_13.getComponentType() != Byte.TYPE) {
                        var5_10 = var13_14 == null ? 0 : Array.getLength(var13_14);
                        for (var6_11 = 0; var6_11 < var5_10; ++var6_11) {
                            bjz.a((String)var11_12, Array.get(var13_14, var6_11), var2_2, var3_3);
                        }
                        continue;
                    }
                    bjz.a((String)var11_12, var13_14, var2_2, var3_3);
                }
                var11_12 = var10_5.getMethods();
                var5_10 = ((Method[])var11_12).length;
                block5 : for (var4_9 = 0; var4_9 < var5_10; ++var4_9) {
                    block19 : {
                        var9_6 = var11_12[var4_9].getName();
                        if (var9_6.startsWith("set")) {
                            var12_13 = var9_6.substring(3);
                            var9_6 = String.valueOf(var12_13);
                            var9_6 = var9_6.length() != 0 ? "has".concat((String)var9_6) : new String("has");
                            var9_6 = var10_5.getMethod((String)var9_6, new Class[0]);
                            if (!((Boolean)var9_6.invoke(var1_1, new Object[0])).booleanValue()) break block19;
                            var9_6 = String.valueOf(var12_13);
                            var9_6 = var9_6.length() != 0 ? "get".concat((String)var9_6) : new String("get");
                            var9_6 = var10_5.getMethod((String)var9_6, new Class[0]);
                            bjz.a((String)var12_13, var9_6.invoke(var1_1, new Object[0]), var2_2, var3_3);
                        }
                    }
lbl44: // 2 sources:
                }
                if (var0 != null) {
                    var2_2.setLength(var7_4);
                    var3_3.append(var2_2);
                    var3_3.append(">\n");
                }
                return;
            }
            var0 = bjz.a((String)var0);
            var3_3.append(var2_2);
            var3_3.append((String)var0);
            var3_3.append(": ");
            if (var1_1 instanceof String) {
                var0 = var1_1 = (String)var1_1;
                if (!var1_1.startsWith("http")) {
                    var0 = var1_1;
                    if (var1_1.length() > 200) {
                        var0 = String.valueOf(var1_1.substring(0, 200)).concat("[...]");
                    }
                }
                var0 = bjz.b((String)var0);
                var3_3.append("\"");
                var3_3.append((String)var0);
                var3_3.append("\"");
            } else if (var1_1 instanceof byte[]) {
                bjz.a((byte[])var1_1, var3_3);
            } else {
                var3_3.append(var1_1);
            }
            var3_3.append("\n");
        }
        return;
        catch (NoSuchMethodException var9_7) {
            ** continue;
        }
    }

    private static void a(byte[] arrby, StringBuffer stringBuffer) {
        if (arrby == null) {
            stringBuffer.append("\"\"");
            return;
        }
        stringBuffer.append('\"');
        for (int i2 = 0; i2 < arrby.length; ++i2) {
            int n2 = arrby[i2] & 255;
            if (n2 != 92 && n2 != 34) {
                if (n2 < 32 || n2 >= 127) {
                    stringBuffer.append(String.format("\\%03o", n2));
                    continue;
                }
            } else {
                stringBuffer.append('\\');
            }
            stringBuffer.append((char)n2);
        }
        stringBuffer.append('\"');
    }

    private static String b(String string2) {
        int n2 = string2.length();
        StringBuilder stringBuilder = new StringBuilder(n2);
        for (int i2 = 0; i2 < n2; ++i2) {
            char c2 = string2.charAt(i2);
            if (c2 >= ' ' && c2 <= '~' && c2 != '\"' && c2 != '\'') {
                stringBuilder.append(c2);
                continue;
            }
            stringBuilder.append(String.format("\\u%04x", c2));
        }
        return stringBuilder.toString();
    }
}

