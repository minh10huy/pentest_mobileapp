/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.analytics.a;

import com.google.android.gms.analytics.n;
import com.google.android.gms.common.internal.ah;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public class b {
    private Map<String, String> a = new HashMap<String, String>();

    public b(String string2) {
        this.a("&pa", string2);
    }

    private final void a(String string2, String string3) {
        ah.a(string2, (Object)"Name should be non-null");
        this.a.put(string2, string3);
    }

    public b a(double d2) {
        this.a("&tr", Double.toString(d2));
        return this;
    }

    public b a(int n2) {
        this.a("&cos", Integer.toString(n2));
        return this;
    }

    public b a(String string2) {
        this.a("&ti", string2);
        return this;
    }

    public final Map<String, String> a() {
        return new HashMap<String, String>(this.a);
    }

    public b b(double d2) {
        this.a("&tt", Double.toString(d2));
        return this;
    }

    public b b(String string2) {
        this.a("&ta", string2);
        return this;
    }

    public b c(double d2) {
        this.a("&ts", Double.toString(d2));
        return this;
    }

    public b c(String string2) {
        this.a("&tcc", string2);
        return this;
    }

    public b d(String string2) {
        this.a("&col", string2);
        return this;
    }

    public b e(String string2) {
        this.a("&pal", string2);
        return this;
    }

    /*
     * Enabled aggressive block sorting
     */
    public String toString() {
        HashMap<String, String> hashMap = new HashMap<String, String>();
        Iterator<Map.Entry<String, String>> iterator = this.a.entrySet().iterator();
        while (iterator.hasNext()) {
            Map.Entry<String, String> entry = iterator.next();
            String string2 = entry.getKey().startsWith("&") ? entry.getKey().substring(1) : entry.getKey();
            hashMap.put(string2, entry.getValue());
        }
        return n.a(hashMap);
    }
}

