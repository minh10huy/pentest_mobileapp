/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.atu;
import com.google.android.gms.internal.aym;
import com.google.android.gms.internal.ayt;
import java.security.InvalidAlgorithmParameterException;
import java.security.Key;
import java.security.NoSuchAlgorithmException;
import javax.crypto.Mac;

public final class ayz
implements atu {
    private Mac a;
    private final int b;
    private final String c;
    private final Key d;

    public ayz(String string2, Key key, int n2) {
        block12 : {
            block13 : {
                if (n2 < 10) break block12;
                int n3 = -1;
                int n4 = string2.hashCode();
                if (n4 != -1823053428) {
                    if (n4 != 392315118) {
                        if (n4 == 392317873 && string2.equals("HMACSHA512")) {
                            n3 = 2;
                        }
                    } else if (string2.equals("HMACSHA256")) {
                        n3 = 1;
                    }
                } else if (string2.equals("HMACSHA1")) {
                    n3 = 0;
                }
                switch (n3) {
                    default: {
                        string2 = String.valueOf(string2);
                        string2 = string2.length() != 0 ? "unknown Hmac algorithm: ".concat(string2) : new String("unknown Hmac algorithm: ");
                    }
                    case 2: {
                        if (n2 <= 64) break;
                        throw new InvalidAlgorithmParameterException("tag size too big");
                    }
                    case 1: {
                        if (n2 <= 32) break;
                        throw new InvalidAlgorithmParameterException("tag size too big");
                    }
                    case 0: {
                        if (n2 > 20) break block13;
                    }
                }
                this.c = string2;
                this.b = n2;
                this.d = key;
                this.a = aym.b.a(string2);
                this.a.init(key);
                return;
            }
            throw new InvalidAlgorithmParameterException("tag size too big");
            throw new NoSuchAlgorithmException(string2);
        }
        throw new InvalidAlgorithmParameterException("tag size too small, need at least 10 bytes");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final byte[] a(byte[] arrby) {
        Mac mac;
        block2 : {
            try {
                mac = (Mac)this.a.clone();
                break block2;
            }
            catch (CloneNotSupportedException cloneNotSupportedException) {}
            mac = aym.b.a(this.c);
            mac.init(this.d);
        }
        mac.update(arrby);
        arrby = new byte[this.b];
        System.arraycopy(mac.doFinal(), 0, arrby, 0, this.b);
        return arrby;
    }
}

