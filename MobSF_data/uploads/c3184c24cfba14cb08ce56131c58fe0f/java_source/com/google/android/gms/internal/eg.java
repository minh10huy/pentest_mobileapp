/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.SystemClock
 *  android.util.Log
 */
package com.google.android.gms.internal;

import android.os.SystemClock;
import android.util.Log;
import com.google.android.gms.internal.fg;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;

public class eg {
    public static boolean a = false;
    private static String b = "Volley";

    static {
        a = Log.isLoggable((String)"Volley", (int)2);
    }

    public static /* varargs */ void a(String string2, Object ... arrobject) {
        if (a) {
            Log.v((String)b, (String)eg.d(string2, arrobject));
        }
    }

    public static /* varargs */ void a(Throwable throwable, String string2, Object ... arrobject) {
        Log.e((String)b, (String)eg.d(string2, arrobject), (Throwable)throwable);
    }

    public static /* varargs */ void b(String string2, Object ... arrobject) {
        Log.d((String)b, (String)eg.d(string2, arrobject));
    }

    public static /* varargs */ void c(String string2, Object ... arrobject) {
        Log.e((String)b, (String)eg.d(string2, arrobject));
    }

    private static /* varargs */ String d(String string2, Object ... object) {
        if (object != null) {
            string2 = String.format(Locale.US, string2, (Object[])object);
        }
        Object object2 = new Throwable().fillInStackTrace().getStackTrace();
        String string3 = "<unknown>";
        int n2 = 2;
        do {
            object = string3;
            if (n2 >= ((StackTraceElement[])object2).length) break;
            if (!object2[n2].getClass().equals(eg.class)) {
                object = object2[n2].getClassName();
                object = object.substring(object.lastIndexOf(46) + 1);
                object = object.substring(object.lastIndexOf(36) + 1);
                string3 = object2[n2].getMethodName();
                object2 = new StringBuilder(String.valueOf(object).length() + 1 + String.valueOf(string3).length());
                object2.append((String)object);
                object2.append(".");
                object2.append(string3);
                object = object2.toString();
                break;
            }
            ++n2;
        } while (true);
        return String.format(Locale.US, "[%d] %s: %s", Thread.currentThread().getId(), object, string2);
    }

    static final class a {
        public static final boolean a = eg.a;
        private final List<fg> b = new ArrayList<fg>();
        private boolean c = false;

        a() {
        }

        public final void a(String object) {
            synchronized (this) {
                long l2;
                long l3;
                block9 : {
                    block8 : {
                        this.c = true;
                        if (this.b.size() != 0) break block8;
                        l2 = 0L;
                        break block9;
                    }
                    l2 = this.b.get((int)0).c;
                    l3 = this.b.get((int)(this.b.size() - 1)).c;
                    l2 = l3 - l2;
                }
                if (l2 <= 0L) {
                    return;
                }
                l3 = this.b.get((int)0).c;
                eg.b("(%-4d ms) %s", l2, object);
                object = this.b.iterator();
                l2 = l3;
                do {
                    if (!object.hasNext()) break;
                    fg fg2 = (fg)object.next();
                    l3 = fg2.c;
                    eg.b("(+%-4d) [%2d] %s", l3 - l2, fg2.b, fg2.a);
                    l2 = l3;
                    continue;
                    break;
                } while (true);
                return;
            }
        }

        public final void a(String string2, long l2) {
            synchronized (this) {
                if (!this.c) {
                    this.b.add(new fg(string2, l2, SystemClock.elapsedRealtime()));
                    return;
                }
                throw new IllegalStateException("Marker added to finished log");
            }
        }

        protected final void finalize() {
            if (!this.c) {
                this.a("Request on the loose");
                eg.c("Marker log finalized without finish() - uncaught exit point for request", new Object[0]);
            }
        }
    }

}

