/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bpu;
import com.google.android.gms.internal.byp;
import com.google.android.gms.internal.bzx;
import java.util.Iterator;
import java.util.LinkedList;

@ak
final class bzw {
    private final LinkedList<bzx> a;
    private bpu b;
    private final String c;
    private final int d;
    private boolean e;

    bzw(bpu bpu2, String string2, int n2) {
        ah.a(bpu2);
        ah.a(string2);
        this.a = new LinkedList();
        this.b = bpu2;
        this.c = string2;
        this.d = n2;
    }

    static /* synthetic */ String a(bzw bzw2) {
        return bzw2.c;
    }

    static /* synthetic */ bpu b(bzw bzw2) {
        return bzw2.b;
    }

    final bpu a() {
        return this.b;
    }

    final bzx a(bpu bpu2) {
        if (bpu2 != null) {
            this.b = bpu2;
        }
        return this.a.remove();
    }

    final void a(byp object, bpu bpu2) {
        object = new bzx(this, (byp)object, bpu2);
        this.a.add((bzx)object);
    }

    final boolean a(byp object) {
        object = new bzx(this, (byp)object);
        this.a.add((bzx)object);
        return object.a();
    }

    final int b() {
        return this.d;
    }

    final String c() {
        return this.c;
    }

    final int d() {
        return this.a.size();
    }

    final int e() {
        Iterator<bzx> iterator = this.a.iterator();
        int n2 = 0;
        while (iterator.hasNext()) {
            if (!iterator.next().e) continue;
            ++n2;
        }
        return n2;
    }

    final int f() {
        Iterator<bzx> iterator = this.a.iterator();
        int n2 = 0;
        while (iterator.hasNext()) {
            if (!iterator.next().a()) continue;
            ++n2;
        }
        return n2;
    }

    final void g() {
        this.e = true;
    }

    final boolean h() {
        return this.e;
    }
}

