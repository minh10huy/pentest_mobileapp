/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.util.Base64
 */
package com.google.android.gms.internal;

import android.util.Base64;
import java.net.URI;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;

final class bez {
    private URI a = null;
    private String b = null;
    private String c = null;
    private Map<String, String> d = null;

    public bez(URI uRI, String string2, Map<String, String> map) {
        this.a = uRI;
        this.b = null;
        this.d = map;
        this.c = bez.b();
    }

    private static String a(LinkedHashMap<String, String> linkedHashMap) {
        String string2 = new String();
        for (String string3 : linkedHashMap.keySet()) {
            string2 = String.valueOf(string2);
            String string4 = linkedHashMap.get(string3);
            StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 4 + String.valueOf(string3).length() + String.valueOf(string4).length());
            stringBuilder.append(string2);
            stringBuilder.append(string3);
            stringBuilder.append(": ");
            stringBuilder.append(string4);
            stringBuilder.append("\r\n");
            string2 = stringBuilder.toString();
        }
        return string2;
    }

    private static String b() {
        byte[] arrby = new byte[16];
        for (int i2 = 0; i2 < 16; ++i2) {
            arrby[i2] = (byte)(Math.random() * 255.0 + 0.0);
        }
        return Base64.encodeToString((byte[])arrby, (int)2);
    }

    public final byte[] a() {
        byte[] arrby = this.a.getPath();
        String string2 = this.a.getQuery();
        arrby = String.valueOf(arrby);
        string2 = string2 == null ? "" : ((string2 = String.valueOf(string2)).length() != 0 ? "?".concat(string2) : new String("?"));
        string2 = String.valueOf(string2);
        string2 = string2.length() != 0 ? arrby.concat(string2) : new String((String)arrby);
        Object object = this.a.getHost();
        arrby = object;
        if (this.a.getPort() != -1) {
            arrby = String.valueOf(object);
            int n2 = this.a.getPort();
            object = new StringBuilder(String.valueOf(arrby).length() + 12);
            object.append((String)arrby);
            object.append(":");
            object.append(n2);
            arrby = object.toString();
        }
        object = new LinkedHashMap();
        object.put("Host", arrby);
        object.put("Upgrade", "websocket");
        object.put("Connection", "Upgrade");
        object.put("Sec-WebSocket-Version", "13");
        object.put("Sec-WebSocket-Key", this.c);
        if (this.b != null) {
            object.put("Sec-WebSocket-Protocol", this.b);
        }
        if (this.d != null) {
            for (String string3 : this.d.keySet()) {
                if (object.containsKey(string3)) continue;
                object.put(string3, this.d.get(string3));
            }
        }
        arrby = new StringBuilder(String.valueOf(string2).length() + 15);
        arrby.append("GET ");
        arrby.append(string2);
        arrby.append(" HTTP/1.1\r\n");
        string2 = String.valueOf(arrby.toString());
        arrby = String.valueOf(bez.a((LinkedHashMap<String, String>)object));
        string2 = arrby.length() != 0 ? string2.concat((String)arrby) : new String(string2);
        string2 = String.valueOf(string2).concat("\r\n");
        arrby = new byte[string2.getBytes().length];
        System.arraycopy(string2.getBytes(), 0, arrby, 0, string2.getBytes().length);
        return arrby;
    }
}

