/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.graphics.Bitmap
 *  android.view.View
 *  org.json.JSONArray
 *  org.json.JSONException
 *  org.json.JSONObject
 */
package com.google.android.gms.internal;

import android.content.Context;
import android.graphics.Bitmap;
import android.view.View;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.m;
import com.google.android.gms.common.util.p;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bjy;
import com.google.android.gms.internal.bkc;
import com.google.android.gms.internal.bkd;
import com.google.android.gms.internal.bke;
import com.google.android.gms.internal.bkf;
import com.google.android.gms.internal.bkl;
import com.google.android.gms.internal.bkm;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.fn;
import com.google.android.gms.internal.fo;
import com.google.android.gms.internal.fp;
import com.google.android.gms.internal.fq;
import com.google.android.gms.internal.fr;
import com.google.android.gms.internal.fu;
import com.google.android.gms.internal.fw;
import com.google.android.gms.internal.fx;
import com.google.android.gms.internal.fz;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.hm;
import com.google.android.gms.internal.hs;
import com.google.android.gms.internal.jb;
import com.google.android.gms.internal.km;
import com.google.android.gms.internal.kq;
import com.google.android.gms.internal.ku;
import com.google.android.gms.internal.lf;
import com.google.android.gms.internal.lk;
import com.google.android.gms.internal.ye;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

@ak
public final class fm
implements fx {
    private static List<Future<Void>> a = Collections.synchronizedList(new ArrayList());
    private static ScheduledExecutorService b = Executors.newSingleThreadScheduledExecutor();
    private final bkc c;
    private final LinkedHashMap<String, bkl> d;
    private final Context e;
    private final fz f;
    private boolean g;
    private final fu h;
    private final Object i = new Object();
    private HashSet<String> j = new HashSet();
    private boolean k = false;
    private boolean l = false;
    private boolean m = false;

    public fm(Context object, km km2, fu object22, String string2, fz fz2) {
        void var5_8;
        void var4_7;
        ah.a(object22, (Object)"SafeBrowsing config is not present.");
        Object object2 = object;
        if (object.getApplicationContext() != null) {
            object2 = object.getApplicationContext();
        }
        this.e = object2;
        this.d = new LinkedHashMap();
        this.f = var5_8;
        this.h = object22;
        for (String string3 : this.h.e) {
            this.j.add(string3.toLowerCase(Locale.ENGLISH));
        }
        this.j.remove("cookie".toLowerCase(Locale.ENGLISH));
        object = new bkc();
        object.a = 8;
        object.b = var4_7;
        object.c = var4_7;
        object.d = new bkd();
        object.d.a = this.h.a;
        bkm bkm2 = new bkm();
        bkm2.a = km2.a;
        bkm2.c = ye.a(this.e).a();
        m.b();
        long l2 = m.d(this.e);
        if (l2 > 0L) {
            bkm2.b = l2;
        }
        object.h = bkm2;
        this.c = object;
    }

    static /* synthetic */ Object a(fm fm2) {
        return fm2.i;
    }

    static /* synthetic */ bkc b(fm fm2) {
        return fm2.c;
    }

    static final /* synthetic */ Void b(String string2) {
        return null;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final bkl c(String object) {
        Object object2 = this.i;
        synchronized (object2) {
            return this.d.get(object);
        }
    }

    static /* synthetic */ List e() {
        return a;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final lf<Void> f() {
        int n2;
        boolean bl2 = this.g;
        int n3 = 0;
        if (!(bl2 && this.h.g || this.m && this.h.f)) {
            if (this.g) return ku.a(null);
            if (!this.h.d) return ku.a(null);
        }
        if ((n2 = 1) == 0) {
            return ku.a(null);
        }
        Object object = this.i;
        synchronized (object) {
            Object object2;
            bkl[] arrbkl;
            this.c.e = new bkl[this.d.size()];
            this.d.values().toArray(this.c.e);
            if (fw.a()) {
                object2 = this.c.b;
                arrbkl = this.c.f;
                Object object3 = new StringBuilder(String.valueOf(object2).length() + 53 + String.valueOf(arrbkl).length());
                object3.append("Sending SB report\n  url: ");
                object3.append((String)object2);
                object3.append("\n  clickUrl: ");
                object3.append((String)arrbkl);
                object3.append("\n  resources: \n");
                object2 = new StringBuilder(object3.toString());
                arrbkl = this.c.e;
                int n4 = arrbkl.length;
                for (n2 = n3; n2 < n4; ++n2) {
                    object3 = arrbkl[n2];
                    object2.append("    [");
                    object2.append(object3.e.length);
                    object2.append("] ");
                    object2.append(object3.b);
                }
                fw.a(object2.toString());
            }
            object2 = bjy.a(this.c);
            arrbkl = this.h.b;
            object2 = new jb(this.e).a(1, (String)arrbkl, null, (byte[])object2);
            if (!fw.a()) return ku.a(object2, fo.a, lk.b);
            object2.a(new fr(this), hm.a);
            return ku.a(object2, fo.a, lk.b);
        }
    }

    @Override
    public final fu a() {
        return this.h;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    final /* synthetic */ lf a(Map lf2) {
        if (lf2 != null) {
            Iterator iterator;
            block15 : {
                try {
                    iterator = lf2.keySet().iterator();
                    break block15;
                }
                catch (JSONException jSONException) {}
                lf2 = btk.cr;
                if ((Boolean)((Object)bqj.f().a(lf2)) == false) return ku.a(new Exception("Safebrowsing report transmission failed."));
                he.a("Failed to get SafeBrowsing metadata", (Throwable)jSONException);
                return ku.a(new Exception("Safebrowsing report transmission failed."));
            }
            while (iterator.hasNext()) {
                String string2 = (String)iterator.next();
                JSONArray jSONArray = new JSONObject((String)lf2.get(string2)).optJSONArray("matches");
                if (jSONArray == null) continue;
                Object object = this.i;
                synchronized (object) {
                    int n2 = jSONArray.length();
                    bkl bkl2 = this.c(string2);
                    if (bkl2 == null) {
                        string2 = (string2 = String.valueOf(string2)).length() != 0 ? "Cannot find the corresponding resource object for ".concat(string2) : new String("Cannot find the corresponding resource object for ");
                        fw.a(string2);
                    } else {
                        int n3;
                        bkl2.e = new String[n2];
                        int n4 = 0;
                        for (n3 = 0; n3 < n2; ++n3) {
                            bkl2.e[n3] = jSONArray.getJSONObject(n3).getString("threat_type");
                        }
                        int n5 = this.g;
                        n3 = n4;
                        if (n2 > 0) {
                            n3 = 1;
                        }
                        this.g = n3 | n5;
                    }
                }
            }
        }
        if (!this.g) return this.f();
        lf2 = this.i;
        synchronized (lf2) {
            this.c.a = 9;
            return this.f();
        }
    }

    @Override
    public final void a(View view) {
        if (!this.h.c) {
            return;
        }
        if (this.l) {
            return;
        }
        av.e();
        view = hs.b(view);
        if (view == null) {
            fw.a("Failed to capture the webview bitmap.");
            return;
        }
        this.l = true;
        hs.a(new fp(this, (Bitmap)view));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(String string2) {
        Object object = this.i;
        synchronized (object) {
            this.c.f = string2;
            return;
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    @Override
    public final void a(String var1_1, Map<String, String> var2_3, int var3_5) {
        var5_6 = this.i;
        // MONITORENTER : var5_6
        if (var3_5 != 3) ** GOTO lbl6
        this.m = true;
lbl6: // 2 sources:
        if (this.d.containsKey(var1_1)) {
            if (var3_5 == 3) {
                this.d.get((Object)var1_1).d = var3_5;
            }
            // MONITOREXIT : var5_6
            return;
        }
        var6_7 = new bkl();
        var6_7.d = var3_5;
        var6_7.a = this.d.size();
        var6_7.b = var1_1;
        var6_7.c = new bkf();
        if (this.j.size() > 0 && var2_3 != null) {
            var7_8 = new LinkedList<Object>();
            var8_9 = var2_3.entrySet().iterator();
lbl19: // 4 sources:
            if (var8_9.hasNext()) {
                var4_11 = var8_9.next();
                var2_3 = var4_11.getKey() != null ? (String)var4_11.getKey() : "";
            }
            var2_3 = new bke[var7_8.size()];
            var7_8.toArray((T[])var2_3);
            var6_7.c.a = var2_3;
        }
        this.d.put(var1_1, var6_7);
        // MONITOREXIT : var5_6
        return;
        catch (UnsupportedEncodingException var2_4) {}
        fw.a("Cannot convert string to bytes, skip header.");
        ** GOTO lbl19
        if (var4_11.getValue() != null) {
            var4_12 = (String)var4_11.getValue();
        } else {
            var4_14 = "";
        }
        if (!this.j.contains(var9_15 = var2_3.toLowerCase(Locale.ENGLISH))) ** GOTO lbl19
        var9_15 = new bke();
        var9_15.a = var2_3.getBytes("UTF-8");
        var9_15.b = var4_13.getBytes("UTF-8");
        var7_8.add(var9_15);
        ** GOTO lbl19
    }

    @Override
    public final boolean b() {
        if (p.e() && this.h.c && !this.l) {
            return true;
        }
        return false;
    }

    @Override
    public final void c() {
        this.k = true;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void d() {
        Object object = this.i;
        synchronized (object) {
            lf lf2 = ku.a(this.f.a(this.e, this.d.keySet()), new fn(this), lk.b);
            lf lf3 = ku.a(lf2, 10L, TimeUnit.SECONDS, b);
            ku.a(lf2, new fq(this, lf3), lk.b);
            a.add(lf3);
            return;
        }
    }
}

