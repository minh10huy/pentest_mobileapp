/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.aym;
import com.google.android.gms.internal.ayo;
import com.google.android.gms.internal.ayy;
import com.google.android.gms.internal.azb;
import java.security.GeneralSecurityException;
import java.security.Key;
import java.security.spec.AlgorithmParameterSpec;
import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

public final class axu
implements ayy {
    private final SecretKeySpec a;
    private final int b;
    private final int c;

    public axu(byte[] arrby, int n2) {
        this.a = new SecretKeySpec(arrby, "AES");
        this.c = aym.a.a("AES/CTR/NoPadding").getBlockSize();
        if (n2 >= 12 && n2 <= this.c) {
            this.b = n2;
            return;
        }
        throw new GeneralSecurityException("invalid IV size");
    }

    @Override
    public final byte[] a(byte[] object) {
        if (((byte[])object).length <= Integer.MAX_VALUE - this.b) {
            byte[] arrby = new byte[this.b + ((byte[])object).length];
            Object object2 = azb.a(this.b);
            System.arraycopy(object2, 0, arrby, 0, this.b);
            int n2 = ((Object)object).length;
            int n3 = this.b;
            Cipher cipher = aym.a.a("AES/CTR/NoPadding");
            byte[] arrby2 = new byte[this.c];
            System.arraycopy(object2, 0, arrby2, 0, this.b);
            object2 = new IvParameterSpec(arrby2);
            cipher.init(1, (Key)this.a, (AlgorithmParameterSpec)object2);
            if (cipher.doFinal((byte[])object, 0, n2, arrby, n3) == n2) {
                return arrby;
            }
            throw new GeneralSecurityException("stored output's length does not match input's length");
        }
        int n4 = this.b;
        object = new StringBuilder(43);
        object.append("plaintext length can not exceed ");
        object.append(Integer.MAX_VALUE - n4);
        throw new GeneralSecurityException(object.toString());
    }
}

