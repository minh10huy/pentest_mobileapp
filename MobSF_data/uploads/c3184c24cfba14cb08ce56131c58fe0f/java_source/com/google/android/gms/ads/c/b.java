/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.net.Uri
 *  android.net.Uri$Builder
 *  android.util.Log
 */
package com.google.android.gms.ads.c;

import android.net.Uri;
import android.util.Log;
import com.google.android.gms.ads.c.a;
import com.google.android.gms.ads.c.d;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.util.Map;
import java.util.Set;

final class b
extends Thread {
    private /* synthetic */ Map a;

    b(a a2, Map map) {
        this.a = map;
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public final void run() {
        Object object2;
        String string2;
        Object object;
        block8 : {
            new d();
            object = this.a;
            object2 = Uri.parse((String)"https://pagead2.googlesyndication.com/pagead/gen_204?id=gmob-apps").buildUpon();
            for (CharSequence charSequence : object.keySet()) {
                object2.appendQueryParameter((String)charSequence, (String)object.get(charSequence));
            }
            string2 = object2.build().toString();
            object = (HttpURLConnection)new URL(string2).openConnection();
            int n2 = object.getResponseCode();
            if (n2 >= 200 && n2 < 300) break block8;
            object2 = new StringBuilder(String.valueOf(string2).length() + 65);
            object2.append("Received non-success response code ");
            object2.append(n2);
            object2.append(" from pinging URL: ");
            object2.append(string2);
            Log.w((String)"HttpUrlPinger", (String)object2.toString());
            {
                catch (Throwable throwable) {
                    object.disconnect();
                    throw throwable;
                }
            }
        }
        try {
            object.disconnect();
            return;
        }
        catch (IOException | RuntimeException exception) {
            CharSequence charSequence;
            void var2_3;
            Object object3;
            block9 : {
                object2 = exception.getMessage();
                charSequence = new StringBuilder(String.valueOf(string2).length() + 27 + String.valueOf(object2).length());
                object3 = "Error while pinging URL: ";
                break block9;
                catch (IndexOutOfBoundsException indexOutOfBoundsException) {
                    object2 = indexOutOfBoundsException.getMessage();
                    charSequence = new StringBuilder(String.valueOf(string2).length() + 32 + String.valueOf(object2).length());
                    object3 = "Error while parsing ping URL: ";
                }
            }
            charSequence.append((String)object3);
            charSequence.append(string2);
            charSequence.append(". ");
            charSequence.append((String)object2);
            Log.w((String)"HttpUrlPinger", (String)charSequence.toString(), (Throwable)var2_3);
            return;
        }
    }
}

