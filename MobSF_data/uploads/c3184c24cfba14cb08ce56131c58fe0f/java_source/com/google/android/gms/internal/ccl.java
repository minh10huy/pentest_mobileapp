/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.location.Location
 *  android.os.Bundle
 *  android.os.RemoteException
 *  android.view.View
 *  org.json.JSONObject
 */
package com.google.android.gms.internal;

import android.content.Context;
import android.location.Location;
import android.os.Bundle;
import android.os.RemoteException;
import android.view.View;
import com.google.ads.mediation.admob.AdMobAdapter;
import com.google.android.gms.a.a;
import com.google.android.gms.a.m;
import com.google.android.gms.ads.mediation.MediationBannerAdapter;
import com.google.android.gms.ads.mediation.MediationInterstitialAdapter;
import com.google.android.gms.ads.mediation.MediationNativeAdapter;
import com.google.android.gms.ads.mediation.b;
import com.google.android.gms.ads.mediation.c;
import com.google.android.gms.ads.mediation.d;
import com.google.android.gms.ads.mediation.e;
import com.google.android.gms.ads.mediation.f;
import com.google.android.gms.ads.mediation.g;
import com.google.android.gms.ads.mediation.h;
import com.google.android.gms.ads.mediation.i;
import com.google.android.gms.ads.mediation.j;
import com.google.android.gms.ads.mediation.k;
import com.google.android.gms.ads.mediation.l;
import com.google.android.gms.ads.reward.mediation.InitializableMediationRewardedVideoAdAdapter;
import com.google.android.gms.ads.reward.mediation.MediationRewardedVideoAdAdapter;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bpu;
import com.google.android.gms.internal.bpy;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bru;
import com.google.android.gms.internal.bvl;
import com.google.android.gms.internal.bwt;
import com.google.android.gms.internal.bww;
import com.google.android.gms.internal.cbr;
import com.google.android.gms.internal.cbt;
import com.google.android.gms.internal.cbz;
import com.google.android.gms.internal.ccc;
import com.google.android.gms.internal.ccf;
import com.google.android.gms.internal.cck;
import com.google.android.gms.internal.ccm;
import com.google.android.gms.internal.ccn;
import com.google.android.gms.internal.cco;
import com.google.android.gms.internal.ccp;
import com.google.android.gms.internal.ccw;
import com.google.android.gms.internal.ff;
import com.google.android.gms.internal.fj;
import com.google.android.gms.internal.jz;
import com.google.android.gms.internal.kj;
import com.google.android.gms.internal.zzaqj;
import com.google.android.gms.internal.zzaqk;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import org.json.JSONObject;

@ak
public final class ccl
extends cbr {
    private final b a;
    private ccm b;

    public ccl(b b2) {
        this.a = b2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final Bundle a(String string2, bpu bpu2, String string3) {
        block7 : {
            String string4;
            block6 : {
                string4 = String.valueOf(string2);
                string4 = string4.length() != 0 ? "Server parameters: ".concat(string4) : new String("Server parameters: ");
                kj.e(string4);
                try {
                    string4 = new Bundle();
                    if (string2 == null) break block6;
                    JSONObject jSONObject = new JSONObject(string2);
                    string4 = new Bundle();
                    Iterator iterator = jSONObject.keys();
                    do {
                        string2 = string4;
                        if (iterator.hasNext()) {
                            string2 = (String)iterator.next();
                            string4.putString(string2, jSONObject.getString(string2));
                            continue;
                        }
                        break block7;
                        break;
                    } while (true);
                }
                catch (Throwable throwable) {
                    kj.c("Could not get Server Parameters Bundle.", throwable);
                    throw new RemoteException();
                }
            }
            string2 = string4;
        }
        if (this.a instanceof AdMobAdapter) {
            string2.putString("adJson", string3);
            if (bpu2 != null) {
                string2.putInt("tagForChildDirectedTreatment", bpu2.g);
            }
        }
        return string2;
    }

    private static boolean a(bpu bpu2) {
        if (!bpu2.f) {
            bqj.a();
            if (!jz.a()) {
                return false;
            }
        }
        return true;
    }

    @Override
    public final a a() {
        if (!(this.a instanceof MediationBannerAdapter)) {
            String string2 = String.valueOf(this.a.getClass().getCanonicalName());
            string2 = string2.length() != 0 ? "MediationAdapter is not a MediationBannerAdapter: ".concat(string2) : new String("MediationAdapter is not a MediationBannerAdapter: ");
            kj.e(string2);
            throw new RemoteException();
        }
        try {
            a a2 = m.a(((MediationBannerAdapter)this.a).getBannerView());
            return a2;
        }
        catch (Throwable throwable) {
            kj.c("Could not get banner view from adapter.", throwable);
            throw new RemoteException();
        }
    }

    @Override
    public final void a(a a2) {
        try {
            a2 = (Context)m.a(a2);
            ((j)((Object)this.a)).a((Context)a2);
            return;
        }
        catch (Throwable throwable) {
            kj.a("Could not inform adapter of changed context", throwable);
            return;
        }
    }

    @Override
    public final void a(a a2, bpu bpu2, String string2, cbt cbt2) {
        this.a(a2, bpu2, string2, null, cbt2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(a object, bpu object2, String string2, ff ff2, String hashSet) {
        Bundle bundle;
        MediationRewardedVideoAdAdapter mediationRewardedVideoAdAdapter;
        block5 : {
            block3 : {
                block4 : {
                    if (!(this.a instanceof MediationRewardedVideoAdAdapter)) {
                        object = String.valueOf(this.a.getClass().getCanonicalName());
                        object = object.length() != 0 ? "MediationAdapter is not a MediationRewardedVideoAdAdapter: ".concat((String)object) : new String("MediationAdapter is not a MediationRewardedVideoAdAdapter: ");
                        kj.e((String)object);
                        throw new RemoteException();
                    }
                    kj.b("Initialize rewarded video adapter.");
                    try {
                        mediationRewardedVideoAdAdapter = (MediationRewardedVideoAdAdapter)this.a;
                        bundle = this.a((String)((Object)hashSet), (bpu)object2, null);
                        if (object2 == null) break block3;
                        hashSet = object2.e != null ? new HashSet<String>(object2.e) : null;
                        Date date = object2.b == -1L ? null : new Date(object2.b);
                        hashSet = new cck(date, object2.d, hashSet, object2.k, ccl.a((bpu)object2), object2.g, object2.r);
                        if (object2.m == null) break block4;
                        object2 = object2.m.getBundle(mediationRewardedVideoAdAdapter.getClass().getName());
                        break block5;
                    }
                    catch (Throwable throwable) {
                        kj.c("Could not initialize rewarded video adapter.", throwable);
                        throw new RemoteException();
                    }
                }
                object2 = null;
                break block5;
            }
            object2 = hashSet = null;
        }
        mediationRewardedVideoAdAdapter.initialize((Context)m.a((a)object), (com.google.android.gms.ads.mediation.a)((Object)hashSet), string2, new fj(ff2), bundle, (Bundle)object2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(a object, bpu bpu2, String string2, String string3, cbt cbt2) {
        Object var8_9;
        Object object2;
        MediationInterstitialAdapter mediationInterstitialAdapter;
        if (!(this.a instanceof MediationInterstitialAdapter)) {
            object = String.valueOf(this.a.getClass().getCanonicalName());
            object = object.length() != 0 ? "MediationAdapter is not a MediationInterstitialAdapter: ".concat((String)object) : new String("MediationAdapter is not a MediationInterstitialAdapter: ");
            kj.e((String)object);
            throw new RemoteException();
        }
        kj.b("Requesting interstitial ad from adapter.");
        try {
            mediationInterstitialAdapter = (MediationInterstitialAdapter)this.a;
            object2 = bpu2.e;
            var8_9 = null;
            object2 = object2 != null ? new HashSet<String>(bpu2.e) : null;
        }
        catch (Throwable throwable) {
            kj.c("Could not request interstitial ad from adapter.", throwable);
            throw new RemoteException();
        }
        Object object3 = bpu2.b == -1L ? null : new Date(bpu2.b);
        object3 = new cck((Date)object3, bpu2.d, (Set<String>)object2, bpu2.k, ccl.a(bpu2), bpu2.g, bpu2.r);
        object2 = var8_9;
        if (bpu2.m != null) {
            object2 = bpu2.m.getBundle(mediationInterstitialAdapter.getClass().getName());
        }
        mediationInterstitialAdapter.requestInterstitialAd((Context)m.a((a)object), new ccm(cbt2), this.a(string2, bpu2, string3), (com.google.android.gms.ads.mediation.a)object3, (Bundle)object2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(a object, bpu bpu2, String string2, String string3, cbt cbt2, bvl bvl2, List<String> object2) {
        Object var10_11;
        Collection<String> collection;
        MediationNativeAdapter mediationNativeAdapter;
        if (!(this.a instanceof MediationNativeAdapter)) {
            object = String.valueOf(this.a.getClass().getCanonicalName());
            object = object.length() != 0 ? "MediationAdapter is not a MediationNativeAdapter: ".concat((String)object) : new String("MediationAdapter is not a MediationNativeAdapter: ");
            kj.e((String)object);
            throw new RemoteException();
        }
        try {
            mediationNativeAdapter = (MediationNativeAdapter)this.a;
            collection = bpu2.e;
            var10_11 = null;
            collection = collection != null ? new HashSet<String>(bpu2.e) : null;
        }
        catch (Throwable throwable) {
            kj.c("Could not request native ad from adapter.", throwable);
            throw new RemoteException();
        }
        Date date = bpu2.b == -1L ? null : new Date(bpu2.b);
        object2 = new ccp(date, bpu2.d, (Set<String>)collection, bpu2.k, ccl.a(bpu2), bpu2.g, bvl2, (List<String>)object2, bpu2.r);
        bvl2 = var10_11;
        if (bpu2.m != null) {
            bvl2 = bpu2.m.getBundle(mediationNativeAdapter.getClass().getName());
        }
        this.b = new ccm(cbt2);
        mediationNativeAdapter.requestNativeAd((Context)m.a((a)object), this.b, this.a(string2, bpu2, string3), (i)object2, (Bundle)bvl2);
    }

    @Override
    public final void a(a a2, bpy bpy2, bpu bpu2, String string2, cbt cbt2) {
        this.a(a2, bpy2, bpu2, string2, null, cbt2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(a object, bpy bpy2, bpu bpu2, String string2, String string3, cbt cbt2) {
        Object var9_10;
        MediationBannerAdapter mediationBannerAdapter;
        Object object2;
        if (!(this.a instanceof MediationBannerAdapter)) {
            object = String.valueOf(this.a.getClass().getCanonicalName());
            object = object.length() != 0 ? "MediationAdapter is not a MediationBannerAdapter: ".concat((String)object) : new String("MediationAdapter is not a MediationBannerAdapter: ");
            kj.e((String)object);
            throw new RemoteException();
        }
        kj.b("Requesting banner ad from adapter.");
        try {
            mediationBannerAdapter = (MediationBannerAdapter)this.a;
            object2 = bpu2.e;
            var9_10 = null;
            object2 = object2 != null ? new HashSet<String>(bpu2.e) : null;
        }
        catch (Throwable throwable) {
            kj.c("Could not request banner ad from adapter.", throwable);
            throw new RemoteException();
        }
        Object object3 = bpu2.b == -1L ? null : new Date(bpu2.b);
        object3 = new cck((Date)object3, bpu2.d, (Set<String>)object2, bpu2.k, ccl.a(bpu2), bpu2.g, bpu2.r);
        object2 = var9_10;
        if (bpu2.m != null) {
            object2 = bpu2.m.getBundle(mediationBannerAdapter.getClass().getName());
        }
        mediationBannerAdapter.requestBannerAd((Context)m.a((a)object), new ccm(cbt2), this.a(string2, bpu2, string3), com.google.android.gms.ads.l.a(bpy2.e, bpy2.b, bpy2.a), (com.google.android.gms.ads.mediation.a)object3, (Bundle)object2);
    }

    @Override
    public final void a(a object, ff ff2, List<String> object2) {
        if (!(this.a instanceof InitializableMediationRewardedVideoAdAdapter)) {
            object = String.valueOf(this.a.getClass().getCanonicalName());
            object = object.length() != 0 ? "MediationAdapter is not an InitializableMediationRewardedVideoAdAdapter: ".concat((String)object) : new String("MediationAdapter is not an InitializableMediationRewardedVideoAdAdapter: ");
            kj.e((String)object);
            throw new RemoteException();
        }
        kj.b("Initialize rewarded video adapter.");
        try {
            InitializableMediationRewardedVideoAdAdapter initializableMediationRewardedVideoAdAdapter = (InitializableMediationRewardedVideoAdAdapter)this.a;
            ArrayList<Bundle> arrayList = new ArrayList<Bundle>();
            object2 = object2.iterator();
            while (object2.hasNext()) {
                arrayList.add(this.a((String)object2.next(), null, null));
            }
            initializableMediationRewardedVideoAdAdapter.initialize((Context)m.a((a)object), new fj(ff2), arrayList);
            return;
        }
        catch (Throwable throwable) {
            kj.c("Could not initialize rewarded video adapter.", throwable);
            throw new RemoteException();
        }
    }

    @Override
    public final void a(bpu bpu2, String string2) {
        this.a(bpu2, string2, null);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(bpu object, String string2, String string3) {
        Object object2;
        Object var6_7;
        MediationRewardedVideoAdAdapter mediationRewardedVideoAdAdapter;
        if (!(this.a instanceof MediationRewardedVideoAdAdapter)) {
            object = String.valueOf(this.a.getClass().getCanonicalName());
            object = object.length() != 0 ? "MediationAdapter is not a MediationRewardedVideoAdAdapter: ".concat((String)object) : new String("MediationAdapter is not a MediationRewardedVideoAdAdapter: ");
            kj.e((String)object);
            throw new RemoteException();
        }
        kj.b("Requesting rewarded video ad from adapter.");
        try {
            mediationRewardedVideoAdAdapter = (MediationRewardedVideoAdAdapter)this.a;
            object2 = object.e;
            var6_7 = null;
            object2 = object2 != null ? new HashSet<String>(object.e) : null;
        }
        catch (Throwable throwable) {
            kj.c("Could not load rewarded video ad from adapter.", throwable);
            throw new RemoteException();
        }
        Object object3 = object.b == -1L ? null : new Date(object.b);
        object3 = new cck((Date)object3, object.d, (Set<String>)object2, object.k, ccl.a((bpu)object), object.g, object.r);
        object2 = var6_7;
        if (object.m != null) {
            object2 = object.m.getBundle(mediationRewardedVideoAdAdapter.getClass().getName());
        }
        mediationRewardedVideoAdAdapter.loadAd((com.google.android.gms.ads.mediation.a)object3, this.a(string2, (bpu)object, string3), (Bundle)object2);
    }

    @Override
    public final void a(boolean bl2) {
        if (!(this.a instanceof k)) {
            String string2 = String.valueOf(this.a.getClass().getCanonicalName());
            string2 = string2.length() != 0 ? "MediationAdapter is not an OnImmersiveModeUpdatedListener: ".concat(string2) : new String("MediationAdapter is not an OnImmersiveModeUpdatedListener: ");
            kj.d(string2);
            return;
        }
        try {
            ((k)((Object)this.a)).onImmersiveModeUpdated(bl2);
            return;
        }
        catch (Throwable throwable) {
            kj.c("Could not set immersive mode.", throwable);
            return;
        }
    }

    @Override
    public final void b() {
        if (!(this.a instanceof MediationInterstitialAdapter)) {
            String string2 = String.valueOf(this.a.getClass().getCanonicalName());
            string2 = string2.length() != 0 ? "MediationAdapter is not a MediationInterstitialAdapter: ".concat(string2) : new String("MediationAdapter is not a MediationInterstitialAdapter: ");
            kj.e(string2);
            throw new RemoteException();
        }
        kj.b("Showing interstitial from adapter.");
        try {
            ((MediationInterstitialAdapter)this.a).showInterstitial();
            return;
        }
        catch (Throwable throwable) {
            kj.c("Could not show interstitial from adapter.", throwable);
            throw new RemoteException();
        }
    }

    @Override
    public final void c() {
        try {
            this.a.onDestroy();
            return;
        }
        catch (Throwable throwable) {
            kj.c("Could not destroy adapter.", throwable);
            throw new RemoteException();
        }
    }

    @Override
    public final void d() {
        try {
            this.a.onPause();
            return;
        }
        catch (Throwable throwable) {
            kj.c("Could not pause adapter.", throwable);
            throw new RemoteException();
        }
    }

    @Override
    public final void e() {
        try {
            this.a.onResume();
            return;
        }
        catch (Throwable throwable) {
            kj.c("Could not resume adapter.", throwable);
            throw new RemoteException();
        }
    }

    @Override
    public final void f() {
        if (!(this.a instanceof MediationRewardedVideoAdAdapter)) {
            String string2 = String.valueOf(this.a.getClass().getCanonicalName());
            string2 = string2.length() != 0 ? "MediationAdapter is not a MediationRewardedVideoAdAdapter: ".concat(string2) : new String("MediationAdapter is not a MediationRewardedVideoAdAdapter: ");
            kj.e(string2);
            throw new RemoteException();
        }
        kj.b("Show rewarded video ad from adapter.");
        try {
            ((MediationRewardedVideoAdAdapter)this.a).showVideo();
            return;
        }
        catch (Throwable throwable) {
            kj.c("Could not show rewarded video ad from adapter.", throwable);
            throw new RemoteException();
        }
    }

    @Override
    public final boolean g() {
        if (!(this.a instanceof MediationRewardedVideoAdAdapter)) {
            String string2 = String.valueOf(this.a.getClass().getCanonicalName());
            string2 = string2.length() != 0 ? "MediationAdapter is not a MediationRewardedVideoAdAdapter: ".concat(string2) : new String("MediationAdapter is not a MediationRewardedVideoAdAdapter: ");
            kj.e(string2);
            throw new RemoteException();
        }
        kj.b("Check if adapter is initialized.");
        try {
            boolean bl2 = ((MediationRewardedVideoAdAdapter)this.a).isInitialized();
            return bl2;
        }
        catch (Throwable throwable) {
            kj.c("Could not check if adapter is initialized.", throwable);
            throw new RemoteException();
        }
    }

    @Override
    public final cbz h() {
        f f2 = this.b.a();
        if (f2 instanceof g) {
            return new ccn((g)f2);
        }
        return null;
    }

    @Override
    public final ccc i() {
        f f2 = this.b.a();
        if (f2 instanceof h) {
            return new cco((h)f2);
        }
        return null;
    }

    @Override
    public final Bundle j() {
        if (!(this.a instanceof zzaqj)) {
            String string2 = String.valueOf(this.a.getClass().getCanonicalName());
            string2 = string2.length() != 0 ? "MediationAdapter is not a v2 MediationBannerAdapter: ".concat(string2) : new String("MediationAdapter is not a v2 MediationBannerAdapter: ");
            kj.e(string2);
            return new Bundle();
        }
        return ((zzaqj)this.a).zzmr();
    }

    @Override
    public final Bundle k() {
        if (!(this.a instanceof zzaqk)) {
            String string2 = String.valueOf(this.a.getClass().getCanonicalName());
            string2 = string2.length() != 0 ? "MediationAdapter is not a v2 MediationInterstitialAdapter: ".concat(string2) : new String("MediationAdapter is not a v2 MediationInterstitialAdapter: ");
            kj.e(string2);
            return new Bundle();
        }
        return ((zzaqk)this.a).getInterstitialAdapterInfo();
    }

    @Override
    public final Bundle l() {
        return new Bundle();
    }

    @Override
    public final boolean m() {
        return this.a instanceof InitializableMediationRewardedVideoAdAdapter;
    }

    @Override
    public final bwt n() {
        com.google.android.gms.ads.b.i i2 = this.b.c();
        if (i2 instanceof bww) {
            return ((bww)i2).b();
        }
        return null;
    }

    @Override
    public final bru o() {
        if (!(this.a instanceof com.google.android.gms.ads.mediation.m)) {
            return null;
        }
        try {
            bru bru2 = ((com.google.android.gms.ads.mediation.m)((Object)this.a)).getVideoController();
            return bru2;
        }
        catch (Throwable throwable) {
            kj.c("Could not get video controller.", throwable);
            return null;
        }
    }

    @Override
    public final ccf p() {
        l l2 = this.b.b();
        if (l2 != null) {
            return new ccw(l2);
        }
        return null;
    }
}

