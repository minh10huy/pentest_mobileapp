/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.ads.internal.av;
import com.google.android.gms.common.util.n;
import com.google.android.gms.internal.bz;
import com.google.android.gms.internal.he;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.OutputStream;

final class ca
implements Runnable {
    private /* synthetic */ OutputStream a;
    private /* synthetic */ byte[] b;

    ca(bz bz2, OutputStream outputStream, byte[] arrby) {
        this.a = outputStream;
        this.b = arrby;
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public final void run() {
        OutputStream outputStream;
        void var2_4;
        DataOutputStream dataOutputStream;
        block9 : {
            DataOutputStream dataOutputStream2;
            block10 : {
                block8 : {
                    dataOutputStream = dataOutputStream2 = new DataOutputStream(this.a);
                    try {
                        dataOutputStream2.writeInt(this.b.length);
                        dataOutputStream = dataOutputStream2;
                        dataOutputStream2.write(this.b);
                    }
                    catch (IOException iOException) {
                        break block8;
                    }
                    n.a(dataOutputStream2);
                    return;
                    catch (Throwable throwable) {
                        dataOutputStream = null;
                        break block9;
                    }
                    catch (IOException iOException) {
                        dataOutputStream2 = null;
                    }
                }
                dataOutputStream = dataOutputStream2;
                try {
                    he.b("Error transporting the ad response", (Throwable)((Object)outputStream));
                    dataOutputStream = dataOutputStream2;
                    av.i().a((Throwable)((Object)outputStream), "LargeParcelTeleporter.pipeData.1");
                    if (dataOutputStream2 != null) break block10;
                }
                catch (Throwable throwable) {
                    // empty catch block
                }
                n.a(this.a);
                return;
            }
            n.a(dataOutputStream2);
            return;
        }
        outputStream = dataOutputStream;
        if (dataOutputStream == null) {
            outputStream = this.a;
        }
        n.a(outputStream);
        throw var2_4;
    }
}

