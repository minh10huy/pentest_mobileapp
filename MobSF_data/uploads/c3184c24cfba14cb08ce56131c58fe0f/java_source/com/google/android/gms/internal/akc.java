/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Bundle
 *  android.os.RemoteException
 */
package com.google.android.gms.internal;

import android.os.Bundle;
import android.os.RemoteException;
import com.google.android.gms.internal.ahy;
import com.google.android.gms.internal.aiv;
import com.google.android.gms.internal.ajz;
import com.google.android.gms.internal.akb;

final class akc
implements Runnable {
    private boolean a = false;
    private /* synthetic */ String b;
    private /* synthetic */ Bundle c;
    private /* synthetic */ String d;
    private /* synthetic */ long e;
    private /* synthetic */ String f;
    private /* synthetic */ akb g;

    akc(akb akb2, String string2, Bundle bundle, String string3, long l2, String string4) {
        this.g = akb2;
        this.b = string2;
        this.c = bundle;
        this.d = string3;
        this.e = l2;
        this.f = string4;
    }

    @Override
    public final void run() {
        if (ajz.a(this.g.a) == 3) {
            ajz.b(this.g.a).a(this.b, this.c, this.d, this.e, true);
            return;
        }
        if (ajz.a(this.g.a) == 4) {
            aiv.d(String.format("Container failed to load: skipping  event interceptor by logging event back to Firebase directly: name = %s, origin = %s, params = %s.", new Object[]{this.b, this.d, this.c}));
            try {
                ajz.c(this.g.a).a(this.d, this.b, this.c, this.e);
                return;
            }
            catch (RemoteException remoteException) {
                ahy.a("Error logging event on measurement proxy: ", (Throwable)remoteException, ajz.d(this.g.a));
                return;
            }
        }
        if (ajz.a(this.g.a) != 1 && ajz.a(this.g.a) != 2) {
            int n2 = ajz.a(this.g.a);
            StringBuilder stringBuilder = new StringBuilder(28);
            stringBuilder.append("Unexpected state:");
            stringBuilder.append(n2);
            ahy.b(stringBuilder.toString(), ajz.d(this.g.a));
            return;
        }
        if (!this.a) {
            aiv.d(String.format("Container not loaded yet: deferring event interceptor by enqueuing the event: name = %s, origin = %s, params = %s.", new Object[]{this.b, this.f, this.c}));
            this.a = true;
            ajz.e(this.g.a).add(this);
            return;
        }
        ahy.b("Invalid state - not expecting to see a deferredevent during container loading.", ajz.d(this.g.a));
    }
}

