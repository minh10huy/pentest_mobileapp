/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.ComponentName
 *  android.content.Context
 *  android.content.Intent
 *  android.content.ServiceConnection
 *  android.os.IBinder
 *  android.os.IInterface
 *  android.os.RemoteException
 */
package com.google.android.gms.internal;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.IBinder;
import android.os.IInterface;
import android.os.RemoteException;
import com.google.android.gms.analytics.p;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.stats.a;
import com.google.android.gms.internal.rb;
import com.google.android.gms.internal.re;
import com.google.android.gms.internal.rf;
import com.google.android.gms.internal.sh;
import com.google.android.gms.internal.si;
import com.google.android.gms.internal.sn;
import com.google.android.gms.internal.sp;

public final class rd
implements ServiceConnection {
    final /* synthetic */ rb a;
    private volatile sn b;
    private volatile boolean c;

    protected rd(rb rb2) {
        this.a = rb2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final sn a() {
        p.d();
        Object object = new Intent("com.google.android.gms.analytics.service.START");
        object.setComponent(new ComponentName("com.google.android.gms", "com.google.android.gms.analytics.service.AnalyticsService"));
        Context context = this.a.i();
        object.putExtra("app_package_name", context.getPackageName());
        a a2 = a.a();
        synchronized (this) {
            block6 : {
                this.b = null;
                this.c = true;
                boolean bl2 = a2.a(context, (Intent)object, rb.a(this.a), 129);
                this.a.a("Bind to service requested", bl2);
                if (!bl2) {
                    this.c = false;
                    return null;
                }
                try {
                    this.wait(sh.B.a());
                    break block6;
                }
                catch (InterruptedException interruptedException) {}
                this.a.e("Wait for service connect was interrupted");
            }
            this.c = false;
            object = this.b;
            this.b = null;
            if (object == null) {
                this.a.f("Successfully bound to service but never got onServiceConnected callback");
            }
            return object;
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    public final void onServiceConnected(ComponentName var1_1, IBinder var2_5) {
        block22 : {
            block21 : {
                block20 : {
                    ah.b("AnalyticsServiceConnection.onServiceConnected");
                    // MONITORENTER : this
                    if (var2_5 == null) {
                        this.a.f("Service connected with null binder");
                        this.notifyAll();
                        return;
                    }
                    var5_6 = null;
                    var1_1 /* !! */  = null;
                    var4_7 = null;
                    var3_8 /* !! */  = var1_1 /* !! */ ;
                    try {
                        ** try [egrp 3[TRYBLOCK] [2 : 41->145)] { 
lbl15: // 1 sources:
                        ** GOTO lbl18
                    }
                    catch (Throwable var1_2) {}
                    {
                        break block20;
lbl18: // 1 sources:
                        var6_9 = var2_5.getInterfaceDescriptor();
                        var3_8 /* !! */  = var1_1 /* !! */ ;
                        if ("com.google.android.gms.analytics.internal.IAnalyticsService".equals(var6_9)) {
                            if (var2_5 == null) {
                                var1_1 /* !! */  = var4_7;
                            } else {
                                var3_8 /* !! */  = var1_1 /* !! */ ;
                                var4_7 = var2_5.queryLocalInterface("com.google.android.gms.analytics.internal.IAnalyticsService");
                                var3_8 /* !! */  = var1_1 /* !! */ ;
                                if (var4_7 instanceof sn) {
                                    var3_8 /* !! */  = var1_1 /* !! */ ;
                                    var1_1 /* !! */  = (sn)var4_7;
                                } else {
                                    var3_8 /* !! */  = var1_1 /* !! */ ;
                                    var1_1 /* !! */  = new sp(var2_5);
                                }
                            }
                            var3_8 /* !! */  = var1_1 /* !! */ ;
                            this.a.b("Bound to IAnalyticsService interface");
                        } else {
                            var3_8 /* !! */  = var1_1 /* !! */ ;
                            this.a.e("Got binder with a wrong descriptor", var6_9);
                            var1_1 /* !! */  = var5_6;
                        }
                        break block21;
                    }
                }
                this.notifyAll();
                throw var1_2;
lbl43: // 1 sources:
                catch (RemoteException var1_3) {}
                this.a.f("Service connect failed to get IAnalyticsService");
                var1_1 /* !! */  = var3_8 /* !! */ ;
            }
            if (var1_1 /* !! */  == null) {
                a.a();
                this.a.i().unbindService((ServiceConnection)rb.a(this.a));
            }
            if (!this.c) {
                this.a.e("onServiceConnected received after the timeout limit");
                this.a.l().a(new re(this, (sn)var1_1 /* !! */ ));
            } else {
                this.b = var1_1 /* !! */ ;
            }
            break block22;
            catch (IllegalArgumentException var1_4) {}
        }
        this.notifyAll();
        // MONITOREXIT : this
    }

    public final void onServiceDisconnected(ComponentName componentName) {
        ah.b("AnalyticsServiceConnection.onServiceDisconnected");
        this.a.l().a(new rf(this, componentName));
    }
}

