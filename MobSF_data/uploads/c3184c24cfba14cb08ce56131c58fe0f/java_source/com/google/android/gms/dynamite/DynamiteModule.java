/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.database.Cursor
 *  android.os.IBinder
 *  android.os.IInterface
 *  android.os.RemoteException
 *  android.util.Log
 */
package com.google.android.gms.dynamite;

import android.content.Context;
import android.database.Cursor;
import android.os.IBinder;
import android.os.IInterface;
import android.os.RemoteException;
import android.util.Log;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.util.DynamiteApi;
import com.google.android.gms.dynamite.e;
import com.google.android.gms.dynamite.f;
import com.google.android.gms.dynamite.g;
import com.google.android.gms.dynamite.h;
import com.google.android.gms.dynamite.i;
import com.google.android.gms.dynamite.j;
import com.google.android.gms.dynamite.k;
import com.google.android.gms.dynamite.l;
import com.google.android.gms.dynamite.m;
import com.google.android.gms.dynamite.n;
import java.io.Serializable;
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;

public final class DynamiteModule {
    public static final d a;
    public static final d b;
    public static final d c;
    public static final d d;
    public static final d e;
    private static Boolean f;
    private static k g;
    private static m h;
    private static String i;
    private static final ThreadLocal<a> j;
    private static final i k;
    private static d l;
    private final Context m;

    static {
        j = new ThreadLocal();
        k = new com.google.android.gms.dynamite.a();
        a = new com.google.android.gms.dynamite.b();
        l = new com.google.android.gms.dynamite.c();
        b = new com.google.android.gms.dynamite.d();
        c = new e();
        d = new f();
        e = new g();
    }

    private DynamiteModule(Context context) {
        this.m = ah.a(context);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static int a(Context object, String string2) {
        try {
            object = object.getApplicationContext().getClassLoader();
            Object object2 = new StringBuilder(String.valueOf(string2).length() + 61);
            object2.append("com.google.android.gms.dynamite.descriptors.");
            object2.append(string2);
            object2.append(".ModuleDescriptor");
            object2 = object.loadClass(object2.toString());
            object = object2.getDeclaredField("MODULE_ID");
            object2 = object2.getDeclaredField("MODULE_VERSION");
            if (object.get(null).equals(string2)) return object2.getInt(null);
            object = String.valueOf(object.get(null));
            object2 = new StringBuilder(String.valueOf(object).length() + 51 + String.valueOf(string2).length());
            object2.append("Module descriptor id '");
            object2.append((String)object);
            object2.append("' didn't match expected id '");
            object2.append(string2);
            object2.append("'");
            Log.e((String)"DynamiteModule", (String)object2.toString());
            return 0;
        }
        catch (Exception exception) {
            String string3 = String.valueOf(exception.getMessage());
            string3 = string3.length() != 0 ? "Failed to load module descriptor class: ".concat(string3) : new String("Failed to load module descriptor class: ");
            Log.e((String)"DynamiteModule", (String)string3);
            return 0;
        }
        catch (ClassNotFoundException classNotFoundException) {}
        StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 45);
        stringBuilder.append("Local module descriptor class for ");
        stringBuilder.append(string2);
        stringBuilder.append(" not found.");
        Log.w((String)"DynamiteModule", (String)stringBuilder.toString());
        return 0;
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    public static int a(Context context, String string2, boolean bl2) {
        Object object;
        block23 : {
            block27 : {
                block28 : {
                    block25 : {
                        block21 : {
                            Serializable serializable;
                            int n2;
                            block22 : {
                                Object object2;
                                block26 : {
                                    block24 : {
                                        // MONITORENTER : com.google.android.gms.dynamite.DynamiteModule.class
                                        serializable = f;
                                        object = serializable;
                                        if (serializable != null) break block23;
                                        serializable = context.getApplicationContext().getClassLoader().loadClass(DynamiteLoaderClassLoader.class.getName());
                                        object = serializable.getDeclaredField("sClassLoader");
                                        // MONITORENTER : serializable
                                        object2 = (ClassLoader)object.get(null);
                                        if (object2 == null) break block24;
                                        if (object2 != ClassLoader.getSystemClassLoader()) {
                                            DynamiteModule.a(object2);
                                            break block21;
                                        }
                                        break block25;
                                    }
                                    if (!"com.google.android.gms".equals(context.getApplicationContext().getPackageName())) break block26;
                                    object.set(null, ClassLoader.getSystemClassLoader());
                                    break block25;
                                }
                                try {
                                    n2 = DynamiteModule.c(context, string2, bl2);
                                    if (i == null) break block22;
                                    if (i.isEmpty()) {
                                        return n2;
                                    }
                                    object2 = new h(i, ClassLoader.getSystemClassLoader());
                                    DynamiteModule.a(object2);
                                    object.set(null, object2);
                                    f = Boolean.TRUE;
                                    // MONITOREXIT : serializable
                                }
                                catch (c c2) {}
                                return n2;
                            }
                            // MONITOREXIT : serializable
                            // MONITOREXIT : com.google.android.gms.dynamite.DynamiteModule.class
                            return n2;
                            catch (ClassNotFoundException | IllegalAccessException | NoSuchFieldException reflectiveOperationException) {
                                object = String.valueOf(reflectiveOperationException);
                                serializable = new StringBuilder(String.valueOf(object).length() + 30);
                                serializable.append("Failed to load module via V2: ");
                                serializable.append((String)object);
                                Log.w((String)"DynamiteModule", (String)serializable.toString());
                                object = Boolean.FALSE;
                            }
                            break block27;
                            catch (c c3) {}
                        }
                        object = Boolean.TRUE;
                        break block28;
                        object.set(null, ClassLoader.getSystemClassLoader());
                    }
                    object = Boolean.FALSE;
                }
                // MONITOREXIT : serializable
            }
            f = object;
        }
        // MONITOREXIT : com.google.android.gms.dynamite.DynamiteModule.class
        if (!object.booleanValue()) return DynamiteModule.b(context, string2, bl2);
        return DynamiteModule.c(context, string2, bl2);
        catch (c c4) {
            String string3 = String.valueOf(c4.getMessage());
            string3 = string3.length() != 0 ? "Failed to retrieve remote module version: ".concat(string3) : new String("Failed to retrieve remote module version: ");
            Log.w((String)"DynamiteModule", (String)string3);
            return 0;
        }
    }

    private static Context a(Context context, String string2, int n2, Cursor cursor, m m2) {
        try {
            context = (Context)com.google.android.gms.a.m.a(m2.a(com.google.android.gms.a.m.a(context), string2, n2, com.google.android.gms.a.m.a(cursor)));
            return context;
        }
        catch (Exception exception) {
            String string3 = String.valueOf(exception.toString());
            string3 = string3.length() != 0 ? "Failed to load DynamiteLoader: ".concat(string3) : new String("Failed to load DynamiteLoader: ");
            Log.e((String)"DynamiteModule", (String)string3);
            return null;
        }
    }

    /*
     * Exception decompiling
     */
    public static DynamiteModule a(Context var0, d var1_2, String var2_3) {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [0[TRYBLOCK]], but top level block is 5[CATCHBLOCK]
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:416)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:468)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:2960)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:818)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    private static DynamiteModule a(Context context, String string2, int n2) {
        // MONITORENTER : com.google.android.gms.dynamite.DynamiteModule.class
        Boolean bl2 = f;
        // MONITOREXIT : com.google.android.gms.dynamite.DynamiteModule.class
        if (bl2 == null) throw new c("Failed to determine which loading route to use.", null);
        if (bl2 == false) return DynamiteModule.b(context, string2, n2);
        return DynamiteModule.c(context, string2, n2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static k a(Context object) {
        synchronized (DynamiteModule.class) {
            if (g != null) {
                return g;
            }
            if (com.google.android.gms.common.m.b().a((Context)object) != 0) {
                return null;
            }
            try {
                object = (IBinder)object.createPackageContext("com.google.android.gms", 3).getClassLoader().loadClass("com.google.android.gms.chimera.container.DynamiteLoaderImpl").newInstance();
                if (object == null) {
                    return null;
                }
                IInterface iInterface = object.queryLocalInterface("com.google.android.gms.dynamite.IDynamiteLoader");
                object = iInterface instanceof k ? (k)iInterface : new l((IBinder)object);
                if (object == null) return null;
                g = object;
            }
            catch (Exception exception) {
                String string2 = String.valueOf(exception.getMessage());
                string2 = string2.length() != 0 ? "Failed to load IDynamiteLoader from GmsCore: ".concat(string2) : new String("Failed to load IDynamiteLoader from GmsCore: ");
                Log.e((String)"DynamiteModule", (String)string2);
            }
            return object;
            return null;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static void a(ClassLoader object) {
        try {
            IInterface iInterface;
            object = (IBinder)object.loadClass("com.google.android.gms.dynamiteloader.DynamiteLoaderV2").getConstructor(new Class[0]).newInstance(new Object[0]);
            object = object == null ? null : ((iInterface = object.queryLocalInterface("com.google.android.gms.dynamite.IDynamiteLoaderV2")) instanceof m ? (m)iInterface : new n((IBinder)object));
            h = object;
            return;
        }
        catch (ClassNotFoundException | IllegalAccessException | InstantiationException | NoSuchMethodException | InvocationTargetException reflectiveOperationException) {
            throw new c("Failed to instantiate dynamite loader", reflectiveOperationException, null);
        }
    }

    public static int b(Context context, String string2) {
        return DynamiteModule.a(context, string2, false);
    }

    private static int b(Context context, String string2, boolean bl2) {
        k k2 = DynamiteModule.a(context);
        if (k2 == null) {
            return 0;
        }
        try {
            int n2 = k2.a(com.google.android.gms.a.m.a(context), string2, bl2);
            return n2;
        }
        catch (RemoteException remoteException) {
            String string3 = String.valueOf(remoteException.getMessage());
            string3 = string3.length() != 0 ? "Failed to retrieve remote module version: ".concat(string3) : new String("Failed to retrieve remote module version: ");
            Log.w((String)"DynamiteModule", (String)string3);
            return 0;
        }
    }

    private static DynamiteModule b(Context object, String string2, int n2) {
        Object object2 = new StringBuilder(String.valueOf(string2).length() + 51);
        object2.append("Selected remote version of ");
        object2.append(string2);
        object2.append(", version >= ");
        object2.append(n2);
        Log.i((String)"DynamiteModule", (String)object2.toString());
        object2 = DynamiteModule.a(object);
        if (object2 != null) {
            try {
                object = object2.a(com.google.android.gms.a.m.a(object), string2, n2);
            }
            catch (RemoteException remoteException) {
                throw new c("Failed to load remote module.", (Throwable)remoteException, null);
            }
            if (com.google.android.gms.a.m.a((com.google.android.gms.a.a)object) != null) {
                return new DynamiteModule((Context)com.google.android.gms.a.m.a((com.google.android.gms.a.a)object));
            }
            throw new c("Failed to load remote module.", null);
        }
        throw new c("Failed to create IDynamiteLoader.", null);
    }

    /*
     * Exception decompiling
     */
    private static int c(Context var0, String var1_1, boolean var2_9) {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // java.lang.IllegalStateException: Backjump on non jumping statement [] lbl36 : TryStatement: try { 6[TRYBLOCK]

        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.Cleaner$1.call(Cleaner.java:44)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.Cleaner$1.call(Cleaner.java:22)
        // org.benf.cfr.reader.util.graph.GraphVisitorDFS.process(GraphVisitorDFS.java:67)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.Cleaner.removeUnreachableCode(Cleaner.java:54)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.RemoveDeterministicJumps.apply(RemoveDeterministicJumps.java:35)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:497)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }

    private static DynamiteModule c(Context context, String string2) {
        string2 = (string2 = String.valueOf(string2)).length() != 0 ? "Selected local version of ".concat(string2) : new String("Selected local version of ");
        Log.i((String)"DynamiteModule", (String)string2);
        return new DynamiteModule(context.getApplicationContext());
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    private static DynamiteModule c(Context context, String string2, int n2) {
        Object object = new StringBuilder(String.valueOf(string2).length() + 51);
        object.append("Selected remote version of ");
        object.append(string2);
        object.append(", version >= ");
        object.append(n2);
        Log.i((String)"DynamiteModule", (String)object.toString());
        // MONITORENTER : com.google.android.gms.dynamite.DynamiteModule.class
        object = h;
        // MONITOREXIT : com.google.android.gms.dynamite.DynamiteModule.class
        if (object == null) throw new c("DynamiteLoaderV2 was not cached.", null);
        a a2 = j.get();
        if (a2 == null) throw new c("No result cursor", null);
        if (a2.a == null) throw new c("No result cursor", null);
        if ((context = DynamiteModule.a(context.getApplicationContext(), string2, n2, a2.a, (m)object)) == null) throw new c("Failed to get module context", null);
        return new DynamiteModule(context);
    }

    public final Context a() {
        return this.m;
    }

    public final IBinder a(String string2) {
        try {
            IBinder iBinder = (IBinder)this.m.getClassLoader().loadClass(string2).newInstance();
            return iBinder;
        }
        catch (ClassNotFoundException | IllegalAccessException | InstantiationException reflectiveOperationException) {
            string2 = String.valueOf(string2);
            string2 = string2.length() != 0 ? "Failed to instantiate module class: ".concat(string2) : new String("Failed to instantiate module class: ");
            throw new c(string2, reflectiveOperationException, null);
        }
    }

    @DynamiteApi
    public static class DynamiteLoaderClassLoader {
        public static ClassLoader sClassLoader;
    }

    static final class a {
        public Cursor a;

        private a() {
        }

        /* synthetic */ a(com.google.android.gms.dynamite.a a2) {
            this();
        }
    }

    static final class b
    implements i {
        private final int a;
        private final int b;

        public b(int n2, int n3) {
            this.a = n2;
            this.b = 0;
        }

        @Override
        public final int a(Context context, String string2) {
            return this.a;
        }

        @Override
        public final int a(Context context, String string2, boolean bl2) {
            return 0;
        }
    }

    public static final class c
    extends Exception {
        private c(String string2) {
            super(string2);
        }

        /* synthetic */ c(String string2, com.google.android.gms.dynamite.a a2) {
            this(string2);
        }

        private c(String string2, Throwable throwable) {
            super(string2, throwable);
        }

        /* synthetic */ c(String string2, Throwable throwable, com.google.android.gms.dynamite.a a2) {
            this(string2, throwable);
        }
    }

    public static interface d {
        public j a(Context var1, String var2, i var3);
    }

}

