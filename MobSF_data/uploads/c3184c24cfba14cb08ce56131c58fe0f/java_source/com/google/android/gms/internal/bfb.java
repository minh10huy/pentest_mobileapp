/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.bel;
import com.google.android.gms.internal.bem;
import com.google.android.gms.internal.beo;
import com.google.android.gms.internal.bes;
import com.google.android.gms.internal.bex;
import com.google.android.gms.internal.bey;
import com.google.android.gms.internal.bfa;
import java.io.DataInputStream;
import java.io.IOException;
import java.net.SocketTimeoutException;

final class bfb {
    private DataInputStream a = null;
    private bes b = null;
    private bex c = null;
    private byte[] d = new byte[112];
    private bem e;
    private volatile boolean f = false;

    bfb(bes bes2) {
        this.b = bes2;
    }

    private final int a(byte[] arrby, int n2, int n3) {
        this.a.readFully(arrby, n2, n3);
        return n3;
    }

    private final void a(bey bey2) {
        this.f = true;
        this.b.a(bey2);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    final void a() {
        this.c = this.b.c();
        while (this.f == false) {
            block17 : {
                block18 : {
                    block16 : {
                        var3_3 = this.a(this.d, 0, 1) + 0;
                        var1_1 = (this.d[0] & 128) != 0;
                        var2_2 = (this.d[0] & 112) != 0 ? 1 : 0;
                        if (var2_2 != 0) throw new bey("Invalid frame received");
                        var2_2 = (byte)(this.d[0] & 15);
                        var3_3 += this.a(this.d, var3_3, 1);
                        var4_4 = this.d[1];
                        var5_5 = 0L;
                        if (var4_4 >= 126) break block16;
                        var5_5 = var4_4;
                        break block18;
                    }
                    if (var4_4 == 126) {
                        this.a(this.d, var3_3, 2);
                        var5_5 = (this.d[2] & 255) << 8 | this.d[3] & 255;
                    } else if (var4_4 == 127) {
                        var4_4 = this.a(this.d, var3_3, 8);
                        var7_6 = this.d;
                        var3_3 = var3_3 + var4_4 - 8;
                        var5_5 = ((long)var7_6[var3_3] << 56) + ((long)(var7_6[var3_3 + 1] & 255) << 48) + ((long)(var7_6[var3_3 + 2] & 255) << 40) + ((long)(var7_6[var3_3 + 3] & 255) << 32) + ((long)(var7_6[var3_3 + 4] & 255) << 24) + (long)((var7_6[var3_3 + 5] & 255) << 16) + (long)((var7_6[var3_3 + 6] & 255) << 8) + (long)(var7_6[var3_3 + 7] & 255);
                    }
                }
                var3_3 = (int)var5_5;
                var8_10 = new byte[var3_3];
                this.a(var8_10, 0, var3_3);
                if (var2_2 != 8) ** GOTO lbl36
                this.b.f();
                continue;
lbl36: // 1 sources:
                if (var2_2 == 10) continue;
                if (var2_2 == 1 || var2_2 == 2 || var2_2 == 9 || var2_2 == 0) break block17;
                var7_6 = new StringBuilder(24);
                var7_6.append("Unsupported opcode: ");
                var7_6.append(var2_2);
                throw new bey(var7_6.toString());
            }
            if (var2_2 != 9) ** GOTO lbl49
            if (var1_1 == false) throw new bey("PING must not fragment across frames");
            try {
                if (var8_10.length > 125) throw new bey("PING frame too long");
                this.b.a(var8_10);
                continue;
lbl49: // 1 sources:
                if (this.e != null) {
                    if (var2_2 != 0) throw new bey("Failed to continue outstanding frame");
                }
                if (this.e == null) {
                    if (var2_2 == 0) throw new bey("Received continuing frame, but there's nothing to continue");
                }
                if (this.e == null) {
                    var7_6 = var2_2 == 2 ? new bel() : new beo();
                    this.e = var7_6;
                }
                if (this.e.a(var8_10) == false) throw new bey("Failed to decode frame");
                if (!var1_1) continue;
                var7_6 = this.e.a();
                this.e = null;
                if (var7_6 == null) throw new bey("Failed to decode whole message");
                this.c.a((bfa)var7_6);
            }
            catch (bey var7_7) {
                this.a(var7_7);
            }
            catch (IOException var7_8) {
                this.a(new bey("IO Error", var7_8));
            }
            catch (SocketTimeoutException var7_9) {}
        }
    }

    final void a(DataInputStream dataInputStream) {
        this.a = dataInputStream;
    }

    final void b() {
        this.f = true;
    }
}

