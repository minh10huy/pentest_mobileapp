/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.ComponentName
 *  android.content.Context
 *  android.content.pm.ActivityInfo
 *  android.content.pm.PackageManager
 *  android.content.pm.PackageManager$NameNotFoundException
 *  android.content.pm.ServiceInfo
 *  android.text.TextUtils
 */
package com.google.android.gms.internal;

import android.content.ComponentName;
import android.content.Context;
import android.content.pm.ActivityInfo;
import android.content.pm.PackageManager;
import android.content.pm.ServiceInfo;
import android.text.TextUtils;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.util.m;
import com.google.android.gms.internal.qb;
import com.google.android.gms.internal.ss;
import java.net.URI;
import java.net.URISyntaxException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

public final class tf {
    private static final char[] a = new char[]{'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};

    public static double a(String string2, double d2) {
        if (string2 == null) {
            return 100.0;
        }
        try {
            d2 = Double.parseDouble(string2);
            return d2;
        }
        catch (NumberFormatException numberFormatException) {
            return 100.0;
        }
    }

    public static long a(String string2) {
        if (string2 == null) {
            return 0L;
        }
        try {
            long l2 = Long.parseLong(string2);
            return l2;
        }
        catch (NumberFormatException numberFormatException) {
            return 0L;
        }
    }

    public static qb a(ss object, String object2) {
        ah.a(object);
        if (TextUtils.isEmpty((CharSequence)object2)) {
            return null;
        }
        new HashMap();
        try {
            object2 = String.valueOf(object2);
            object2 = object2.length() != 0 ? "?".concat((String)object2) : new String("?");
            object2 = m.a(new URI((String)object2), "UTF-8");
            object = new qb();
            object.e((String)object2.get("utm_content"));
            object.c((String)object2.get("utm_medium"));
            object.a((String)object2.get("utm_campaign"));
            object.b((String)object2.get("utm_source"));
            object.d((String)object2.get("utm_term"));
            object.f((String)object2.get("utm_id"));
            object.g((String)object2.get("anid"));
            object.h((String)object2.get("gclid"));
            object.i((String)object2.get("dclid"));
            object.j((String)object2.get("aclid"));
            return object;
        }
        catch (URISyntaxException uRISyntaxException) {
            object.d("No valid campaign data found", uRISyntaxException);
            return null;
        }
    }

    public static String a(Locale locale) {
        if (locale == null) {
            return null;
        }
        String string2 = locale.getLanguage();
        if (TextUtils.isEmpty((CharSequence)string2)) {
            return null;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(string2.toLowerCase());
        if (!TextUtils.isEmpty((CharSequence)locale.getCountry())) {
            stringBuilder.append("-");
            stringBuilder.append(locale.getCountry().toLowerCase());
        }
        return stringBuilder.toString();
    }

    public static void a(Map<String, String> map, String string2, String string3) {
        if (string3 != null && !map.containsKey(string2)) {
            map.put(string2, string3);
        }
    }

    public static void a(Map<String, String> map, String string2, Map<String, String> map2) {
        tf.a(map, string2, map2.get(string2));
    }

    public static void a(Map<String, String> map, String string2, boolean bl2) {
        if (!map.containsKey(string2)) {
            String string3 = bl2 ? "1" : "0";
            map.put(string2, string3);
        }
    }

    public static boolean a(double d2, String string2) {
        if (d2 > 0.0) {
            int n2;
            if (d2 >= 100.0) {
                return false;
            }
            if (!TextUtils.isEmpty((CharSequence)string2)) {
                int n3 = string2.length() - 1;
                int n4 = 0;
                do {
                    n2 = n4;
                    if (n3 >= 0) {
                        n2 = string2.charAt(n3);
                        n2 = (n4 << 6 & 268435455) + n2 + (n2 << 14);
                        int n5 = 266338304 & n2;
                        n4 = n2;
                        if (n5 != 0) {
                            n4 = n2 ^ n5 >> 21;
                        }
                        --n3;
                        continue;
                    }
                    break;
                } while (true);
            } else {
                n2 = 1;
            }
            if ((double)(n2 % 10000) >= d2 * 100.0) {
                return true;
            }
        }
        return false;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public static boolean a(Context context, String string2) {
        block4 : {
            try {
                context = context.getPackageManager().getServiceInfo(new ComponentName(context, string2), 4);
                if (context == null) break block4;
            }
            catch (PackageManager.NameNotFoundException nameNotFoundException) {
                return false;
            }
            boolean bl2 = context.enabled;
            if (!bl2) break block4;
            return true;
        }
        do {
            return false;
            break;
        } while (true);
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public static boolean a(Context context, String string2, boolean bl2) {
        block5 : {
            try {
                context = context.getPackageManager().getReceiverInfo(new ComponentName(context, string2), 2);
                if (context == null) break block5;
            }
            catch (PackageManager.NameNotFoundException nameNotFoundException) {
                return false;
            }
            if (!context.enabled) break block5;
            if (!bl2) return true;
            bl2 = context.exported;
            if (!bl2) break block5;
            return true;
        }
        do {
            return false;
            break;
        } while (true);
    }

    public static boolean a(String string2, boolean bl2) {
        if (string2 != null && !string2.equalsIgnoreCase("true") && !string2.equalsIgnoreCase("yes")) {
            if (string2.equalsIgnoreCase("1")) {
                return true;
            }
            if (string2.equalsIgnoreCase("false") || string2.equalsIgnoreCase("no") || string2.equalsIgnoreCase("0")) {
                return false;
            }
        }
        return true;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static MessageDigest b(String string2) {
        int n2 = 0;
        while (n2 < 2) {
            try {
                MessageDigest messageDigest = MessageDigest.getInstance(string2);
                if (messageDigest != null) {
                    return messageDigest;
                }
            }
            catch (NoSuchAlgorithmException noSuchAlgorithmException) {}
            ++n2;
        }
        return null;
    }

    public static void b(Map<String, String> map, String string2, String string3) {
        if (string3 != null && TextUtils.isEmpty((CharSequence)map.get(string2))) {
            map.put(string2, string3);
        }
    }

    public static boolean c(String string2) {
        if (TextUtils.isEmpty((CharSequence)string2)) {
            return true;
        }
        if (!string2.startsWith("http:")) {
            return true;
        }
        return false;
    }
}

