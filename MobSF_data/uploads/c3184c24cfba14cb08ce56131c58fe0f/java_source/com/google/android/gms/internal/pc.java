/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.content.Context
 *  android.webkit.WebResourceResponse
 *  android.webkit.WebView
 */
package com.google.android.gms.internal;

import android.annotation.TargetApi;
import android.content.Context;
import android.webkit.WebResourceResponse;
import android.webkit.WebView;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.fx;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.jb;
import com.google.android.gms.internal.km;
import com.google.android.gms.internal.lf;
import com.google.android.gms.internal.nu;
import com.google.android.gms.internal.nv;
import com.google.android.gms.internal.pk;
import com.google.android.gms.internal.pr;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

@ak
@TargetApi(value=11)
public class pc
extends nv {
    public pc(nu nu2, boolean bl2) {
        super(nu2, bl2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    protected final WebResourceResponse a(WebView object, String string2, Map<String, String> object2) {
        if (!(object instanceof nu)) {
            he.e("Tried to intercept request from a WebView that wasn't an AdWebView.");
            return null;
        }
        Object object3 = (nu)object;
        if (this.a != null) {
            this.a.a(string2, (Map<String, String>)object2, 1);
        }
        if (!"mraid.js".equalsIgnoreCase(new File(string2).getName())) {
            return super.shouldInterceptRequest((WebView)object, string2);
        }
        if (object3.u() != null) {
            object3.u().m();
        }
        object = object3.s().d() ? btk.G : (object3.x() ? btk.F : btk.E);
        object = (String)bqj.f().a(object);
        try {
            string2 = object3.getContext();
            object2 = object3.j().a;
            object3 = new HashMap();
            object3.put("User-Agent", av.e().a((Context)string2, (String)object2));
            object3.put("Cache-Control", "max-stale=3600");
            object = new jb((Context)string2).a((String)object, (Map<String, String>)object3).get(60L, TimeUnit.SECONDS);
            if (object != null) return new WebResourceResponse("application/javascript", "UTF-8", (InputStream)new ByteArrayInputStream(object.getBytes("UTF-8")));
            return null;
        }
        catch (IOException | InterruptedException | ExecutionException | TimeoutException exception) {
            String string3 = String.valueOf(exception.getMessage());
            string3 = string3.length() != 0 ? "Could not fetch MRAID JS. ".concat(string3) : new String("Could not fetch MRAID JS. ");
            he.e(string3);
            return null;
        }
    }
}

