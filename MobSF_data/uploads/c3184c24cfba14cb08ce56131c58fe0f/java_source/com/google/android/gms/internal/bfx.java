/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.bfv;
import com.google.android.gms.internal.bfw;
import com.google.android.gms.internal.bfy;
import com.google.android.gms.internal.bfz;
import com.google.android.gms.internal.bgb;
import com.google.android.gms.internal.bgc;
import com.google.android.gms.internal.bge;
import com.google.android.gms.internal.bgf;
import com.google.android.gms.internal.bgg;
import com.google.android.gms.internal.bgx;
import java.io.Serializable;
import java.nio.charset.Charset;
import java.util.Iterator;

public abstract class bfx
implements Serializable,
Iterable<Byte> {
    public static final bfx a = new bge(bgx.b);
    private static final bgb b;
    private int c = 0;

    static {
        bgb bgb2 = bfv.a() ? new bgf(null) : new bfz(null);
        b = bgb2;
    }

    bfx() {
    }

    public static bfx a(String string2) {
        return new bge(string2.getBytes(bgx.a));
    }

    public static bfx a(byte[] arrby) {
        return bfx.a(arrby, 0, arrby.length);
    }

    public static bfx a(byte[] arrby, int n2, int n3) {
        return new bge(b.a(arrby, n2, n3));
    }

    static int b(int n2, int n3, int n4) {
        int n5 = n3 - n2;
        if ((n2 | n3 | n5 | n4 - n3) < 0) {
            if (n2 >= 0) {
                if (n3 < n2) {
                    StringBuilder stringBuilder = new StringBuilder(66);
                    stringBuilder.append("Beginning index larger than ending index: ");
                    stringBuilder.append(n2);
                    stringBuilder.append(", ");
                    stringBuilder.append(n3);
                    throw new IndexOutOfBoundsException(stringBuilder.toString());
                }
                StringBuilder stringBuilder = new StringBuilder(37);
                stringBuilder.append("End index: ");
                stringBuilder.append(n3);
                stringBuilder.append(" >= ");
                stringBuilder.append(n4);
                throw new IndexOutOfBoundsException(stringBuilder.toString());
            }
            StringBuilder stringBuilder = new StringBuilder(32);
            stringBuilder.append("Beginning index: ");
            stringBuilder.append(n2);
            stringBuilder.append(" < 0");
            throw new IndexOutOfBoundsException(stringBuilder.toString());
        }
        return n5;
    }

    static bfx b(byte[] arrby) {
        return new bge(arrby);
    }

    static bgc b(int n2) {
        return new bgc(n2, null);
    }

    static void b(int n2, int n3) {
        if ((n3 - (n2 + 1) | n2) < 0) {
            if (n2 < 0) {
                StringBuilder stringBuilder = new StringBuilder(22);
                stringBuilder.append("Index < 0: ");
                stringBuilder.append(n2);
                throw new ArrayIndexOutOfBoundsException(stringBuilder.toString());
            }
            StringBuilder stringBuilder = new StringBuilder(40);
            stringBuilder.append("Index > length: ");
            stringBuilder.append(n2);
            stringBuilder.append(", ");
            stringBuilder.append(n3);
            throw new ArrayIndexOutOfBoundsException(stringBuilder.toString());
        }
    }

    public abstract byte a(int var1);

    public abstract int a();

    protected abstract int a(int var1, int var2, int var3);

    public abstract bfx a(int var1, int var2);

    abstract void a(bfw var1);

    protected abstract void a(byte[] var1, int var2, int var3, int var4);

    public final boolean b() {
        if (this.a() == 0) {
            return true;
        }
        return false;
    }

    public final byte[] c() {
        int n2 = this.a();
        if (n2 == 0) {
            return bgx.b;
        }
        byte[] arrby = new byte[n2];
        this.a(arrby, 0, 0, n2);
        return arrby;
    }

    public abstract bgg d();

    protected final int e() {
        return this.c;
    }

    public abstract boolean equals(Object var1);

    public final int hashCode() {
        int n2;
        int n3 = n2 = this.c;
        if (n2 == 0) {
            n3 = this.a();
            n3 = n2 = this.a(n3, 0, n3);
            if (n2 == 0) {
                n3 = 1;
            }
            this.c = n3;
        }
        return n3;
    }

    @Override
    public /* synthetic */ Iterator iterator() {
        return new bfy(this);
    }

    public final String toString() {
        return String.format("<ByteString@%s size=%d>", Integer.toHexString(System.identityHashCode(this)), this.a());
    }
}

