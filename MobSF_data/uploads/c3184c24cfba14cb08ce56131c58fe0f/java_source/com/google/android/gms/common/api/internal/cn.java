/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.app.Activity
 *  android.app.ActivityManager
 *  android.app.ActivityManager$RunningAppProcessInfo
 *  android.app.Application
 *  android.app.Application$ActivityLifecycleCallbacks
 *  android.content.ComponentCallbacks
 *  android.content.ComponentCallbacks2
 *  android.content.res.Configuration
 *  android.os.Bundle
 */
package com.google.android.gms.common.api.internal;

import android.annotation.TargetApi;
import android.app.Activity;
import android.app.ActivityManager;
import android.app.Application;
import android.content.ComponentCallbacks;
import android.content.ComponentCallbacks2;
import android.content.res.Configuration;
import android.os.Bundle;
import com.google.android.gms.common.api.internal.co;
import com.google.android.gms.common.util.p;
import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;

public final class cn
implements Application.ActivityLifecycleCallbacks,
ComponentCallbacks2 {
    private static final cn a = new cn();
    private final AtomicBoolean b = new AtomicBoolean();
    private final AtomicBoolean c = new AtomicBoolean();
    private final ArrayList<co> d = new ArrayList();
    private boolean e = false;

    private cn() {
    }

    public static cn a() {
        return a;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static void a(Application application) {
        cn cn2 = a;
        synchronized (cn2) {
            if (!cn.a.e) {
                application.registerActivityLifecycleCallbacks((Application.ActivityLifecycleCallbacks)a);
                application.registerComponentCallbacks((ComponentCallbacks)a);
                cn.a.e = true;
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void b(boolean bl2) {
        cn cn2 = a;
        synchronized (cn2) {
            ArrayList<co> arrayList = this.d;
            int n2 = arrayList.size();
            int n3 = 0;
            while (n3 < n2) {
                co co2 = arrayList.get(n3);
                ++n3;
                co2.a(bl2);
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a(co co2) {
        cn cn2 = a;
        synchronized (cn2) {
            this.d.add(co2);
            return;
        }
    }

    @TargetApi(value=16)
    public final boolean a(boolean bl2) {
        if (!this.c.get()) {
            if (p.b()) {
                ActivityManager.RunningAppProcessInfo runningAppProcessInfo = new ActivityManager.RunningAppProcessInfo();
                ActivityManager.getMyMemoryState((ActivityManager.RunningAppProcessInfo)runningAppProcessInfo);
                if (!this.c.getAndSet(true) && runningAppProcessInfo.importance > 100) {
                    this.b.set(true);
                }
            } else {
                return true;
            }
        }
        return this.b.get();
    }

    public final boolean b() {
        return this.b.get();
    }

    public final void onActivityCreated(Activity activity, Bundle bundle) {
        boolean bl2 = this.b.compareAndSet(true, false);
        this.c.set(true);
        if (bl2) {
            this.b(false);
        }
    }

    public final void onActivityDestroyed(Activity activity) {
    }

    public final void onActivityPaused(Activity activity) {
    }

    public final void onActivityResumed(Activity activity) {
        boolean bl2 = this.b.compareAndSet(true, false);
        this.c.set(true);
        if (bl2) {
            this.b(false);
        }
    }

    public final void onActivitySaveInstanceState(Activity activity, Bundle bundle) {
    }

    public final void onActivityStarted(Activity activity) {
    }

    public final void onActivityStopped(Activity activity) {
    }

    public final void onConfigurationChanged(Configuration configuration) {
    }

    public final void onLowMemory() {
    }

    public final void onTrimMemory(int n2) {
        if (n2 == 20 && this.b.compareAndSet(false, true)) {
            this.c.set(true);
            this.b(true);
        }
    }
}

