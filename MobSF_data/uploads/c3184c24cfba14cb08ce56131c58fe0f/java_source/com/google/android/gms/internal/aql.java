/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.ajm;
import com.google.android.gms.internal.alc;
import com.google.android.gms.internal.ald;
import com.google.android.gms.internal.asj;
import com.google.android.gms.internal.asm;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;

public final class aql
extends ald {
    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Override
    protected final /* varargs */ asj<?> a(ajm object, asj<?> ... arrasj) {
        ah.b(true);
        boolean bl2 = arrasj.length == 2 || arrasj.length == 3;
        ah.b(bl2);
        object = alc.d(arrasj[0]);
        String string2 = alc.d(arrasj[1]);
        bl2 = arrasj.length < 3 ? false : "true".equalsIgnoreCase(alc.d(arrasj[2]));
        int n2 = 64;
        if (bl2) {
            n2 = 66;
        }
        try {
            return new asm(Pattern.compile(string2, n2).matcher((CharSequence)object).find());
        }
        catch (PatternSyntaxException patternSyntaxException) {
            return new asm(false);
        }
    }
}

