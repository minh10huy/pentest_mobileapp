/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.bfw;
import com.google.android.gms.internal.bfx;
import com.google.android.gms.internal.bgk;
import com.google.android.gms.internal.bgl;
import com.google.android.gms.internal.bgx;
import com.google.android.gms.internal.bhh;
import com.google.android.gms.internal.bhu;
import com.google.android.gms.internal.bja;
import com.google.android.gms.internal.bjc;
import com.google.android.gms.internal.bjf;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.logging.Level;
import java.util.logging.Logger;

public abstract class bgj
extends bfw {
    private static final Logger b = Logger.getLogger(bgj.class.getName());
    private static final boolean c = bja.a();
    bgl a;

    private bgj() {
    }

    /* synthetic */ bgj(bgk bgk2) {
        this();
    }

    public static int a(double d2) {
        return 8;
    }

    public static int a(float f2) {
        return 4;
    }

    public static int a(int n2, bhh bhh2) {
        n2 = bgj.d(n2);
        int n3 = bhh2.b();
        return n2 + (bgj.f(n3) + n3);
    }

    public static int a(bhh bhh2) {
        int n2 = bhh2.b();
        return bgj.f(n2) + n2;
    }

    public static int a(boolean bl2) {
        return 1;
    }

    public static bgj a(byte[] arrby) {
        return bgj.b(arrby, 0, arrby.length);
    }

    public static int b(int n2, bhh bhh2) {
        return (bgj.d(1) << 1) + bgj.e(2, n2) + bgj.a(3, bhh2);
    }

    public static int b(int n2, String string2) {
        return bgj.d(n2) + bgj.b(string2);
    }

    public static int b(int n2, boolean bl2) {
        return bgj.d(n2) + 1;
    }

    public static int b(bfx bfx2) {
        int n2 = bfx2.a();
        return bgj.f(n2) + n2;
    }

    public static int b(bhu bhu2) {
        int n2 = bhu2.d();
        return bgj.f(n2) + n2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static int b(String string2) {
        int n2;
        try {
            n2 = bjc.a(string2);
            return bgj.f(n2) + n2;
        }
        catch (bjf bjf2) {}
        n2 = string2.getBytes(bgx.a).length;
        return bgj.f(n2) + n2;
    }

    public static int b(byte[] arrby) {
        int n2 = arrby.length;
        return bgj.f(n2) + n2;
    }

    public static bgj b(byte[] arrby, int n2, int n3) {
        return new a(arrby, n2, n3);
    }

    public static int c(int n2, long l2) {
        return bgj.d(n2) + bgj.d(l2);
    }

    public static int c(int n2, bfx bfx2) {
        n2 = bgj.d(n2);
        int n3 = bfx2.a();
        return n2 + (bgj.f(n3) + n3);
    }

    public static int c(int n2, bhu bhu2) {
        return bgj.d(n2) + bgj.b(bhu2);
    }

    public static int c(long l2) {
        return bgj.d(l2);
    }

    @Deprecated
    public static int c(bhu bhu2) {
        return bhu2.d();
    }

    static /* synthetic */ boolean c() {
        return c;
    }

    public static int d(int n2) {
        return bgj.f(n2 << 3);
    }

    public static int d(int n2, long l2) {
        return bgj.d(n2) + 8;
    }

    public static int d(int n2, bfx bfx2) {
        return (bgj.d(1) << 1) + bgj.e(2, n2) + bgj.c(3, bfx2);
    }

    public static int d(int n2, bhu bhu2) {
        return (bgj.d(1) << 1) + bgj.e(2, n2) + bgj.c(3, bhu2);
    }

    public static int d(long l2) {
        int n2;
        if ((-128L & l2) == 0L) {
            return 1;
        }
        if (l2 < 0L) {
            return 10;
        }
        if ((-34359738368L & l2) != 0L) {
            n2 = 6;
            l2 >>>= 28;
        } else {
            n2 = 2;
        }
        int n3 = n2;
        long l3 = l2;
        if ((-2097152L & l2) != 0L) {
            n3 = n2 + 2;
            l3 = l2 >>> 14;
        }
        n2 = n3;
        if ((l3 & -16384L) != 0L) {
            n2 = n3 + 1;
        }
        return n2;
    }

    public static int e(int n2) {
        if (n2 >= 0) {
            return bgj.f(n2);
        }
        return 10;
    }

    public static int e(int n2, int n3) {
        return bgj.d(n2) + bgj.f(n3);
    }

    public static int e(long l2) {
        return bgj.d(bgj.h(l2));
    }

    public static int f(int n2) {
        if ((n2 & -128) == 0) {
            return 1;
        }
        if ((n2 & -16384) == 0) {
            return 2;
        }
        if ((-2097152 & n2) == 0) {
            return 3;
        }
        if ((n2 & -268435456) == 0) {
            return 4;
        }
        return 5;
    }

    public static int f(int n2, int n3) {
        return bgj.d(n2) + 4;
    }

    public static int f(long l2) {
        return 8;
    }

    public static int g(int n2) {
        return bgj.f(bgj.l(n2));
    }

    public static int g(int n2, int n3) {
        return bgj.d(n2) + bgj.e(n3);
    }

    public static int g(long l2) {
        return 8;
    }

    public static int h(int n2) {
        return 4;
    }

    private static long h(long l2) {
        return l2 >> 63 ^ l2 << 1;
    }

    public static int i(int n2) {
        return 4;
    }

    public static int j(int n2) {
        return bgj.e(n2);
    }

    @Deprecated
    public static int k(int n2) {
        return bgj.f(n2);
    }

    private static int l(int n2) {
        return n2 >> 31 ^ n2 << 1;
    }

    public abstract int a();

    public abstract void a(byte var1);

    public abstract void a(int var1);

    public abstract void a(int var1, int var2);

    public abstract void a(int var1, long var2);

    public abstract void a(int var1, bfx var2);

    public abstract void a(int var1, bhu var2);

    public abstract void a(int var1, String var2);

    public abstract void a(int var1, boolean var2);

    public abstract void a(long var1);

    public abstract void a(bfx var1);

    public abstract void a(bhu var1);

    public abstract void a(String var1);

    final void a(String arrby, bjf bjf2) {
        b.logp(Level.WARNING, "com.google.protobuf.CodedOutputStream", "inefficientWriteStringNoTag", "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!", bjf2);
        arrby = arrby.getBytes(bgx.a);
        try {
            this.b(arrby.length);
            this.a(arrby, 0, arrby.length);
            return;
        }
        catch (b b2) {
            throw b2;
        }
        catch (IndexOutOfBoundsException indexOutOfBoundsException) {
            throw new b(indexOutOfBoundsException);
        }
    }

    public final void b() {
        if (this.a() == 0) {
            return;
        }
        throw new IllegalStateException("Did not write as much data as expected.");
    }

    public abstract void b(int var1);

    public abstract void b(int var1, int var2);

    public abstract void b(int var1, long var2);

    public abstract void b(int var1, bfx var2);

    public abstract void b(int var1, bhu var2);

    public abstract void b(long var1);

    public abstract void c(int var1);

    public abstract void c(int var1, int var2);

    public abstract void c(byte[] var1, int var2, int var3);

    public abstract void d(int var1, int var2);

    static class a
    extends bgj {
        private final byte[] b;
        private final int c;
        private final int d;
        private int e;

        a(byte[] arrby, int n2, int n3) {
            super(null);
            if (arrby != null) {
                int n4 = arrby.length;
                int n5 = n2 + n3;
                if ((n2 | n3 | n4 - n5) >= 0) {
                    this.b = arrby;
                    this.c = n2;
                    this.e = n2;
                    this.d = n5;
                    return;
                }
                throw new IllegalArgumentException(String.format("Array range is invalid. Buffer.length=%d, offset=%d, length=%d", arrby.length, n2, n3));
            }
            throw new NullPointerException("buffer");
        }

        @Override
        public final int a() {
            return this.d - this.e;
        }

        @Override
        public final void a(byte by2) {
            try {
                byte[] arrby = this.b;
                int n2 = this.e;
                this.e = n2 + 1;
            }
            catch (IndexOutOfBoundsException indexOutOfBoundsException) {
                throw new b(String.format("Pos: %d, limit: %d, len: %d", this.e, this.d, 1), indexOutOfBoundsException);
            }
            arrby[n2] = by2;
        }

        @Override
        public final void a(int n2) {
            if (n2 >= 0) {
                this.b(n2);
                return;
            }
            this.a((long)n2);
        }

        @Override
        public final void a(int n2, int n3) {
            this.b(n2 << 3 | n3);
        }

        @Override
        public final void a(int n2, long l2) {
            this.a(n2, 0);
            this.a(l2);
        }

        @Override
        public final void a(int n2, bfx bfx2) {
            this.a(n2, 2);
            this.a(bfx2);
        }

        @Override
        public final void a(int n2, bhu bhu2) {
            this.a(n2, 2);
            this.a(bhu2);
        }

        @Override
        public final void a(int n2, String string2) {
            this.a(n2, 2);
            this.a(string2);
        }

        @Override
        public final void a(int n2, boolean bl2) {
            this.a(n2, 0);
            this.a((byte)(bl2 ? 1 : 0));
        }

        /*
         * Unable to fully structure code
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         * Lifted jumps to return sites
         */
        @Override
        public final void a(long var1_1) {
            var4_2 = var1_1;
            if (bgj.c()) {
                var4_2 = var1_1;
                if (this.a() >= 10) {
                    do {
                        if ((var1_1 & -128L) == 0L) {
                            var6_5 = this.b;
                            var3_3 = this.e;
                            this.e = var3_3 + 1;
                            bja.a(var6_5, (long)var3_3, (byte)var1_1);
                            return;
                        }
                        var6_5 = this.b;
                        var3_3 = this.e;
                        this.e = var3_3 + 1;
                        bja.a(var6_5, (long)var3_3, (byte)((int)var1_1 & 127 | 128));
                        var1_1 >>>= 7;
                    } while (true);
                }
            }
            do lbl-1000: // 2 sources:
            {
                if ((var4_2 & -128L) == 0L) {
                    var6_6 = this.b;
                    var3_4 = this.e;
                    this.e = var3_4 + 1;
                    var6_6[var3_4] = (byte)var4_2;
                    return;
                }
                var6_6 = this.b;
                var3_4 = this.e;
                this.e = var3_4 + 1;
                break;
            } while (true);
            catch (IndexOutOfBoundsException var6_7) {}
            {
                var6_6[var3_4] = (byte)((int)var4_2 & 127 | 128);
                var4_2 >>>= 7;
                ** while (true)
            }
            throw new b(String.format("Pos: %d, limit: %d, len: %d", new Object[]{this.e, this.d, 1}), var6_7);
        }

        @Override
        public final void a(bfx bfx2) {
            this.b(bfx2.a());
            bfx2.a(this);
        }

        @Override
        public final void a(bhu bhu2) {
            this.b(bhu2.d());
            bhu2.a(this);
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        public final void a(String string2) {
            int n2 = this.e;
            try {
                int n3 = a.f(string2.length() * 3);
                int n4 = a.f(string2.length());
                if (n4 == n3) {
                    this.e = n2 + n4;
                    n3 = bjc.a(string2, this.b, this.e, this.a());
                    this.e = n2;
                    this.b(n3 - n2 - n4);
                    this.e = n3;
                    return;
                }
                this.b(bjc.a(string2));
                this.e = bjc.a(string2, this.b, this.e, this.a());
                return;
            }
            catch (IndexOutOfBoundsException indexOutOfBoundsException) {
                throw new b(indexOutOfBoundsException);
            }
            catch (bjf bjf2) {
                this.e = n2;
                this.a(string2, bjf2);
                return;
            }
        }

        @Override
        public final void a(byte[] arrby, int n2, int n3) {
            this.c(arrby, n2, n3);
        }

        /*
         * Unable to fully structure code
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         * Lifted jumps to return sites
         */
        @Override
        public final void b(int var1_1) {
            var2_2 = var1_1;
            if (bgj.c()) {
                var2_2 = var1_1;
                if (this.a() >= 10) {
                    do {
                        if ((var1_1 & -128) == 0) {
                            var3_3 = this.b;
                            var2_2 = this.e;
                            this.e = var2_2 + 1;
                            bja.a(var3_3, (long)var2_2, (byte)var1_1);
                            return;
                        }
                        var3_3 = this.b;
                        var2_2 = this.e;
                        this.e = var2_2 + 1;
                        bja.a(var3_3, (long)var2_2, (byte)(var1_1 & 127 | 128));
                        var1_1 >>>= 7;
                    } while (true);
                }
            }
            do lbl-1000: // 2 sources:
            {
                if ((var2_2 & -128) == 0) {
                    var3_4 = this.b;
                    var1_1 = this.e;
                    this.e = var1_1 + 1;
                    var3_4[var1_1] = (byte)var2_2;
                    return;
                }
                var3_4 = this.b;
                var1_1 = this.e;
                this.e = var1_1 + 1;
                break;
            } while (true);
            catch (IndexOutOfBoundsException var3_5) {}
            {
                var3_4[var1_1] = (byte)(var2_2 & 127 | 128);
                var2_2 >>>= 7;
                ** while (true)
            }
            throw new b(String.format("Pos: %d, limit: %d, len: %d", new Object[]{this.e, this.d, 1}), var3_5);
        }

        @Override
        public final void b(int n2, int n3) {
            this.a(n2, 0);
            this.a(n3);
        }

        @Override
        public final void b(int n2, long l2) {
            this.a(n2, 1);
            this.b(l2);
        }

        @Override
        public final void b(int n2, bfx bfx2) {
            this.a(1, 3);
            this.c(2, n2);
            this.a(3, bfx2);
            this.a(1, 4);
        }

        @Override
        public final void b(int n2, bhu bhu2) {
            this.a(1, 3);
            this.c(2, n2);
            this.a(3, bhu2);
            this.a(1, 4);
        }

        @Override
        public final void b(long l2) {
            byte[] arrby;
            int n2;
            try {
                arrby = this.b;
                n2 = this.e;
                this.e = n2 + 1;
            }
            catch (IndexOutOfBoundsException indexOutOfBoundsException) {
                throw new b(String.format("Pos: %d, limit: %d, len: %d", this.e, this.d, 1), indexOutOfBoundsException);
            }
            arrby[n2] = (byte)l2;
            arrby = this.b;
            n2 = this.e;
            this.e = n2 + 1;
            arrby[n2] = (byte)(l2 >> 8);
            arrby = this.b;
            n2 = this.e;
            this.e = n2 + 1;
            arrby[n2] = (byte)(l2 >> 16);
            arrby = this.b;
            n2 = this.e;
            this.e = n2 + 1;
            arrby[n2] = (byte)(l2 >> 24);
            arrby = this.b;
            n2 = this.e;
            this.e = n2 + 1;
            arrby[n2] = (byte)(l2 >> 32);
            arrby = this.b;
            n2 = this.e;
            this.e = n2 + 1;
            arrby[n2] = (byte)(l2 >> 40);
            arrby = this.b;
            n2 = this.e;
            this.e = n2 + 1;
            arrby[n2] = (byte)(l2 >> 48);
            arrby = this.b;
            n2 = this.e;
            this.e = n2 + 1;
            arrby[n2] = (byte)(l2 >> 56);
        }

        @Override
        public final void c(int n2) {
            int n3;
            byte[] arrby;
            try {
                arrby = this.b;
                n3 = this.e;
                this.e = n3 + 1;
            }
            catch (IndexOutOfBoundsException indexOutOfBoundsException) {
                throw new b(String.format("Pos: %d, limit: %d, len: %d", this.e, this.d, 1), indexOutOfBoundsException);
            }
            arrby[n3] = (byte)n2;
            arrby = this.b;
            n3 = this.e;
            this.e = n3 + 1;
            arrby[n3] = (byte)(n2 >> 8);
            arrby = this.b;
            n3 = this.e;
            this.e = n3 + 1;
            arrby[n3] = (byte)(n2 >> 16);
            arrby = this.b;
            n3 = this.e;
            this.e = n3 + 1;
            arrby[n3] = n2 >> 24;
        }

        @Override
        public final void c(int n2, int n3) {
            this.a(n2, 0);
            this.b(n3);
        }

        @Override
        public final void c(byte[] arrby, int n2, int n3) {
            try {
                System.arraycopy(arrby, n2, this.b, this.e, n3);
                this.e += n3;
                return;
            }
            catch (IndexOutOfBoundsException indexOutOfBoundsException) {
                throw new b(String.format("Pos: %d, limit: %d, len: %d", this.e, this.d, n3), indexOutOfBoundsException);
            }
        }

        @Override
        public final void d(int n2, int n3) {
            this.a(n2, 5);
            this.c(n3);
        }
    }

    public static final class b
    extends IOException {
        b() {
            super("CodedOutputStream was writing to a flat byte array and ran out of space.");
        }

        b(String string2, Throwable throwable) {
            String string3 = String.valueOf("CodedOutputStream was writing to a flat byte array and ran out of space.: ");
            string2 = (string2 = String.valueOf(string2)).length() != 0 ? string3.concat(string2) : new String(string3);
            super(string2, throwable);
        }

        b(Throwable throwable) {
            super("CodedOutputStream was writing to a flat byte array and ran out of space.", throwable);
        }
    }

}

