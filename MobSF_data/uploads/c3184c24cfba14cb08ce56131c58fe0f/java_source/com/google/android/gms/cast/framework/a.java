/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.pm.ApplicationInfo
 *  android.content.pm.PackageManager
 *  android.content.pm.PackageManager$NameNotFoundException
 *  android.os.Bundle
 *  android.os.IBinder
 *  android.os.RemoteException
 *  android.text.TextUtils
 */
package com.google.android.gms.cast.framework;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.os.IBinder;
import android.os.RemoteException;
import android.support.v7.d.g;
import android.text.TextUtils;
import com.google.android.gms.cast.framework.ad;
import com.google.android.gms.cast.framework.b;
import com.google.android.gms.cast.framework.d;
import com.google.android.gms.cast.framework.e;
import com.google.android.gms.cast.framework.f;
import com.google.android.gms.cast.framework.h;
import com.google.android.gms.cast.framework.i;
import com.google.android.gms.cast.framework.q;
import com.google.android.gms.cast.framework.t;
import com.google.android.gms.cast.framework.x;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.uc;
import com.google.android.gms.internal.ud;
import com.google.android.gms.internal.um;
import com.google.android.gms.internal.vl;
import com.google.android.gms.internal.wi;
import com.google.android.gms.internal.ye;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public final class a {
    private static final wi a = new wi("CastContext");
    private static a b;
    private final Context c;
    private final t d;
    private final h e;
    private final q f;
    private final f g;
    private final d h;
    private final b i;
    private um j;
    private ud k;
    private final List<i> l;

    private a(Context object, b b2, List<i> list) {
        this.c = object.getApplicationContext();
        this.i = b2;
        this.j = new um(g.a(this.c));
        this.l = list;
        this.f();
        object = this.e();
        this.d = uc.a(this.c, b2, this.j, (Map<String, IBinder>)object);
        b2 = null;
        try {
            object = this.d.b();
        }
        catch (RemoteException remoteException) {
            a.a((Throwable)remoteException, "Unable to call %s on %s.", "getDiscoveryManagerImpl", t.class.getSimpleName());
            object = null;
        }
        object = object == null ? null : new q((x)object);
        this.f = object;
        try {
            object = this.d.a();
        }
        catch (RemoteException remoteException) {
            a.a((Throwable)remoteException, "Unable to call %s on %s.", "getSessionManagerImpl", t.class.getSimpleName());
            object = null;
        }
        object = object == null ? null : new h((ad)object, this.c);
        this.e = object;
        this.h = new d(this.e);
        object = this.e == null ? b2 : new f(this.i, this.e, new vl(this.c));
        this.g = object;
    }

    public static a a(Context context) {
        ah.b("Must be called from the main thread.");
        if (b == null) {
            e e2 = a.b(context.getApplicationContext());
            b = new a(context, e2.a(context.getApplicationContext()), e2.b(context.getApplicationContext()));
        }
        return b;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static e b(Context object) {
        try {
            String string2;
            Bundle bundle = ye.a((Context)object).a((String)object.getPackageName(), (int)128).metaData;
            if (bundle == null) {
                a.d("Bundle is null", new Object[0]);
            }
            if ((string2 = bundle.getString("com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME")) != null) {
                return (e)Class.forName(string2).getDeclaredConstructor(new Class[0]).newInstance(new Object[0]);
            }
            throw new IllegalStateException("The fully qualified name of the implementation of OptionsProvider must be provided as a metadata in the AndroidManifest.xml with key com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME.");
        }
        catch (PackageManager.NameNotFoundException | ClassNotFoundException | IllegalAccessException | InstantiationException | NoSuchMethodException | NullPointerException | InvocationTargetException object2) {
            throw new IllegalStateException("Failed to initialize CastContext.", (Throwable)object2);
        }
    }

    private final Map<String, IBinder> e() {
        HashMap<String, IBinder> hashMap = new HashMap<String, IBinder>();
        if (this.k != null) {
            hashMap.put(this.k.b(), this.k.d());
        }
        if (this.l != null) {
            for (i i2 : this.l) {
                ah.a(i2, (Object)"Additional SessionProvider must not be null.");
                String string2 = ah.a(i2.b(), (Object)"Category for SessionProvider must not be null or empty string.");
                ah.b(hashMap.containsKey(string2) ^ true, String.format("SessionProvider for category %s already added", string2));
                hashMap.put(string2, i2.d());
            }
        }
        return hashMap;
    }

    /*
     * Enabled aggressive block sorting
     */
    private final void f() {
        ud ud2 = !TextUtils.isEmpty((CharSequence)this.i.a()) ? new ud(this.c, this.i, this.j) : null;
        this.k = ud2;
    }

    public final b a() {
        ah.b("Must be called from the main thread.");
        return this.i;
    }

    public final h b() {
        ah.b("Must be called from the main thread.");
        return this.e;
    }

    public final q c() {
        ah.b("Must be called from the main thread.");
        return this.f;
    }

    public final com.google.android.gms.a.a d() {
        try {
            com.google.android.gms.a.a a2 = this.d.c();
            return a2;
        }
        catch (RemoteException remoteException) {
            a.a((Throwable)remoteException, "Unable to call %s on %s.", "getWrappedThis", t.class.getSimpleName());
            return null;
        }
    }
}

