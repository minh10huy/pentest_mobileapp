/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.res.Resources
 *  android.content.res.TypedArray
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  android.util.AttributeSet
 */
package com.google.android.gms.maps.model;

import android.content.Context;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.AttributeSet;
import com.google.android.gms.a;
import com.google.android.gms.common.internal.ReflectedParcelable;
import com.google.android.gms.common.internal.ae;
import com.google.android.gms.common.internal.ag;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.wz;
import com.google.android.gms.internal.xc;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.g;
import java.util.Arrays;

public final class LatLngBounds
extends wz
implements ReflectedParcelable {
    public static final Parcelable.Creator<LatLngBounds> CREATOR = new g();
    public final LatLng a;
    public final LatLng b;

    public LatLngBounds(LatLng latLng, LatLng latLng2) {
        ah.a(latLng, (Object)"null southwest");
        ah.a(latLng2, (Object)"null northeast");
        boolean bl2 = latLng2.a >= latLng.a;
        ah.b(bl2, "southern latitude exceeds northern latitude (%s > %s)", latLng.a, latLng2.a);
        this.a = latLng;
        this.b = latLng2;
    }

    public static LatLngBounds a(Context object, AttributeSet object2) {
        if (object != null) {
            if (object2 == null) {
                return null;
            }
            Object object3 = object.getResources().obtainAttributes((AttributeSet)object2, a.d.MapAttrs);
            object = object3.hasValue(a.d.MapAttrs_latLngBoundsSouthWestLatitude) ? Float.valueOf(object3.getFloat(a.d.MapAttrs_latLngBoundsSouthWestLatitude, 0.0f)) : null;
            object2 = object3.hasValue(a.d.MapAttrs_latLngBoundsSouthWestLongitude) ? Float.valueOf(object3.getFloat(a.d.MapAttrs_latLngBoundsSouthWestLongitude, 0.0f)) : null;
            Float f2 = object3.hasValue(a.d.MapAttrs_latLngBoundsNorthEastLatitude) ? Float.valueOf(object3.getFloat(a.d.MapAttrs_latLngBoundsNorthEastLatitude, 0.0f)) : null;
            object3 = object3.hasValue(a.d.MapAttrs_latLngBoundsNorthEastLongitude) ? Float.valueOf(object3.getFloat(a.d.MapAttrs_latLngBoundsNorthEastLongitude, 0.0f)) : null;
            if (object != null && object2 != null && f2 != null) {
                if (object3 == null) {
                    return null;
                }
                return new LatLngBounds(new LatLng(object.floatValue(), object2.floatValue()), new LatLng(f2.floatValue(), object3.floatValue()));
            }
        }
        return null;
    }

    public final boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof LatLngBounds)) {
            return false;
        }
        object = (LatLngBounds)object;
        if (this.a.equals(object.a) && this.b.equals(object.b)) {
            return true;
        }
        return false;
    }

    public final int hashCode() {
        return Arrays.hashCode(new Object[]{this.a, this.b});
    }

    public final String toString() {
        return ae.a(this).a("southwest", this.a).a("northeast", this.b).toString();
    }

    public final void writeToParcel(Parcel parcel, int n2) {
        int n3 = xc.a(parcel);
        xc.a(parcel, 2, this.a, n2, false);
        xc.a(parcel, 3, this.b, n2, false);
        xc.a(parcel, n3);
    }
}

