/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.atf;
import com.google.android.gms.internal.atp;
import com.google.android.gms.internal.bfq;
import com.google.android.gms.internal.bjy;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.ub;
import com.google.android.gms.internal.wu;
import com.google.android.gms.internal.yg;
import com.google.android.gms.internal.yj;
import com.google.android.gms.internal.yk;
import com.google.android.gms.internal.ym;
import java.nio.ByteBuffer;
import java.security.GeneralSecurityException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Vector;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;

final class yi {
    static CountDownLatch a;
    private static boolean b = false;
    private static MessageDigest c;
    private static final Object d;
    private static final Object e;

    static {
        d = new Object();
        e = new Object();
        a = new CountDownLatch(1);
    }

    private static ub a(long l2) {
        ub ub2 = new ub();
        ub2.k = 4096L;
        return ub2;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    static String a(ub object, String object2) {
        byte[] arrby = bjy.a((bjy)object);
        object = btk.bE;
        if (!((Boolean)bqj.f().a(object)).booleanValue()) {
            if (atf.a == null) throw new GeneralSecurityException();
            object = object2 != null ? object2.getBytes() : new byte[]{};
            object = atf.a.a(arrby, (byte[])object);
            object2 = new wu();
            object2.a = new byte[][]{object};
            object2.c = 2;
            object = bjy.a((bjy)object2);
            return yg.a(object, true);
        } else {
            object = yi.a(arrby, (String)object2);
        }
        return yg.a(object, true);
    }

    static /* synthetic */ MessageDigest a(MessageDigest messageDigest) {
        c = messageDigest;
        return messageDigest;
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private static Vector<byte[]> a(byte[] arrby, int n2) {
        if (arrby == null) return null;
        if (arrby.length <= 0) {
            return null;
        }
        int n3 = (arrby.length + 255 - 1) / 255;
        Vector<byte[]> vector = new Vector<byte[]>();
        n2 = 0;
        while (n2 < n3) {
            int n4 = n2 * 255;
            int n5 = arrby.length - n4 > 255 ? n4 + 255 : arrby.length;
            vector.add(Arrays.copyOfRange(arrby, n4, n5));
            ++n2;
        }
        return vector;
        catch (IndexOutOfBoundsException indexOutOfBoundsException) {
            return null;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    static void a() {
        Object object = e;
        synchronized (object) {
            if (!b) {
                b = true;
                new Thread(new yk(null)).start();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static byte[] a(byte[] arrby) {
        Object object = d;
        synchronized (object) {
            MessageDigest messageDigest = yi.b();
            if (messageDigest == null) throw new NoSuchAlgorithmException("Cannot compute hash");
            messageDigest.reset();
            messageDigest.update(arrby);
            return c.digest();
        }
    }

    private static byte[] a(byte[] arrby, String string2) {
        Vector<byte[]> vector = yi.a(arrby, 255);
        if (vector != null && vector.size() != 0) {
            wu wu2 = new wu();
            wu2.a = new byte[vector.size()][];
            vector = vector.iterator();
            int n2 = 0;
            while (vector.hasNext()) {
                byte[] arrby2 = yi.a((byte[])vector.next(), string2, false);
                wu2.a[n2] = arrby2;
                ++n2;
            }
            wu2.b = yi.a(arrby);
            return bjy.a(wu2);
        }
        return yi.a(bjy.a(yi.a(4096L)), string2, true);
    }

    /*
     * Enabled aggressive block sorting
     */
    private static byte[] a(byte[] object, String string2, boolean bl2) {
        int n2 = bl2 ? 239 : 255;
        byte[] arrby = object;
        if (((Object)object).length > n2) {
            arrby = bjy.a(yi.a(4096L));
        }
        if (arrby.length < n2) {
            object = new byte[n2 - arrby.length];
            new SecureRandom().nextBytes((byte[])object);
            object = ByteBuffer.allocate(n2 + 1).put((byte)arrby.length).put(arrby).put((byte[])object);
        } else {
            object = ByteBuffer.allocate(n2 + 1).put((byte)arrby.length).put(arrby);
        }
        arrby = object.array();
        object = arrby;
        if (bl2) {
            object = yi.a(arrby);
            object = ByteBuffer.allocate(256).put((byte[])object).put(arrby).array();
        }
        arrby = new byte[256];
        new ym().a((byte[])object, arrby);
        if (string2 != null && string2.length() > 0) {
            object = string2;
            if (string2.length() > 32) {
                object = string2.substring(0, 32);
            }
            new bfq(object.getBytes("UTF-8")).a(arrby);
        }
        return arrby;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private static MessageDigest b() {
        boolean bl2;
        yi.a();
        try {
            bl2 = a.await(2L, TimeUnit.SECONDS);
        }
        catch (InterruptedException interruptedException) {
            return null;
        }
        if (!bl2) {
            return null;
        }
        if (c != null) return c;
        return null;
    }
}

