/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.Activity
 *  android.content.Context
 *  android.net.Uri
 *  android.net.Uri$Builder
 *  android.os.Handler
 *  android.text.TextUtils
 *  org.json.JSONException
 *  org.json.JSONObject
 */
package com.google.android.gms.internal;

import android.app.Activity;
import android.content.Context;
import android.net.Uri;
import android.os.Handler;
import android.text.TextUtils;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.hs;
import com.google.android.gms.internal.it;
import com.google.android.gms.internal.jb;
import com.google.android.gms.internal.lf;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import org.json.JSONException;
import org.json.JSONObject;

@ak
public final class is {
    private final Object a = new Object();
    private String b = "";
    private String c = "";
    private boolean d = false;
    private String e = "";

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final String a(Context object) {
        Object object2 = this.a;
        synchronized (object2) {
            if (!TextUtils.isEmpty((CharSequence)this.b)) return this.b;
            av.e();
            this.b = hs.b(object, "debug_signals_id.txt");
            if (!TextUtils.isEmpty((CharSequence)this.b)) return this.b;
            av.e();
            this.b = hs.a();
            av.e();
            hs.c(object, "debug_signals_id.txt", this.b);
            return this.b;
        }
    }

    private final void a(Context context, String string2, boolean bl2, boolean bl3) {
        if (!(context instanceof Activity)) {
            he.d("Can not create dialog without Activity Context");
            return;
        }
        hs.a.post((Runnable)new it(this, context, string2, bl2, bl3));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final boolean b(Context object, String object2, String string2) {
        bsz<String> bsz2 = btk.cH;
        if (TextUtils.isEmpty((CharSequence)(object = is.d((Context)object, this.c((Context)object, bqj.f().a(bsz2), (String)object2, string2).toString(), string2)))) {
            he.b("Not linked for in app preview.");
            return false;
        }
        object = object.trim();
        try {
            object2 = new JSONObject((String)object);
            object = object2.optString("gct");
            this.e = object2.optString("status");
            object2 = this.a;
        }
        catch (JSONException jSONException) {
            he.c("Fail to get in app preview response json.", (Throwable)jSONException);
            return false;
        }
        synchronized (object2) {
            this.c = object;
            return true;
        }
    }

    private final Uri c(Context context, String string2, String string3, String string4) {
        string2 = Uri.parse((String)string2).buildUpon();
        string2.appendQueryParameter("linkedDeviceId", this.a(context));
        string2.appendQueryParameter("adSlotPath", string3);
        string2.appendQueryParameter("afmaVersion", string4);
        return string2.build();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final boolean c(Context object, String string2, String string3) {
        bsz<String> bsz2 = btk.cI;
        if (TextUtils.isEmpty((CharSequence)(object = is.d((Context)object, this.c((Context)object, bqj.f().a(bsz2), string2, string3).toString(), string3)))) {
            he.b("Not linked for debug signals.");
            return false;
        }
        object = object.trim();
        try {
            object = new JSONObject((String)object).optString("debug_mode");
        }
        catch (JSONException jSONException) {
            he.c("Fail to get debug mode response json.", (Throwable)jSONException);
            return false;
        }
        boolean bl2 = "1".equals(object);
        object = this.a;
        synchronized (object) {
            this.d = bl2;
            return bl2;
        }
    }

    private static String d(Context object, String object2, String object3) {
        block5 : {
            void var0_3;
            lf<String> lf2;
            block6 : {
                block7 : {
                    Object object4 = new HashMap<String, String>();
                    object4.put("User-Agent", av.e().a((Context)object, (String)object3));
                    lf2 = new jb((Context)object).a((String)object2, (Map<String, String>)object4);
                    try {
                        object = btk.cK;
                        object = lf2.get(((Integer)bqj.f().a(object)).intValue(), TimeUnit.MILLISECONDS);
                        return object;
                    }
                    catch (Exception exception) {
                        object = String.valueOf(object2);
                        object = object.length() != 0 ? "Error retriving a response from: ".concat((String)object) : new String("Error retriving a response from: ");
                        he.b((String)object, exception);
                        break block5;
                    }
                    catch (InterruptedException interruptedException) {
                        object3 = "Interrupted while retriving a response from: ";
                        object4 = String.valueOf(object2);
                        if (object4.length() != 0) {
                            object2 = object3;
                            object3 = object4;
                        }
                        object2 = new String("Interrupted while retriving a response from: ");
                        break block6;
                    }
                    catch (TimeoutException timeoutException) {
                        object4 = "Timeout while retriving a response from: ";
                        object3 = String.valueOf(object2);
                        if (object3.length() == 0) break block7;
                        object2 = object4;
                    }
                    object2 = object2.concat((String)object3);
                    break block6;
                }
                object2 = new String("Timeout while retriving a response from: ");
            }
            he.b((String)object2, (Throwable)var0_3);
            lf2.cancel(true);
        }
        return null;
    }

    private final void e(Context context, String string2, String string3) {
        av.e();
        bsz<String> bsz2 = btk.cG;
        hs.a(context, this.c(context, bqj.f().a(bsz2), string2, string3));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final String a() {
        Object object = this.a;
        synchronized (object) {
            return this.c;
        }
    }

    public final void a(Context context, String string2, String string3) {
        if (!this.b(context, string2, string3)) {
            this.a(context, "In-app preview failed to load because of a system error. Please try again later.", true, true);
            return;
        }
        if ("2".equals(this.e)) {
            he.b("Creative is not pushed for this device.");
            this.a(context, "There was no creative pushed from DFP to the device.", false, false);
            return;
        }
        if ("1".equals(this.e)) {
            he.b("The app is not linked for creative preview.");
            this.e(context, string2, string3);
            return;
        }
        if ("0".equals(this.e)) {
            he.b("Device is linked for in app preview.");
            this.a(context, "The device is successfully linked for creative preview.", false, true);
        }
    }

    public final void a(Context context, String string2, String string3, String string4) {
        boolean bl2 = this.b();
        if (this.c(context, string2, string3)) {
            if (!bl2 && !TextUtils.isEmpty((CharSequence)string4)) {
                this.b(context, string3, string4, string2);
            }
            he.b("Device is linked for debug signals.");
            this.a(context, "The device is successfully linked for troubleshooting.", false, true);
            return;
        }
        this.e(context, string2, string3);
    }

    public final void b(Context context, String string2, String string3, String string4) {
        bsz<String> bsz2 = btk.cJ;
        string4 = this.c(context, bqj.f().a(bsz2), string4, string2).buildUpon();
        string4.appendQueryParameter("debugData", string3);
        av.e();
        hs.b(context, string2, string4.build().toString());
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final boolean b() {
        Object object = this.a;
        synchronized (object) {
            return this.d;
        }
    }
}

