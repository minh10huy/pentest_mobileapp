/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  org.json.JSONException
 *  org.json.JSONObject
 */
package com.google.android.gms.ads.internal.gmsg;

import com.google.android.gms.ads.internal.gmsg.aa;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.lq;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.Future;
import org.json.JSONException;
import org.json.JSONObject;

@ak
public final class af
implements aa<Object> {
    private HashMap<String, lq<JSONObject>> a = new HashMap();

    public final Future<JSONObject> a(String string2) {
        lq<JSONObject> lq2 = new lq<JSONObject>();
        this.a.put(string2, lq2);
        return lq2;
    }

    public final void b(String string2) {
        lq<JSONObject> lq2 = this.a.get(string2);
        if (lq2 == null) {
            he.c("Could not find the ad request for the corresponding ad response.");
            return;
        }
        if (!lq2.isDone()) {
            lq2.cancel(true);
        }
        this.a.remove(string2);
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public final void zza(Object object, Map<String, String> object2) {
        Throwable throwable2222;
        object = (String)object2.get("request_id");
        String string2 = (String)object2.get("fetched_ad");
        he.b("Received ad from the cache.");
        object2 = this.a.get(object);
        if (object2 == null) {
            he.c("Could not find the ad request for the corresponding ad response.");
            return;
        }
        object2.b(new JSONObject(string2));
        this.a.remove(object);
        return;
        {
            catch (Throwable throwable2222) {
            }
            catch (JSONException jSONException) {}
            {
                he.b("Failed constructing JSON object from value passed from javascript", (Throwable)jSONException);
                object2.b(null);
                this.a.remove(object);
                return;
            }
        }
        this.a.remove(object);
        throw throwable2222;
    }
}

