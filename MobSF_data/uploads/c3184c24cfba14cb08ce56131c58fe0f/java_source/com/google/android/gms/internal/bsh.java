/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.net.TrafficStats
 *  android.os.Process
 *  android.os.SystemClock
 */
package com.google.android.gms.internal;

import android.net.TrafficStats;
import android.os.Process;
import android.os.SystemClock;
import com.google.android.gms.internal.b;
import com.google.android.gms.internal.brh;
import com.google.android.gms.internal.buc;
import com.google.android.gms.internal.bwe;
import com.google.android.gms.internal.cci;
import com.google.android.gms.internal.df;
import com.google.android.gms.internal.eg;
import com.google.android.gms.internal.ua;
import com.google.android.gms.internal.yl;
import java.util.concurrent.BlockingQueue;

public final class bsh
extends Thread {
    private final BlockingQueue<bwe<?>> a;
    private final brh b;
    private final ua c;
    private final b d;
    private volatile boolean e = false;

    public bsh(BlockingQueue<bwe<?>> blockingQueue, brh brh2, ua ua2, b b2) {
        this.a = blockingQueue;
        this.b = brh2;
        this.c = ua2;
        this.d = b2;
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private final void b() {
        long l2 = SystemClock.elapsedRealtime();
        bwe<?> bwe2 = this.a.take();
        try {
            bwe2.b("network-queue-take");
            bwe2.g();
            TrafficStats.setThreadStatsTag((int)bwe2.d());
            Object object = this.b.a(bwe2);
            bwe2.b("network-http-complete");
            if (object.e && bwe2.l()) {
                bwe2.c("not-modified");
                bwe2.m();
                return;
            }
            object = bwe2.a((buc)object);
            bwe2.b("network-parse-complete");
            if (bwe2.h() && object.b != null) {
                this.c.a(bwe2.e(), object.b);
                bwe2.b("network-cache-written");
            }
            bwe2.k();
            this.d.a(bwe2, (cci<?>)object);
            bwe2.a(object);
            return;
        }
        catch (Exception exception) {
            block5 : {
                eg.a(exception, "Unhandled exception %s", exception.toString());
                df df2 = new df(exception);
                df2.a(SystemClock.elapsedRealtime() - l2);
                this.d.a(bwe2, df2);
                break block5;
                catch (df df3) {
                    df3.a(SystemClock.elapsedRealtime() - l2);
                    this.d.a(bwe2, df3);
                }
            }
            bwe2.m();
            return;
        }
    }

    public final void a() {
        this.e = true;
        this.interrupt();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void run() {
        Process.setThreadPriority((int)10);
        do {
            try {
                do {
                    this.b();
                } while (true);
            }
            catch (InterruptedException interruptedException) {}
        } while (!this.e);
    }
}

