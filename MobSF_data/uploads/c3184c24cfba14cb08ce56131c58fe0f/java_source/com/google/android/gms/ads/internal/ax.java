/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.Activity
 *  android.content.Context
 *  android.view.MotionEvent
 *  android.view.View
 *  android.view.ViewTreeObserver
 *  android.view.ViewTreeObserver$OnGlobalLayoutListener
 *  android.view.ViewTreeObserver$OnScrollChangedListener
 *  android.widget.ViewSwitcher
 */
package com.google.android.gms.ads.internal;

import android.app.Activity;
import android.content.Context;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewTreeObserver;
import android.widget.ViewSwitcher;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.im;
import com.google.android.gms.internal.jy;
import com.google.android.gms.internal.nu;
import java.util.ArrayList;

public final class ax
extends ViewSwitcher {
    private final im a;
    private final jy b;
    private boolean c;

    public ax(Context context, String string2, String string3, ViewTreeObserver.OnGlobalLayoutListener onGlobalLayoutListener, ViewTreeObserver.OnScrollChangedListener onScrollChangedListener) {
        super(context);
        this.a = new im(context);
        this.a.a(string2);
        this.a.b(string3);
        this.c = true;
        this.b = context instanceof Activity ? new jy((Activity)context, (View)this, onGlobalLayoutListener, onScrollChangedListener) : new jy(null, (View)this, onGlobalLayoutListener, onScrollChangedListener);
        this.b.a();
    }

    public final im a() {
        return this.a;
    }

    public final void b() {
        he.a("Disable position monitoring on adFrame.");
        if (this.b != null) {
            this.b.b();
        }
    }

    public final void c() {
        he.a("Enable debug gesture detector on adFrame.");
        this.c = true;
    }

    public final void d() {
        he.a("Disable debug gesture detector on adFrame.");
        this.c = false;
    }

    protected final void onAttachedToWindow() {
        super.onAttachedToWindow();
        if (this.b != null) {
            this.b.c();
        }
    }

    protected final void onDetachedFromWindow() {
        super.onDetachedFromWindow();
        if (this.b != null) {
            this.b.d();
        }
    }

    public final boolean onInterceptTouchEvent(MotionEvent motionEvent) {
        if (this.c) {
            this.a.a(motionEvent);
        }
        return false;
    }

    public final void removeAllViews() {
        int n2;
        Object object;
        ArrayList<nu> arrayList = new ArrayList<nu>();
        int n3 = 0;
        for (n2 = 0; n2 < this.getChildCount(); ++n2) {
            object = this.getChildAt(n2);
            if (object == null || !(object instanceof nu)) continue;
            arrayList.add((nu)object);
        }
        super.removeAllViews();
        int n4 = arrayList.size();
        for (n2 = n3; n2 < n4; ++n2) {
            object = arrayList.get(n2);
            ((nu)object).destroy();
        }
    }
}

