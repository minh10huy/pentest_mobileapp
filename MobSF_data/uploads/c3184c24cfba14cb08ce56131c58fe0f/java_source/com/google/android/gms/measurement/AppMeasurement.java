/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Bundle
 */
package com.google.android.gms.measurement;

import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Keep;
import com.google.android.gms.common.api.internal.az;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.abb;
import com.google.android.gms.internal.abd;
import com.google.android.gms.internal.acc;
import com.google.android.gms.internal.ade;
import com.google.android.gms.internal.adt;
import com.google.android.gms.internal.adv;
import com.google.android.gms.internal.afh;
import com.google.android.gms.internal.afk;
import com.google.android.gms.internal.zr;
import com.google.firebase.analytics.FirebaseAnalytics;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

@Deprecated
@Keep
public class AppMeasurement {
    public static final String CRASH_ORIGIN = "crash";
    public static final String FCM_ORIGIN = "fcm";
    private final acc zzjev;

    public AppMeasurement(acc acc2) {
        ah.a(acc2);
        this.zzjev = acc2;
    }

    @Deprecated
    @Keep
    public static AppMeasurement getInstance(Context context) {
        return acc.a(context).m();
    }

    @Keep
    public void beginAdUnitExposure(String string2) {
        this.zzjev.A().a(string2);
    }

    @Keep
    protected void clearConditionalUserProperty(String string2, String string3, Bundle bundle) {
        this.zzjev.l().b(string2, string3, bundle);
    }

    @Keep
    protected void clearConditionalUserPropertyAs(String string2, String string3, String string4, Bundle bundle) {
        this.zzjev.l().a(string2, string3, string4, bundle);
    }

    @Keep
    public void endAdUnitExposure(String string2) {
        this.zzjev.A().b(string2);
    }

    @Keep
    public long generateEventId() {
        return this.zzjev.o().y();
    }

    @Keep
    public String getAppInstanceId() {
        return this.zzjev.l().z();
    }

    @Keep
    protected List<ConditionalUserProperty> getConditionalUserProperties(String string2, String string3) {
        return this.zzjev.l().a(string2, string3);
    }

    @Keep
    protected List<ConditionalUserProperty> getConditionalUserPropertiesAs(String string2, String string3, String string4) {
        return this.zzjev.l().a(string2, string3, string4);
    }

    @Keep
    public String getCurrentScreenClass() {
        adt adt2 = this.zzjev.v().z();
        if (adt2 != null) {
            return adt2.b;
        }
        return null;
    }

    @Keep
    public String getCurrentScreenName() {
        adt adt2 = this.zzjev.v().z();
        if (adt2 != null) {
            return adt2.a;
        }
        return null;
    }

    @Keep
    public String getGmpAppId() {
        try {
            String string2 = az.a();
            return string2;
        }
        catch (IllegalStateException illegalStateException) {
            this.zzjev.f().y().a("getGoogleAppId failed with exception", illegalStateException);
            return null;
        }
    }

    @Keep
    protected int getMaxUserProperties(String string2) {
        this.zzjev.l();
        ah.a(string2);
        return 25;
    }

    @Keep
    protected Map<String, Object> getUserProperties(String string2, String string3, boolean bl2) {
        return this.zzjev.l().a(string2, string3, bl2);
    }

    public Map<String, Object> getUserProperties(boolean bl2) {
        Object object = this.zzjev.l().b(bl2);
        android.support.v4.g.a<String, Object> a2 = new android.support.v4.g.a<String, Object>(object.size());
        object = object.iterator();
        while (object.hasNext()) {
            afh afh2 = (afh)object.next();
            a2.put(afh2.a, afh2.a());
        }
        return a2;
    }

    @Keep
    protected Map<String, Object> getUserPropertiesAs(String string2, String string3, String string4, boolean bl2) {
        return this.zzjev.l().a(string2, string3, string4, bl2);
    }

    public void logEvent(String string2, Bundle bundle) {
        Bundle bundle2 = bundle;
        if (bundle == null) {
            bundle2 = new Bundle();
        }
        this.zzjev.l().a("app", string2, bundle2, true);
    }

    @Keep
    public void logEventInternal(String string2, String string3, Bundle bundle) {
        Bundle bundle2 = bundle;
        if (bundle == null) {
            bundle2 = new Bundle();
        }
        this.zzjev.l().a(string2, string3, bundle2);
    }

    public void logEventInternalNoInterceptor(String string2, String string3, Bundle bundle, long l2) {
        Bundle bundle2 = bundle;
        if (bundle == null) {
            bundle2 = new Bundle();
        }
        this.zzjev.l().a(string2, string3, bundle2, l2);
    }

    public void registerOnMeasurementEventListener(c c2) {
        this.zzjev.l().a(c2);
    }

    @Keep
    public void registerOnScreenChangeCallback(f f2) {
        this.zzjev.v().a(f2);
    }

    @Keep
    protected void setConditionalUserProperty(ConditionalUserProperty conditionalUserProperty) {
        this.zzjev.l().a(conditionalUserProperty);
    }

    @Keep
    protected void setConditionalUserPropertyAs(ConditionalUserProperty conditionalUserProperty) {
        this.zzjev.l().b(conditionalUserProperty);
    }

    public void setEventInterceptor(b b2) {
        this.zzjev.l().a(b2);
    }

    @Deprecated
    public void setMeasurementEnabled(boolean bl2) {
        this.zzjev.l().a(bl2);
    }

    public void setMinimumSessionDuration(long l2) {
        this.zzjev.l().a(l2);
    }

    public void setSessionTimeoutDuration(long l2) {
        this.zzjev.l().b(l2);
    }

    public void setUserProperty(String string2, String string3) {
        int n2 = this.zzjev.o().c(string2);
        if (n2 != 0) {
            this.zzjev.o();
            string3 = afk.a(string2, 24, true);
            int n3 = string2 != null ? string2.length() : 0;
            this.zzjev.o().a(n2, "_ev", string3, n3);
            return;
        }
        this.setUserPropertyInternal("app", string2, string3);
    }

    public void setUserPropertyInternal(String string2, String string3, Object object) {
        this.zzjev.l().a(string2, string3, object);
    }

    public void unregisterOnMeasurementEventListener(c c2) {
        this.zzjev.l().b(c2);
    }

    @Keep
    public void unregisterOnScreenChangeCallback(f f2) {
        this.zzjev.v().b(f2);
    }

    public static class ConditionalUserProperty {
        @Keep
        public boolean mActive;
        @Keep
        public String mAppId;
        @Keep
        public long mCreationTimestamp;
        @Keep
        public String mExpiredEventName;
        @Keep
        public Bundle mExpiredEventParams;
        @Keep
        public String mName;
        @Keep
        public String mOrigin;
        @Keep
        public long mTimeToLive;
        @Keep
        public String mTimedOutEventName;
        @Keep
        public Bundle mTimedOutEventParams;
        @Keep
        public String mTriggerEventName;
        @Keep
        public long mTriggerTimeout;
        @Keep
        public String mTriggeredEventName;
        @Keep
        public Bundle mTriggeredEventParams;
        @Keep
        public long mTriggeredTimestamp;
        @Keep
        public Object mValue;

        public ConditionalUserProperty() {
        }

        public ConditionalUserProperty(ConditionalUserProperty conditionalUserProperty) {
            ah.a(conditionalUserProperty);
            this.mAppId = conditionalUserProperty.mAppId;
            this.mOrigin = conditionalUserProperty.mOrigin;
            this.mCreationTimestamp = conditionalUserProperty.mCreationTimestamp;
            this.mName = conditionalUserProperty.mName;
            if (conditionalUserProperty.mValue != null) {
                this.mValue = afk.b(conditionalUserProperty.mValue);
                if (this.mValue == null) {
                    this.mValue = conditionalUserProperty.mValue;
                }
            }
            this.mValue = conditionalUserProperty.mValue;
            this.mActive = conditionalUserProperty.mActive;
            this.mTriggerEventName = conditionalUserProperty.mTriggerEventName;
            this.mTriggerTimeout = conditionalUserProperty.mTriggerTimeout;
            this.mTimedOutEventName = conditionalUserProperty.mTimedOutEventName;
            if (conditionalUserProperty.mTimedOutEventParams != null) {
                this.mTimedOutEventParams = new Bundle(conditionalUserProperty.mTimedOutEventParams);
            }
            this.mTriggeredEventName = conditionalUserProperty.mTriggeredEventName;
            if (conditionalUserProperty.mTriggeredEventParams != null) {
                this.mTriggeredEventParams = new Bundle(conditionalUserProperty.mTriggeredEventParams);
            }
            this.mTriggeredTimestamp = conditionalUserProperty.mTriggeredTimestamp;
            this.mTimeToLive = conditionalUserProperty.mTimeToLive;
            this.mExpiredEventName = conditionalUserProperty.mExpiredEventName;
            if (conditionalUserProperty.mExpiredEventParams != null) {
                this.mExpiredEventParams = new Bundle(conditionalUserProperty.mExpiredEventParams);
            }
        }
    }

    public static final class a
    extends FirebaseAnalytics.a {
        public static final String[] a = new String[]{"app_clear_data", "app_exception", "app_remove", "app_upgrade", "app_install", "app_update", "firebase_campaign", "error", "first_open", "first_visit", "in_app_purchase", "notification_dismiss", "notification_foreground", "notification_open", "notification_receive", "os_update", "session_start", "user_engagement", "ad_exposure", "adunit_exposure", "ad_query", "ad_activeview", "ad_impression", "ad_click", "ad_reward", "screen_view", "ga_extra_parameter"};
        public static final String[] b = new String[]{"_cd", "_ae", "_ui", "_ug", "_in", "_au", "_cmp", "_err", "_f", "_v", "_iap", "_nd", "_nf", "_no", "_nr", "_ou", "_s", "_e", "_xa", "_xu", "_aq", "_aa", "_ai", "_ac", "_ar", "_vs", "_ep"};

        public static String a(String string2) {
            return afk.a(string2, a, b);
        }
    }

    public static interface b {
        public void a(String var1, String var2, Bundle var3, long var4);
    }

    public static interface c {
        public void a(String var1, String var2, Bundle var3, long var4);
    }

    public static final class d
    extends FirebaseAnalytics.b {
        public static final String[] a = new String[]{"firebase_conversion", "engagement_time_msec", "exposure_time", "ad_event_id", "ad_unit_id", "firebase_error", "firebase_error_value", "firebase_error_length", "firebase_event_origin", "firebase_screen", "firebase_screen_class", "firebase_screen_id", "firebase_previous_screen", "firebase_previous_class", "firebase_previous_id", "message_device_time", "message_id", "message_name", "message_time", "previous_app_version", "previous_os_version", "topic", "update_with_analytics", "previous_first_open_count", "system_app", "system_app_update", "previous_install_count", "ga_event_id", "ga_extra_params_ct", "ga_group_name", "ga_list_length", "ga_index", "ga_event_name"};
        public static final String[] b = new String[]{"_c", "_et", "_xt", "_aeid", "_ai", "_err", "_ev", "_el", "_o", "_sn", "_sc", "_si", "_pn", "_pc", "_pi", "_ndt", "_nmid", "_nmn", "_nmt", "_pv", "_po", "_nt", "_uwa", "_pfo", "_sys", "_sysu", "_pin", "_eid", "_epc", "_gn", "_ll", "_i", "_en"};

        public static String a(String string2) {
            return afk.a(string2, a, b);
        }
    }

    public static final class e
    extends FirebaseAnalytics.c {
        public static final String[] a = new String[]{"firebase_last_notification", "first_open_time", "first_visit_time", "last_deep_link_referrer", "user_id", "first_open_after_install", "lifetime_user_engagement"};
        public static final String[] b = new String[]{"_ln", "_fot", "_fvt", "_ldl", "_id", "_fi", "_lte"};

        public static String a(String string2) {
            return afk.a(string2, a, b);
        }
    }

    public static interface f {
        public boolean a(adt var1, adt var2);
    }

}

