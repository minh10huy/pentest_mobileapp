/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.pm.ApplicationInfo
 *  android.content.pm.PackageInfo
 *  android.content.pm.PackageManager
 *  android.content.pm.PackageManager$NameNotFoundException
 *  android.content.pm.Signature
 *  android.util.Log
 */
package com.google.android.gms.common;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.Signature;
import android.util.Log;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.n;
import com.google.android.gms.common.o;
import com.google.android.gms.common.p;
import com.google.android.gms.common.r;
import com.google.android.gms.common.w;
import com.google.android.gms.common.z;
import com.google.android.gms.internal.ye;

public class aa {
    private static aa a;
    private final Context b;

    private aa(Context context) {
        this.b = context.getApplicationContext();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static aa a(Context context) {
        ah.a(context);
        synchronized (aa.class) {
            if (a == null) {
                n.a(context);
                a = new aa(context);
            }
            return a;
        }
    }

    private static /* varargs */ o a(PackageInfo object, o ... arro) {
        if (object.signatures == null) {
            return null;
        }
        if (object.signatures.length != 1) {
            Log.w((String)"GoogleSignatureVerifier", (String)"Package has more than one signature.");
            return null;
        }
        object = object.signatures;
        object = new p(object[0].toByteArray());
        for (int i2 = 0; i2 < arro.length; ++i2) {
            if (!arro[i2].equals(object)) continue;
            return arro[i2];
        }
        return null;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final w a(String object) {
        PackageInfo packageInfo;
        try {
            packageInfo = ye.a(this.b).b((String)object, 64);
        }
        catch (PackageManager.NameNotFoundException nameNotFoundException) {}
        boolean bl2 = z.e(this.b);
        if (packageInfo == null) {
            object = "null pkg";
            return w.a((String)object);
        }
        if (packageInfo.signatures.length != 1) {
            object = "single cert required";
            return w.a((String)object);
        }
        object = new p(packageInfo.signatures[0].toByteArray());
        String string2 = packageInfo.packageName;
        w w2 = n.a(string2, (o)object, bl2);
        if (!w2.a) return w2;
        if (packageInfo.applicationInfo == null) return w2;
        if ((packageInfo.applicationInfo.flags & 2) == 0) return w2;
        if (bl2) {
            if (!n.a((String)string2, (o)object, (boolean)false).a) return w2;
        }
        object = "debuggable release cert app rejected";
        return w.a((String)object);
        object = String.valueOf(object);
        if (object.length() != 0) {
            object = "no pkg ".concat((String)object);
            return w.a((String)object);
        }
        object = new String("no pkg ");
        return w.a((String)object);
    }

    /*
     * Enabled aggressive block sorting
     */
    public static boolean a(PackageInfo object, boolean bl2) {
        if (object != null && object.signatures != null) {
            void var1_2;
            o[] arro = var1_2 != false ? r.a : new o[]{r.a[0]};
            o o2 = aa.a(object, arro);
            if (o2 != null) {
                return true;
            }
        }
        return false;
    }

    public final boolean a(int n2) {
        w w2;
        String[] arrstring = ye.a(this.b).a(n2);
        if (arrstring != null && arrstring.length != 0) {
            w2 = null;
            int n3 = arrstring.length;
            for (n2 = 0; n2 < n3; ++n2) {
                w w3;
                w2 = w3 = this.a(arrstring[n2]);
                if (!w3.a) {
                    w2 = w3;
                    continue;
                }
                break;
            }
        } else {
            w2 = w.a("no pkgs");
        }
        if (!w2.a) {
            if (w2.b != null) {
                Log.d((String)"GoogleCertificatesRslt", (String)w2.b(), (Throwable)w2.b);
            } else {
                Log.d((String)"GoogleCertificatesRslt", (String)w2.b());
            }
        }
        return w2.a;
    }

    public final boolean a(PackageInfo packageInfo) {
        if (packageInfo == null) {
            return false;
        }
        if (aa.a(packageInfo, false)) {
            return true;
        }
        if (aa.a(packageInfo, true)) {
            if (z.e(this.b)) {
                return true;
            }
            Log.w((String)"GoogleSignatureVerifier", (String)"Test-keys aren't accepted on this build.");
        }
        return false;
    }
}

