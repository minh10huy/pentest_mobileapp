/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import java.util.Arrays;

final class aza {
    private static long a(byte[] arrby, int n2) {
        byte by2 = arrby[n2];
        byte by3 = arrby[n2 + 1];
        byte by4 = arrby[n2 + 2];
        return (long)((arrby[n2 + 3] & 255) << 24 | (by2 & 255 | (by3 & 255) << 8 | (by4 & 255) << 16)) & 0xFFFFFFFFL;
    }

    private static long a(byte[] arrby, int n2, int n3) {
        return aza.a(arrby, n2) >> n3 & 0x3FFFFFFL;
    }

    private static void a(byte[] arrby, long l2, int n2) {
        int n3 = 0;
        while (n3 < 4) {
            arrby[n2 + n3] = (byte)(255L & l2);
            ++n3;
            l2 >>= 8;
        }
    }

    static byte[] a(byte[] arrby, byte[] arrby2) {
        if (arrby.length == 32) {
            long l2;
            long l3;
            long l4;
            long l5 = aza.a(arrby, 0, 0) & 0x3FFFFFFL;
            long l6 = aza.a(arrby, 3, 2) & 67108611L;
            long l7 = aza.a(arrby, 6, 4) & 67092735L;
            long l8 = aza.a(arrby, 9, 6) & 66076671L;
            long l9 = aza.a(arrby, 12, 8) & 1048575L;
            long l10 = l7 * 5L;
            long l11 = l8 * 5L;
            long l12 = l9 * 5L;
            byte[] arrby3 = new byte[17];
            long l13 = 0L;
            long l14 = l4 = (l2 = (l3 = 0L));
            long l15 = l2;
            l2 = l13;
            for (int i2 = 0; i2 < arrby2.length; i2 += 16) {
                int n2 = Math.min(16, arrby2.length - i2);
                System.arraycopy(arrby2, i2, arrby3, 0, n2);
                arrby3[n2] = 1;
                if (n2 != 16) {
                    Arrays.fill(arrby3, n2 + 1, 17, (byte)0);
                }
                long l16 = l15 + aza.a(arrby3, 9, 6);
                long l17 = l4 + (aza.a(arrby3, 12, 8) | (long)(arrby3[16] << 24));
                long l18 = (l14 += aza.a(arrby3, 0, 0)) * l5 + (l2 += aza.a(arrby3, 3, 2)) * l12 + (l3 += aza.a(arrby3, 6, 4)) * l11 + l16 * l10 + l17 * (l6 * 5L);
                l13 = l14 * l6 + l2 * l5 + l3 * l12 + l16 * l11 + l17 * l10 + (l18 >> 26);
                l15 = l14 * l7 + l2 * l6 + l3 * l5 + l16 * l12 + l17 * l11 + (l13 >> 26);
                l4 = l14 * l8 + l2 * l7 + l3 * l6 + l16 * l5 + l17 * l12 + (l15 >> 26);
                l14 = l14 * l9 + l2 * l8 + l3 * l7 + l16 * l6 + l17 * l5 + (l4 >> 26);
                l16 = (l18 & 0x3FFFFFFL) + (l14 >> 26) * 5L;
                l2 = (l13 & 0x3FFFFFFL) + (l16 >> 26);
                l3 = l15 & 0x3FFFFFFL;
                l15 = l4 & 0x3FFFFFFL;
                l4 = l14 & 0x3FFFFFFL;
                l14 = l16 & 0x3FFFFFFL;
            }
            l13 = l3 + (l2 >> 26);
            l3 = l13 & 0x3FFFFFFL;
            l13 = l15 + (l13 >> 26);
            l15 = l13 & 0x3FFFFFFL;
            l13 = l4 + (l13 >> 26);
            l4 = l13 & 0x3FFFFFFL;
            l5 = (l14 += (l13 >> 26) * 5L) & 0x3FFFFFFL;
            l8 = (l2 & 0x3FFFFFFL) + (l14 >> 26);
            l6 = l5 + 5L;
            l10 = (l6 >> 26) + l8;
            l9 = l3 + (l10 >> 26);
            l7 = l15 + (l9 >> 26);
            l2 = l4 + (l7 >> 26) - 0x4000000L;
            l13 = l14 = l2 >> 63;
            l8 = l8 & l14 | l10 & 0x3FFFFFFL & l13;
            l3 = l3 & l14 | l9 & 0x3FFFFFFL & l13;
            l15 = l15 & l14 | l7 & 0x3FFFFFFL & l13;
            l5 = ((l8 << 26 | (l5 & l14 | l6 & 0x3FFFFFFL & l13)) & 0xFFFFFFFFL) + aza.a(arrby, 16);
            l6 = ((l8 >> 6 | l3 << 20) & 0xFFFFFFFFL) + aza.a(arrby, 20) + (l5 >> 32);
            l3 = ((l3 >> 12 | l15 << 14) & 0xFFFFFFFFL) + aza.a(arrby, 24) + (l6 >> 32);
            l7 = aza.a(arrby, 28);
            arrby = new byte[16];
            aza.a(arrby, l5 & 0xFFFFFFFFL, 0);
            aza.a(arrby, l6 & 0xFFFFFFFFL, 4);
            aza.a(arrby, l3 & 0xFFFFFFFFL, 8);
            aza.a(arrby, (((l2 & l13 | l4 & l14) << 8 | l15 >> 18) & 0xFFFFFFFFL) + l7 + (l3 >> 32) & 0xFFFFFFFFL, 12);
            return arrby;
        }
        throw new IllegalArgumentException("The key length in bytes must be 32.");
    }
}

