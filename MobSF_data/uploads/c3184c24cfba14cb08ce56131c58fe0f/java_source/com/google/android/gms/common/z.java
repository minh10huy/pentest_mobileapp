/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.app.NotificationManager
 *  android.content.Context
 *  android.content.pm.ApplicationInfo
 *  android.content.pm.PackageInfo
 *  android.content.pm.PackageInstaller
 *  android.content.pm.PackageInstaller$SessionInfo
 *  android.content.pm.PackageManager
 *  android.content.pm.PackageManager$NameNotFoundException
 *  android.content.pm.Signature
 *  android.content.res.Resources
 *  android.os.Build
 *  android.os.Bundle
 *  android.os.UserManager
 *  android.util.Log
 */
package com.google.android.gms.common;

import android.annotation.TargetApi;
import android.app.NotificationManager;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageInstaller;
import android.content.pm.PackageManager;
import android.content.pm.Signature;
import android.content.res.Resources;
import android.os.Build;
import android.os.Bundle;
import android.os.UserManager;
import android.util.Log;
import com.google.android.gms.a;
import com.google.android.gms.common.aa;
import com.google.android.gms.common.internal.ad;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.util.j;
import com.google.android.gms.common.util.p;
import com.google.android.gms.common.util.v;
import com.google.android.gms.internal.ye;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.atomic.AtomicBoolean;

public class z {
    private static boolean a = false;
    @Deprecated
    public static final int b = 12211000;
    static final AtomicBoolean c = new AtomicBoolean();
    private static boolean d = false;
    private static boolean e = false;
    private static boolean f = false;
    private static final AtomicBoolean g = new AtomicBoolean();

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Deprecated
    public static int a(Context object, int n2) {
        boolean bl2;
        block5 : {
            try {
                object.getResources().getString(a.c.common_google_play_services_unknown_issue);
                break block5;
            }
            catch (Throwable throwable) {}
            Log.e((String)"GooglePlayServicesUtil", (String)"The Google Play services resources were not found. Check your project configuration to ensure that the resources are included.");
        }
        if (!"com.google.android.gms".equals(object.getPackageName()) && !g.get()) {
            int n3 = ad.b((Context)object);
            if (n3 == 0) throw new IllegalStateException("A required meta-data tag in your app's AndroidManifest.xml does not exist.  You must have the following declaration within the <application> element:     <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />");
            if (n3 != b) {
                n2 = b;
                object = new StringBuilder(320);
                object.append("The meta-data tag in your app's AndroidManifest.xml does not have the right value.  Expected ");
                object.append(n2);
                object.append(" but found ");
                object.append(n3);
                object.append(".  You must have the following declaration within the <application> element:     <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />");
                throw new IllegalStateException(object.toString());
            }
        }
        if (!j.b((Context)object) && !j.d((Context)object)) {
            bl2 = true;
            return z.a((Context)object, bl2, b, n2);
        }
        bl2 = false;
        return z.a((Context)object, bl2, b, n2);
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private static int a(Context object, boolean bl2, int n2, int n3) {
        PackageInfo packageInfo;
        boolean bl3 = n3 == -1 || n3 >= 0;
        ah.b(bl3);
        PackageManager packageManager = object.getPackageManager();
        PackageInfo packageInfo2 = null;
        if (bl2) {
            packageInfo2 = packageManager.getPackageInfo("com.android.vending", 8256);
        }
        try {
            packageInfo = packageManager.getPackageInfo("com.google.android.gms", 64);
        }
        catch (PackageManager.NameNotFoundException nameNotFoundException) {}
        aa.a((Context)object);
        if (!aa.a(packageInfo, true)) {
            object = "Google Play services signature invalid.";
        } else if (!(!bl2 || aa.a(packageInfo2, true) && packageInfo2.signatures[0].equals((Object)packageInfo.signatures[0]))) {
            object = "Google Play Store signature invalid.";
        } else {
            int n4 = packageInfo.versionCode / 1000;
            if (n4 < (n2 /= 1000) && (n3 == -1 || n4 < n3 / 1000)) {
                n2 = b;
                n3 = packageInfo.versionCode;
                object = new StringBuilder(77);
                object.append("Google Play services out of date.  Requires ");
                object.append(n2);
                object.append(" but found ");
                object.append(n3);
                Log.w((String)"GooglePlayServicesUtil", (String)object.toString());
                return 2;
            }
            packageInfo2 = packageInfo.applicationInfo;
            object = packageInfo2;
            if (packageInfo2 == null) {
                try {
                    object = packageManager.getApplicationInfo("com.google.android.gms", 0);
                }
                catch (PackageManager.NameNotFoundException nameNotFoundException) {
                    Log.wtf((String)"GooglePlayServicesUtil", (String)"Google Play services missing when getting application info.", (Throwable)nameNotFoundException);
                    return 1;
                }
            }
            if (object.enabled) return 0;
            return 3;
            catch (PackageManager.NameNotFoundException nameNotFoundException) {}
            object = "Google Play Store is missing.";
        }
        Log.w((String)"GooglePlayServicesUtil", (String)object);
        return 9;
        Log.w((String)"GooglePlayServicesUtil", (String)"Google Play services is missing.");
        return 1;
    }

    @Deprecated
    public static String a(int n2) {
        return com.google.android.gms.common.a.a(n2);
    }

    @Deprecated
    @TargetApi(value=19)
    public static boolean a(Context context, int n2, String string2) {
        return v.a(context, n2, string2);
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @TargetApi(value=21)
    static boolean a(Context context, String string2) {
        Object object;
        boolean bl2 = string2.equals("com.google.android.gms");
        if (p.g()) {
            object = context.getPackageManager().getPackageInstaller().getAllSessions();
            object = object.iterator();
            while (object.hasNext()) {
                if (!string2.equals(((PackageInstaller.SessionInfo)object.next()).getAppPackageName())) continue;
                return true;
            }
        }
        object = context.getPackageManager();
        try {
            string2 = object.getApplicationInfo(string2, 8192);
            if (bl2) {
                return string2.enabled;
            }
            if (!string2.enabled) return false;
            if (!p.d()) return true;
            if ((context = ((UserManager)context.getSystemService("user")).getApplicationRestrictions(context.getPackageName())) == null) return true;
            bl2 = "true".equals(context.getString("restricted_profile"));
            if (!bl2) return true;
            return false;
        }
        catch (PackageManager.NameNotFoundException nameNotFoundException) {
            return false;
        }
        catch (Exception exception) {
            return false;
        }
    }

    @Deprecated
    public static boolean b(int n2) {
        if (n2 != 9) {
            switch (n2) {
                default: {
                    return false;
                }
                case 1: 
                case 2: 
                case 3: 
            }
        }
        return true;
    }

    @Deprecated
    public static boolean b(Context context, int n2) {
        return v.a(context, n2);
    }

    @Deprecated
    public static boolean c(Context context, int n2) {
        if (n2 == 18) {
            return true;
        }
        if (n2 == 1) {
            return z.a(context, "com.google.android.gms");
        }
        return false;
    }

    @Deprecated
    public static int d(Context context) {
        return z.a(context, -1);
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public static boolean e(Context context) {
        block7 : {
            if (!f) {
                Throwable throwable22222;
                block6 : {
                    block5 : {
                        try {
                            PackageInfo packageInfo = ye.a(context).b("com.google.android.gms", 64);
                            aa.a(context);
                            e = packageInfo != null && !aa.a(packageInfo, false) && aa.a(packageInfo, true);
                            break block5;
                        }
                        catch (Throwable throwable22222) {
                            break block6;
                        }
                        catch (PackageManager.NameNotFoundException nameNotFoundException) {
                            Log.w((String)"GooglePlayServicesUtil", (String)"Cannot find Google Play services package name.", (Throwable)nameNotFoundException);
                        }
                    }
                    f = true;
                    break block7;
                }
                f = true;
                throw throwable22222;
            }
        }
        if (e) return true;
        if ("user".equals(Build.TYPE)) return false;
        return true;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Deprecated
    public static void f(Context context) {
        if (c.getAndSet(true)) {
            return;
        }
        try {
            context = (NotificationManager)context.getSystemService("notification");
            if (context == null) return;
        }
        catch (SecurityException securityException) {
            return;
        }
        context.cancel(10436);
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public static Resources g(Context context) {
        try {
            return context.getPackageManager().getResourcesForApplication("com.google.android.gms");
        }
        catch (PackageManager.NameNotFoundException nameNotFoundException) {
            return null;
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public static Context h(Context context) {
        try {
            return context.createPackageContext("com.google.android.gms", 3);
        }
        catch (PackageManager.NameNotFoundException nameNotFoundException) {
            return null;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Deprecated
    public static int i(Context context) {
        try {
            context = context.getPackageManager().getPackageInfo("com.google.android.gms", 0);
            return context.versionCode;
        }
        catch (PackageManager.NameNotFoundException nameNotFoundException) {}
        Log.w((String)"GooglePlayServicesUtil", (String)"Google Play services is missing.");
        return 0;
    }
}

