/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.Activity
 *  android.content.Context
 *  android.os.Bundle
 *  android.os.Parcelable
 *  android.os.RemoteException
 *  android.os.StrictMode
 *  android.os.StrictMode$ThreadPolicy
 *  android.os.StrictMode$ThreadPolicy$Builder
 *  android.util.AttributeSet
 *  android.view.LayoutInflater
 *  android.view.View
 *  android.view.ViewGroup
 */
package com.google.android.gms.maps;

import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.os.Parcelable;
import android.os.RemoteException;
import android.os.StrictMode;
import android.support.v4.app.j;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import com.google.android.gms.a.m;
import com.google.android.gms.a.n;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.maps.GoogleMapOptions;
import com.google.android.gms.maps.a.c;
import com.google.android.gms.maps.a.d;
import com.google.android.gms.maps.a.f;
import com.google.android.gms.maps.a.k;
import com.google.android.gms.maps.a.l;
import com.google.android.gms.maps.e;
import com.google.android.gms.maps.g;
import java.util.ArrayList;
import java.util.List;

public class SupportMapFragment
extends j {
    private final b a = new b(this);

    @Override
    public View a(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        layoutInflater = this.a.a(layoutInflater, viewGroup, bundle);
        layoutInflater.setClickable(true);
        return layoutInflater;
    }

    @Override
    public void a(Activity activity) {
        super.a(activity);
        this.a.a(activity);
    }

    @Override
    public void a(Activity activity, AttributeSet object, Bundle bundle) {
        StrictMode.ThreadPolicy threadPolicy = StrictMode.getThreadPolicy();
        StrictMode.setThreadPolicy((StrictMode.ThreadPolicy)new StrictMode.ThreadPolicy.Builder(threadPolicy).permitAll().build());
        try {
            super.a(activity, (AttributeSet)object, bundle);
            this.a.a(activity);
            object = GoogleMapOptions.a((Context)activity, object);
            Bundle bundle2 = new Bundle();
            bundle2.putParcelable("MapOptions", (Parcelable)object);
            this.a.a(activity, bundle2, bundle);
            return;
        }
        finally {
            StrictMode.setThreadPolicy((StrictMode.ThreadPolicy)threadPolicy);
        }
    }

    @Override
    public void a(Bundle bundle) {
        super.a(bundle);
        this.a.a(bundle);
    }

    public void a(e e2) {
        ah.b("getMapAsync must be called on the main thread.");
        this.a.a(e2);
    }

    @Override
    public void d(Bundle bundle) {
        if (bundle != null) {
            bundle.setClassLoader(SupportMapFragment.class.getClassLoader());
        }
        super.d(bundle);
    }

    @Override
    public void e(Bundle bundle) {
        if (bundle != null) {
            bundle.setClassLoader(SupportMapFragment.class.getClassLoader());
        }
        super.e(bundle);
        this.a.b(bundle);
    }

    @Override
    public void f() {
        super.f();
        this.a.b();
    }

    @Override
    public void g() {
        this.a.e();
        super.g();
    }

    @Override
    public void g(Bundle bundle) {
        super.g(bundle);
    }

    @Override
    public void h() {
        this.a.f();
        super.h();
    }

    @Override
    public void onLowMemory() {
        this.a.h();
        super.onLowMemory();
    }

    @Override
    public void x() {
        super.x();
        this.a.c();
    }

    @Override
    public void y() {
        this.a.d();
        super.y();
    }

    @Override
    public void z() {
        this.a.g();
        super.z();
    }

    static final class a
    implements d {
        private final j a;
        private final c b;

        public a(j j2, c c2) {
            this.b = ah.a(c2);
            this.a = ah.a(j2);
        }

        @Override
        public final View a(LayoutInflater object, ViewGroup viewGroup, Bundle bundle) {
            try {
                Bundle bundle2 = new Bundle();
                k.a(bundle, bundle2);
                object = this.b.a(m.a(object), m.a(viewGroup), bundle2);
                k.a(bundle2, bundle);
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
            return (View)m.a((com.google.android.gms.a.a)object);
        }

        @Override
        public final void a() {
            try {
                this.b.f();
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
        }

        @Override
        public final void a(Activity activity, Bundle object, Bundle bundle) {
            object = (GoogleMapOptions)object.getParcelable("MapOptions");
            try {
                Bundle bundle2 = new Bundle();
                k.a(bundle, bundle2);
                this.b.a(m.a(activity), (GoogleMapOptions)object, bundle2);
                k.a(bundle2, bundle);
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        public final void a(Bundle bundle) {
            try {
                Bundle bundle2 = new Bundle();
                k.a(bundle, bundle2);
                Bundle bundle3 = this.a.j();
                if (bundle3 != null && bundle3.containsKey("MapOptions")) {
                    k.a(bundle2, "MapOptions", bundle3.getParcelable("MapOptions"));
                }
                this.b.a(bundle2);
                k.a(bundle2, bundle);
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
        }

        public final void a(e e2) {
            try {
                this.b.a(new g(this, e2));
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
        }

        @Override
        public final void b() {
            try {
                this.b.a();
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
        }

        @Override
        public final void b(Bundle bundle) {
            try {
                Bundle bundle2 = new Bundle();
                k.a(bundle, bundle2);
                this.b.b(bundle2);
                k.a(bundle2, bundle);
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
        }

        @Override
        public final void c() {
            try {
                this.b.b();
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
        }

        @Override
        public final void d() {
            try {
                this.b.g();
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
        }

        @Override
        public final void e() {
            try {
                this.b.c();
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
        }

        @Override
        public final void f() {
            try {
                this.b.d();
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
        }

        @Override
        public final void g() {
            try {
                this.b.e();
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
        }
    }

    static final class b
    extends com.google.android.gms.a.c<a> {
        private final j a;
        private n<a> b;
        private Activity c;
        private final List<e> d = new ArrayList<e>();

        b(j j2) {
            this.a = j2;
        }

        private final void a(Activity activity) {
            this.c = activity;
            this.i();
        }

        /*
         * Enabled force condition propagation
         * Lifted jumps to return sites
         */
        private final void i() {
            c c2;
            block5 : {
                if (this.c == null || this.b == null || this.a() != null) return;
                com.google.android.gms.maps.d.a((Context)this.c);
                c2 = l.a((Context)this.c).a(m.a(this.c));
                if (c2 != null) break block5;
                return;
            }
            try {
                this.b.a(new a(this.a, c2));
                for (e e2 : this.d) {
                    ((a)this.a()).a(e2);
                }
                this.d.clear();
                return;
            }
            catch (RemoteException remoteException) {
                throw new com.google.android.gms.maps.model.e(remoteException);
            }
            catch (com.google.android.gms.common.d d2) {
                return;
            }
        }

        @Override
        protected final void a(n<a> n2) {
            this.b = n2;
            this.i();
        }

        public final void a(e e2) {
            if (this.a() != null) {
                ((a)this.a()).a(e2);
                return;
            }
            this.d.add(e2);
        }
    }

}

