/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.ahn;
import com.google.android.gms.internal.ajm;
import com.google.android.gms.internal.alc;
import com.google.android.gms.internal.ald;
import com.google.android.gms.internal.asj;
import com.google.android.gms.internal.asw;
import java.security.Key;
import java.security.NoSuchAlgorithmException;
import java.security.spec.AlgorithmParameterSpec;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.crypto.Cipher;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

public final class apl
extends ald {
    private static final Pattern a = Pattern.compile("(.+)/(.+)/(.+)");

    private static String a(Cipher object, String string2, SecretKeySpec secretKeySpec, IvParameterSpec ivParameterSpec) {
        if (string2 != null && string2.length() != 0) {
            try {
                object.init(1, (Key)secretKeySpec, ivParameterSpec);
                object = ahn.a(object.doFinal(string2.getBytes()));
                return object;
            }
            catch (Exception exception) {
                String string3 = String.valueOf(exception.getMessage());
                string3 = string3.length() != 0 ? "Encrypt: ".concat(string3) : new String("Encrypt: ");
                throw new RuntimeException(string3);
            }
        }
        throw new RuntimeException("Encrypt: empty input string");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    protected final /* varargs */ asj<?> a(ajm object, asj<?> ... object2) {
        ah.b(true);
        boolean bl2 = ((Object)object2).length >= 3;
        ah.b(bl2);
        String string2 = alc.d(object2[0]);
        Object object3 = alc.d(object2[1]);
        Object object4 = alc.d(object2[2]);
        object = ((Object)object2).length < 4 ? "AES/CBC/NoPadding" : alc.d(object2[3]);
        object2 = a.matcher((CharSequence)object);
        if (!object2.matches()) {
            if ((object = String.valueOf(object)).length() != 0) {
                object = "Encrypt: invalid transformation:".concat((String)object);
                throw new RuntimeException((String)object);
            }
            object = new String("Encrypt: invalid transformation:");
            throw new RuntimeException((String)object);
        }
        object2 = object2.group(1);
        object2 = new SecretKeySpec(object3.getBytes(), (String)object2);
        object4 = new IvParameterSpec(object4.getBytes());
        try {
            object3 = Cipher.getInstance((String)object);
            return new asw(apl.a((Cipher)object3, string2, (SecretKeySpec)object2, (IvParameterSpec)object4));
        }
        catch (NoSuchAlgorithmException | NoSuchPaddingException generalSecurityException) {}
        object = String.valueOf(object);
        if (object.length() != 0) {
            object = "Encrypt: invalid transformation:".concat((String)object);
            throw new RuntimeException((String)object);
        }
        object = new String("Encrypt: invalid transformation:");
        throw new RuntimeException((String)object);
    }
}

