/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.bqh;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

public final class buc {
    public final int a;
    public final byte[] b;
    public final Map<String, String> c;
    public final List<bqh> d;
    public final boolean e;
    private long f;

    /*
     * Enabled aggressive block sorting
     */
    private buc(int n2, byte[] object, Map<String, String> map, List<bqh> list, boolean bl2, long l2) {
        void var5_8;
        void var3_6;
        void var2_4;
        void var6_9;
        void var4_7;
        this.a = n2;
        this.b = object;
        this.c = var3_6;
        if (var4_7 == null) {
            Object var2_3 = null;
        } else {
            List list2 = Collections.unmodifiableList(var4_7);
        }
        this.d = var2_4;
        this.e = var5_8;
        this.f = var6_9;
    }

    @Deprecated
    public buc(int n2, byte[] arrby, Map<String, String> map, boolean bl2, long l2) {
        this(n2, arrby, map, buc.a(map), bl2, l2);
    }

    public buc(int n2, byte[] arrby, boolean bl2, long l2, List<bqh> list) {
        this(n2, arrby, buc.a(list), list, bl2, l2);
    }

    @Deprecated
    public buc(byte[] arrby, Map<String, String> map) {
        this(200, arrby, map, false, 0L);
    }

    private static List<bqh> a(Map<String, String> object) {
        if (object == null) {
            return null;
        }
        if (object.isEmpty()) {
            return Collections.emptyList();
        }
        ArrayList<bqh> arrayList = new ArrayList<bqh>(object.size());
        for (Map.Entry entry : object.entrySet()) {
            arrayList.add(new bqh((String)entry.getKey(), (String)entry.getValue()));
        }
        return arrayList;
    }

    private static Map<String, String> a(List<bqh> object) {
        if (object == null) {
            return null;
        }
        if (object.isEmpty()) {
            return Collections.emptyMap();
        }
        TreeMap<String, String> treeMap = new TreeMap<String, String>(String.CASE_INSENSITIVE_ORDER);
        object = object.iterator();
        while (object.hasNext()) {
            bqh bqh2 = (bqh)object.next();
            treeMap.put(bqh2.a(), bqh2.b());
        }
        return treeMap;
    }
}

