/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Bundle
 *  android.os.IBinder
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 */
package com.google.android.gms.internal;

import android.os.Bundle;
import android.os.IBinder;
import android.os.Parcel;
import android.os.Parcelable;
import com.google.android.gms.internal.xb;
import java.util.ArrayList;

public final class xa {
    public static int a(Parcel parcel) {
        int n2 = parcel.readInt();
        int n3 = xa.a(parcel, n2);
        int n4 = parcel.dataPosition();
        if ((65535 & n2) != 20293) {
            String string2 = String.valueOf(Integer.toHexString(n2));
            string2 = string2.length() != 0 ? "Expected object header. Got 0x".concat(string2) : new String("Expected object header. Got 0x");
            throw new xb(string2, parcel);
        }
        n2 = n3 + n4;
        if (n2 >= n4 && n2 <= parcel.dataSize()) {
            return n2;
        }
        StringBuilder stringBuilder = new StringBuilder(54);
        stringBuilder.append("Size read is invalid start=");
        stringBuilder.append(n4);
        stringBuilder.append(" end=");
        stringBuilder.append(n2);
        throw new xb(stringBuilder.toString(), parcel);
    }

    public static int a(Parcel parcel, int n2) {
        if ((n2 & -65536) != -65536) {
            return n2 >> 16 & 65535;
        }
        return parcel.readInt();
    }

    public static <T extends Parcelable> T a(Parcel parcel, int n2, Parcelable.Creator<T> parcelable) {
        n2 = xa.a(parcel, n2);
        int n3 = parcel.dataPosition();
        if (n2 == 0) {
            return null;
        }
        parcelable = (Parcelable)parcelable.createFromParcel(parcel);
        parcel.setDataPosition(n3 + n2);
        return (T)parcelable;
    }

    private static void a(Parcel parcel, int n2, int n3) {
        if ((n2 = xa.a(parcel, n2)) == n3) {
            return;
        }
        String string2 = Integer.toHexString(n2);
        StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 46);
        stringBuilder.append("Expected size ");
        stringBuilder.append(n3);
        stringBuilder.append(" got ");
        stringBuilder.append(n2);
        stringBuilder.append(" (0x");
        stringBuilder.append(string2);
        stringBuilder.append(")");
        throw new xb(stringBuilder.toString(), parcel);
    }

    private static void a(Parcel parcel, int n2, int n3, int n4) {
        if (n3 == n4) {
            return;
        }
        String string2 = Integer.toHexString(n3);
        StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 46);
        stringBuilder.append("Expected size ");
        stringBuilder.append(n4);
        stringBuilder.append(" got ");
        stringBuilder.append(n3);
        stringBuilder.append(" (0x");
        stringBuilder.append(string2);
        stringBuilder.append(")");
        throw new xb(stringBuilder.toString(), parcel);
    }

    public static void b(Parcel parcel, int n2) {
        n2 = xa.a(parcel, n2);
        parcel.setDataPosition(parcel.dataPosition() + n2);
    }

    public static <T> T[] b(Parcel parcel, int n2, Parcelable.Creator<T> arrobject) {
        n2 = xa.a(parcel, n2);
        int n3 = parcel.dataPosition();
        if (n2 == 0) {
            return null;
        }
        arrobject = parcel.createTypedArray(arrobject);
        parcel.setDataPosition(n3 + n2);
        return arrobject;
    }

    public static <T> ArrayList<T> c(Parcel parcel, int n2, Parcelable.Creator<T> object) {
        n2 = xa.a(parcel, n2);
        int n3 = parcel.dataPosition();
        if (n2 == 0) {
            return null;
        }
        object = parcel.createTypedArrayList(object);
        parcel.setDataPosition(n3 + n2);
        return object;
    }

    public static boolean c(Parcel parcel, int n2) {
        xa.a(parcel, n2, 4);
        if (parcel.readInt() != 0) {
            return true;
        }
        return false;
    }

    public static byte d(Parcel parcel, int n2) {
        xa.a(parcel, n2, 4);
        return (byte)parcel.readInt();
    }

    public static int e(Parcel parcel, int n2) {
        xa.a(parcel, n2, 4);
        return parcel.readInt();
    }

    public static long f(Parcel parcel, int n2) {
        xa.a(parcel, n2, 8);
        return parcel.readLong();
    }

    public static Long g(Parcel parcel, int n2) {
        int n3 = xa.a(parcel, n2);
        if (n3 == 0) {
            return null;
        }
        xa.a(parcel, n2, n3, 8);
        return parcel.readLong();
    }

    public static float h(Parcel parcel, int n2) {
        xa.a(parcel, n2, 4);
        return parcel.readFloat();
    }

    public static Float i(Parcel parcel, int n2) {
        int n3 = xa.a(parcel, n2);
        if (n3 == 0) {
            return null;
        }
        xa.a(parcel, n2, n3, 4);
        return Float.valueOf(parcel.readFloat());
    }

    public static double j(Parcel parcel, int n2) {
        xa.a(parcel, n2, 8);
        return parcel.readDouble();
    }

    public static Double k(Parcel parcel, int n2) {
        int n3 = xa.a(parcel, n2);
        if (n3 == 0) {
            return null;
        }
        xa.a(parcel, n2, n3, 8);
        return parcel.readDouble();
    }

    public static String l(Parcel parcel, int n2) {
        n2 = xa.a(parcel, n2);
        int n3 = parcel.dataPosition();
        if (n2 == 0) {
            return null;
        }
        String string2 = parcel.readString();
        parcel.setDataPosition(n3 + n2);
        return string2;
    }

    public static IBinder m(Parcel parcel, int n2) {
        n2 = xa.a(parcel, n2);
        int n3 = parcel.dataPosition();
        if (n2 == 0) {
            return null;
        }
        IBinder iBinder = parcel.readStrongBinder();
        parcel.setDataPosition(n3 + n2);
        return iBinder;
    }

    public static Bundle n(Parcel parcel, int n2) {
        n2 = xa.a(parcel, n2);
        int n3 = parcel.dataPosition();
        if (n2 == 0) {
            return null;
        }
        Bundle bundle = parcel.readBundle();
        parcel.setDataPosition(n3 + n2);
        return bundle;
    }

    public static byte[] o(Parcel parcel, int n2) {
        n2 = xa.a(parcel, n2);
        int n3 = parcel.dataPosition();
        if (n2 == 0) {
            return null;
        }
        byte[] arrby = parcel.createByteArray();
        parcel.setDataPosition(n3 + n2);
        return arrby;
    }

    public static int[] p(Parcel parcel, int n2) {
        n2 = xa.a(parcel, n2);
        int n3 = parcel.dataPosition();
        if (n2 == 0) {
            return null;
        }
        int[] arrn = parcel.createIntArray();
        parcel.setDataPosition(n3 + n2);
        return arrn;
    }

    public static long[] q(Parcel parcel, int n2) {
        n2 = xa.a(parcel, n2);
        int n3 = parcel.dataPosition();
        if (n2 == 0) {
            return null;
        }
        long[] arrl = parcel.createLongArray();
        parcel.setDataPosition(n3 + n2);
        return arrl;
    }

    public static String[] r(Parcel parcel, int n2) {
        n2 = xa.a(parcel, n2);
        int n3 = parcel.dataPosition();
        if (n2 == 0) {
            return null;
        }
        String[] arrstring = parcel.createStringArray();
        parcel.setDataPosition(n3 + n2);
        return arrstring;
    }

    public static ArrayList<Integer> s(Parcel parcel, int n2) {
        int n3 = xa.a(parcel, n2);
        int n4 = parcel.dataPosition();
        if (n3 == 0) {
            return null;
        }
        ArrayList<Integer> arrayList = new ArrayList<Integer>();
        int n5 = parcel.readInt();
        for (n2 = 0; n2 < n5; ++n2) {
            arrayList.add(parcel.readInt());
        }
        parcel.setDataPosition(n4 + n3);
        return arrayList;
    }

    public static ArrayList<String> t(Parcel parcel, int n2) {
        n2 = xa.a(parcel, n2);
        int n3 = parcel.dataPosition();
        if (n2 == 0) {
            return null;
        }
        ArrayList arrayList = parcel.createStringArrayList();
        parcel.setDataPosition(n3 + n2);
        return arrayList;
    }

    public static void u(Parcel parcel, int n2) {
        if (parcel.dataPosition() == n2) {
            return;
        }
        StringBuilder stringBuilder = new StringBuilder(37);
        stringBuilder.append("Overread allowed size end=");
        stringBuilder.append(n2);
        throw new xb(stringBuilder.toString(), parcel);
    }
}

