/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.common.util.f;
import com.google.android.gms.internal.wi;
import com.google.android.gms.internal.wn;

public final class wo {
    public static final Object a;
    private static final wi g;
    private long b;
    private long c;
    private long d;
    private wn e;
    private final f f;

    static {
        g = new wi("RequestTracker");
        a = new Object();
    }

    public wo(f f2, long l2) {
        this.f = f2;
        this.b = l2;
        this.c = -1L;
        this.d = 0L;
    }

    private final void c() {
        this.c = -1L;
        this.e = null;
        this.d = 0L;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a() {
        Object object = a;
        synchronized (object) {
            if (this.c != -1L) {
                this.c();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    public final void a(long l2, wn wn2) {
        Object object = a;
        // MONITORENTER : object
        wn wn3 = this.e;
        long l3 = this.c;
        this.c = l2;
        this.e = wn2;
        this.d = this.f.b();
        // MONITOREXIT : object
        if (wn3 == null) return;
        wn3.a(l3);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final boolean a(long l2) {
        Object object = a;
        synchronized (object) {
            if (this.c == -1L) return false;
            if (this.c != l2) return false;
            return true;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final boolean a(long l2, int n2) {
        boolean bl2;
        wn wn2;
        Object object = a;
        synchronized (object) {
            long l3 = this.c;
            bl2 = true;
            if (l3 == -1L) return false;
            if (l2 - this.d < this.b) return false;
            g.a("request %d timed out", this.c);
            l2 = this.c;
            wn2 = this.e;
            this.c();
        }
        if (wn2 == null) return bl2;
        wn2.a(l2, n2, null);
        return bl2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final boolean a(long l2, int n2, Object object) {
        boolean bl2;
        wn wn2;
        Object object2 = a;
        synchronized (object2) {
            long l3 = this.c;
            bl2 = true;
            if (l3 == -1L) return false;
            if (this.c != l2) return false;
            g.a("request %d completed", this.c);
            wn2 = this.e;
            this.c();
        }
        if (wn2 == null) return bl2;
        wn2.a(l2, n2, object);
        return bl2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final boolean b() {
        Object object = a;
        synchronized (object) {
            if (this.c == -1L) return false;
            return true;
        }
    }
}

