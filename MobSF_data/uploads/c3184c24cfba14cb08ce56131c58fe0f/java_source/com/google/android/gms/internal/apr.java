/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.ajm;
import com.google.android.gms.internal.alc;
import com.google.android.gms.internal.ald;
import com.google.android.gms.internal.asj;
import com.google.android.gms.internal.asp;
import com.google.android.gms.internal.asq;
import com.google.android.gms.internal.asu;
import com.google.android.gms.internal.asw;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

public final class apr
extends ald {
    private static String a(String string2, int n2, Set<Character> object) {
        switch (n2) {
            default: {
                return string2;
            }
            case 2: {
                string2 = string2.replace("\\", "\\\\");
                Iterator<Character> iterator = object.iterator();
                while (iterator.hasNext()) {
                    String string3 = iterator.next().toString();
                    object = String.valueOf(string3);
                    object = object.length() != 0 ? "\\".concat((String)object) : new String("\\");
                    string2 = string2.replace(string3, (CharSequence)object);
                }
                return string2;
            }
            case 1: 
        }
        try {
            object = URLEncoder.encode(string2, "UTF-8").replaceAll("\\+", "%20");
            return object;
        }
        catch (UnsupportedEncodingException unsupportedEncodingException) {
            return string2;
        }
    }

    private static void a(StringBuilder stringBuilder, String string2, int n2, Set<Character> set) {
        stringBuilder.append(apr.a(string2, n2, set));
    }

    private static void a(Set<Character> set, String string2) {
        for (int i2 = 0; i2 < string2.length(); ++i2) {
            set.add(Character.valueOf(string2.charAt(i2)));
        }
    }

    /*
     * Enabled aggressive block sorting
     */
    @Override
    protected final /* varargs */ asj<?> a(ajm object, asj<?> ... object2) {
        boolean bl2 = true;
        boolean bl3 = true;
        ah.b(true);
        boolean bl4 = ((Object)object2).length > 0;
        ah.b(bl4);
        Object object3 = object2[0];
        Object object4 = ((Object)object2).length > 1 ? object2[1] : asp.e;
        object = "";
        int n2 = ((Object)object2).length;
        int n3 = 2;
        if (n2 > 2) {
            object = object2[2] == asp.e ? "" : alc.d(object2[2]);
        }
        Iterator iterator = "=";
        if (((Object)object2).length > 3) {
            object2 = object2[3] == asp.e ? "=" : alc.d(object2[3]);
            iterator = object2;
        }
        object2 = null;
        if (object4 != asp.e) {
            ah.b(object4 instanceof asw);
            if ("url".equals(object4.b())) {
                n3 = 1;
            } else {
                if (!"backslash".equals(object4.b())) {
                    return new asw("");
                }
                object2 = new HashSet();
                apr.a((Set<Character>)object2, (String)object);
                apr.a((Set<Character>)object2, iterator);
                object2.remove(Character.valueOf('\\'));
            }
        } else {
            n3 = 0;
        }
        object4 = new StringBuilder();
        if (object3 instanceof asq) {
            iterator = ((List)((asq)object3).b()).iterator();
            while (iterator.hasNext()) {
                object3 = (asj)iterator.next();
                if (!bl3) {
                    object4.append((String)object);
                }
                apr.a((StringBuilder)object4, alc.d(object3), n3, (Set<Character>)object2);
                bl3 = false;
            }
            return new asw(object4.toString());
        }
        if (!(object3 instanceof asu)) {
            apr.a((StringBuilder)object4, alc.d(object3), n3, (Set<Character>)object2);
            return new asw(object4.toString());
        }
        object3 = (Map)((asu)object3).b();
        Iterator iterator2 = object3.keySet().iterator();
        bl3 = bl2;
        while (iterator2.hasNext()) {
            String string2 = (String)iterator2.next();
            if (!bl3) {
                object4.append((String)object);
            }
            String string3 = alc.d((asj)object3.get(string2));
            apr.a((StringBuilder)object4, string2, n3, (Set<Character>)object2);
            object4.append((String)((Object)iterator));
            apr.a((StringBuilder)object4, string3, n3, (Set<Character>)object2);
            bl3 = false;
        }
        return new asw(object4.toString());
    }
}

