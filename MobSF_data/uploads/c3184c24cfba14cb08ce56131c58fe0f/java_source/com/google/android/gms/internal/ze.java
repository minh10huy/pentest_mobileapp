/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Bundle
 *  android.os.DeadObjectException
 *  android.os.HandlerThread
 *  android.os.Looper
 */
package com.google.android.gms.internal;

import android.content.Context;
import android.os.Bundle;
import android.os.DeadObjectException;
import android.os.HandlerThread;
import android.os.Looper;
import com.google.android.gms.common.a;
import com.google.android.gms.common.internal.ar;
import com.google.android.gms.common.internal.as;
import com.google.android.gms.internal.ub;
import com.google.android.gms.internal.zf;
import com.google.android.gms.internal.zg;
import com.google.android.gms.internal.zi;
import com.google.android.gms.internal.zk;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.TimeUnit;

final class ze
implements ar,
as {
    private zf a;
    private final String b;
    private final String c;
    private final LinkedBlockingQueue<ub> d;
    private final HandlerThread e;

    public ze(Context context, String string2, String string3) {
        this.b = string2;
        this.c = string3;
        this.e = new HandlerThread("GassClient");
        this.e.start();
        this.a = new zf(context, this.e.getLooper(), this, this);
        this.d = new LinkedBlockingQueue();
        this.a.s();
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private final zk a() {
        try {
            return this.a.e();
        }
        catch (DeadObjectException | IllegalStateException object) {
            return null;
        }
    }

    private final void b() {
        if (this.a != null && (this.a.g() || this.a.h())) {
            this.a.f();
        }
    }

    private static ub c() {
        ub ub2 = new ub();
        ub2.k = 32768L;
        return ub2;
    }

    @Override
    public final void a(int n2) {
        try {
            this.d.put(ze.c());
            return;
        }
        catch (InterruptedException interruptedException) {
            return;
        }
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public final void a(Bundle var1_1) {
        var1_1 = this.a();
        if (var1_1 == null) return;
        try {
            var1_1 = var1_1.a(new zg(this.b, this.c)).a();
            this.d.put((ub)var1_1);
        }
        catch (Throwable var1_2) {}
lbl6: // 2 sources:
        do {
            this.b();
            this.e.quit();
            return;
            break;
        } while (true);
        this.b();
        this.e.quit();
        throw var1_2;
        catch (Throwable var1_3) {}
        try {
            this.d.put(ze.c());
        }
        catch (InterruptedException var1_4) {
        }
        ** while (true)
    }

    @Override
    public final void a(a a2) {
        try {
            this.d.put(ze.c());
            return;
        }
        catch (InterruptedException interruptedException) {
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final ub b(int n2) {
        ub ub2;
        block2 : {
            try {
                ub2 = this.d.poll(5000L, TimeUnit.MILLISECONDS);
                break block2;
            }
            catch (InterruptedException interruptedException) {}
            ub2 = null;
        }
        ub ub3 = ub2;
        if (ub2 != null) return ub3;
        return ze.c();
    }
}

