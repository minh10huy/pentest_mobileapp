/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.location.Location
 *  android.os.Bundle
 *  android.os.RemoteException
 *  android.text.TextUtils
 *  android.view.View
 *  android.view.ViewGroup
 *  android.view.ViewGroup$LayoutParams
 *  android.view.ViewParent
 */
package com.google.android.gms.ads.internal;

import android.content.Context;
import android.location.Location;
import android.os.Bundle;
import android.os.RemoteException;
import android.text.TextUtils;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;
import com.google.android.gms.a.m;
import com.google.android.gms.ads.internal.ab;
import com.google.android.gms.ads.internal.al;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.ads.internal.aw;
import com.google.android.gms.ads.internal.ax;
import com.google.android.gms.ads.internal.ay;
import com.google.android.gms.ads.internal.br;
import com.google.android.gms.ads.internal.gmsg.i;
import com.google.android.gms.ads.internal.overlay.t;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.util.j;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.am;
import com.google.android.gms.internal.bkw;
import com.google.android.gms.internal.bn;
import com.google.android.gms.internal.boc;
import com.google.android.gms.internal.bod;
import com.google.android.gms.internal.boe;
import com.google.android.gms.internal.bpp;
import com.google.android.gms.internal.bpu;
import com.google.android.gms.internal.bpv;
import com.google.android.gms.internal.bpy;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bqm;
import com.google.android.gms.internal.bqp;
import com.google.android.gms.internal.brb;
import com.google.android.gms.internal.brf;
import com.google.android.gms.internal.brm;
import com.google.android.gms.internal.bru;
import com.google.android.gms.internal.bsa;
import com.google.android.gms.internal.bsr;
import com.google.android.gms.internal.bst;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.btn;
import com.google.android.gms.internal.btv;
import com.google.android.gms.internal.btx;
import com.google.android.gms.internal.bue;
import com.google.android.gms.internal.caw;
import com.google.android.gms.internal.cdx;
import com.google.android.gms.internal.cee;
import com.google.android.gms.internal.ceo;
import com.google.android.gms.internal.dv;
import com.google.android.gms.internal.ea;
import com.google.android.gms.internal.ej;
import com.google.android.gms.internal.fk;
import com.google.android.gms.internal.ge;
import com.google.android.gms.internal.gl;
import com.google.android.gms.internal.gm;
import com.google.android.gms.internal.gn;
import com.google.android.gms.internal.gv;
import com.google.android.gms.internal.gx;
import com.google.android.gms.internal.ha;
import com.google.android.gms.internal.hc;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.hs;
import com.google.android.gms.internal.il;
import com.google.android.gms.internal.im;
import com.google.android.gms.internal.jz;
import com.google.android.gms.internal.km;
import com.google.android.gms.internal.nu;
import com.google.android.gms.internal.pk;
import com.google.android.gms.internal.pr;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.CountDownLatch;

@ak
public abstract class a
extends brb
implements i,
t,
am,
bpp,
ceo,
gv {
    protected btx a;
    protected btv b;
    protected boolean c = false;
    protected final al d;
    protected final aw e;
    protected transient bpu f;
    protected final bkw g;
    protected final br h;
    private btv i;

    a(aw object, al object2, br object3) {
        this.e = object;
        this.d = new al(this);
        this.h = object3;
        av.e().b(this.e.c);
        av.e().c(this.e.c);
        hc.a(this.e.c);
        av.B().a(this.e.c);
        av.i().a(this.e.c, this.e.e);
        av.k().a(this.e.c);
        this.g = av.i().g();
        av.h().a(this.e.c);
        av.D().a(this.e.c);
        object = btk.cd;
        if (((Boolean)bqj.f().a(object)).booleanValue()) {
            object = new Timer();
            object2 = btk.cf;
            object2 = new ab(this, new CountDownLatch((Integer)bqj.f().a(object2)), (Timer)object);
            object3 = btk.ce;
            object.schedule((TimerTask)object2, 0L, (long)((Long)bqj.f().a(object3)));
        }
    }

    protected static boolean a(bpu bpu2) {
        bpu2 = bpu2.m.getBundle("com.google.ads.mediation.admob.AdMobAdapter");
        if (bpu2 != null && bpu2.containsKey("gw")) {
            return false;
        }
        return true;
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private static long b(String string2) {
        String string3;
        block4 : {
            int n2;
            int n3 = string2.indexOf("ufe");
            int n4 = n2 = string2.indexOf(44, n3);
            if (n2 == -1) {
                n4 = string2.length();
            }
            try {
                return Long.parseLong(string2.substring(n3 + 4, n4));
            }
            catch (IndexOutOfBoundsException indexOutOfBoundsException) {}
            string3 = "Invalid index for Url fetch time in CSI latency info.";
            break block4;
            catch (NumberFormatException numberFormatException) {}
            string3 = "Cannot find valid format of Url fetch time in CSI latency info.";
        }
        he.e(string3);
        return -1L;
    }

    protected final void A() {
        if (this.e.B == null) {
            return;
        }
        try {
            this.e.B.f();
            return;
        }
        catch (RemoteException remoteException) {
            he.c("Could not call RewardedVideoAdListener.onRewardedVideoCompleted().", (Throwable)remoteException);
            return;
        }
    }

    public final void B() {
        gl gl2 = this.e.j;
        if (gl2 != null && !TextUtils.isEmpty((CharSequence)gl2.A) && !gl2.F) {
            if (!av.o().b()) {
                return;
            }
            he.b("Sending troubleshooting signals to the server.");
            av.o().b(this.e.c, this.e.e.a, gl2.A, this.e.b);
            gl2.F = true;
        }
    }

    @Override
    public String C() {
        return this.e.b;
    }

    @Override
    public final brf D() {
        return this.e.o;
    }

    @Override
    public final bqp E() {
        return this.e.n;
    }

    protected final List<String> a(List<String> object) {
        ArrayList<String> arrayList = new ArrayList<String>(object.size());
        object = object.iterator();
        while (object.hasNext()) {
            arrayList.add(ge.a((String)object.next(), this.e.c));
        }
        return arrayList;
    }

    protected void a(int n2) {
        this.a(n2, false);
    }

    protected void a(int n2, boolean bl2) {
        StringBuilder stringBuilder = new StringBuilder(30);
        stringBuilder.append("Failed to load ad: ");
        stringBuilder.append(n2);
        he.e(stringBuilder.toString());
        this.c = bl2;
        if (this.e.n != null) {
            try {
                this.e.n.a(n2);
            }
            catch (RemoteException remoteException) {
                he.c("Could not call AdListener.onAdFailedToLoad().", (Throwable)remoteException);
            }
        }
        if (this.e.B != null) {
            try {
                this.e.B.a(n2);
                return;
            }
            catch (RemoteException remoteException) {
                he.c("Could not call RewardedVideoAdListener.onRewardedVideoAdFailedToLoad().", (Throwable)remoteException);
            }
        }
    }

    protected final void a(View view) {
        ax ax2 = this.e.f;
        if (ax2 != null) {
            ax2.addView(view, av.g().d());
        }
    }

    @Override
    public final void a(bpy bpy2) {
        ah.b("setAdSize must be called on the main UI thread.");
        this.e.i = bpy2;
        if (this.e.j != null && this.e.j.b != null && this.e.G == 0) {
            this.e.j.b.a(pr.a(bpy2));
        }
        if (this.e.f == null) {
            return;
        }
        if (this.e.f.getChildCount() > 1) {
            this.e.f.removeView(this.e.f.getNextView());
        }
        this.e.f.setMinimumWidth(bpy2.f);
        this.e.f.setMinimumHeight(bpy2.c);
        this.e.f.requestLayout();
    }

    @Override
    public final void a(bqm bqm2) {
        ah.b("setAdListener must be called on the main UI thread.");
        this.e.m = bqm2;
    }

    @Override
    public final void a(bqp bqp2) {
        ah.b("setAdListener must be called on the main UI thread.");
        this.e.n = bqp2;
    }

    @Override
    public final void a(brf brf2) {
        ah.b("setAppEventListener must be called on the main UI thread.");
        this.e.o = brf2;
    }

    @Override
    public final void a(brm brm2) {
        ah.b("setCorrelationIdProvider must be called on the main UI thread");
        this.e.p = brm2;
    }

    @Override
    public final void a(bsa bsa2) {
        ah.b("setIconAdOptions must be called on the main UI thread.");
        this.e.x = bsa2;
    }

    @Override
    public final void a(bst bst2) {
        ah.b("setVideoOptions must be called on the main UI thread.");
        this.e.w = bst2;
    }

    public final void a(btv btv2) {
        bsz<Boolean> bsz2 = btk.J;
        this.a = new btx(bqj.f().a(bsz2), "load_ad", this.e.i.a);
        this.i = new btv(-1L, null, null);
        if (btv2 == null) {
            this.b = new btv(-1L, null, null);
            return;
        }
        this.b = new btv(btv2.a(), btv2.b(), btv2.c());
    }

    @Override
    public void a(bue bue2) {
        throw new IllegalStateException("setOnCustomRenderedAdLoadedListener is not supported for current ad type");
    }

    @Override
    public void a(cdx cdx2) {
        he.e("setInAppPurchaseListener is deprecated and should not be called.");
    }

    @Override
    public final void a(cee cee2, String string2) {
        he.e("setPlayStorePurchaseParams is deprecated and should not be called.");
    }

    @Override
    public final void a(ej ej2) {
        ah.b("setRewardedVideoAdListener can only be called from the UI thread.");
        this.e.B = ej2;
    }

    @Override
    public final void a(gm gm2) {
        long l2;
        if (gm2.b.m != -1L && !TextUtils.isEmpty((CharSequence)gm2.b.w) && (l2 = a.b(gm2.b.w)) != -1L) {
            btv btv2 = this.a.a(gm2.b.m + l2);
            this.a.a(btv2, "stc");
        }
        this.a.a(gm2.b.w);
        this.a.a(this.b, "arf");
        this.i = this.a.a();
        this.a.a("gqi", gm2.b.x);
        this.e.g = null;
        this.e.k = gm2;
        gm2.i.a(new ay(this, gm2));
        gm2.i.a(boe.a.b.b);
        this.a(gm2, this.a);
    }

    protected abstract void a(gm var1, btx var2);

    @Override
    public final void a(String string2) {
        ah.b("setUserId must be called on the main UI thread.");
        this.e.C = string2;
    }

    @Override
    public final void a(String string2, String string3) {
        if (this.e.o != null) {
            try {
                this.e.o.a(string2, string3);
                return;
            }
            catch (RemoteException remoteException) {
                he.c("Could not call the AppEventListener.", (Throwable)remoteException);
            }
        }
    }

    @Override
    public final void a(HashSet<gn> hashSet) {
        this.e.a(hashSet);
    }

    protected abstract boolean a(bpu var1, btx var2);

    boolean a(gl gl2) {
        return false;
    }

    protected abstract boolean a(gl var1, gl var2);

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    protected final void b(fk var1_1) {
        if (this.e.B == null) {
            return;
        }
        var3_3 = "";
        var2_4 = 1;
        if (var1_1 == null) ** GOTO lbl9
        try {
            var3_3 = var1_1.a;
            var2_4 = var1_1.b;
lbl9: // 2 sources:
            this.e.B.a(new dv(var3_3, var2_4));
            return;
        }
        catch (RemoteException var1_2) {
            he.c("Could not call RewardedVideoAdListener.onRewarded().", (Throwable)var1_2);
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     */
    @Override
    public void b(gl gl2) {
        this.a.a(this.i, "awr");
        this.e.h = null;
        if (gl2.d != -2 && gl2.d != 3 && this.e.a() != null) {
            av.j().a(this.e.a());
        }
        if (gl2.d == -1) {
            this.c = false;
            return;
        }
        if (this.a(gl2)) {
            he.b("Ad refresh scheduled.");
        }
        if (gl2.d != -2) {
            boc boc2;
            boe.a.b b2;
            if (gl2.d == 3) {
                boc2 = gl2.H;
                b2 = boe.a.b.d;
            } else {
                boc2 = gl2.H;
                b2 = boe.a.b.c;
            }
            boc2.a(b2);
            this.a(gl2.d);
            return;
        }
        if (this.e.E == null) {
            this.e.E = new gx(this.e.b);
        }
        if (this.e.f != null) {
            this.e.f.a().d(gl2.A);
        }
        this.g.a(this.e.j);
        if (this.a(this.e.j, gl2)) {
            this.e.j = gl2;
            Object object = this.e;
            if (object.l != null) {
                if (object.j != null) {
                    object.l.a(object.j.x);
                    object.l.b(object.j.y);
                    object.l.b(object.j.m);
                }
                object.l.a(object.i.d);
            }
            btx btx2 = this.a;
            object = this.e.j.a() ? "1" : "0";
            btx2.a("is_mraid", (String)object);
            btx2 = this.a;
            object = this.e.j.m ? "1" : "0";
            btx2.a("is_mediation", (String)object);
            if (this.e.j.b != null && this.e.j.b.u() != null) {
                btx2 = this.a;
                object = this.e.j.b.u().f() ? "1" : "0";
                btx2.a("is_delay_pl", (String)object);
            }
            this.a.a(this.b, "ttc");
            if (av.i().b() != null) {
                av.i().b().a(this.a);
            }
            this.B();
            if (this.e.d()) {
                this.w();
            }
        }
        if (gl2.G != null) {
            av.e().a(this.e.c, gl2.G);
        }
    }

    @Override
    public void b(boolean bl2) {
        he.e("Attempt to call setManualImpressionsEnabled for an unsupported ad type.");
    }

    /*
     * Enabled aggressive block sorting
     */
    @Override
    public boolean b(bpu bpu2) {
        ah.b("loadAd must be called on the main UI thread.");
        av.k().a();
        Object object = btk.aG;
        Object object2 = bpu2;
        if (bqj.f().a(object).booleanValue()) {
            bpu2 = bpu2.a();
            object = btk.aH;
            object2 = bpu2;
            if (bqj.f().a(object).booleanValue()) {
                bpu2.c.putBoolean("_newBundle", true);
                object2 = bpu2;
            }
        }
        bpu2 = object2;
        if (j.c(this.e.c)) {
            bpu2 = object2;
            if (object2.k != null) {
                bpu2 = new bpv((bpu)object2).a(null).a();
            }
        }
        if (this.e.g == null && this.e.h == null) {
            he.d("Starting ad request.");
            this.a((btv)null);
            this.b = this.a.a();
            if (bpu2.f) {
                object2 = "This request is sent from a test device.";
            } else {
                bqj.a();
                object2 = jz.a(this.e.c);
                object = new StringBuilder(String.valueOf(object2).length() + 71);
                object.append("Use AdRequest.Builder.addTestDevice(\"");
                object.append((String)object2);
                object.append("\") to get test ads on this device.");
                object2 = object.toString();
            }
            he.d((String)object2);
            this.d.a(bpu2);
            this.c = this.a(bpu2, this.a);
            return this.c;
        }
        object2 = this.f != null ? "Aborting last ad request since another ad request is already in progress. The current request object will still be cached for future refreshes." : "Loading already in progress, saving this object for future refreshes.";
        he.e((String)object2);
        this.f = bpu2;
        return false;
    }

    @Override
    public void c(boolean bl2) {
        throw new IllegalStateException("onImmersiveModeUpdated is not supported for current ad type");
    }

    protected boolean c(bpu bpu2) {
        if (this.e.f == null) {
            return false;
        }
        bpu2 = this.e.f.getParent();
        if (!(bpu2 instanceof View)) {
            return false;
        }
        bpu2 = (View)bpu2;
        return av.e().a((View)bpu2, bpu2.getContext());
    }

    protected void d(boolean bl2) {
        he.d("Ad finished loading.");
        this.c = bl2;
        if (this.e.n != null) {
            try {
                this.e.n.c();
            }
            catch (RemoteException remoteException) {
                he.c("Could not call AdListener.onAdLoaded().", (Throwable)remoteException);
            }
        }
        if (this.e.B != null) {
            try {
                this.e.B.a();
                return;
            }
            catch (RemoteException remoteException) {
                he.c("Could not call RewardedVideoAdListener.onRewardedVideoAdLoaded().", (Throwable)remoteException);
            }
        }
    }

    @Override
    public void e() {
        if (this.e.j == null) {
            he.e("Ad state was null when trying to ping click URLs.");
            return;
        }
        he.b("Pinging click URLs.");
        if (this.e.l != null) {
            this.e.l.b();
        }
        if (this.e.j.c != null) {
            av.e();
            hs.a(this.e.c, this.e.e.a, this.a(this.e.j.c));
        }
        if (this.e.m != null) {
            try {
                this.e.m.a();
                return;
            }
            catch (RemoteException remoteException) {
                he.c("Could not notify onAdClicked event.", (Throwable)remoteException);
            }
        }
    }

    @Override
    public final void h() {
        this.u();
    }

    public final br i() {
        return this.h;
    }

    @Override
    public void j() {
        ah.b("destroy must be called on the main UI thread.");
        this.d.a();
        this.g.b(this.e.j);
        aw aw2 = this.e;
        if (aw2.f != null) {
            aw2.f.b();
        }
        aw2.n = null;
        aw2.o = null;
        aw2.A = null;
        aw2.p = null;
        aw2.a(false);
        if (aw2.f != null) {
            aw2.f.removeAllViews();
        }
        aw2.b();
        aw2.c();
        aw2.j = null;
    }

    @Override
    public final com.google.android.gms.a.a k() {
        ah.b("getAdFrame must be called on the main UI thread.");
        return m.a(this.e.f);
    }

    @Override
    public final bpy l() {
        ah.b("getAdSize must be called on the main UI thread.");
        if (this.e.i == null) {
            return null;
        }
        return new bsr(this.e.i);
    }

    @Override
    public final boolean m() {
        ah.b("isLoaded must be called on the main UI thread.");
        if (this.e.g == null && this.e.h == null && this.e.j != null) {
            return true;
        }
        return false;
    }

    @Override
    public final void n() {
        ah.b("recordManualImpression must be called on the main UI thread.");
        if (this.e.j == null) {
            he.e("Ad state was null when trying to ping manual tracking URLs.");
            return;
        }
        he.b("Pinging manual tracking URLs.");
        if (!this.e.j.E) {
            ArrayList<String> arrayList = new ArrayList<String>();
            if (this.e.j.f != null) {
                arrayList.addAll(this.e.j.f);
            }
            if (this.e.j.n != null && this.e.j.n.h != null) {
                arrayList.addAll(this.e.j.n.h);
            }
            if (arrayList.isEmpty()) {
                return;
            }
            av.e();
            hs.a(this.e.c, this.e.e.a, arrayList);
            this.e.j.E = true;
        }
    }

    @Override
    public void o() {
        ah.b("pause must be called on the main UI thread.");
    }

    @Override
    public void p() {
        ah.b("resume must be called on the main UI thread.");
    }

    @Override
    public final void q() {
        ah.b("stopLoading must be called on the main UI thread.");
        this.c = false;
        this.e.a(true);
    }

    @Override
    public final boolean r() {
        return this.c;
    }

    @Override
    public bru s() {
        return null;
    }

    protected void t() {
        he.d("Ad closing.");
        if (this.e.n != null) {
            try {
                this.e.n.a();
            }
            catch (RemoteException remoteException) {
                he.c("Could not call AdListener.onAdClosed().", (Throwable)remoteException);
            }
        }
        if (this.e.B != null) {
            try {
                this.e.B.d();
                return;
            }
            catch (RemoteException remoteException) {
                he.c("Could not call RewardedVideoAdListener.onRewardedVideoAdClosed().", (Throwable)remoteException);
            }
        }
    }

    protected final void u() {
        he.d("Ad leaving application.");
        if (this.e.n != null) {
            try {
                this.e.n.b();
            }
            catch (RemoteException remoteException) {
                he.c("Could not call AdListener.onAdLeftApplication().", (Throwable)remoteException);
            }
        }
        if (this.e.B != null) {
            try {
                this.e.B.e();
                return;
            }
            catch (RemoteException remoteException) {
                he.c("Could not call  RewardedVideoAdListener.onRewardedVideoAdLeftApplication().", (Throwable)remoteException);
            }
        }
    }

    protected final void v() {
        he.d("Ad opening.");
        if (this.e.n != null) {
            try {
                this.e.n.d();
            }
            catch (RemoteException remoteException) {
                he.c("Could not call AdListener.onAdOpened().", (Throwable)remoteException);
            }
        }
        if (this.e.B != null) {
            try {
                this.e.B.b();
                return;
            }
            catch (RemoteException remoteException) {
                he.c("Could not call RewardedVideoAdListener.onRewardedVideoAdOpened().", (Throwable)remoteException);
            }
        }
    }

    protected void w() {
        this.d(false);
    }

    public final void x() {
        he.d("Ad impression.");
        if (this.e.n != null) {
            try {
                this.e.n.f();
                return;
            }
            catch (RemoteException remoteException) {
                he.c("Could not call AdListener.onAdImpression().", (Throwable)remoteException);
            }
        }
    }

    public final void y() {
        he.d("Ad clicked.");
        if (this.e.n != null) {
            try {
                this.e.n.e();
                return;
            }
            catch (RemoteException remoteException) {
                he.c("Could not call AdListener.onAdClicked().", (Throwable)remoteException);
            }
        }
    }

    protected final void z() {
        if (this.e.B == null) {
            return;
        }
        try {
            this.e.B.c();
            return;
        }
        catch (RemoteException remoteException) {
            he.c("Could not call RewardedVideoAdListener.onVideoStarted().", (Throwable)remoteException);
            return;
        }
    }
}

