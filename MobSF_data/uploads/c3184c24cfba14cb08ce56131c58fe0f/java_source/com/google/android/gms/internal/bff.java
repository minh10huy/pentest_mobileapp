/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  org.json.JSONArray
 *  org.json.JSONException
 *  org.json.JSONObject
 *  org.json.JSONStringer
 */
package com.google.android.gms.internal;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONStringer;

public final class bff {
    public static String a(Object object) {
        if (object == null) {
            return "null";
        }
        if (object instanceof String) {
            return JSONObject.quote((String)((String)object));
        }
        if (object instanceof Number) {
            try {
                object = JSONObject.numberToString((Number)((Number)object));
                return object;
            }
            catch (JSONException jSONException) {
                throw new IOException("Could not serialize number", (Throwable)jSONException);
            }
        }
        if (object instanceof Boolean) {
            if (((Boolean)object).booleanValue()) {
                return "true";
            }
            return "false";
        }
        try {
            JSONStringer jSONStringer = new JSONStringer();
            bff.a(object, jSONStringer);
            object = jSONStringer.toString();
            return object;
        }
        catch (JSONException jSONException) {
            throw new IOException("Failed to serialize JSON", (Throwable)jSONException);
        }
    }

    public static Map<String, Object> a(String object) {
        try {
            object = bff.a(new JSONObject((String)object));
            return object;
        }
        catch (JSONException jSONException) {
            throw new IOException((Throwable)jSONException);
        }
    }

    private static Map<String, Object> a(JSONObject jSONObject) {
        HashMap<String, Object> hashMap = new HashMap<String, Object>(jSONObject.length());
        Iterator iterator = jSONObject.keys();
        while (iterator.hasNext()) {
            String string2 = (String)iterator.next();
            hashMap.put(string2, bff.b(jSONObject.get(string2)));
        }
        return hashMap;
    }

    private static void a(Object iterator, JSONStringer jSONStringer) {
        if (iterator instanceof Map) {
            jSONStringer.object();
            for (Map.Entry entry : ((Map)((Object)iterator)).entrySet()) {
                jSONStringer.key((String)entry.getKey());
                bff.a(entry.getValue(), jSONStringer);
            }
            jSONStringer.endObject();
            return;
        }
        if (iterator instanceof Collection) {
            iterator = (Collection)((Object)iterator);
            jSONStringer.array();
            iterator = iterator.iterator();
            while (iterator.hasNext()) {
                bff.a(iterator.next(), jSONStringer);
            }
            jSONStringer.endArray();
            return;
        }
        jSONStringer.value((Object)iterator);
    }

    private static Object b(Object object) {
        if (object instanceof JSONObject) {
            return bff.a((JSONObject)object);
        }
        if (object instanceof JSONArray) {
            object = (JSONArray)object;
            ArrayList<Object> arrayList = new ArrayList<Object>(object.length());
            for (int i2 = 0; i2 < object.length(); ++i2) {
                arrayList.add(bff.b(object.get(i2)));
            }
            return arrayList;
        }
        Object object2 = object;
        if (object.equals(JSONObject.NULL)) {
            object2 = null;
        }
        return object2;
    }
}

