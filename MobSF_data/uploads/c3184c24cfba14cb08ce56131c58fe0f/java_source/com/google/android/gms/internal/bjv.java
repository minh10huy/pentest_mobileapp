/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.bjq;
import com.google.android.gms.internal.bjt;
import com.google.android.gms.internal.bjy;
import com.google.android.gms.internal.bka;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

final class bjv
implements Cloneable {
    private bjt<?, ?> a;
    private Object b;
    private List<bka> c = new ArrayList<bka>();

    bjv() {
    }

    private final byte[] b() {
        byte[] arrby = new byte[this.a()];
        this.a(bjq.a(arrby));
        return arrby;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private bjv c() {
        bjv bjv2 = new bjv();
        try {
            int n2;
            bjy[] arrbjy;
            block19 : {
                Object object;
                block13 : {
                    block18 : {
                        block17 : {
                            block16 : {
                                block15 : {
                                    block14 : {
                                        block12 : {
                                            bjv2.a = this.a;
                                            if (this.c == null) {
                                                bjv2.c = null;
                                            } else {
                                                bjv2.c.addAll(this.c);
                                            }
                                            if (this.b == null) return bjv2;
                                            if (!(this.b instanceof bjy)) break block12;
                                            object = (bjy)((bjy)this.b).clone();
                                            break block13;
                                        }
                                        if (!(this.b instanceof byte[])) break block14;
                                        object = ((byte[])this.b).clone();
                                        break block13;
                                    }
                                    boolean bl2 = this.b instanceof byte[][];
                                    int n3 = 0;
                                    if (bl2) {
                                        byte[][] arrarrby;
                                        byte[][] arrby = (byte[][])this.b;
                                        bjv2.b = arrarrby = new byte[arrby.length][];
                                        for (n2 = 0; n2 < arrby.length; ++n2) {
                                            arrarrby[n2] = (byte[])arrby[n2].clone();
                                        }
                                        return bjv2;
                                    }
                                    if (!(this.b instanceof boolean[])) break block15;
                                    object = ((boolean[])this.b).clone();
                                    break block13;
                                }
                                if (!(this.b instanceof int[])) break block16;
                                object = ((int[])this.b).clone();
                                break block13;
                            }
                            if (!(this.b instanceof long[])) break block17;
                            object = ((long[])this.b).clone();
                            break block13;
                        }
                        if (!(this.b instanceof float[])) break block18;
                        object = ((float[])this.b).clone();
                        break block13;
                    }
                    if (!(this.b instanceof double[])) break block19;
                    object = ((double[])this.b).clone();
                }
                bjv2.b = object;
                return bjv2;
            }
            if (!(this.b instanceof bjy[])) return bjv2;
            bjy[] arrbjy2 = (bjy[])this.b;
            bjv2.b = arrbjy = new bjy[arrbjy2.length];
            for (n2 = n3; n2 < arrbjy2.length; ++n2) {
                arrbjy[n2] = (bjy)arrbjy2[n2].clone();
            }
            return bjv2;
        }
        catch (CloneNotSupportedException cloneNotSupportedException) {
            throw new AssertionError(cloneNotSupportedException);
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    final int a() {
        int n2;
        Object object = this.b;
        int n3 = 0;
        if (object != null) {
            object = this.a;
            Object object2 = this.b;
            if (!object.c) return object.a(object2);
            int n4 = Array.getLength(object2);
            int n5 = 0;
            do {
                n2 = n5;
                if (n3 >= n4) return n2;
                n2 = n5;
                if (Array.get(object2, n3) != null) {
                    n2 = n5 + object.a(Array.get(object2, n3));
                }
                ++n3;
                n5 = n2;
            } while (true);
        }
        object = this.c.iterator();
        int n6 = 0;
        do {
            n2 = n6;
            if (!object.hasNext()) return n2;
            bka bka2 = (bka)object.next();
            n6 += bjq.d(bka2.a) + 0 + bka2.b.length;
        } while (true);
    }

    final void a(bjq bjq2) {
        if (this.b != null) {
            bjt<?, ?> bjt2 = this.a;
            Object object = this.b;
            if (bjt2.c) {
                int n2 = Array.getLength(object);
                for (int i2 = 0; i2 < n2; ++i2) {
                    Object object2 = Array.get(object, i2);
                    if (object2 == null) continue;
                    bjt2.a(object2, bjq2);
                }
                return;
            }
            bjt2.a(object, bjq2);
            return;
        }
        for (bka bka2 : this.c) {
            bjq2.c(bka2.a);
            bjq2.c(bka2.b);
        }
    }

    final void a(bka bka2) {
        this.c.add(bka2);
    }

    public final /* synthetic */ Object clone() {
        return this.c();
    }

    public final boolean equals(Object object) {
        if (object == this) {
            return true;
        }
        if (!(object instanceof bjv)) {
            return false;
        }
        object = (bjv)object;
        if (this.b != null && object.b != null) {
            if (this.a != object.a) {
                return false;
            }
            if (!this.a.a.isArray()) {
                return this.b.equals(object.b);
            }
            if (this.b instanceof byte[]) {
                return Arrays.equals((byte[])this.b, (byte[])object.b);
            }
            if (this.b instanceof int[]) {
                return Arrays.equals((int[])this.b, (int[])object.b);
            }
            if (this.b instanceof long[]) {
                return Arrays.equals((long[])this.b, (long[])object.b);
            }
            if (this.b instanceof float[]) {
                return Arrays.equals((float[])this.b, (float[])object.b);
            }
            if (this.b instanceof double[]) {
                return Arrays.equals((double[])this.b, (double[])object.b);
            }
            if (this.b instanceof boolean[]) {
                return Arrays.equals((boolean[])this.b, (boolean[])object.b);
            }
            return Arrays.deepEquals((Object[])this.b, (Object[])object.b);
        }
        if (this.c != null && object.c != null) {
            return this.c.equals(object.c);
        }
        try {
            boolean bl2 = Arrays.equals(this.b(), bjv.super.b());
            return bl2;
        }
        catch (IOException iOException) {
            throw new IllegalStateException(iOException);
        }
    }

    public final int hashCode() {
        try {
            int n2 = Arrays.hashCode(this.b());
            return n2 + 527;
        }
        catch (IOException iOException) {
            throw new IllegalStateException(iOException);
        }
    }
}

