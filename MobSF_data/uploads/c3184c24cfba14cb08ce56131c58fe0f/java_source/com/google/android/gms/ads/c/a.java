/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.Intent
 *  android.content.ServiceConnection
 *  android.content.pm.PackageInfo
 *  android.content.pm.PackageManager
 *  android.content.pm.PackageManager$NameNotFoundException
 *  android.os.IBinder
 *  android.os.RemoteException
 *  android.os.SystemClock
 *  android.util.Log
 */
package com.google.android.gms.ads.c;

import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.IBinder;
import android.os.RemoteException;
import android.os.SystemClock;
import android.util.Log;
import com.google.android.gms.ads.c.c;
import com.google.android.gms.common.d;
import com.google.android.gms.common.i;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.m;
import com.google.android.gms.internal.bkr;
import com.google.android.gms.internal.bks;
import java.io.IOException;
import java.lang.ref.WeakReference;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;

public class a {
    private i a;
    private bkr b;
    private boolean c;
    private Object d = new Object();
    private b e;
    private final Context f;
    private boolean g;
    private long h;

    public a(Context context) {
        this(context, 30000L, false, false);
    }

    public a(Context context, long l2, boolean bl2, boolean bl3) {
        ah.a(context);
        Context context2 = context;
        if (bl2 && (context2 = context.getApplicationContext()) == null) {
            context2 = context;
        }
        this.f = context2;
        this.c = false;
        this.h = l2;
        this.g = bl3;
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public static a a(Context object) {
        Throwable throwable2222;
        Object object2 = new c((Context)object);
        boolean bl2 = object2.a("gads:ad_id_app_context:enabled", false);
        float f2 = object2.a("gads:ad_id_app_context:ping_ratio", 0.0f);
        String string2 = object2.a("gads:ad_id_use_shared_preference:experiment_id", "");
        object = new a((Context)object, -1L, bl2, object2.a("gads:ad_id_use_persistent_service:enabled", false));
        long l2 = SystemClock.elapsedRealtime();
        a.super.b(false);
        object2 = object.b();
        a.super.a((a)object2, bl2, f2, SystemClock.elapsedRealtime() - l2, string2, null);
        object.d();
        return object2;
        {
            catch (Throwable throwable2222) {
            }
            catch (Throwable throwable3) {}
            {
                a.super.a(null, bl2, f2, -1L, string2, throwable3);
                throw throwable3;
            }
        }
        object.d();
        throw throwable2222;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private static i a(Context context, boolean bl2) {
        try {
            context.getPackageManager().getPackageInfo("com.android.vending", 0);
        }
        catch (PackageManager.NameNotFoundException nameNotFoundException) {
            throw new d(9);
        }
        int n2 = m.b().a(context);
        if (n2 != 0 && n2 != 2) {
            throw new IOException("Google Play services not available");
        }
        String string2 = bl2 ? "com.google.android.gms.ads.identifier.service.PERSISTENT_START" : "com.google.android.gms.ads.identifier.service.START";
        i i2 = new i();
        string2 = new Intent(string2);
        string2.setPackage("com.google.android.gms");
        try {
            bl2 = com.google.android.gms.common.stats.a.a().a(context, (Intent)string2, i2, 1);
            if (!bl2) throw new IOException("Connection failure");
            return i2;
        }
        catch (Throwable throwable) {
            throw new IOException(throwable);
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private static bkr a(Context object, i i2) {
        try {
            void var1_4;
            return bks.a(var1_4.a(10000L, TimeUnit.MILLISECONDS));
        }
        catch (Throwable throwable) {
            throw new IOException(throwable);
        }
        catch (InterruptedException interruptedException) {
            throw new IOException("Interrupted exception");
        }
    }

    public static void a(boolean bl2) {
    }

    private final boolean a(a a2, boolean bl2, float f2, long l2, String string2, Throwable throwable) {
        if (Math.random() > (double)f2) {
            return false;
        }
        HashMap<String, String> hashMap = new HashMap<String, String>();
        String string3 = bl2 ? "1" : "0";
        hashMap.put("app_context", string3);
        if (a2 != null) {
            string3 = a2.b() ? "1" : "0";
            hashMap.put("limit_ad_tracking", string3);
        }
        if (a2 != null && a2.a() != null) {
            hashMap.put("ad_id_size", Integer.toString(a2.a().length()));
        }
        if (throwable != null) {
            hashMap.put("error", throwable.getClass().getName());
        }
        if (string2 != null && !string2.isEmpty()) {
            hashMap.put("experiment_id", string2);
        }
        hashMap.put("tag", "AdvertisingIdClient");
        hashMap.put("time_spent", Long.toString(l2));
        new com.google.android.gms.ads.c.b(this, hashMap).start();
        return true;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void b(boolean bl2) {
        ah.c("Calling this from your main thread can lead to deadlock");
        synchronized (this) {
            if (this.c) {
                this.d();
            }
            this.a = a.a(this.f, this.g);
            this.b = a.a(this.f, this.a);
            this.c = true;
            if (bl2) {
                this.e();
            }
            return;
        }
    }

    public static boolean b(Context object) {
        c c2 = new c((Context)object);
        object = new a((Context)object, -1L, c2.a("gads:ad_id_app_context:enabled", false), c2.a("com.google.android.gms.ads.identifier.service.PERSISTENT_START", false));
        try {
            a.super.b(false);
            boolean bl2 = object.c();
            return bl2;
        }
        finally {
            object.d();
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void e() {
        Object object = this.d;
        synchronized (object) {
            if (this.e != null) {
                this.e.a.countDown();
                try {
                    this.e.join();
                }
                catch (InterruptedException interruptedException) {}
            }
            if (this.h > 0L) {
                this.e = new b(this, this.h);
            }
            return;
        }
    }

    public void a() {
        this.b(true);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    public a b() {
        Object object;
        ah.c("Calling this from your main thread can lead to deadlock");
        // MONITORENTER : this
        if (!this.c) {
            object = this.d;
            // MONITORENTER : object
            if (this.e == null) throw new IOException("AdvertisingIdClient is not connected.");
            if (!this.e.b) throw new IOException("AdvertisingIdClient is not connected.");
            // MONITOREXIT : object
            try {
                this.b(false);
                if (!this.c) throw new IOException("AdvertisingIdClient cannot reconnect.");
            }
            catch (Exception exception) {
                throw new IOException("AdvertisingIdClient cannot reconnect.", exception);
            }
        }
        ah.a(this.a);
        ah.a(this.b);
        try {
            object = new a(this.b.a(), this.b.a(true));
            // MONITOREXIT : this
        }
        catch (RemoteException remoteException) {
            Log.i((String)"AdvertisingIdClient", (String)"GMS remote exception ", (Throwable)remoteException);
            throw new IOException("Remote exception");
        }
        this.e();
        return object;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    public boolean c() {
        boolean bl2;
        ah.c("Calling this from your main thread can lead to deadlock");
        // MONITORENTER : this
        if (!this.c) {
            Object object = this.d;
            // MONITORENTER : object
            if (this.e == null) throw new IOException("AdvertisingIdClient is not connected.");
            if (!this.e.b) throw new IOException("AdvertisingIdClient is not connected.");
            // MONITOREXIT : object
            try {
                this.b(false);
                if (!this.c) throw new IOException("AdvertisingIdClient cannot reconnect.");
            }
            catch (Exception exception) {
                throw new IOException("AdvertisingIdClient cannot reconnect.", exception);
            }
        }
        ah.a(this.a);
        ah.a(this.b);
        try {
            bl2 = this.b.b();
            // MONITOREXIT : this
        }
        catch (RemoteException remoteException) {
            Log.i((String)"AdvertisingIdClient", (String)"GMS remote exception ", (Throwable)remoteException);
            throw new IOException("Remote exception");
        }
        this.e();
        return bl2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public void d() {
        ah.c("Calling this from your main thread can lead to deadlock");
        synchronized (this) {
            i i2;
            if (this.f != null && (i2 = this.a) != null) {
                try {
                    if (this.c) {
                        com.google.android.gms.common.stats.a.a();
                        this.f.unbindService((ServiceConnection)this.a);
                    }
                }
                catch (Throwable throwable) {
                    Log.i((String)"AdvertisingIdClient", (String)"AdvertisingIdClient unbindService failed.", (Throwable)throwable);
                }
                this.c = false;
                this.b = null;
                this.a = null;
                return;
            }
            return;
        }
    }

    protected void finalize() {
        this.d();
        super.finalize();
    }

    public static final class a {
        private final String a;
        private final boolean b;

        public a(String string2, boolean bl2) {
            this.a = string2;
            this.b = bl2;
        }

        public final String a() {
            return this.a;
        }

        public final boolean b() {
            return this.b;
        }

        public final String toString() {
            String string2 = this.a;
            boolean bl2 = this.b;
            StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 7);
            stringBuilder.append("{");
            stringBuilder.append(string2);
            stringBuilder.append("}");
            stringBuilder.append(bl2);
            return stringBuilder.toString();
        }
    }

    static final class b
    extends Thread {
        CountDownLatch a;
        boolean b;
        private WeakReference<a> c;
        private long d;

        public b(a a2, long l2) {
            this.c = new WeakReference<a>(a2);
            this.d = l2;
            this.a = new CountDownLatch(1);
            this.b = false;
            this.start();
        }

        private final void a() {
            a a2 = this.c.get();
            if (a2 != null) {
                a2.d();
                this.b = true;
            }
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        public final void run() {
            try {
                if (!this.a.await(this.d, TimeUnit.MILLISECONDS)) {
                    this.a();
                }
                return;
            }
            catch (InterruptedException interruptedException) {}
            this.a();
        }
    }

}

