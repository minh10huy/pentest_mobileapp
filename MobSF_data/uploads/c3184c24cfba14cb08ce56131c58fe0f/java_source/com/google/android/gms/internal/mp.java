/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.app.Activity
 *  android.content.Context
 *  android.graphics.Bitmap
 *  android.graphics.Bitmap$Config
 *  android.os.Handler
 *  android.text.TextUtils
 *  android.view.MotionEvent
 *  android.view.View
 *  android.view.ViewGroup
 *  android.view.ViewGroup$LayoutParams
 *  android.view.ViewParent
 *  android.view.Window
 *  android.view.WindowManager
 *  android.view.WindowManager$LayoutParams
 *  android.widget.FrameLayout
 *  android.widget.FrameLayout$LayoutParams
 *  android.widget.ImageView
 *  android.widget.TextView
 */
package com.google.android.gms.internal;

import android.annotation.TargetApi;
import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.os.Handler;
import android.text.TextUtils;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.view.Window;
import android.view.WindowManager;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.ads.internal.br;
import com.google.android.gms.common.internal.an;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.btx;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.hs;
import com.google.android.gms.internal.ml;
import com.google.android.gms.internal.mm;
import com.google.android.gms.internal.mo;
import com.google.android.gms.internal.mq;
import com.google.android.gms.internal.mr;
import com.google.android.gms.internal.na;
import com.google.android.gms.internal.nb;
import com.google.android.gms.internal.nd;
import com.google.android.gms.internal.ne;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@ak
public final class mp
extends FrameLayout
implements ml {
    private final nb a;
    private final FrameLayout b;
    private final btx c;
    private final nd d;
    private final long e;
    private mm f;
    private boolean g;
    private boolean h;
    private boolean i;
    private boolean j;
    private long k;
    private long l;
    private String m;
    private Bitmap n;
    private ImageView o;
    private boolean p;

    public mp(Context object, nb object2, int n2, boolean bl2, btx btx2, na na2) {
        super(object);
        this.a = object2;
        this.c = btx2;
        this.b = new FrameLayout(object);
        this.addView((View)this.b, (ViewGroup.LayoutParams)new FrameLayout.LayoutParams(-1, -1));
        an.a(object2.e());
        this.f = object2.e().b.a((Context)object, (nb)object2, n2, bl2, btx2, na2);
        if (this.f != null) {
            this.b.addView((View)this.f, (ViewGroup.LayoutParams)new FrameLayout.LayoutParams(-1, -1, 17));
            object2 = btk.s;
            if (((Boolean)bqj.f().a(object2)).booleanValue()) {
                this.m();
            }
        }
        this.o = new ImageView(object);
        object = btk.w;
        this.e = (Long)bqj.f().a(object);
        object = btk.u;
        this.j = (Boolean)bqj.f().a(object);
        if (this.c != null) {
            object2 = this.c;
            object = this.j ? "1" : "0";
            object2.a("spinner_used", (String)object);
        }
        this.d = new nd(this);
        if (this.f != null) {
            this.f.a(this);
        }
        if (this.f == null) {
            this.a("AdVideoUnderlay Error", "Allocating player failed.");
        }
    }

    static /* synthetic */ void a(mp mp2, String string2, String[] arrstring) {
        mp2.a(string2, arrstring);
    }

    public static void a(nb nb2) {
        HashMap<String, String> hashMap = new HashMap<String, String>();
        hashMap.put("event", "no_video_view");
        nb2.a("onVideoEvent", hashMap);
    }

    public static void a(nb nb2, String string2) {
        HashMap<String, String> hashMap = new HashMap<String, String>();
        hashMap.put("event", "decoderProps");
        hashMap.put("error", string2);
        nb2.a("onVideoEvent", hashMap);
    }

    public static void a(nb nb2, Map<String, List<Map<String, Object>>> map) {
        HashMap<String, Object> hashMap = new HashMap<String, Object>();
        hashMap.put("event", "decoderProps");
        hashMap.put("mimeTypes", map);
        nb2.a("onVideoEvent", hashMap);
    }

    private final /* varargs */ void a(String string2, String ... arrstring) {
        HashMap<String, String> hashMap = new HashMap<String, String>();
        hashMap.put("event", string2);
        int n2 = arrstring.length;
        string2 = null;
        for (int i2 = 0; i2 < n2; ++i2) {
            String string3 = arrstring[i2];
            if (string2 == null) {
                string2 = string3;
                continue;
            }
            hashMap.put(string2, string3);
            string2 = null;
        }
        this.a.a("onVideoEvent", hashMap);
    }

    private final boolean p() {
        if (this.o.getParent() != null) {
            return true;
        }
        return false;
    }

    private final void q() {
        if (this.a.d() == null) {
            return;
        }
        if (this.h && !this.i) {
            this.a.d().getWindow().clearFlags(128);
            this.h = false;
        }
    }

    @Override
    public final void a() {
        this.d.b();
        hs.a.post((Runnable)new mq(this));
    }

    public final void a(float f2) {
        if (this.f == null) {
            return;
        }
        mm mm2 = this.f;
        mm2.b.a(f2);
        mm2.e();
    }

    public final void a(float f2, float f3) {
        if (this.f != null) {
            this.f.a(f2, f3);
        }
    }

    public final void a(int n2) {
        if (this.f == null) {
            return;
        }
        this.f.a(n2);
    }

    @Override
    public final void a(int n2, int n3) {
        if (this.j) {
            bsz<Integer> bsz2 = btk.v;
            n2 = Math.max(n2 / bqj.f().a(bsz2), 1);
            bsz2 = btk.v;
            n3 = Math.max(n3 / bqj.f().a(bsz2), 1);
            if (this.n == null || this.n.getWidth() != n2 || this.n.getHeight() != n3) {
                this.n = Bitmap.createBitmap((int)n2, (int)n3, (Bitmap.Config)Bitmap.Config.ARGB_8888);
                this.p = false;
            }
        }
    }

    public final void a(int n2, int n3, int n4, int n5) {
        if (n4 != 0) {
            if (n5 == 0) {
                return;
            }
            FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(n4, n5);
            layoutParams.setMargins(n2, n3, 0, 0);
            this.b.setLayoutParams((ViewGroup.LayoutParams)layoutParams);
            this.requestLayout();
        }
    }

    @TargetApi(value=14)
    public final void a(MotionEvent motionEvent) {
        if (this.f == null) {
            return;
        }
        this.f.dispatchTouchEvent(motionEvent);
    }

    public final void a(String string2) {
        this.m = string2;
    }

    @Override
    public final void a(String string2, String string3) {
        this.a("error", "what", string2, "extra", string3);
    }

    @Override
    public final void b() {
        if (this.f == null) {
            return;
        }
        if (this.l == 0L) {
            this.a("canplaythrough", "duration", String.valueOf((float)this.f.getDuration() / 1000.0f), "videoWidth", String.valueOf(this.f.getVideoWidth()), "videoHeight", String.valueOf(this.f.getVideoHeight()));
        }
    }

    @Override
    public final void c() {
        if (this.a.d() != null && !this.h) {
            boolean bl2 = (this.a.d().getWindow().getAttributes().flags & 128) != 0;
            this.i = bl2;
            if (!this.i) {
                this.a.d().getWindow().addFlags(128);
                this.h = true;
            }
        }
        this.g = true;
    }

    @Override
    public final void d() {
        this.a("pause", new String[0]);
        this.q();
        this.g = false;
    }

    @Override
    public final void e() {
        this.a("ended", new String[0]);
        this.q();
    }

    @Override
    public final void f() {
        if (this.p && this.n != null && !this.p()) {
            this.o.setImageBitmap(this.n);
            this.o.invalidate();
            this.b.addView((View)this.o, (ViewGroup.LayoutParams)new FrameLayout.LayoutParams(-1, -1));
            this.b.bringChildToFront((View)this.o);
        }
        this.d.a();
        this.l = this.k;
        hs.a.post((Runnable)new mr(this));
    }

    @Override
    public final void g() {
        if (this.g && this.p()) {
            this.b.removeView((View)this.o);
        }
        if (this.n != null) {
            long l2 = av.l().b();
            if (this.f.getBitmap(this.n) != null) {
                this.p = true;
            }
            l2 = av.l().b() - l2;
            if (he.a()) {
                StringBuilder stringBuilder = new StringBuilder(46);
                stringBuilder.append("Spinner frame grab took ");
                stringBuilder.append(l2);
                stringBuilder.append("ms");
                he.a(stringBuilder.toString());
            }
            if (l2 > this.e) {
                he.e("Spinner frame grab crossed jank threshold! Suspending spinner.");
                this.j = false;
                this.n = null;
                if (this.c != null) {
                    this.c.a("spinner_jank", Long.toString(l2));
                }
            }
        }
    }

    public final void h() {
        if (this.f == null) {
            return;
        }
        if (!TextUtils.isEmpty((CharSequence)this.m)) {
            this.f.setVideoPath(this.m);
            return;
        }
        this.a("no_src", new String[0]);
    }

    public final void i() {
        if (this.f == null) {
            return;
        }
        this.f.d();
    }

    public final void j() {
        if (this.f == null) {
            return;
        }
        this.f.c();
    }

    public final void k() {
        if (this.f == null) {
            return;
        }
        mm mm2 = this.f;
        mm2.b.a(true);
        mm2.e();
    }

    public final void l() {
        if (this.f == null) {
            return;
        }
        mm mm2 = this.f;
        mm2.b.a(false);
        mm2.e();
    }

    @TargetApi(value=14)
    public final void m() {
        if (this.f == null) {
            return;
        }
        TextView textView = new TextView(this.f.getContext());
        String string2 = String.valueOf(this.f.a());
        string2 = string2.length() != 0 ? "AdMob - ".concat(string2) : new String("AdMob - ");
        textView.setText((CharSequence)string2);
        textView.setTextColor(-65536);
        textView.setBackgroundColor(-256);
        this.b.addView((View)textView, (ViewGroup.LayoutParams)new FrameLayout.LayoutParams(-2, -2, 17));
        this.b.bringChildToFront((View)textView);
    }

    public final void n() {
        this.d.a();
        if (this.f != null) {
            this.f.b();
        }
        this.q();
    }

    final void o() {
        if (this.f == null) {
            return;
        }
        long l2 = this.f.getCurrentPosition();
        if (this.k != l2 && l2 > 0L) {
            this.a("timeupdate", "time", String.valueOf((float)l2 / 1000.0f));
            this.k = l2;
        }
    }
}

