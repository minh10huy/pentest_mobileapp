/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.graphics.Point
 *  android.graphics.Rect
 *  android.location.Location
 *  android.os.Bundle
 *  android.os.RemoteException
 *  android.text.TextUtils
 *  android.view.View
 *  android.view.ViewGroup
 *  android.view.ViewTreeObserver
 *  android.view.ViewTreeObserver$OnGlobalLayoutListener
 *  android.view.ViewTreeObserver$OnScrollChangedListener
 *  org.json.JSONObject
 */
package com.google.android.gms.ads.internal;

import android.content.Context;
import android.graphics.Point;
import android.graphics.Rect;
import android.location.Location;
import android.os.Bundle;
import android.os.RemoteException;
import android.text.TextUtils;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import com.google.android.gms.a.a;
import com.google.android.gms.a.m;
import com.google.android.gms.ads.d;
import com.google.android.gms.ads.internal.al;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.ads.internal.aw;
import com.google.android.gms.ads.internal.ax;
import com.google.android.gms.ads.internal.b;
import com.google.android.gms.ads.internal.be;
import com.google.android.gms.ads.internal.br;
import com.google.android.gms.ads.internal.bs;
import com.google.android.gms.ads.internal.bu;
import com.google.android.gms.ads.internal.bv;
import com.google.android.gms.ads.internal.c;
import com.google.android.gms.ads.internal.gmsg.aa;
import com.google.android.gms.ads.internal.s;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bkw;
import com.google.android.gms.internal.blx;
import com.google.android.gms.internal.bmb;
import com.google.android.gms.internal.bn;
import com.google.android.gms.internal.boc;
import com.google.android.gms.internal.boe;
import com.google.android.gms.internal.bpu;
import com.google.android.gms.internal.bpy;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bru;
import com.google.android.gms.internal.bsp;
import com.google.android.gms.internal.bst;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.caw;
import com.google.android.gms.internal.cbn;
import com.google.android.gms.internal.cbq;
import com.google.android.gms.internal.cbz;
import com.google.android.gms.internal.ccc;
import com.google.android.gms.internal.fx;
import com.google.android.gms.internal.ga;
import com.google.android.gms.internal.gl;
import com.google.android.gms.internal.gm;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.hs;
import com.google.android.gms.internal.km;
import com.google.android.gms.internal.ly;
import com.google.android.gms.internal.nu;
import com.google.android.gms.internal.oj;
import com.google.android.gms.internal.pk;
import com.google.android.gms.internal.pn;
import com.google.android.gms.internal.po;
import com.google.android.gms.internal.pr;
import java.lang.ref.WeakReference;
import java.util.List;
import org.json.JSONObject;

@ak
public final class bt
extends be
implements ViewTreeObserver.OnGlobalLayoutListener,
ViewTreeObserver.OnScrollChangedListener {
    private boolean j;
    private WeakReference<Object> k = new WeakReference<Object>(null);

    public bt(Context context, bpy bpy2, String string2, cbn cbn2, km km2, br br2) {
        super(context, bpy2, string2, cbn2, km2, br2);
    }

    private final boolean b(gl gl2, gl gl3) {
        if (gl3.m) {
            View view = s.a(gl3);
            if (view == null) {
                he.e("Could not get mediation view");
                return false;
            }
            View view2 = this.e.f.getNextView();
            if (view2 != null) {
                if (view2 instanceof nu) {
                    ((nu)view2).destroy();
                }
                this.e.f.removeView(view2);
            }
            if (!s.b(gl3)) {
                try {
                    if (av.A().b(this.e.c)) {
                        new blx(this.e.c, view).a(new ga(this.e.c, this.e.b));
                    }
                    if (gl3.t != null) {
                        this.e.f.setMinimumWidth(gl3.t.f);
                        this.e.f.setMinimumHeight(gl3.t.c);
                    }
                    this.a(view);
                }
                catch (Exception exception) {
                    av.i().a(exception, "BannerAdManager.swapViews");
                    he.c("Could not add mediation view to view hierarchy.", exception);
                    return false;
                }
            }
        } else if (gl3.t != null && gl3.b != null) {
            gl3.b.a(pr.a(gl3.t));
            this.e.f.removeAllViews();
            this.e.f.setMinimumWidth(gl3.t.f);
            this.e.f.setMinimumHeight(gl3.t.c);
            this.a(gl3.b.getView());
        }
        if (this.e.f.getChildCount() > 1) {
            this.e.f.showNext();
        }
        if (gl2 != null) {
            gl2 = this.e.f.getNextView();
            if (gl2 instanceof nu) {
                ((nu)((Object)gl2)).destroy();
            } else if (gl2 != null) {
                this.e.f.removeView((View)gl2);
            }
            this.e.c();
        }
        this.e.f.setVisibility(0);
        return true;
    }

    @Override
    public final void F() {
        throw new IllegalStateException("Interstitial is NOT supported by BannerAdManager.");
    }

    @Override
    public final void I() {
        this.d.d();
    }

    @Override
    protected final boolean S() {
        boolean bl2;
        av.e();
        if (!hs.a(this.e.c, this.e.c.getPackageName(), "android.permission.INTERNET")) {
            bqj.a().a((ViewGroup)this.e.f, this.e.i, "Missing internet permission in AndroidManifest.xml.", "Missing internet permission in AndroidManifest.xml. You must have the following declaration: <uses-permission android:name=\"android.permission.INTERNET\" />");
            bl2 = false;
        } else {
            bl2 = true;
        }
        av.e();
        if (!hs.a(this.e.c)) {
            bqj.a().a((ViewGroup)this.e.f, this.e.i, "Missing AdActivity with android:configChanges in AndroidManifest.xml.", "Missing AdActivity with android:configChanges in AndroidManifest.xml. You must have the following declaration within the <application> element: <activity android:name=\"com.google.android.gms.ads.AdActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize\" />");
            bl2 = false;
        }
        if (!bl2 && this.e.f != null) {
            this.e.f.setVisibility(0);
        }
        return bl2;
    }

    @Override
    protected final nu a(gm gm2, bs bs2, fx fx2) {
        if (this.e.i.g == null && this.e.i.i) {
            Object object;
            aw aw2 = this.e;
            if (gm2.b.y) {
                object = this.e.i;
            } else {
                object = gm2.b.l;
                if (object != null) {
                    object = object.split("[xX]");
                    object[0] = object[0].trim();
                    object[1] = object[1].trim();
                    object = new d(Integer.parseInt(object[0]), Integer.parseInt(object[1]));
                } else {
                    object = this.e.i.b();
                }
                object = new bpy(this.e.c, (d)object);
            }
            aw2.i = object;
        }
        return super.a(gm2, bs2, fx2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    protected final void a(gl object, boolean bl2) {
        super.a((gl)object, bl2);
        if (s.b((gl)object)) {
            c c2 = new c(this);
            if (object != null && s.b((gl)object)) {
                nu nu2 = object.b;
                View view = nu2 != null ? nu2.getView() : null;
                if (view == null) {
                    he.e("AdWebView is null");
                    return;
                }
                try {
                    List<String> list = object.n != null ? object.n.q : null;
                    if (list != null && !list.isEmpty()) {
                        cbz cbz2 = object.o != null ? object.o.h() : null;
                        object = object.o != null ? object.o.i() : null;
                        if (list.contains("2") && cbz2 != null) {
                            cbz2.b(m.a(view));
                            if (!cbz2.j()) {
                                cbz2.i();
                            }
                            nu2.u().a("/nativeExpressViewClicked", s.a(cbz2, null, c2));
                            return;
                        }
                        if (list.contains("1") && object != null) {
                            object.b(m.a(view));
                            if (!object.h()) {
                                object.g();
                            }
                            nu2.u().a("/nativeExpressViewClicked", s.a(null, (ccc)object, c2));
                            return;
                        }
                        he.e("No matching template id and mapper");
                        return;
                    }
                    he.e("No template ids present in mediation response");
                    return;
                }
                catch (RemoteException remoteException) {
                    he.c("Error occurred while recording impression and registering for clicks", (Throwable)remoteException);
                }
            }
        }
    }

    @Override
    public final boolean a(gl object, gl gl2) {
        blx blx2;
        Object object2;
        block23 : {
            block24 : {
                block22 : {
                    if (!super.a((gl)object, gl2)) {
                        return false;
                    }
                    if (this.e.d() && !this.b((gl)object, gl2)) {
                        if (gl2.H != null) {
                            gl2.H.a(boe.a.b.c);
                        }
                        this.a(0);
                        return false;
                    }
                    boolean bl2 = gl2.k;
                    blx2 = null;
                    if (!bl2) break block22;
                    this.d(gl2);
                    av.z();
                    ly.a((View)this.e.f, this);
                    av.z();
                    ly.a((View)this.e.f, this);
                    if (!gl2.l) {
                        object2 = new b(this);
                        object = gl2.b != null ? gl2.b.u() : null;
                        if (object != null) {
                            object.a(new bu(gl2, (Runnable)object2));
                        }
                    }
                    break block23;
                }
                if (!this.e.e()) break block24;
                object = btk.bP;
                if (!((Boolean)bqj.f().a(object)).booleanValue()) break block23;
            }
            this.a(gl2, false);
        }
        if (gl2.b != null) {
            object = gl2.b.b();
            object2 = gl2.b.u();
            if (object2 != null) {
                object2.g();
            }
            if (this.e.w != null && object != null) {
                object.a(this.e.w);
            }
        }
        if (this.e.d()) {
            object = blx2;
            if (gl2.b != null) {
                if (gl2.j != null) {
                    this.g.a(this.e.i, gl2);
                }
                object = gl2.b.getView();
                blx2 = new blx(this.e.c, (View)object);
                if (av.A().b(this.e.c) && bt.a(gl2.a) && !TextUtils.isEmpty((CharSequence)this.e.b)) {
                    blx2.a(new ga(this.e.c, this.e.b));
                }
                if (gl2.a()) {
                    blx2.a(gl2.b);
                } else {
                    gl2.b.u().a(new bv(blx2, gl2));
                }
            }
        } else {
            object = blx2;
            if (this.e.F != null) {
                object = blx2;
                if (gl2.j != null) {
                    this.g.a(this.e.i, gl2, this.e.F);
                    object = this.e.F;
                }
            }
        }
        if (!gl2.m) {
            this.e.a((View)object);
        }
        return true;
    }

    @Override
    public final void b(boolean bl2) {
        ah.b("setManualImpressionsEnabled must be called from the main thread.");
        this.j = bl2;
    }

    @Override
    public final boolean b(bpu bpu2) {
        if (bpu2.h != this.j) {
            int n2 = bpu2.a;
            long l2 = bpu2.b;
            Bundle bundle = bpu2.c;
            int n3 = bpu2.d;
            List<String> list = bpu2.e;
            boolean bl2 = bpu2.f;
            int n4 = bpu2.g;
            boolean bl3 = bpu2.h || this.j;
            bpu2 = new bpu(n2, l2, bundle, n3, list, bl2, n4, bl3, bpu2.i, bpu2.j, bpu2.k, bpu2.l, bpu2.m, bpu2.n, bpu2.o, bpu2.p, bpu2.q, bpu2.r);
        }
        return super.b(bpu2);
    }

    final void d(gl gl2) {
        if (gl2 == null) {
            return;
        }
        if (gl2.l) {
            return;
        }
        if (this.e.f != null && av.e().a((View)this.e.f, this.e.c)) {
            if (!this.e.f.getGlobalVisibleRect(new Rect(), null)) {
                return;
            }
            if (gl2 != null && gl2.b != null && gl2.b.u() != null) {
                gl2.b.u().a((po)null);
            }
            this.a(gl2, false);
            gl2.l = true;
        }
    }

    public final void onGlobalLayout() {
        this.d(this.e.j);
    }

    public final void onScrollChanged() {
        this.d(this.e.j);
    }

    @Override
    public final bru s() {
        ah.b("getVideoController must be called from the main thread.");
        if (this.e.j != null && this.e.j.b != null) {
            return this.e.j.b.b();
        }
        return null;
    }
}

