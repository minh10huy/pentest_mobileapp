/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.text.TextUtils
 */
package com.google.android.gms.internal;

import android.text.TextUtils;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.qu;
import com.google.android.gms.internal.rt;
import com.google.android.gms.internal.tf;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

public final class sm {
    private final Map<String, String> a;
    private final List<rt> b;
    private final long c;
    private final long d;
    private final int e;
    private final boolean f;
    private final String g;

    public sm(qu qu2, Map<String, String> map, long l2, boolean bl2) {
        this(qu2, map, l2, bl2, 0L, 0, null);
    }

    public sm(qu qu2, Map<String, String> map, long l2, boolean bl2, long l3, int n2) {
        this(qu2, map, l2, bl2, l3, n2, null);
    }

    public sm(qu qu2, Map<String, String> object, long l2, boolean bl2, long l3, int n2, List<rt> object2) {
        void var10_10;
        ah.a(qu2);
        ah.a(object);
        this.d = l2;
        this.f = bl2;
        this.c = l3;
        this.e = n2;
        if (object2 != null) {
            HashMap<String, String> object32 = object2;
        } else {
            List list = Collections.emptyList();
        }
        this.b = var10_10;
        this.g = sm.a((List<rt>)((Object)object2));
        object2 = new HashMap<String, String>();
        for (Map.Entry entry : object.entrySet()) {
            String string2;
            if (!sm.a(entry.getKey()) || (string2 = sm.a(qu2, entry.getKey())) == null) continue;
            object2.put(string2, sm.b(qu2, entry.getValue()));
        }
        for (Map.Entry entry : object.entrySet()) {
            String string3;
            if (sm.a(entry.getKey()) || (string3 = sm.a(qu2, entry.getKey())) == null) continue;
            object2.put(string3, sm.b(qu2, entry.getValue()));
        }
        if (!TextUtils.isEmpty((CharSequence)this.g)) {
            tf.a(object2, "_v", this.g);
            if (this.g.equals("ma4.0.0") || this.g.equals("ma4.0.1")) {
                object2.remove("adid");
            }
        }
        this.a = Collections.unmodifiableMap(object2);
    }

    private static String a(qu qu2, Object object) {
        Object object2;
        if (object == null) {
            return null;
        }
        object = object2 = object.toString();
        if (object2.startsWith("&")) {
            object = object2.substring(1);
        }
        int n2 = object.length();
        object2 = object;
        if (n2 > 256) {
            object2 = object.substring(0, 256);
            qu2.c("Hit param name is too long and will be trimmed", n2, object2);
        }
        if (TextUtils.isEmpty((CharSequence)object2)) {
            return null;
        }
        return object2;
    }

    private final String a(String string2, String string3) {
        ah.a(string2);
        ah.b(string2.startsWith("&") ^ true, "Short param name required");
        string2 = this.a.get(string2);
        if (string2 != null) {
            return string2;
        }
        return string3;
    }

    private static String a(List<rt> object) {
        if (object != null) {
            object = object.iterator();
            while (object.hasNext()) {
                rt rt2 = (rt)object.next();
                if (!"appendVersion".equals(rt2.a())) continue;
                object = rt2.b();
                break;
            }
        } else {
            object = null;
        }
        if (TextUtils.isEmpty((CharSequence)object)) {
            return null;
        }
        return object;
    }

    private static boolean a(Object object) {
        if (object == null) {
            return false;
        }
        return object.toString().startsWith("&");
    }

    private static String b(qu qu2, Object object) {
        object = object == null ? "" : object.toString();
        int n2 = object.length();
        Object object2 = object;
        if (n2 > 8192) {
            object2 = object.substring(0, 8192);
            qu2.c("Hit param value is too long and will be trimmed", n2, object2);
        }
        return object2;
    }

    public final int a() {
        return this.e;
    }

    public final Map<String, String> b() {
        return this.a;
    }

    public final long c() {
        return this.c;
    }

    public final long d() {
        return this.d;
    }

    public final List<rt> e() {
        return this.b;
    }

    public final boolean f() {
        return this.f;
    }

    public final long g() {
        return tf.a(this.a("_s", "0"));
    }

    public final String h() {
        return this.a("_m", "");
    }

    public final String toString() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("ht=");
        stringBuilder.append(this.d);
        if (this.c != 0L) {
            stringBuilder.append(", dbId=");
            stringBuilder.append(this.c);
        }
        if (this.e != 0) {
            stringBuilder.append(", appUID=");
            stringBuilder.append(this.e);
        }
        ArrayList<String> arrayList = new ArrayList<String>(this.a.keySet());
        Collections.sort(arrayList);
        int n2 = arrayList.size();
        for (int i2 = 0; i2 < n2; ++i2) {
            String string2 = arrayList.get(i2);
            stringBuilder.append(", ");
            stringBuilder.append(string2);
            stringBuilder.append("=");
            stringBuilder.append(this.a.get(string2));
        }
        return stringBuilder.toString();
    }
}

