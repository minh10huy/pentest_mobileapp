/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.app.Activity
 *  android.app.Application
 *  android.app.Application$ActivityLifecycleCallbacks
 *  android.content.Context
 *  android.os.Bundle
 *  android.os.Handler
 */
package com.google.android.gms.internal;

import android.annotation.TargetApi;
import android.app.Activity;
import android.app.Application;
import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.internal.bmr;
import com.google.android.gms.internal.bms;
import com.google.android.gms.internal.bnf;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.hs;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

@TargetApi(value=14)
final class bmq
implements Application.ActivityLifecycleCallbacks {
    private Activity a;
    private Context b;
    private final Object c = new Object();
    private boolean d = true;
    private boolean e = false;
    private final List<bms> f = new ArrayList<bms>();
    private final List<bnf> g = new ArrayList<bnf>();
    private Runnable h;
    private boolean i = false;
    private long j;

    bmq() {
    }

    static /* synthetic */ Object a(bmq bmq2) {
        return bmq2.c;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void a(Activity activity) {
        Object object = this.c;
        synchronized (object) {
            if (!activity.getClass().getName().startsWith("com.google.android.gms.ads")) {
                this.a = activity;
            }
            return;
        }
    }

    static /* synthetic */ boolean a(bmq bmq2, boolean bl2) {
        bmq2.d = false;
        return false;
    }

    static /* synthetic */ boolean b(bmq bmq2) {
        return bmq2.d;
    }

    static /* synthetic */ boolean c(bmq bmq2) {
        return bmq2.e;
    }

    static /* synthetic */ List d(bmq bmq2) {
        return bmq2.f;
    }

    public final Activity a() {
        return this.a;
    }

    public final void a(Application object, Context context) {
        if (!this.i) {
            object.registerActivityLifecycleCallbacks((Application.ActivityLifecycleCallbacks)this);
            if (context instanceof Activity) {
                this.a((Activity)context);
            }
            this.b = object;
            object = btk.aA;
            this.j = (Long)bqj.f().a(object);
            this.i = true;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a(bms bms2) {
        Object object = this.c;
        synchronized (object) {
            this.f.add(bms2);
            return;
        }
    }

    public final Context b() {
        return this.b;
    }

    public final void onActivityCreated(Activity activity, Bundle bundle) {
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void onActivityDestroyed(Activity activity) {
        Object object = this.c;
        synchronized (object) {
            if (this.a == null) {
                return;
            }
            if (this.a.equals((Object)activity)) {
                this.a = null;
            }
            Iterator<bnf> iterator = this.g.iterator();
            while (iterator.hasNext()) {
                bnf bnf2 = iterator.next();
                try {
                    if (!bnf2.c(activity)) continue;
                    iterator.remove();
                }
                catch (Exception exception) {
                    av.i().a(exception, "AppActivityTracker.ActivityListener.onActivityDestroyed");
                    he.b("onActivityStateChangedListener threw exception.", exception);
                    continue;
                }
                break;
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void onActivityPaused(Activity activity) {
        this.a(activity);
        Object object = this.c;
        synchronized (object) {
            for (bnf bnf2 : this.g) {
                try {
                    bnf2.b(activity);
                }
                catch (Exception exception) {
                    av.i().a(exception, "AppActivityTracker.ActivityListener.onActivityPaused");
                    he.b("onActivityStateChangedListener threw exception.", exception);
                }
            }
        }
        this.e = true;
        if (this.h != null) {
            hs.a.removeCallbacks(this.h);
        }
        activity = hs.a;
        this.h = object = new bmr(this);
        activity.postDelayed((Runnable)object, this.j);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void onActivityResumed(Activity object) {
        this.a((Activity)object);
        this.e = false;
        boolean bl2 = this.d;
        this.d = true;
        if (this.h != null) {
            hs.a.removeCallbacks(this.h);
        }
        Object object2 = this.c;
        synchronized (object2) {
            for (bnf bnf2 : this.g) {
                try {
                    bnf2.a((Activity)object);
                }
                catch (Exception exception) {
                    av.i().a(exception, "AppActivityTracker.ActivityListener.onActivityResumed");
                    he.b("onActivityStateChangedListener threw exception.", exception);
                }
            }
            if (!(bl2 ^ true)) {
                he.b("App is still foreground.");
            } else {
                for (Object object3 : this.f) {
                    try {
                        object3.a(true);
                    }
                    catch (Exception exception) {
                        he.b("OnForegroundStateChangedListener threw exception.", exception);
                    }
                }
            }
            return;
        }
    }

    public final void onActivitySaveInstanceState(Activity activity, Bundle bundle) {
    }

    public final void onActivityStarted(Activity activity) {
        this.a(activity);
    }

    public final void onActivityStopped(Activity activity) {
    }
}

