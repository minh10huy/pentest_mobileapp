/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.ads.internal.av;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bmn;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.hg;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

@ak
public final class bmo {
    private final Object a = new Object();
    private int b;
    private List<bmn> c = new LinkedList<bmn>();

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final bmn a() {
        Object object = this.a;
        synchronized (object) {
            int n2 = this.c.size();
            bmn bmn2 = null;
            if (n2 == 0) {
                he.b("Queue empty");
                return null;
            }
            n2 = this.c.size();
            int n3 = 0;
            if (n2 < 2) {
                bmn2 = this.c.get(0);
                bmn2.e();
                return bmn2;
            }
            int n4 = Integer.MIN_VALUE;
            Iterator<bmn> iterator = this.c.iterator();
            n2 = 0;
            do {
                if (!iterator.hasNext()) {
                    this.c.remove(n3);
                    return bmn2;
                }
                bmn bmn3 = iterator.next();
                int n5 = bmn3.i();
                int n6 = n4;
                if (n5 > n4) {
                    n3 = n2;
                    bmn2 = bmn3;
                    n6 = n5;
                }
                ++n2;
                n4 = n6;
            } while (true);
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final boolean a(bmn bmn2) {
        Object object = this.a;
        synchronized (object) {
            if (this.c.contains(bmn2)) {
                return true;
            }
            return false;
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    public final boolean b(bmn var1_1) {
        var2_2 = this.a;
        // MONITORENTER : var2_2
        var3_3 = this.c.iterator();
        do lbl-1000: // 3 sources:
        {
            block6 : {
                if (!var3_3.hasNext()) {
                    // MONITOREXIT : var2_2
                    return false;
                }
                var4_4 = var3_3.next();
                var5_5 = btk.S;
                if (!bqj.f().a(var5_5).booleanValue() || av.i().l().b()) break block6;
                if (var1_1 == var4_4 || !var4_4.b().equals(var1_1.b())) ** GOTO lbl-1000
                var3_3.remove();
                // MONITOREXIT : var2_2
                return true;
            }
            var5_5 = btk.U;
        } while (!bqj.f().a(var5_5).booleanValue() || av.i().l().d() || var1_1 == var4_4 || !var4_4.d().equals(var1_1.d()));
        var3_3.remove();
        // MONITOREXIT : var2_2
        return true;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void c(bmn bmn2) {
        Object object = this.a;
        synchronized (object) {
            int n2;
            if (this.c.size() >= 10) {
                n2 = this.c.size();
                StringBuilder stringBuilder = new StringBuilder(41);
                stringBuilder.append("Queue is full, current size = ");
                stringBuilder.append(n2);
                he.b(stringBuilder.toString());
                this.c.remove(0);
            }
            n2 = this.b;
            this.b = n2 + 1;
            bmn2.a(n2);
            this.c.add(bmn2);
            return;
        }
    }
}

