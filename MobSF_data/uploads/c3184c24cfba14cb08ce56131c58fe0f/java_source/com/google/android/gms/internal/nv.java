/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.app.Activity
 *  android.content.Context
 *  android.net.Uri
 *  android.net.http.SslError
 *  android.os.Bundle
 *  android.os.Handler
 *  android.text.TextUtils
 *  android.view.KeyEvent
 *  android.view.View
 *  android.view.View$OnAttachStateChangeListener
 *  android.view.ViewTreeObserver
 *  android.view.ViewTreeObserver$OnGlobalLayoutListener
 *  android.view.ViewTreeObserver$OnScrollChangedListener
 *  android.webkit.SslErrorHandler
 *  android.webkit.WebResourceResponse
 *  android.webkit.WebView
 *  android.webkit.WebViewClient
 */
package com.google.android.gms.internal;

import android.annotation.TargetApi;
import android.app.Activity;
import android.content.Context;
import android.net.Uri;
import android.net.http.SslError;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.view.s;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.View;
import android.view.ViewTreeObserver;
import android.webkit.SslErrorHandler;
import android.webkit.WebResourceResponse;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.ads.internal.bs;
import com.google.android.gms.ads.internal.gmsg.a;
import com.google.android.gms.ads.internal.gmsg.aa;
import com.google.android.gms.ads.internal.gmsg.ad;
import com.google.android.gms.ads.internal.gmsg.ae;
import com.google.android.gms.ads.internal.gmsg.ag;
import com.google.android.gms.ads.internal.gmsg.b;
import com.google.android.gms.ads.internal.gmsg.c;
import com.google.android.gms.ads.internal.gmsg.i;
import com.google.android.gms.ads.internal.gmsg.k;
import com.google.android.gms.ads.internal.overlay.AdOverlayInfoParcel;
import com.google.android.gms.ads.internal.overlay.d;
import com.google.android.gms.ads.internal.overlay.l;
import com.google.android.gms.ads.internal.overlay.n;
import com.google.android.gms.ads.internal.overlay.t;
import com.google.android.gms.common.util.q;
import com.google.android.gms.internal.agk;
import com.google.android.gms.internal.agl;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bns;
import com.google.android.gms.internal.bnv;
import com.google.android.gms.internal.bp;
import com.google.android.gms.internal.bpp;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsv;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.cdd;
import com.google.android.gms.internal.cdm;
import com.google.android.gms.internal.cdo;
import com.google.android.gms.internal.fx;
import com.google.android.gms.internal.ge;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.hs;
import com.google.android.gms.internal.kd;
import com.google.android.gms.internal.km;
import com.google.android.gms.internal.lk;
import com.google.android.gms.internal.nb;
import com.google.android.gms.internal.nr;
import com.google.android.gms.internal.nu;
import com.google.android.gms.internal.nw;
import com.google.android.gms.internal.nx;
import com.google.android.gms.internal.ny;
import com.google.android.gms.internal.nz;
import com.google.android.gms.internal.pk;
import com.google.android.gms.internal.pl;
import com.google.android.gms.internal.pm;
import com.google.android.gms.internal.pn;
import com.google.android.gms.internal.po;
import com.google.android.gms.internal.pr;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.Executor;

@ak
public class nv
extends WebViewClient
implements pk {
    private static final String[] b = new String[]{"UNKNOWN", "HOST_LOOKUP", "UNSUPPORTED_AUTH_SCHEME", "AUTHENTICATION", "PROXY_AUTHENTICATION", "CONNECT", "IO", "TIMEOUT", "REDIRECT_LOOP", "UNSUPPORTED_SCHEME", "FAILED_SSL_HANDSHAKE", "BAD_URL", "FILE", "FILE_NOT_FOUND", "TOO_MANY_REQUESTS"};
    private static final String[] c = new String[]{"NOT_YET_VALID", "EXPIRED", "ID_MISMATCH", "UNTRUSTED", "DATE_INVALID", "INVALID"};
    private boolean A;
    private int B;
    private View.OnAttachStateChangeListener C;
    protected fx a;
    private nu d;
    private final HashMap<String, List<aa<? super nu>>> e = new HashMap();
    private final Object f = new Object();
    private bpp g;
    private n h;
    private pl i;
    private pm j;
    private i k;
    private pn l;
    private boolean m = false;
    private ae n;
    private boolean o;
    private boolean p;
    private ViewTreeObserver.OnGlobalLayoutListener q;
    private ViewTreeObserver.OnScrollChangedListener r;
    private boolean s;
    private t t;
    private final cdm u;
    private bs v;
    private cdd w;
    private cdo x;
    private po y;
    private boolean z;

    public nv(nu nu2, boolean bl2) {
        this(nu2, bl2, new cdm(nu2, nu2.p(), new bsv(nu2.getContext())), null);
    }

    private nv(nu nu2, boolean bl2, cdm cdm2, cdd cdd2) {
        this.d = nu2;
        this.o = bl2;
        this.u = cdm2;
        this.w = null;
    }

    private final WebResourceResponse a(String object) {
        object = new URL((String)object);
        int n2 = 0;
        while (++n2 <= 20) {
            Object object2 = object.openConnection();
            object2.setConnectTimeout(10000);
            object2.setReadTimeout(10000);
            if (object2 instanceof HttpURLConnection) {
                HttpURLConnection httpURLConnection = (HttpURLConnection)object2;
                av.e().a(this.d.getContext(), this.d.j().a, false, httpURLConnection);
                object2 = new kd();
                object2.a(httpURLConnection, null);
                int n3 = httpURLConnection.getResponseCode();
                av.e();
                String string2 = hs.f(httpURLConnection.getContentType());
                av.e();
                String string3 = hs.g(httpURLConnection.getContentType());
                object2.a(httpURLConnection, n3);
                if (n3 >= 300 && n3 < 400) {
                    string2 = httpURLConnection.getHeaderField("Location");
                    if (string2 != null) {
                        object2 = new URL((URL)object, string2);
                        object = object2.getProtocol();
                        if (object == null) {
                            he.e("Protocol is null");
                            return null;
                        }
                        if (!object.equals("http") && !object.equals("https")) {
                            object = (object = String.valueOf(object)).length() != 0 ? "Unsupported scheme: ".concat((String)object) : new String("Unsupported scheme: ");
                            he.e((String)object);
                            return null;
                        }
                        object = String.valueOf(string2);
                        object = object.length() != 0 ? "Redirecting to ".concat((String)object) : new String("Redirecting to ");
                        he.b((String)object);
                        httpURLConnection.disconnect();
                        object = object2;
                        continue;
                    }
                    throw new IOException("Missing Location header in redirect");
                }
                return new WebResourceResponse(string2, string3, httpURLConnection.getInputStream());
            }
            throw new IOException("Invalid protocol.");
        }
        object = new StringBuilder(32);
        object.append("Too many redirects (20)");
        throw new IOException(object.toString());
    }

    private final void a(Context context, String string2, String string3, String string4) {
        Bundle bundle = btk.bk;
        if (!bqj.f().a(bundle).booleanValue()) {
            return;
        }
        bundle = new Bundle();
        bundle.putString("err", string2);
        bundle.putString("code", string3);
        string2 = !TextUtils.isEmpty((CharSequence)string4) && (string2 = Uri.parse((String)string4)).getHost() != null ? string2.getHost() : "";
        bundle.putString("host", string2);
        av.e().a(context, this.d.j().a, "gmob-apps", bundle, true);
    }

    private final void a(Uri object) {
        String string22 = object.getPath();
        List<aa<? super nu>> list = this.e.get(string22);
        if (list != null) {
            av.e();
            Map<String, String> map = hs.a((Uri)object);
            if (he.a(2)) {
                object = String.valueOf(string22);
                object = object.length() != 0 ? "Received GMSG: ".concat((String)object) : new String("Received GMSG: ");
                he.a((String)object);
                for (String string22 : map.keySet()) {
                    String string3 = map.get(string22);
                    StringBuilder stringBuilder = new StringBuilder(String.valueOf(string22).length() + 4 + String.valueOf(string3).length());
                    stringBuilder.append("  ");
                    stringBuilder.append(string22);
                    stringBuilder.append(": ");
                    stringBuilder.append(string3);
                    he.a(stringBuilder.toString());
                }
            }
            object = list.iterator();
            while (object.hasNext()) {
                ((aa)object.next()).zza(this.d, map);
            }
            return;
        }
        object = String.valueOf(object);
        list = new StringBuilder(String.valueOf(object).length() + 32);
        list.append("No GMSG handler found for GMSG: ");
        list.append((String)object);
        he.a(list.toString());
    }

    private final void a(View view, fx fx2, int n2) {
        if (fx2.b() && n2 > 0) {
            fx2.a(view);
            if (fx2.b()) {
                hs.a.postDelayed((Runnable)new nx(this, view, fx2, n2), 100L);
            }
        }
    }

    private final void a(AdOverlayInfoParcel adOverlayInfoParcel) {
        Object object = this.w;
        boolean bl2 = false;
        boolean bl3 = object != null ? this.w.a() : false;
        av.c();
        object = this.d.getContext();
        if (!bl3) {
            bl2 = true;
        }
        l.a((Context)object, adOverlayInfoParcel, bl2);
        if (this.a != null) {
            String string2 = adOverlayInfoParcel.l;
            object = string2;
            if (string2 == null) {
                object = string2;
                if (adOverlayInfoParcel.a != null) {
                    object = adOverlayInfoParcel.a.a;
                }
            }
            this.a.a((String)object);
        }
    }

    static /* synthetic */ void a(nv nv2, View view, fx fx2, int n2) {
        nv2.a(view, fx2, n2);
    }

    private final void o() {
        if (this.C == null) {
            return;
        }
        this.d.getView().removeOnAttachStateChangeListener(this.C);
    }

    private final void p() {
        if (this.i != null && (this.z && this.B <= 0 || this.A)) {
            this.i.a(this.d, this.A ^ true);
            this.i = null;
        }
        this.d.E();
    }

    @Override
    public final bs a() {
        return this.v;
    }

    @Override
    public final void a(int n2, int n3) {
        if (this.w != null) {
            this.w.a(n2, n3);
        }
    }

    @Override
    public final void a(int n2, int n3, boolean bl2) {
        this.u.a(n2, n3);
        if (this.w != null) {
            this.w.a(n2, n3, bl2);
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(ViewTreeObserver.OnGlobalLayoutListener onGlobalLayoutListener, ViewTreeObserver.OnScrollChangedListener onScrollChangedListener) {
        Object object = this.f;
        synchronized (object) {
            this.p = true;
            this.d.D();
            this.q = onGlobalLayoutListener;
            this.r = onScrollChangedListener;
            return;
        }
    }

    public final void a(com.google.android.gms.ads.internal.overlay.c c2) {
        boolean bl2 = this.d.x();
        bpp bpp2 = bl2 && !this.d.s().d() ? null : this.g;
        n n2 = bl2 ? null : this.h;
        this.a(new AdOverlayInfoParcel(c2, bpp2, n2, this.t, this.d.j()));
    }

    @Override
    public final void a(bpp bpp2, n n2, i i2, t t2, boolean bl2, ae ae2, bs bs2, cdo cdo2, fx fx2) {
        if (bs2 == null) {
            bs2 = new bs(this.d.getContext(), fx2, null);
        }
        this.w = new cdd(this.d, cdo2);
        this.a = fx2;
        this.a("/appEvent", new a(i2));
        this.a("/backButton", k.j);
        this.a("/refresh", k.k);
        this.a("/canOpenURLs", k.a);
        this.a("/canOpenIntents", k.b);
        this.a("/click", k.c);
        this.a("/close", k.d);
        this.a("/customClose", k.e);
        this.a("/instrument", k.n);
        this.a("/delayPageLoaded", k.p);
        this.a("/delayPageClosed", k.q);
        this.a("/getLocationInfo", k.r);
        this.a("/httpTrack", k.f);
        this.a("/log", k.g);
        this.a("/mraid", new b(bs2, this.w, cdo2));
        this.a("/mraidLoaded", this.u);
        this.a("/open", new c(this.d.getContext(), this.d.j(), this.d.w(), t2, bpp2, i2, n2, bs2, this.w));
        this.a("/precache", new nr());
        this.a("/touch", k.i);
        this.a("/video", k.l);
        this.a("/videoMeta", k.m);
        if (av.A().a(this.d.getContext())) {
            this.a("/logScionEvent", new ag(this.d.getContext()));
        }
        if (ae2 != null) {
            this.a("/setInterstitialProperties", new ad(ae2));
        }
        this.g = bpp2;
        this.h = n2;
        this.k = i2;
        this.t = t2;
        this.v = bs2;
        this.x = cdo2;
        this.n = ae2;
        this.m = bl2;
    }

    @Override
    public final void a(nu nu2) {
        this.d = nu2;
    }

    @Override
    public final void a(pl pl2) {
        this.i = pl2;
    }

    @Override
    public final void a(pm pm2) {
        this.j = pm2;
    }

    @Override
    public final void a(pn pn2) {
        this.l = pn2;
    }

    @Override
    public final void a(po po2) {
        this.y = po2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(String string2, aa<? super nu> aa2) {
        Object object = this.f;
        synchronized (object) {
            List<aa<? super nu>> list;
            List<aa<? super nu>> list2 = list = this.e.get(string2);
            if (list == null) {
                list2 = new CopyOnWriteArrayList<aa<? super nu>>();
                this.e.put(string2, list2);
            }
            list2.add(aa2);
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(String object, q<aa<? super nu>> q2) {
        Object object2 = this.f;
        synchronized (object2) {
            object = this.e.get(object);
            if (object == null) {
                return;
            }
            ArrayList<aa> arrayList = new ArrayList<aa>();
            Iterator iterator = object.iterator();
            do {
                if (!iterator.hasNext()) {
                    object.removeAll(arrayList);
                    return;
                }
                aa aa2 = (aa)iterator.next();
                if (!q2.a(aa2)) continue;
                arrayList.add(aa2);
            } while (true);
        }
    }

    @Override
    public final void a(boolean bl2) {
        this.m = bl2;
    }

    public final void a(boolean bl2, int n2) {
        bpp bpp2 = this.d.x() && !this.d.s().d() ? null : this.g;
        this.a(new AdOverlayInfoParcel(bpp2, this.h, this.t, this.d, bl2, n2, this.d.j()));
    }

    public final void a(boolean bl2, int n2, String string2) {
        boolean bl3 = this.d.x();
        bpp bpp2 = bl3 && !this.d.s().d() ? null : this.g;
        nz nz2 = bl3 ? null : new nz(this.d, this.h);
        this.a(new AdOverlayInfoParcel(bpp2, nz2, this.k, this.t, this.d, bl2, n2, string2, this.d.j()));
    }

    public final void a(boolean bl2, int n2, String string2, String string3) {
        boolean bl3 = this.d.x();
        bpp bpp2 = bl3 && !this.d.s().d() ? null : this.g;
        nz nz2 = bl3 ? null : new nz(this.d, this.h);
        this.a(new AdOverlayInfoParcel(bpp2, nz2, this.k, this.t, this.d, bl2, n2, string2, string3, this.d.j()));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void b(String object, aa<? super nu> aa2) {
        Object object2 = this.f;
        synchronized (object2) {
            object = this.e.get(object);
            if (object == null) {
                return;
            }
            object.remove(aa2);
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final boolean b() {
        Object object = this.f;
        synchronized (object) {
            return this.o;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final boolean c() {
        Object object = this.f;
        synchronized (object) {
            return this.p;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final ViewTreeObserver.OnGlobalLayoutListener d() {
        Object object = this.f;
        synchronized (object) {
            return this.q;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final ViewTreeObserver.OnScrollChangedListener e() {
        Object object = this.f;
        synchronized (object) {
            return this.r;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final boolean f() {
        Object object = this.f;
        synchronized (object) {
            return this.s;
        }
    }

    @Override
    public final void g() {
        fx fx2 = this.a;
        if (fx2 != null) {
            WebView webView = this.d.getWebView();
            if (s.x((View)webView)) {
                this.a((View)webView, fx2, 10);
                return;
            }
            this.o();
            this.C = new ny(this, fx2);
            this.d.getView().addOnAttachStateChangeListener(this.C);
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void h() {
        Object object = this.f;
        synchronized (object) {
            this.s = true;
        }
        ++this.B;
        this.p();
    }

    @Override
    public final void i() {
        --this.B;
        this.p();
    }

    @Override
    public final void j() {
        this.A = true;
        this.p();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void k() {
        if (this.a != null) {
            this.a.d();
            this.a = null;
        }
        this.o();
        Object object = this.f;
        synchronized (object) {
            this.e.clear();
            this.g = null;
            this.h = null;
            this.i = null;
            this.j = null;
            this.k = null;
            this.m = false;
            this.o = false;
            this.p = false;
            this.s = false;
            this.t = null;
            this.l = null;
            if (this.w != null) {
                this.w.a(true);
                this.w = null;
            }
            return;
        }
    }

    @Override
    public final po l() {
        return this.y;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void m() {
        Object object = this.f;
        synchronized (object) {
            this.m = false;
            this.o = true;
            lk.a.execute(new nw(this));
            return;
        }
    }

    final /* synthetic */ void n() {
        this.d.D();
        d d2 = this.d.q();
        if (d2 != null) {
            d2.m();
        }
        if (this.l != null) {
            this.l.a();
            this.l = null;
        }
    }

    public final void onLoadResource(WebView object, String string2) {
        object = String.valueOf(string2);
        object = object.length() != 0 ? "Loading resource: ".concat((String)object) : new String("Loading resource: ");
        he.a((String)object);
        object = Uri.parse((String)string2);
        if ("gmsg".equalsIgnoreCase(object.getScheme()) && "mobileads.google.com".equalsIgnoreCase(object.getHost())) {
            this.a((Uri)object);
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void onPageFinished(WebView object, String string2) {
        object = this.f;
        synchronized (object) {
            if (this.d.y()) {
                he.a("Blank page loaded, 1...");
                this.d.z();
                return;
            }
        }
        this.z = true;
        if (this.j != null) {
            this.j.a(this.d);
            this.j = null;
        }
        this.p();
    }

    public final void onReceivedError(WebView webView, int n2, String string2, String string3) {
        int n3;
        String string4 = n2 < 0 && (n3 = - n2 - 1) < b.length ? b[n3] : String.valueOf(n2);
        this.a(this.d.getContext(), "http_err", string4, string3);
        super.onReceivedError(webView, n2, string2, string3);
    }

    public final void onReceivedSslError(WebView webView, SslErrorHandler sslErrorHandler, SslError sslError) {
        if (sslError != null) {
            int n2 = sslError.getPrimaryError();
            String string2 = n2 >= 0 && n2 < c.length ? c[n2] : String.valueOf(n2);
            this.a(this.d.getContext(), "ssl_err", string2, av.g().a(sslError));
        }
        super.onReceivedSslError(webView, sslErrorHandler, sslError);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @TargetApi(value=11)
    public WebResourceResponse shouldInterceptRequest(WebView object, String string2) {
        try {
            object = ge.a(string2, this.d.getContext());
            if (!object.equals(string2)) {
                return this.a((String)object);
            }
            object = bnv.a(string2);
            if (object != null && (object = av.k().a((bnv)object)) != null && object.a()) {
                return new WebResourceResponse("", "", object.b());
            }
            if (!kd.c()) return null;
            object = btk.ba;
            if ((Boolean)bqj.f().a(object) == false) return null;
            return this.a(string2);
        }
        catch (Exception | NoClassDefFoundError throwable) {
            av.i().a(throwable, "AdWebViewClient.interceptRequest");
            return null;
        }
    }

    public boolean shouldOverrideKeyEvent(WebView webView, KeyEvent keyEvent) {
        int n2 = keyEvent.getKeyCode();
        if (n2 != 79 && n2 != 222) {
            switch (n2) {
                default: {
                    switch (n2) {
                        default: {
                            return false;
                        }
                        case 126: 
                        case 127: 
                        case 128: 
                        case 129: 
                        case 130: 
                    }
                }
                case 85: 
                case 86: 
                case 87: 
                case 88: 
                case 89: 
                case 90: 
                case 91: 
            }
        }
        return true;
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public final boolean shouldOverrideUrlLoading(WebView object, String string2) {
        Object object2;
        Object object3 = String.valueOf(string2);
        object3 = object3.length() != 0 ? "AdWebView shouldOverrideUrlLoading: ".concat((String)object3) : new String("AdWebView shouldOverrideUrlLoading: ");
        he.a((String)object3);
        object3 = Uri.parse((String)string2);
        if ("gmsg".equalsIgnoreCase(object3.getScheme()) && "mobileads.google.com".equalsIgnoreCase(object3.getHost())) {
            this.a((Uri)object3);
            return true;
        }
        if (this.m && object == this.d.getWebView()) {
            object2 = object3.getScheme();
            boolean bl2 = "http".equalsIgnoreCase((String)object2) || "https".equalsIgnoreCase((String)object2);
            if (bl2) {
                if (this.g == null) return super.shouldOverrideUrlLoading((WebView)object, string2);
                object3 = btk.af;
                if ((Boolean)bqj.f().a(object3) == false) return super.shouldOverrideUrlLoading((WebView)object, string2);
                this.g.e();
                if (this.a != null) {
                    this.a.a(string2);
                }
                this.g = null;
                return super.shouldOverrideUrlLoading((WebView)object, string2);
            }
        }
        if (!this.d.getWebView().willNotDraw()) {
            object2 = this.d.w();
            object = object3;
            if (object2 != null) {
                object = object3;
                if (object2.a((Uri)object3)) {
                    object = object2.a((Uri)object3, this.d.getContext(), this.d.getView(), this.d.d());
                }
            }
        } else {
            object = String.valueOf(string2);
            object = object.length() != 0 ? "AdWebView unable to handle URL: ".concat((String)object) : new String("AdWebView unable to handle URL: ");
            he.e((String)object);
            return true;
            catch (agl agl2) {}
            object = String.valueOf(string2);
            object = object.length() != 0 ? "Unable to append parameter to URL: ".concat((String)object) : new String("Unable to append parameter to URL: ");
            he.e((String)object);
            object = object3;
        }
        if (this.v != null && !this.v.b()) {
            this.v.a(string2);
            return true;
        }
        this.a(new com.google.android.gms.ads.internal.overlay.c("android.intent.action.VIEW", object.toString(), null, null, null, null, null));
        return true;
    }
}

