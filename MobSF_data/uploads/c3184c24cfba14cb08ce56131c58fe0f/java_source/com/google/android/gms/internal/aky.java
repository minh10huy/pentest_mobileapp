/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.ajm;
import com.google.android.gms.internal.akz;
import com.google.android.gms.internal.asj;
import com.google.android.gms.internal.asp;
import com.google.android.gms.internal.asq;
import com.google.android.gms.internal.asv;
import com.google.android.gms.internal.asw;
import com.google.android.gms.internal.xo;
import com.google.android.gms.internal.xy;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public final class aky {
    private static final Map<String, akz> a;

    static {
        HashMap<String, akz> hashMap = new HashMap<String, akz>();
        hashMap.put(xo.I.toString(), new akz("contains"));
        hashMap.put(xo.H.toString(), new akz("endsWith"));
        hashMap.put(xo.J.toString(), new akz("equals"));
        hashMap.put(xo.N.toString(), new akz("greaterEquals"));
        hashMap.put(xo.M.toString(), new akz("greaterThan"));
        hashMap.put(xo.L.toString(), new akz("lessEquals"));
        hashMap.put(xo.K.toString(), new akz("lessThan"));
        hashMap.put(xo.F.toString(), new akz("regex", new String[]{xy.f.toString(), xy.g.toString(), xy.t.toString()}));
        hashMap.put(xo.G.toString(), new akz("startsWith"));
        a = hashMap;
    }

    public static asv a(String object, Map<String, asj<?>> list, ajm object2) {
        if (a.containsKey(object)) {
            object = a.get(object);
            list = aky.a(object.b(), list);
            object2 = new ArrayList();
            object2.add(new asw("gtmUtils"));
            object2 = new asv("15", (List<asj<?>>)object2);
            ArrayList<asj<?>> arrayList = new ArrayList();
            arrayList.add((asj<?>)object2);
            arrayList.add(new asw("mobile"));
            object2 = new asv("17", arrayList);
            arrayList = new ArrayList();
            arrayList.add((asj<?>)object2);
            arrayList.add(new asw(object.a()));
            arrayList.add(new asq(list));
            return new asv("2", arrayList);
        }
        list = new StringBuilder(String.valueOf(object).length() + 47);
        list.append("Fail to convert ");
        list.append((String)object);
        list.append(" to the internal representation");
        throw new RuntimeException(list.toString());
    }

    public static String a(xo xo2) {
        return aky.a(xo2.toString());
    }

    public static String a(String string2) {
        if (a.containsKey(string2)) {
            return a.get(string2).a();
        }
        return null;
    }

    /*
     * Enabled aggressive block sorting
     */
    private static List<asj<?>> a(String[] arrstring, Map<String, asj<?>> map) {
        ArrayList arrayList = new ArrayList();
        int n2 = 0;
        while (n2 < arrstring.length) {
            void var3_4;
            if (!map.containsKey(arrstring[n2])) {
                asp asp2 = asp.e;
            } else {
                asj<?> asj2 = map.get(arrstring[n2]);
            }
            arrayList.add((asj<?>)var3_4);
            ++n2;
        }
        return arrayList;
    }
}

