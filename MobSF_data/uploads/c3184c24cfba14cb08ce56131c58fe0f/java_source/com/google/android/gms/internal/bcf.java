/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.bcg;
import com.google.android.gms.internal.bch;
import com.google.android.gms.internal.bci;
import com.google.android.gms.internal.bcl;
import com.google.android.gms.internal.bcn;
import com.google.android.gms.internal.bdj;
import com.google.android.gms.internal.bdm;
import com.google.android.gms.internal.beh;
import com.google.android.gms.internal.bei;
import java.util.HashMap;
import java.util.Map;

final class bcf
implements bdm {
    private static long a;
    private bcn b;
    private bdj c;
    private bcg d;
    private int e;
    private final beh f;

    public bcf(bcl bcl2, bcn bcn2, String string2, bcg object, String string3) {
        long l2 = a;
        a = 1L + l2;
        this.b = bcn2;
        this.d = object;
        object = bcl2.a();
        StringBuilder stringBuilder = new StringBuilder(25);
        stringBuilder.append("conn_");
        stringBuilder.append(l2);
        this.f = new beh((bei)object, "Connection", stringBuilder.toString());
        this.e = bci.a;
        this.c = new bdj(bcl2, bcn2, string2, this, string3);
    }

    private final void a(bch bch2) {
        if (this.e != bci.c) {
            if (this.f.a()) {
                this.f.a("closing realtime connection", null, new Object[0]);
            }
            this.e = bci.c;
            if (this.c != null) {
                this.c.b();
                this.c = null;
            }
            this.d.a(bch2);
        }
    }

    public final void a() {
        if (this.f.a()) {
            this.f.a("Opening a connection", null, new Object[0]);
        }
        this.c.a();
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public final void a(Map<String, Object> var1_1) {
        block18 : {
            var5_6 = (String)var1_1.get("t");
            if (var5_6 == null) ** GOTO lbl89
            if (var5_6.equals("d")) {
                var4_7 = (Map)var1_1.get("d");
                if (this.f.a()) {
                    var5_6 = this.f;
                    var1_1 = String.valueOf(var4_7.toString());
                    var1_1 = var1_1.length() != 0 ? "received data message: ".concat((String)var1_1) : new String("received data message: ");
                    var5_6.a((String)var1_1, null, new Object[0]);
                }
                this.d.a(var4_7);
                return;
            }
            if (!var5_6.equals("c")) ** GOTO lbl83
            var4_8 = (Map)var1_1.get("d");
            if (!this.f.a()) break block18;
            var5_6 = this.f;
            var1_1 = String.valueOf(var4_8.toString());
            var1_1 = var1_1.length() != 0 ? "Got control message: ".concat((String)var1_1) : new String("Got control message: ");
            var5_6.a((String)var1_1, null, new Object[0]);
        }
        try {
            block19 : {
                block22 : {
                    block21 : {
                        block20 : {
                            var1_1 = (String)var4_8.get("t");
                            if (var1_1 == null) break block19;
                            if (!var1_1.equals("s")) break block20;
                            var1_1 = (String)var4_8.get("d");
                            if (this.f.a()) {
                                this.f.a("Connection shutdown command received. Shutting down...", null, new Object[0]);
                            }
                            this.d.b((String)var1_1);
                            var1_1 = bch.b;
                            break block21;
                        }
                        if (!var1_1.equals("r")) break block22;
                        var1_1 = (String)var4_8.get("d");
                        if (this.f.a()) {
                            var4_8 = this.f;
                            var5_6 = this.b.a();
                            var6_11 = new StringBuilder(String.valueOf(var5_6).length() + 62 + String.valueOf(var1_1).length());
                            var6_11.append("Got a reset; killing connection to ");
                            var6_11.append((String)var5_6);
                            var6_11.append("; Updating internalHost to ");
                            var6_11.append((String)var1_1);
                            var4_8.a(var6_11.toString(), null, new Object[0]);
                        }
                        this.d.a((String)var1_1);
                        var1_1 = bch.a;
                    }
                    this.a((bch)var1_1);
                    return;
                }
                if (var1_1.equals("h")) {
                    var1_1 = (Map)var4_8.get("d");
                    var2_12 = (Long)var1_1.get("ts");
                    var4_8 = (String)var1_1.get("h");
                    this.d.a((String)var4_8);
                    var1_1 = (String)var1_1.get("s");
                    if (this.e != bci.a) return;
                    if (this.f.a()) {
                        this.f.a("realtime connection established", null, new Object[0]);
                    }
                    this.e = bci.b;
                    this.d.a(var2_12, (String)var1_1);
                    return;
                }
                if (this.f.a() == false) return;
                var4_8 = this.f;
                var1_1 = (var1_1 = String.valueOf(var1_1)).length() != 0 ? "Ignoring unknown control message: ".concat((String)var1_1) : new String("Ignoring unknown control message: ");
                var4_8.a((String)var1_1, null, new Object[0]);
                return;
            }
            if (this.f.a()) {
                var5_6 = this.f;
                var1_1 = String.valueOf(var4_8.toString());
                var1_1 = var1_1.length() != 0 ? "Got invalid control message: ".concat((String)var1_1) : new String("Got invalid control message: ");
                var5_6.a((String)var1_1, null, new Object[0]);
            }
            this.a(bch.b);
            return;
        }
        catch (ClassCastException var1_2) {
            try {
                if (this.f.a()) {
                    var4_8 = this.f;
                    var1_3 = String.valueOf(var1_2.toString());
                    var1_3 = var1_3.length() != 0 ? "Failed to parse control message: ".concat(var1_3) : new String("Failed to parse control message: ");
                    var4_8.a(var1_3, null, new Object[0]);
                }
                this.a(bch.b);
                return;
lbl83: // 1 sources:
                if (this.f.a() == false) return;
                var4_9 = this.f;
                var1_1 = String.valueOf(var5_6);
                var1_1 = var1_1.length() != 0 ? "Ignoring unknown server message type: ".concat((String)var1_1) : new String("Ignoring unknown server message type: ");
                var4_9.a((String)var1_1, null, new Object[0]);
                return;
lbl89: // 1 sources:
                if (this.f.a()) {
                    var4_10 = this.f;
                    var1_1 = (var1_1 = String.valueOf(var1_1.toString())).length() != 0 ? "Failed to parse server message: missing message type:".concat((String)var1_1) : new String("Failed to parse server message: missing message type:");
                    var4_10.a((String)var1_1, null, new Object[0]);
                }
                this.a(bch.b);
                return;
            }
            catch (ClassCastException var1_4) {
                if (this.f.a()) {
                    var4_8 = this.f;
                    var1_5 = String.valueOf(var1_4.toString());
                    var1_5 = var1_5.length() != 0 ? "Failed to parse server message: ".concat(var1_5) : new String("Failed to parse server message: ");
                    var4_8.a(var1_5, null, new Object[0]);
                }
                this.a(bch.b);
            }
        }
    }

    /*
     * Enabled aggressive block sorting
     */
    public final void a(Map<String, Object> arrobject, boolean bl2) {
        beh beh2;
        String string2;
        HashMap<String, Object> hashMap = new HashMap<String, Object>();
        hashMap.put("t", "d");
        hashMap.put("d", arrobject);
        if (this.e != bci.b) {
            this.f.a("Tried to send on an unconnected connection", null, new Object[0]);
            return;
        }
        if (bl2) {
            beh2 = this.f;
            string2 = "Sending data (contents hidden)";
            arrobject = new Object[]{};
        } else {
            beh2 = this.f;
            string2 = "Sending data: %s";
            arrobject = new Object[]{hashMap};
        }
        beh2.a(string2, null, arrobject);
        this.c.a(hashMap);
    }

    @Override
    public final void a(boolean bl2) {
        block3 : {
            beh beh2;
            String string2;
            block4 : {
                block2 : {
                    this.c = null;
                    if (bl2 || this.e != bci.a) break block2;
                    if (!this.f.a()) break block3;
                    beh2 = this.f;
                    string2 = "Realtime connection failed";
                    break block4;
                }
                if (!this.f.a()) break block3;
                beh2 = this.f;
                string2 = "Realtime connection lost";
            }
            beh2.a(string2, null, new Object[0]);
        }
        this.a(bch.b);
    }

    public final void b() {
        this.a(bch.b);
    }
}

