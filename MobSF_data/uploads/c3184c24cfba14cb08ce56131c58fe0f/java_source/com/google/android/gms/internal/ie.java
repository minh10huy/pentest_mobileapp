/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.content.Context
 *  android.content.SharedPreferences
 *  android.content.SharedPreferences$Editor
 *  android.content.pm.ApplicationInfo
 *  android.content.res.Resources
 *  android.graphics.Bitmap
 *  android.graphics.drawable.BitmapDrawable
 *  android.graphics.drawable.Drawable
 *  android.renderscript.Allocation
 *  android.renderscript.Element
 *  android.renderscript.RenderScript
 *  android.renderscript.ScriptIntrinsicBlur
 *  android.text.TextUtils
 *  android.webkit.WebSettings
 */
package com.google.android.gms.internal;

import android.annotation.TargetApi;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.pm.ApplicationInfo;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.renderscript.Allocation;
import android.renderscript.Element;
import android.renderscript.RenderScript;
import android.renderscript.ScriptIntrinsicBlur;
import android.text.TextUtils;
import android.webkit.WebSettings;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.common.z;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.ig;
import com.google.android.gms.internal.jr;
import com.google.android.gms.internal.jt;
import com.google.android.gms.internal.ju;
import java.io.File;

@TargetApi(value=17)
public class ie
extends ig {
    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Override
    public final Drawable a(Context context, Bitmap bitmap, boolean bl2, float f2) {
        if (!bl2) return new BitmapDrawable(context.getResources(), bitmap);
        if (f2 <= 0.0f) return new BitmapDrawable(context.getResources(), bitmap);
        if (f2 > 25.0f) return new BitmapDrawable(context.getResources(), bitmap);
        try {
            Bitmap bitmap2 = Bitmap.createScaledBitmap((Bitmap)bitmap, (int)bitmap.getWidth(), (int)bitmap.getHeight(), (boolean)false);
            Bitmap bitmap3 = Bitmap.createBitmap((Bitmap)bitmap2);
            RenderScript renderScript = RenderScript.create((Context)context);
            ScriptIntrinsicBlur scriptIntrinsicBlur = ScriptIntrinsicBlur.create((RenderScript)renderScript, (Element)Element.U8_4((RenderScript)renderScript));
            bitmap2 = Allocation.createFromBitmap((RenderScript)renderScript, (Bitmap)bitmap2);
            renderScript = Allocation.createFromBitmap((RenderScript)renderScript, (Bitmap)bitmap3);
            scriptIntrinsicBlur.setRadius(f2);
            scriptIntrinsicBlur.setInput((Allocation)bitmap2);
            scriptIntrinsicBlur.forEach((Allocation)renderScript);
            renderScript.copyTo(bitmap3);
            return new BitmapDrawable(context.getResources(), bitmap3);
        }
        catch (RuntimeException runtimeException) {
            return new BitmapDrawable(context.getResources(), bitmap);
        }
    }

    @Override
    public final String a(Context context) {
        jt jt2 = jt.a();
        if (TextUtils.isEmpty((CharSequence)jt2.a)) {
            jt2.a = (String)jr.a(context, new ju(jt2, z.h(context), context));
        }
        return jt2.a;
    }

    @Override
    public final boolean a(Context context, WebSettings webSettings) {
        super.a(context, webSettings);
        webSettings.setMediaPlaybackRequiresUserGesture(false);
        return true;
    }

    @Override
    public final void b(Context object) {
        jt jt2 = jt.a();
        he.a("Updating user agent.");
        String string2 = WebSettings.getDefaultUserAgent((Context)object);
        if (!string2.equals(jt2.a)) {
            Object object2 = z.h((Context)object);
            if (object2 == null) {
                String string3 = WebSettings.getDefaultUserAgent((Context)object);
                string3 = object.getSharedPreferences("admob_user_agent", 0).edit().putString("user_agent", string3);
                if (object2 == null) {
                    string3.apply();
                } else {
                    object = new File(object.getApplicationInfo().dataDir, "shared_prefs");
                    object2 = object.getParentFile();
                    if (object2 != null) {
                        object2.setExecutable(true, false);
                    }
                    object.setExecutable(true, false);
                    string3.commit();
                    new File((File)object, String.valueOf("admob_user_agent").concat(".xml")).setReadable(true, false);
                }
            }
            jt2.a = string2;
        }
        he.a("User agent is updated.");
        av.i().i();
    }
}

