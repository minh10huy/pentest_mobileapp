/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.res.Resources
 *  android.content.res.TypedArray
 *  android.text.TextUtils
 *  android.util.AttributeSet
 */
package com.google.android.gms.internal;

import android.content.Context;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.text.TextUtils;
import android.util.AttributeSet;
import com.google.android.gms.a;
import com.google.android.gms.ads.d;
import com.google.android.gms.internal.ak;

@ak
public final class bqb {
    private final d[] a;
    private final String b;

    /*
     * Enabled aggressive block sorting
     */
    public bqb(Context object, AttributeSet attributeSet) {
        boolean bl2;
        block7 : {
            block6 : {
                boolean bl3;
                String string2;
                block5 : {
                    attributeSet = object.getResources().obtainAttributes(attributeSet, a.d.AdsAttrs);
                    object = attributeSet.getString(a.d.AdsAttrs_adSize);
                    string2 = attributeSet.getString(a.d.AdsAttrs_adSizes);
                    bl2 = TextUtils.isEmpty((CharSequence)object) ^ true;
                    bl3 = TextUtils.isEmpty((CharSequence)string2) ^ true;
                    if (!bl2 || bl3) break block5;
                    object = bqb.a((String)object);
                    break block6;
                }
                if (bl2 || !bl3) break block7;
                object = bqb.a(string2);
            }
            this.a = object;
            this.b = attributeSet.getString(a.d.AdsAttrs_adUnitId);
            if (TextUtils.isEmpty((CharSequence)this.b)) {
                throw new IllegalArgumentException("Required XML attribute \"adUnitId\" was missing.");
            }
            return;
        }
        if (bl2) {
            throw new IllegalArgumentException("Either XML attribute \"adSize\" or XML attribute \"supportedAdSizes\" should be specified, but not both.");
        }
        throw new IllegalArgumentException("Required XML attribute \"adSize\" was missing.");
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private static d[] a(String string2) {
        String string3;
        String[] arrstring = string2.split("\\s*,\\s*");
        d[] arrd = new d[arrstring.length];
        for (int i2 = 0; i2 < arrstring.length; ++i2) {
            string3 = arrstring[i2].trim();
            if (string3.matches("^(\\d+|FULL_WIDTH)\\s*[xX]\\s*(\\d+|AUTO_HEIGHT)$")) {
                String[] arrstring2 = string3.split("[xX]");
                arrstring2[0] = arrstring2[0].trim();
                arrstring2[1] = arrstring2[1].trim();
                int n2 = "FULL_WIDTH".equals(arrstring2[0]) ? -1 : Integer.parseInt(arrstring2[0]);
                int n3 = "AUTO_HEIGHT".equals(arrstring2[1]) ? -2 : Integer.parseInt(arrstring2[1]);
                arrd[i2] = new d(n2, n3);
                continue;
            }
            if ("BANNER".equals(string3)) {
                arrd[i2] = d.a;
                continue;
            }
            if ("LARGE_BANNER".equals(string3)) {
                arrd[i2] = d.c;
                continue;
            }
            if ("FULL_BANNER".equals(string3)) {
                arrd[i2] = d.b;
                continue;
            }
            if ("LEADERBOARD".equals(string3)) {
                arrd[i2] = d.d;
                continue;
            }
            if ("MEDIUM_RECTANGLE".equals(string3)) {
                arrd[i2] = d.e;
                continue;
            }
            if ("SMART_BANNER".equals(string3)) {
                arrd[i2] = d.g;
                continue;
            }
            if ("WIDE_SKYSCRAPER".equals(string3)) {
                arrd[i2] = d.f;
                continue;
            }
            if ("FLUID".equals(string3)) {
                arrd[i2] = d.h;
                continue;
            }
            if ("ICON".equals(string3)) {
                arrd[i2] = d.i;
                continue;
            }
            string2 = String.valueOf(string3);
            if (string2.length() != 0) {
                string2 = "Could not parse XML attribute \"adSize\": ".concat(string2);
                throw new IllegalArgumentException(string2);
            }
            string2 = new String("Could not parse XML attribute \"adSize\": ");
            throw new IllegalArgumentException(string2);
        }
        if (arrd.length != 0) return arrd;
        if ((string2 = String.valueOf(string2)).length() != 0) {
            string2 = "Could not parse XML attribute \"adSize\": ".concat(string2);
            throw new IllegalArgumentException(string2);
        }
        string2 = new String("Could not parse XML attribute \"adSize\": ");
        throw new IllegalArgumentException(string2);
        catch (NumberFormatException numberFormatException) {}
        String string4 = String.valueOf(string3);
        if (string4.length() != 0) {
            string4 = "Could not parse XML attribute \"adSize\": ".concat(string4);
            throw new IllegalArgumentException(string4);
        }
        string4 = new String("Could not parse XML attribute \"adSize\": ");
        throw new IllegalArgumentException(string4);
    }

    public final String a() {
        return this.b;
    }

    public final d[] a(boolean bl2) {
        if (!bl2 && this.a.length != 1) {
            throw new IllegalArgumentException("The adSizes XML attribute is only allowed on PublisherAdViews.");
        }
        return this.a;
    }
}

