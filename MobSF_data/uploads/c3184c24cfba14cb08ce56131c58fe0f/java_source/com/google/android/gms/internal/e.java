/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.content.res.Resources
 *  android.graphics.Bitmap
 *  android.graphics.Bitmap$Config
 *  android.graphics.BitmapFactory
 *  android.graphics.BitmapFactory$Options
 *  android.graphics.drawable.BitmapDrawable
 *  android.graphics.drawable.Drawable
 *  android.net.Uri
 *  android.os.Looper
 *  android.os.SystemClock
 */
package com.google.android.gms.internal;

import android.annotation.TargetApi;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Looper;
import android.os.SystemClock;
import com.google.android.gms.common.util.p;
import com.google.android.gms.internal.bum;
import com.google.android.gms.internal.cez;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.jh;
import java.io.InputStream;

final class e
implements jh<bum> {
    private /* synthetic */ boolean a;
    private /* synthetic */ double b;
    private /* synthetic */ boolean c;
    private /* synthetic */ String d;
    private /* synthetic */ cez e;

    e(cez cez2, boolean bl2, double d2, boolean bl3, String string2) {
        this.e = cez2;
        this.a = bl2;
        this.b = d2;
        this.c = bl3;
        this.d = string2;
    }

    @TargetApi(value=19)
    private final bum b(InputStream inputStream) {
        Object object = new BitmapFactory.Options();
        object.inDensity = (int)(this.b * 160.0);
        if (!this.c) {
            object.inPreferredConfig = Bitmap.Config.RGB_565;
        }
        long l2 = SystemClock.uptimeMillis();
        try {
            inputStream = BitmapFactory.decodeStream((InputStream)inputStream, null, (BitmapFactory.Options)object);
        }
        catch (Exception exception) {
            he.b("Error grabbing image.", exception);
            inputStream = null;
        }
        if (inputStream == null) {
            this.e.a(2, this.a);
            return null;
        }
        long l3 = SystemClock.uptimeMillis();
        if (p.e() && he.a()) {
            int n2 = inputStream.getWidth();
            int n3 = inputStream.getHeight();
            int n4 = inputStream.getAllocationByteCount();
            boolean bl2 = Looper.getMainLooper().getThread() == Thread.currentThread();
            object = new StringBuilder(108);
            object.append("Decoded image w: ");
            object.append(n2);
            object.append(" h:");
            object.append(n3);
            object.append(" bytes: ");
            object.append(n4);
            object.append(" time: ");
            object.append(l3 - l2);
            object.append(" on ui thread: ");
            object.append(bl2);
            he.a(object.toString());
        }
        return new bum((Drawable)new BitmapDrawable(Resources.getSystem(), (Bitmap)inputStream), Uri.parse((String)this.d), this.b);
    }

    @Override
    public final /* synthetic */ Object a() {
        this.e.a(2, this.a);
        return null;
    }

    @TargetApi(value=19)
    @Override
    public final /* synthetic */ Object a(InputStream inputStream) {
        return this.b(inputStream);
    }
}

