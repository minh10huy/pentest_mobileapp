/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.ComponentName
 *  android.content.Context
 *  android.content.Intent
 *  android.content.ServiceConnection
 *  android.os.Bundle
 *  android.os.DeadObjectException
 *  android.os.IBinder
 *  android.os.IInterface
 *  android.os.Looper
 *  android.os.RemoteException
 */
package com.google.android.gms.internal;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.DeadObjectException;
import android.os.IBinder;
import android.os.IInterface;
import android.os.Looper;
import android.os.RemoteException;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.internal.ar;
import com.google.android.gms.common.internal.as;
import com.google.android.gms.common.stats.a;
import com.google.android.gms.internal.aat;
import com.google.android.gms.internal.aav;
import com.google.android.gms.internal.aba;
import com.google.android.gms.internal.abb;
import com.google.android.gms.internal.abd;
import com.google.android.gms.internal.abx;
import com.google.android.gms.internal.acc;
import com.google.android.gms.internal.adz;
import com.google.android.gms.internal.aeo;
import com.google.android.gms.internal.aep;
import com.google.android.gms.internal.aeq;
import com.google.android.gms.internal.aer;
import com.google.android.gms.internal.aes;

public final class aen
implements ServiceConnection,
ar,
as {
    final /* synthetic */ adz a;
    private volatile boolean b;
    private volatile aba c;

    protected aen(adz adz2) {
        this.a = adz2;
    }

    static /* synthetic */ boolean a(aen aen2, boolean bl2) {
        aen2.b = false;
        return false;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a() {
        this.a.c();
        Context context = this.a.l();
        synchronized (this) {
            if (this.b) {
                this.a.t().E().a("Connection attempt already in progress");
                return;
            }
            if (this.c != null) {
                this.a.t().E().a("Already awaiting connection attempt");
                return;
            }
            this.c = new aba(context, Looper.getMainLooper(), this, this);
            this.a.t().E().a("Connecting to remote service");
            this.b = true;
            this.c.s();
            return;
        }
    }

    @Override
    public final void a(int n2) {
        ah.b("MeasurementServiceConnection.onConnectionSuspended");
        this.a.t().D().a("Service connection suspended");
        this.a.s().a(new aer(this));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a(Intent intent) {
        this.a.c();
        Context context = this.a.l();
        a a2 = a.a();
        synchronized (this) {
            if (this.b) {
                this.a.t().E().a("Connection attempt already in progress");
                return;
            }
            this.a.t().E().a("Using local app measurement service");
            this.b = true;
            a2.a(context, intent, adz.a(this.a), 129);
            return;
        }
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    @Override
    public final void a(Bundle object) {
        ah.b("MeasurementServiceConnection.onConnected");
        // MONITORENTER : this
        object = (aat)this.c.x();
        this.c = null;
        this.a.s().a(new aeq(this, (aat)object));
        return;
        catch (DeadObjectException | IllegalStateException object2) {}
        this.c = null;
        this.b = false;
        // MONITOREXIT : this
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(com.google.android.gms.common.a a2) {
        ah.b("MeasurementServiceConnection.onConnectionFailed");
        abb abb2 = this.a.p.g();
        if (abb2 != null) {
            abb2.A().a("Service connection failed", a2);
        }
        synchronized (this) {
            this.b = false;
            this.c = null;
        }
        this.a.s().a(new aes(this));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    public final void onServiceConnected(ComponentName object, IBinder iBinder) {
        block15 : {
            ah.b("MeasurementServiceConnection.onServiceConnected");
            // MONITORENTER : this
            if (iBinder == null) {
                this.b = false;
                this.a.t().y().a("Service connected with null binder");
                // MONITOREXIT : this
                return;
            }
            Object var5_6 = null;
            object = null;
            IInterface iInterface = null;
            Object componentName = object;
            try {
                String string2 = iBinder.getInterfaceDescriptor();
                componentName = object;
                if ("com.google.android.gms.measurement.internal.IMeasurementService".equals(string2)) {
                    if (iBinder == null) {
                        object = iInterface;
                    } else {
                        componentName = object;
                        iInterface = iBinder.queryLocalInterface("com.google.android.gms.measurement.internal.IMeasurementService");
                        componentName = object;
                        if (iInterface instanceof aat) {
                            componentName = object;
                            object = (aat)iInterface;
                        } else {
                            componentName = object;
                            object = new aav(iBinder);
                        }
                    }
                    componentName = object;
                    this.a.t().E().a("Bound to IMeasurementService interface");
                } else {
                    componentName = object;
                    this.a.t().y().a("Got binder with a wrong descriptor", string2);
                    object = var5_6;
                }
                break block15;
            }
            catch (RemoteException remoteException) {}
            this.a.t().y().a("Service connect failed to get IMeasurementService");
            object = componentName;
        }
        if (object != null) {
            this.a.s().a(new aeo(this, (aat)object));
            // MONITOREXIT : this
            return;
        }
        this.b = false;
        try {
            a.a();
            this.a.l().unbindService((ServiceConnection)adz.a(this.a));
            return;
        }
        catch (IllegalArgumentException illegalArgumentException) {
            return;
        }
    }

    public final void onServiceDisconnected(ComponentName componentName) {
        ah.b("MeasurementServiceConnection.onServiceDisconnected");
        this.a.t().D().a("Service disconnected");
        this.a.s().a(new aep(this, componentName));
    }
}

