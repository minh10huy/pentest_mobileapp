/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.Activity
 *  android.content.ComponentName
 *  android.content.Context
 *  android.content.Intent
 *  android.content.pm.PackageManager
 *  android.content.pm.ResolveInfo
 *  android.net.Uri
 *  android.text.TextUtils
 *  android.view.View
 *  org.json.JSONArray
 *  org.json.JSONException
 *  org.json.JSONObject
 */
package com.google.android.gms.ads.internal.gmsg;

import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.net.Uri;
import android.text.TextUtils;
import android.view.View;
import com.google.android.gms.ads.internal.gmsg.aa;
import com.google.android.gms.ads.internal.gmsg.e;
import com.google.android.gms.ads.internal.gmsg.j;
import com.google.android.gms.ads.internal.gmsg.l;
import com.google.android.gms.ads.internal.gmsg.m;
import com.google.android.gms.ads.internal.gmsg.n;
import com.google.android.gms.ads.internal.gmsg.o;
import com.google.android.gms.ads.internal.gmsg.p;
import com.google.android.gms.ads.internal.gmsg.q;
import com.google.android.gms.ads.internal.gmsg.r;
import com.google.android.gms.ads.internal.gmsg.s;
import com.google.android.gms.ads.internal.gmsg.t;
import com.google.android.gms.ads.internal.gmsg.u;
import com.google.android.gms.ads.internal.gmsg.v;
import com.google.android.gms.ads.internal.gmsg.w;
import com.google.android.gms.ads.internal.gmsg.x;
import com.google.android.gms.ads.internal.gmsg.y;
import com.google.android.gms.ads.internal.gmsg.z;
import com.google.android.gms.ads.internal.js.a;
import com.google.android.gms.internal.agg;
import com.google.android.gms.internal.agk;
import com.google.android.gms.internal.agl;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.ge;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.jo;
import com.google.android.gms.internal.km;
import com.google.android.gms.internal.lf;
import com.google.android.gms.internal.nb;
import com.google.android.gms.internal.nh;
import com.google.android.gms.internal.ni;
import com.google.android.gms.internal.nu;
import com.google.android.gms.internal.oq;
import com.google.android.gms.internal.ph;
import com.google.android.gms.internal.pi;
import com.google.android.gms.internal.pj;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Map;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

@ak
public final class k {
    public static final aa<nu> a;
    public static final aa<nu> b;
    public static final aa<nu> c;
    public static final aa<nu> d;
    public static final aa<nu> e;
    public static final aa<nu> f;
    public static final aa<Object> g;
    public static final aa<nu> h;
    public static final aa<nu> i;
    public static final aa<nu> j;
    public static final aa<nu> k;
    public static final aa<nb> l;
    public static final aa<nb> m;
    public static final aa<nu> n;
    public static final e o;
    public static final aa<nu> p;
    public static final aa<nu> q;
    public static final aa<nu> r;
    private static aa<Object> s;

    static {
        s = new q();
        a = l.a;
        b = m.a;
        c = n.a;
        d = new s();
        e = new t();
        f = o.a;
        g = new u();
        h = new v();
        i = p.a;
        j = new w();
        k = new x();
        l = new nh();
        m = new ni();
        n = new j();
        o = new e();
        p = new y();
        q = new z();
        r = new r();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    static final /* synthetic */ void a(a a2, Map object) {
        Object object2;
        block5 : {
            String string2 = (String)object.get("u");
            if (string2 == null) {
                he.e("URL missing from click GMSG.");
                return;
            }
            object2 = Uri.parse((String)string2);
            try {
                agk agk2 = ((ph)((Object)a2)).w();
                object = object2;
                if (agk2 != null) {
                    object = object2;
                    if (agk2.a((Uri)object2)) {
                        object = agk2.a((Uri)object2, ((oq)((Object)a2)).getContext(), ((pj)((Object)a2)).getView(), ((oq)((Object)a2)).d());
                    }
                }
                break block5;
            }
            catch (agl agl2) {}
            object = String.valueOf(string2);
            object = object.length() != 0 ? "Unable to append parameter to URL: ".concat((String)object) : new String("Unable to append parameter to URL: ");
            he.e((String)object);
            object = object2;
        }
        object2 = (oq)((Object)a2);
        object = ge.a((Uri)object, object2.getContext()).toString();
        new jo(object2.getContext(), ((pi)a2).j().a, (String)object).i();
    }

    static final /* synthetic */ void a(oq oq2, Map object) {
        if ((object = (String)object.get("u")) == null) {
            he.e("URL missing from httpTrack GMSG.");
            return;
        }
        new jo(oq2.getContext(), ((pi)oq2).j().a, (String)object).i();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    static final /* synthetic */ void a(ph object, Map object2) {
        String string2 = (String)object2.get("tx");
        String string3 = (String)object2.get("ty");
        object2 = (String)object2.get("td");
        try {
            int n2 = Integer.parseInt(string2);
            int n3 = Integer.parseInt(string3);
            int n4 = Integer.parseInt((String)object2);
            object = object.w();
            if (object != null) {
                object.a().a(n2, n3, n4);
            }
            return;
        }
        catch (NumberFormatException numberFormatException) {}
        he.e("Could not parse touch parameters from gmsg.");
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    static final /* synthetic */ void b(oq oq2, Map object) {
        PackageManager packageManager;
        block23 : {
            packageManager = oq2.getContext().getPackageManager();
            object = (String)object.get("data");
            try {
                object = new JSONObject((String)object);
            }
            catch (JSONException jSONException) {}
            try {}
            catch (JSONException jSONException) {}
            break block23;
            ((a)((Object)oq2)).a("openableIntents", new JSONObject());
            return;
            ((a)((Object)oq2)).a("openableIntents", new JSONObject());
            return;
        }
        JSONArray jSONArray = object.getJSONArray("intents");
        JSONObject jSONObject = new JSONObject();
        int n2 = 0;
        do {
            block21 : {
                Object object2;
                block22 : {
                    if (n2 >= jSONArray.length()) {
                        ((a)((Object)oq2)).a("openableIntents", jSONObject);
                        return;
                    }
                    object = jSONArray.getJSONObject(n2);
                    String string2 = object.optString("id");
                    String[] arrstring = object.optString("u");
                    String string3 = object.optString("i");
                    String string4 = object.optString("m");
                    String string5 = object.optString("p");
                    String string6 = object.optString("c");
                    object.optString("f");
                    object.optString("e");
                    String string7 = object.optString("intent_url");
                    object = object2 = null;
                    if (!TextUtils.isEmpty((CharSequence)string7)) {
                        try {
                            object = Intent.parseUri((String)string7, (int)0);
                        }
                        catch (URISyntaxException uRISyntaxException) {
                            object = String.valueOf(string7);
                            object = object.length() != 0 ? "Error parsing the url: ".concat((String)object) : new String("Error parsing the url: ");
                            he.b((String)object, uRISyntaxException);
                            object = object2;
                        }
                    }
                    boolean bl2 = true;
                    object2 = object;
                    if (object == null) {
                        object = new Intent();
                        if (!TextUtils.isEmpty((CharSequence)arrstring)) {
                            object.setData(Uri.parse((String)arrstring));
                        }
                        if (!TextUtils.isEmpty((CharSequence)string3)) {
                            object.setAction(string3);
                        }
                        if (!TextUtils.isEmpty((CharSequence)string4)) {
                            object.setType(string4);
                        }
                        if (!TextUtils.isEmpty((CharSequence)string5)) {
                            object.setPackage(string5);
                        }
                        object2 = object;
                        if (!TextUtils.isEmpty((CharSequence)string6)) {
                            arrstring = string6.split("/", 2);
                            object2 = object;
                            if (arrstring.length == 2) {
                                object.setComponent(new ComponentName(arrstring[0], arrstring[1]));
                                object2 = object;
                            }
                        }
                    }
                    if (packageManager.resolveActivity((Intent)object2, 65536) == null) {
                        bl2 = false;
                    }
                    try {
                        jSONObject.put(string2, bl2);
                        break block21;
                    }
                    catch (JSONException jSONException) {
                        object2 = "Error constructing openable urls response.";
                        break block22;
                    }
                    catch (JSONException jSONException) {
                        object2 = "Error parsing the intent data.";
                    }
                }
                he.b((String)object2, (Throwable)object);
            }
            ++n2;
        } while (true);
    }

    static final /* synthetic */ void c(oq oq2, Map object) {
        if (TextUtils.isEmpty((CharSequence)(object = (String)object.get("urls")))) {
            he.e("URLs missing in canOpenURLs GMSG.");
            return;
        }
        String[] arrstring = object.split(",");
        HashMap<String, Boolean> hashMap = new HashMap<String, Boolean>();
        PackageManager packageManager = oq2.getContext().getPackageManager();
        for (String string2 : arrstring) {
            object = string2.split(";", 2);
            String string3 = object[0].trim();
            int n2 = ((String[])object).length;
            boolean bl2 = true;
            object = n2 > 1 ? object[1].trim() : "android.intent.action.VIEW";
            if (packageManager.resolveActivity(new Intent((String)object, Uri.parse((String)string3)), 65536) == null) {
                bl2 = false;
            }
            hashMap.put(string2, bl2);
        }
        ((a)((Object)oq2)).a("openableURLs", hashMap);
    }
}

