/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.ajm;
import com.google.android.gms.internal.alc;
import com.google.android.gms.internal.ald;
import com.google.android.gms.internal.asj;
import com.google.android.gms.internal.asp;
import com.google.android.gms.internal.asw;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;

public final class aok
extends ald {
    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private static byte a(String string2, int n2) {
        int n3 = n2 + 3;
        if (n3 > string2.length() || string2.charAt(n2) != '%') throw new UnsupportedEncodingException();
        if ((string2 = string2.substring(n2 + 1, n3)).charAt(0) == '+' || string2.charAt(0) == '-') throw new UnsupportedEncodingException();
        try {
            n2 = Integer.parseInt(string2, 16);
        }
        catch (NumberFormatException numberFormatException) {
            throw new UnsupportedEncodingException();
        }
        return (byte)n2;
    }

    static String a(String string2, String string3) {
        Charset charset = Charset.forName("UTF-8");
        StringBuilder stringBuilder = new StringBuilder();
        int n2 = 0;
        while (n2 < string2.length()) {
            int n3 = string2.charAt(n2);
            if (n3 != 37) {
                stringBuilder.append((char)n3);
                ++n2;
                continue;
            }
            byte by2 = aok.a(string2, n2);
            n3 = n2 + 3;
            if ((by2 & 128) == 0) {
                if (string3.indexOf(by2) == -1) {
                    stringBuilder.append((char)by2);
                } else {
                    stringBuilder.append(string2.substring(n3 - 3, n3));
                }
                n2 = n3;
                continue;
            }
            int n4 = 0;
            while ((by2 << n4 & 128) != 0) {
                ++n4;
            }
            if (n4 >= 2 && n4 <= 4) {
                Object object = new byte[n4];
                object[0] = by2;
                for (int i2 = 1; i2 < n4; ++i2) {
                    by2 = aok.a(string2, n3);
                    n3 += 3;
                    if ((by2 & 192) == 128) {
                        object[i2] = by2;
                        continue;
                    }
                    throw new UnsupportedEncodingException();
                }
                if ((object = charset.decode(ByteBuffer.wrap((byte[])object))).length() == 1 && string3.indexOf(object.charAt(0)) != -1) {
                    stringBuilder.append(string2.substring(n2, n3));
                } else {
                    stringBuilder.append((CharSequence)object);
                }
                n2 = n3;
                continue;
            }
            throw new UnsupportedEncodingException();
        }
        return stringBuilder.toString();
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Override
    protected final /* varargs */ asj<?> a(ajm asj2, asj<?> ... arrasj) {
        void var1_4;
        void var2_8;
        ah.b(true);
        if (((void)var2_8).length > 0) {
            asj asj3 = (asj)ah.a(var2_8[0]);
        } else {
            asp asp2 = asp.e;
        }
        String string2 = alc.d(var1_4);
        try {
            return new asw(aok.a(string2, "#;/?:@&=+$,"));
        }
        catch (UnsupportedEncodingException unsupportedEncodingException) {
            return asp.e;
        }
    }
}

