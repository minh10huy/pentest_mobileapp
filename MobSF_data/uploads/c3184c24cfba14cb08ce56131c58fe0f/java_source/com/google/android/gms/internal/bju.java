/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.bjv;

public final class bju
implements Cloneable {
    private static final bjv a = new bjv();
    private boolean b = false;
    private int[] c;
    private bjv[] d;
    private int e;

    bju() {
        this(10);
    }

    private bju(int n2) {
        n2 = bju.c(n2);
        this.c = new int[n2];
        this.d = new bjv[n2];
        this.e = 0;
    }

    private static int c(int n2) {
        int n3;
        int n4 = n2 << 2;
        n2 = 4;
        do {
            n3 = n4;
            if (n2 >= 32 || n4 <= (n3 = (1 << n2) - 12)) break;
            ++n2;
        } while (true);
        return n3 / 4;
    }

    private final int d(int n2) {
        int n3 = this.e - 1;
        int n4 = 0;
        while (n4 <= n3) {
            int n5 = n4 + n3 >>> 1;
            int n6 = this.c[n5];
            if (n6 < n2) {
                n4 = n5 + 1;
                continue;
            }
            if (n6 > n2) {
                n3 = n5 - 1;
                continue;
            }
            return n5;
        }
        return n4;
    }

    final int a() {
        return this.e;
    }

    final bjv a(int n2) {
        if ((n2 = this.d(n2)) >= 0 && this.d[n2] != a) {
            return this.d[n2];
        }
        return null;
    }

    final void a(int n2, bjv bjv2) {
        int n3;
        int[] arrn;
        Object[] arrobject;
        int n4 = this.d(n2);
        if (n4 >= 0) {
            this.d[n4] = bjv2;
            return;
        }
        if (n4 < this.e && this.d[n4] == a) {
            this.c[n4] = n2;
            this.d[n4] = bjv2;
            return;
        }
        if (this.e >= this.c.length) {
            n3 = bju.c(this.e + 1);
            arrn = new int[n3];
            arrobject = new bjv[n3];
            System.arraycopy(this.c, 0, arrn, 0, this.c.length);
            System.arraycopy(this.d, 0, arrobject, 0, this.d.length);
            this.c = arrn;
            this.d = arrobject;
        }
        if (this.e - n4 != 0) {
            arrn = this.c;
            arrobject = this.c;
            n3 = n4 + 1;
            System.arraycopy(arrn, n4, arrobject, n3, this.e - n4);
            System.arraycopy(this.d, n4, this.d, n3, this.e - n4);
        }
        this.c[n4] = n2;
        this.d[n4] = bjv2;
        ++this.e;
    }

    final bjv b(int n2) {
        return this.d[n2];
    }

    public final boolean b() {
        if (this.e == 0) {
            return true;
        }
        return false;
    }

    public final /* synthetic */ Object clone() {
        int n2 = this.e;
        bju bju2 = new bju(n2);
        int[] arrn = this.c;
        int[] arrn2 = bju2.c;
        System.arraycopy(arrn, 0, arrn2, 0, n2);
        for (int i2 = 0; i2 < n2; ++i2) {
            if (this.d[i2] == null) continue;
            bju2.d[i2] = (bjv)this.d[i2].clone();
        }
        bju2.e = n2;
        return bju2;
    }

    public final boolean equals(Object arrbjv) {
        int n2;
        Object[] arrobject;
        int n3;
        block7 : {
            if (arrbjv == this) {
                return true;
            }
            if (!(arrbjv instanceof bju)) {
                return false;
            }
            arrbjv = (bju)arrbjv;
            if (this.e != arrbjv.e) {
                return false;
            }
            arrobject = this.c;
            int[] arrn = arrbjv.c;
            n3 = this.e;
            for (n2 = 0; n2 < n3; ++n2) {
                if (arrobject[n2] == arrn[n2]) continue;
                n2 = 0;
                break block7;
            }
            n2 = 1;
        }
        if (n2 != 0) {
            block8 : {
                arrobject = this.d;
                arrbjv = arrbjv.d;
                n3 = this.e;
                for (n2 = 0; n2 < n3; ++n2) {
                    if (arrobject[n2].equals(arrbjv[n2])) continue;
                    n2 = 0;
                    break block8;
                }
                n2 = 1;
            }
            if (n2 != 0) {
                return true;
            }
        }
        return false;
    }

    public final int hashCode() {
        int n2 = 17;
        for (int i2 = 0; i2 < this.e; ++i2) {
            n2 = (n2 * 31 + this.c[i2]) * 31 + this.d[i2].hashCode();
        }
        return n2;
    }
}

