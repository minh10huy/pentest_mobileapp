/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.ContentValues
 *  android.content.Context
 *  android.database.sqlite.SQLiteDatabase
 *  android.database.sqlite.SQLiteException
 *  android.text.TextUtils
 */
package com.google.android.gms.internal;

import android.content.ContentValues;
import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteException;
import android.support.v4.g.a;
import android.text.TextUtils;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.util.f;
import com.google.android.gms.internal.aab;
import com.google.android.gms.internal.aac;
import com.google.android.gms.internal.aai;
import com.google.android.gms.internal.aaw;
import com.google.android.gms.internal.aax;
import com.google.android.gms.internal.aaz;
import com.google.android.gms.internal.abb;
import com.google.android.gms.internal.abd;
import com.google.android.gms.internal.abm;
import com.google.android.gms.internal.abx;
import com.google.android.gms.internal.acc;
import com.google.android.gms.internal.adc;
import com.google.android.gms.internal.ade;
import com.google.android.gms.internal.adv;
import com.google.android.gms.internal.adz;
import com.google.android.gms.internal.aez;
import com.google.android.gms.internal.afk;
import com.google.android.gms.internal.afn;
import com.google.android.gms.internal.afo;
import com.google.android.gms.internal.afp;
import com.google.android.gms.internal.afr;
import com.google.android.gms.internal.aft;
import com.google.android.gms.internal.afu;
import com.google.android.gms.internal.afv;
import com.google.android.gms.internal.bjp;
import com.google.android.gms.internal.bjq;
import com.google.android.gms.internal.bjy;
import com.google.android.gms.internal.zr;
import com.google.android.gms.internal.zy;
import com.google.android.gms.measurement.AppMeasurement;
import java.io.IOException;
import java.util.Map;

public final class abw
extends adc {
    private static int a = 65535;
    private static int b = 2;
    private final Map<String, Map<String, String>> c = new a<String, Map<String, String>>();
    private final Map<String, Map<String, Boolean>> d = new a<String, Map<String, Boolean>>();
    private final Map<String, Map<String, Boolean>> e = new a<String, Map<String, Boolean>>();
    private final Map<String, afu> f = new a<String, afu>();
    private final Map<String, Map<String, Integer>> g = new a<String, Map<String, Integer>>();
    private final Map<String, String> h = new a<String, String>();

    abw(acc acc2) {
        super(acc2);
    }

    private final afu a(String string2, byte[] object) {
        if (object == null) {
            return new afu();
        }
        object = bjp.a(object, 0, ((byte[])object).length);
        afu afu2 = new afu();
        try {
            afu2.a((bjp)object);
            this.t().E().a("Parsed config. version, gmp_app_id", afu2.a, afu2.b);
            return afu2;
        }
        catch (IOException iOException) {
            this.t().A().a("Unable to merge remote config. appId", abb.a(string2), iOException);
            return new afu();
        }
    }

    private static Map<String, String> a(afu arrafv) {
        a<String, String> a2 = new a<String, String>();
        if (arrafv != null && arrafv.c != null) {
            for (afv afv2 : arrafv.c) {
                if (afv2 == null) continue;
                a2.put(afv2.a, afv2.b);
            }
        }
        return a2;
    }

    private final void a(String string2, afu arraft) {
        a<String, Boolean> a2 = new a<String, Boolean>();
        a<String, Boolean> a3 = new a<String, Boolean>();
        a<String, Integer> a4 = new a<String, Integer>();
        if (arraft != null && arraft.d != null) {
            for (aft aft2 : arraft.d) {
                if (TextUtils.isEmpty((CharSequence)aft2.a)) {
                    this.t().A().a("EventConfig contained null event name");
                    continue;
                }
                String string3 = AppMeasurement.a.a(aft2.a);
                if (!TextUtils.isEmpty((CharSequence)string3)) {
                    aft2.a = string3;
                }
                a2.put(aft2.a, aft2.b);
                a3.put(aft2.a, aft2.c);
                if (aft2.d == null) continue;
                if (aft2.d >= b && aft2.d <= a) {
                    a4.put(aft2.a, aft2.d);
                    continue;
                }
                this.t().A().a("Invalid sampling rate. Event name, sample rate", aft2.a, aft2.d);
            }
        }
        this.d.put(string2, a2);
        this.e.put(string2, a3);
        this.g.put(string2, a4);
    }

    private final void e(String string2) {
        this.Q();
        this.c();
        ah.a(string2);
        if (this.f.get(string2) == null) {
            Object object = this.n().d(string2);
            if (object == null) {
                this.c.put(string2, null);
                this.d.put(string2, null);
                this.e.put(string2, null);
                this.f.put(string2, null);
                this.h.put(string2, null);
                this.g.put(string2, null);
                return;
            }
            object = this.a(string2, (byte[])object);
            this.c.put(string2, abw.a((afu)object));
            this.a(string2, (afu)object);
            this.f.put(string2, (afu)object);
            this.h.put(string2, null);
        }
    }

    protected final afu a(String string2) {
        this.Q();
        this.c();
        ah.a(string2);
        this.e(string2);
        return this.f.get(string2);
    }

    final String a(String object, String string2) {
        this.c();
        this.e((String)object);
        object = this.c.get(object);
        if (object != null) {
            return (String)object.get(string2);
        }
        return null;
    }

    protected final boolean a(String string2, byte[] arrby, String object) {
        this.Q();
        this.c();
        ah.a(string2);
        afu afu2 = this.a(string2, (byte[])arrby);
        if (afu2 == null) {
            return false;
        }
        this.a(string2, afu2);
        this.f.put(string2, afu2);
        this.h.put(string2, (String)object);
        this.c.put(string2, abw.a(afu2));
        object = this.e();
        afn[] arrafn = afu2.e;
        ah.a(arrafn);
        int n2 = arrafn.length;
        for (int i2 = 0; i2 < n2; ++i2) {
            Object object2;
            afr[] arrafr = arrafn[i2];
            afo[] arrafo = arrafr.c;
            int n3 = arrafo.length;
            for (int i3 = 0; i3 < n3; ++i3) {
                object2 = arrafo[i3];
                String string3 = AppMeasurement.a.a(object2.b);
                if (string3 != null) {
                    object2.b = string3;
                }
                for (afp afp2 : object2.c) {
                    String string4 = AppMeasurement.d.a(afp2.d);
                    if (string4 == null) continue;
                    afp2.d = string4;
                }
            }
            for (afr afr2 : arrafr.b) {
                object2 = AppMeasurement.e.a(afr2.b);
                if (object2 == null) continue;
                afr2.b = object2;
            }
        }
        object.n().a(string2, arrafn);
        try {
            afu2.e = null;
            object = new byte[afu2.f()];
            afu2.a(bjq.a((byte[])object, 0, ((Object)object).length));
            arrby = object;
        }
        catch (IOException iOException) {
            this.t().A().a("Unable to serialize reduced-size config. Storing full config instead. appId", abb.a(string2), iOException);
        }
        object = this.n();
        ah.a(string2);
        object.c();
        object.Q();
        afu2 = new ContentValues();
        afu2.put("remote_config", arrby);
        try {
            if ((long)object.A().update("apps", (ContentValues)afu2, "app_id = ?", new String[]{string2}) == 0L) {
                object.t().y().a("Failed to update remote config (got 0). appId", abb.a(string2));
                return true;
            }
        }
        catch (SQLiteException sQLiteException) {
            object.t().y().a("Error storing remote config. appId", abb.a(string2), (Object)sQLiteException);
        }
        return true;
    }

    protected final String b(String string2) {
        this.c();
        return this.h.get(string2);
    }

    final boolean b(String object, String string2) {
        this.c();
        this.e((String)object);
        if (this.p().k((String)object) && afk.h(string2)) {
            return true;
        }
        if (this.p().l((String)object) && afk.a(string2)) {
            return true;
        }
        if ((object = this.d.get(object)) != null) {
            if ((object = (Boolean)object.get(string2)) == null) {
                return false;
            }
            return object.booleanValue();
        }
        return false;
    }

    protected final void c(String string2) {
        this.c();
        this.h.put(string2, null);
    }

    final boolean c(String object, String string2) {
        this.c();
        this.e((String)object);
        if ("ecommerce_purchase".equals(string2)) {
            return true;
        }
        if ((object = this.e.get(object)) != null) {
            if ((object = (Boolean)object.get(string2)) == null) {
                return false;
            }
            return object.booleanValue();
        }
        return false;
    }

    final int d(String object, String string2) {
        this.c();
        this.e((String)object);
        object = this.g.get(object);
        if (object != null) {
            if ((object = (Integer)object.get(string2)) == null) {
                return 1;
            }
            return object.intValue();
        }
        return 1;
    }

    final void d(String string2) {
        this.c();
        this.f.remove(string2);
    }

    @Override
    protected final boolean w() {
        return false;
    }
}

