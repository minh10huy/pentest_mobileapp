/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.text.TextUtils
 */
package com.google.android.gms.analytics;

import android.text.TextUtils;
import com.google.android.gms.analytics.b;
import com.google.android.gms.analytics.e;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.qa;
import com.google.android.gms.internal.qf;
import com.google.android.gms.internal.qu;
import com.google.android.gms.internal.qw;
import com.google.android.gms.internal.qx;
import com.google.android.gms.internal.ra;
import com.google.android.gms.internal.rq;
import com.google.android.gms.internal.sm;
import com.google.android.gms.internal.tf;
import java.util.HashMap;
import java.util.Map;

final class u
implements Runnable {
    private /* synthetic */ Map a;
    private /* synthetic */ boolean b;
    private /* synthetic */ String c;
    private /* synthetic */ long d;
    private /* synthetic */ boolean e;
    private /* synthetic */ boolean f;
    private /* synthetic */ String g;
    private /* synthetic */ e h;

    u(e e2, Map map, boolean bl2, String string2, long l2, boolean bl3, boolean bl4, String string3) {
        this.h = e2;
        this.a = map;
        this.b = bl2;
        this.c = string2;
        this.d = l2;
        this.e = bl3;
        this.f = bl4;
        this.g = string3;
    }

    @Override
    public final void run() {
        double d2;
        long l2;
        if (e.a(this.h).b()) {
            this.a.put("sc", "start");
        }
        Object object = this.a;
        Object object2 = this.h.m();
        ah.c("getClientId can not be called from the main thread");
        tf.b((Map<String, String>)object, "cid", object2.f().o().b());
        object = (String)this.a.get("sf");
        if (object != null && tf.a(d2 = tf.a((String)object, 100.0), (String)this.a.get("cid"))) {
            this.h.b("Sampling enabled. Hit sampled out. sample rate", d2);
            return;
        }
        object = e.b(this.h);
        if (this.b) {
            tf.a((Map<String, String>)this.a, "ate", object.b());
            tf.a((Map<String, String>)this.a, "adid", object.c());
        } else {
            this.a.remove("ate");
            this.a.remove("adid");
        }
        object = e.c(this.h).b();
        tf.a((Map<String, String>)this.a, "an", object.a());
        tf.a((Map<String, String>)this.a, "av", object.b());
        tf.a((Map<String, String>)this.a, "aid", object.c());
        tf.a((Map<String, String>)this.a, "aiid", object.d());
        this.a.put("v", "1");
        this.a.put("_v", qw.b);
        tf.a((Map<String, String>)this.a, "ul", e.d(this.h).b().a());
        tf.a((Map<String, String>)this.a, "sr", e.e(this.h).c());
        boolean bl2 = this.c.equals("transaction") || this.c.equals("item");
        if (!bl2 && !e.f(this.h).a()) {
            e.g(this.h).a(this.a, "Too many hits sent too quickly, rate limiting invoked");
            return;
        }
        long l3 = l2 = tf.a((String)this.a.get("ht"));
        if (l2 == 0L) {
            l3 = this.d;
        }
        if (this.e) {
            object = new sm(this.h, this.a, l3, this.f);
            e.h(this.h).c("Dry run enabled. Would have sent hit", object);
            return;
        }
        object = (String)this.a.get("cid");
        object2 = new HashMap();
        tf.a((Map<String, String>)object2, "uid", this.a);
        tf.a((Map<String, String>)object2, "an", this.a);
        tf.a((Map<String, String>)object2, "aid", this.a);
        tf.a((Map<String, String>)object2, "av", this.a);
        tf.a((Map<String, String>)object2, "aiid", this.a);
        object = new ra(0L, (String)object, this.g, TextUtils.isEmpty((CharSequence)((CharSequence)this.a.get("adid"))) ^ true, 0L, (Map<String, String>)object2);
        l2 = e.i(this.h).a((ra)object);
        this.a.put("_s", String.valueOf(l2));
        object = new sm(this.h, this.a, l3, this.f);
        e.j(this.h).a((sm)object);
    }
}

