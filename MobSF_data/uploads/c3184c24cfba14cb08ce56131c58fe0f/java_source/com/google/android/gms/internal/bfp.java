/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.aii;
import com.google.android.gms.internal.bwe;
import com.google.android.gms.internal.bye;
import com.google.android.gms.internal.cci;
import com.google.android.gms.internal.eg;
import com.google.android.gms.internal.yl;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

final class bfp
implements bye {
    private final Map<String, List<bwe<?>>> a = new HashMap();
    private final aii b;

    bfp(aii aii2) {
        this.b = aii2;
    }

    static /* synthetic */ boolean a(bfp bfp2, bwe bwe2) {
        return bfp2.b(bwe2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final boolean b(bwe<?> bwe2) {
        synchronized (this) {
            String string2 = bwe2.e();
            if (this.a.containsKey(string2)) {
                List<bwe<?>> list;
                List<bwe<?>> list2 = list = this.a.get(string2);
                if (list == null) {
                    list2 = new ArrayList();
                }
                bwe2.b("waiting-for-response");
                list2.add(bwe2);
                this.a.put(string2, list2);
                if (eg.a) {
                    eg.b("Request for cacheKey=%s is in flight, putting on hold.", string2);
                }
                return true;
            }
            this.a.put(string2, null);
            bwe2.a(this);
            if (eg.a) {
                eg.b("new request, sending to network %s", string2);
            }
            return false;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(bwe<?> object) {
        synchronized (this) {
            object = object.e();
            List<bwe<?>> list = this.a.remove(object);
            if (list != null && !list.isEmpty()) {
                if (eg.a) {
                    eg.a("%d waiting requests for cacheKey=%s; resend to network", list.size(), object);
                }
                bwe<?> bwe2 = list.remove(0);
                this.a.put((String)object, list);
                bwe2.a(this);
                try {
                    aii.a(this.b).put(bwe2);
                    return;
                }
                catch (InterruptedException interruptedException) {
                    eg.c("Couldn't add request to queue. %s", interruptedException.toString());
                    Thread.currentThread().interrupt();
                    this.b.a();
                }
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    @Override
    public final void a(bwe<?> iterator, cci<?> cci2) {
        if (cci2.b != null && !cci2.b.a()) {
            iterator = iterator.e();
            // MONITORENTER : this
            Object object = this.a.remove(iterator);
            // MONITOREXIT : this
            if (object == null) return;
            if (eg.a) {
                eg.a("Releasing %d waiting requests for cacheKey=%s.", object.size(), iterator);
            }
            iterator = object.iterator();
            while (iterator.hasNext()) {
                object = iterator.next();
                aii.b(this.b).a((bwe<?>)object, cci2);
            }
            return;
        }
        this.a((bwe<?>)((Object)iterator));
    }
}

