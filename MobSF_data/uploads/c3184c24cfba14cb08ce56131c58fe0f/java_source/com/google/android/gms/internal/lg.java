/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.lh;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.concurrent.Executor;

@ak
final class lg {
    private final Object a = new Object();
    private final List<Runnable> b = new ArrayList<Runnable>();
    private boolean c = false;

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a() {
        ArrayList<Runnable> arrayList = new ArrayList<Runnable>();
        ArrayList<Runnable> arrayList2 = this.a;
        synchronized (arrayList2) {
            if (this.c) {
                return;
            }
            arrayList.addAll(this.b);
            this.b.clear();
            this.c = true;
        }
        arrayList2 = arrayList;
        int n2 = arrayList2.size();
        int n3 = 0;
        while (n3 < n2) {
            arrayList = arrayList2.get(n3);
            ++n3;
            ((Runnable)((Object)arrayList)).run();
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a(Runnable runnable, Executor executor) {
        Object object = this.a;
        synchronized (object) {
            if (this.c) {
                executor.execute(runnable);
            } else {
                this.b.add(new lh(executor, runnable));
            }
            return;
        }
    }
}

