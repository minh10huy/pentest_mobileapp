/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.util.Log
 */
package com.google.android.gms.common.internal;

import android.util.Log;
import com.google.android.gms.common.internal.ap;
import java.util.ArrayList;

public abstract class au<TListener> {
    private TListener a;
    private boolean b;
    private /* synthetic */ ap c;

    public au(TListener TListener) {
        this.c = var1_1;
        this.a = TListener;
        this.b = false;
    }

    protected abstract void a(TListener var1);

    protected abstract void b();

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    public final void c() {
        // MONITORENTER : this
        TListener TListener = this.a;
        if (this.b) {
            String string2 = String.valueOf(this);
            StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 47);
            stringBuilder.append("Callback proxy ");
            stringBuilder.append(string2);
            stringBuilder.append(" being reused. This is not safe.");
            Log.w((String)"GmsClient", (String)stringBuilder.toString());
        }
        // MONITOREXIT : this
        if (TListener != null) {
            try {
                this.a(TListener);
            }
            catch (RuntimeException runtimeException) {
                this.b();
                throw runtimeException;
            }
        } else {
            this.b();
        }
        // MONITORENTER : this
        this.b = true;
        // MONITOREXIT : this
        this.d();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void d() {
        this.e();
        ArrayList arrayList = ap.f(this.c);
        synchronized (arrayList) {
            ap.f(this.c).remove(this);
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void e() {
        synchronized (this) {
            this.a = null;
            return;
        }
    }
}

