/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.content.BroadcastReceiver
 *  android.content.Context
 *  android.content.Intent
 *  android.content.IntentFilter
 *  android.os.PowerManager
 *  android.os.SystemClock
 */
package com.google.android.gms.common.util;

import android.annotation.TargetApi;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.PowerManager;
import android.os.SystemClock;
import com.google.android.gms.common.util.p;

public final class k {
    private static IntentFilter a = new IntentFilter("android.intent.action.BATTERY_CHANGED");
    private static long b;
    private static float c;

    static {
        c = Float.NaN;
    }

    @TargetApi(value=20)
    public static int a(Context context) {
        if (context != null) {
            if (context.getApplicationContext() == null) {
                return -1;
            }
            Intent intent = context.getApplicationContext().registerReceiver(null, a);
            int n2 = 0;
            int n3 = intent == null ? 0 : intent.getIntExtra("plugged", 0);
            n3 = (n3 & 7) != 0 ? 1 : 0;
            if ((context = (PowerManager)context.getSystemService("power")) == null) {
                return -1;
            }
            boolean bl2 = p.f() ? context.isInteractive() : context.isScreenOn();
            if (bl2) {
                n2 = 1;
            }
            return n2 << 1 | n3;
        }
        return -1;
    }

    public static float b(Context context) {
        synchronized (k.class) {
            if (SystemClock.elapsedRealtime() - b < 60000L && !Float.isNaN(c)) {
                float f2 = c;
                return f2;
            }
            if ((context = context.getApplicationContext().registerReceiver(null, a)) != null) {
                int n2 = context.getIntExtra("level", -1);
                int n3 = context.getIntExtra("scale", -1);
                c = (float)n2 / (float)n3;
            }
            b = SystemClock.elapsedRealtime();
            float f3 = c;
            return f3;
        }
    }
}

