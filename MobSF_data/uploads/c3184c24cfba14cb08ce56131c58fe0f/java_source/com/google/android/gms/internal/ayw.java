/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.aym;
import com.google.android.gms.internal.ayt;
import java.security.GeneralSecurityException;
import java.security.Key;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;

public final class ayw {
    public static byte[] a(String arrby, byte[] arrby2, byte[] arrby3, byte[] arrby4, int n2) {
        Mac mac = aym.b.a((String)arrby);
        if (n2 <= mac.getMacLength() * 255) {
            if (arrby3 != null && arrby3.length != 0) {
                mac.init(new SecretKeySpec(arrby3, (String)arrby));
            } else {
                mac.init(new SecretKeySpec(new byte[mac.getMacLength()], (String)arrby));
            }
            arrby3 = mac.doFinal(arrby2);
            arrby2 = new byte[n2];
            mac.init(new SecretKeySpec(arrby3, (String)arrby));
            arrby = new byte[]{};
            int n3 = 1;
            int n4 = 0;
            do {
                mac.update(arrby);
                mac.update(arrby4);
                mac.update((byte)n3);
                arrby = mac.doFinal();
                if (arrby.length + n4 >= n2) break;
                System.arraycopy(arrby, 0, arrby2, n4, arrby.length);
                n4 += arrby.length;
                ++n3;
            } while (true);
            System.arraycopy(arrby, 0, arrby2, n4, n2 - n4);
            return arrby2;
        }
        throw new GeneralSecurityException("size too large");
    }
}

