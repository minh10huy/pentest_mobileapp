/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.ajm;
import com.google.android.gms.internal.alb;
import com.google.android.gms.internal.ald;
import com.google.android.gms.internal.asj;
import com.google.android.gms.internal.aso;
import com.google.android.gms.internal.asq;
import com.google.android.gms.internal.asw;
import java.util.List;

public final class ams
extends ald {
    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Override
    protected final /* varargs */ asj<?> a(ajm object, asj<?> ... object2) {
        ah.b(true);
        boolean bl2 = ((Object)object2).length == 3;
        ah.b(bl2);
        ah.b(object2[1] instanceof asw);
        ah.b(object2[2] instanceof asq);
        Object object3 = object2[0];
        String string2 = (String)((asw)object2[1]).b();
        List list = (List)((asq)object2[2]).b();
        if (object3.a(string2)) {
            object2 = object3.b(string2);
            if (object2 instanceof aso) {
                object2 = (alb)((aso)object2).b();
                do {
                    return object2.b((ajm)object, list.toArray(new asj[list.size()]));
                    break;
                } while (true);
            }
            object = new StringBuilder(String.valueOf(string2).length() + 35);
            object.append("Apply TypeError: ");
            object.append(string2);
            object.append(" is not a function");
            throw new IllegalArgumentException(object.toString());
        }
        if (object3.c(string2)) {
            object2 = object3.d(string2);
            list.add(0, object3);
            return object2.b((ajm)object, list.toArray(new asj[list.size()]));
        }
        object = new StringBuilder(String.valueOf(string2).length() + 40);
        object.append("Apply TypeError: object has no ");
        object.append(string2);
        object.append(" property");
        throw new IllegalArgumentException(object.toString());
    }
}

