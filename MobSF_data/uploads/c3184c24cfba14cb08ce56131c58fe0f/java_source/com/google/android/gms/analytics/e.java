/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.text.TextUtils
 */
package com.google.android.gms.analytics;

import android.text.TextUtils;
import com.google.android.gms.analytics.b;
import com.google.android.gms.analytics.p;
import com.google.android.gms.analytics.u;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.util.f;
import com.google.android.gms.internal.qn;
import com.google.android.gms.internal.qo;
import com.google.android.gms.internal.qv;
import com.google.android.gms.internal.qx;
import com.google.android.gms.internal.ri;
import com.google.android.gms.internal.sd;
import com.google.android.gms.internal.sq;
import com.google.android.gms.internal.ss;
import com.google.android.gms.internal.tf;
import com.google.android.gms.internal.tg;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Random;
import java.util.Set;

public class e
extends qv {
    private boolean a;
    private final Map<String, String> b = new HashMap<String, String>();
    private final Map<String, String> c = new HashMap<String, String>();
    private final sq d;
    private final a e;

    e(qx qx2, String string2, sq sq2) {
        super(qx2);
        if (string2 != null) {
            this.b.put("&tid", string2);
        }
        this.b.put("useSecure", "1");
        this.b.put("&a", Integer.toString(new Random().nextInt(Integer.MAX_VALUE) + 1));
        this.d = new sq("tracking", this.h());
        this.e = new a(this, qx2);
    }

    static /* synthetic */ a a(e e2) {
        return e2.e;
    }

    private static String a(Map.Entry<String, String> entry) {
        String string2 = entry.getKey();
        boolean bl2 = string2.startsWith("&") && string2.length() >= 2;
        if (!bl2) {
            return null;
        }
        return entry.getKey().substring(1);
    }

    private static void a(Map<String, String> object, Map<String, String> map) {
        ah.a(map);
        if (object == null) {
            return;
        }
        for (Map.Entry<String, String> entry : object.entrySet()) {
            String string2 = e.a(entry);
            if (string2 == null) continue;
            map.put(string2, entry.getValue());
        }
    }

    static /* synthetic */ qn b(e e2) {
        return e2.s();
    }

    private static void b(Map<String, String> object, Map<String, String> map) {
        ah.a(map);
        if (object == null) {
            return;
        }
        for (Map.Entry<String, String> entry : object.entrySet()) {
            String string2 = e.a(entry);
            if (string2 == null || map.containsKey(string2)) continue;
            map.put(string2, entry.getValue());
        }
    }

    static /* synthetic */ ri c(e e2) {
        return e2.t();
    }

    static /* synthetic */ sd d(e e2) {
        return e2.u();
    }

    static /* synthetic */ sd e(e e2) {
        return e2.u();
    }

    static /* synthetic */ sq f(e e2) {
        return e2.d;
    }

    static /* synthetic */ ss g(e e2) {
        return e2.j();
    }

    static /* synthetic */ ss h(e e2) {
        return e2.j();
    }

    static /* synthetic */ qo i(e e2) {
        return e2.n();
    }

    static /* synthetic */ qo j(e e2) {
        return e2.n();
    }

    @Override
    protected final void a() {
        this.e.y();
        String string2 = this.p().c();
        if (string2 != null) {
            this.a("&an", string2);
        }
        if ((string2 = this.p().b()) != null) {
            this.a("&av", string2);
        }
    }

    public void a(String string2, String string3) {
        ah.a(string2, (Object)"Key should be non-null");
        if (TextUtils.isEmpty((CharSequence)string2)) {
            return;
        }
        this.b.put(string2, string3);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public void a(Map<String, String> object) {
        long l2 = this.h().a();
        if (this.m().e()) {
            this.c("AppOptOut is set to true. Not sending Google Analytics hit");
            return;
        }
        boolean bl2 = this.m().d();
        HashMap<String, String> hashMap = new HashMap<String, String>();
        e.a(this.b, hashMap);
        e.a(object, hashMap);
        boolean bl3 = tf.a(this.b.get("useSecure"), true);
        e.b(this.c, hashMap);
        this.c.clear();
        object = hashMap.get("t");
        if (TextUtils.isEmpty((CharSequence)object)) {
            this.j().a(hashMap, "Missing hit type parameter");
            return;
        }
        String string2 = hashMap.get("tid");
        if (TextUtils.isEmpty((CharSequence)string2)) {
            this.j().a(hashMap, "Missing tracking id parameter");
            return;
        }
        boolean bl4 = this.a;
        synchronized (this) {
            if ("screenview".equalsIgnoreCase((String)object) || "pageview".equalsIgnoreCase((String)object) || "appview".equalsIgnoreCase((String)object) || TextUtils.isEmpty((CharSequence)object)) {
                int n2;
                int n3 = n2 = Integer.parseInt(this.b.get("&a")) + 1;
                if (n2 >= Integer.MAX_VALUE) {
                    n3 = 1;
                }
                this.b.put("&a", Integer.toString(n3));
            }
        }
        this.l().a(new u(this, hashMap, bl4, (String)object, l2, bl2, bl3, string2));
    }

    public void a(boolean bl2) {
        this.a = bl2;
    }

    final class a
    extends qv {
        private long a;
        private boolean b;
        private /* synthetic */ e c;

        protected a(e e2, qx qx2) {
            this.c = e2;
            super(qx2);
            this.a = -1L;
        }

        @Override
        protected final void a() {
        }

        public final boolean b() {
            synchronized (this) {
                boolean bl2 = this.b;
                this.b = false;
                return bl2;
            }
        }
    }

}

