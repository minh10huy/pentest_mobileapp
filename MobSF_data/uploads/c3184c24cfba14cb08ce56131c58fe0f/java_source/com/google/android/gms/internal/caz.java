/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bwt;
import com.google.android.gms.internal.cay;
import com.google.android.gms.internal.cbe;
import com.google.android.gms.internal.cbu;
import com.google.android.gms.internal.cbw;

@ak
public final class caz
extends cbu {
    private final Object a = new Object();
    private cbe b;
    private cay c;

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a() {
        Object object = this.a;
        synchronized (object) {
            if (this.c != null) {
                this.c.P();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(int n2) {
        Object object = this.a;
        synchronized (object) {
            if (this.b != null) {
                n2 = n2 == 3 ? 1 : 2;
                this.b.a(n2);
                this.b = null;
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(bwt bwt2, String string2) {
        Object object = this.a;
        synchronized (object) {
            if (this.c != null) {
                this.c.a(bwt2, string2);
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a(cay cay2) {
        Object object = this.a;
        synchronized (object) {
            this.c = cay2;
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a(cbe cbe2) {
        Object object = this.a;
        synchronized (object) {
            this.b = cbe2;
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(cbw cbw2) {
        Object object = this.a;
        synchronized (object) {
            if (this.b != null) {
                this.b.a(0, cbw2);
                this.b = null;
                return;
            }
            if (this.c != null) {
                this.c.W();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(String string2, String string3) {
        Object object = this.a;
        synchronized (object) {
            if (this.c != null) {
                this.c.b(string2, string3);
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void b() {
        Object object = this.a;
        synchronized (object) {
            if (this.c != null) {
                this.c.T();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void c() {
        Object object = this.a;
        synchronized (object) {
            if (this.c != null) {
                this.c.U();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void d() {
        Object object = this.a;
        synchronized (object) {
            if (this.c != null) {
                this.c.V();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void e() {
        Object object = this.a;
        synchronized (object) {
            if (this.b != null) {
                this.b.a(0);
                this.b = null;
                return;
            }
            if (this.c != null) {
                this.c.W();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void f() {
        Object object = this.a;
        synchronized (object) {
            if (this.c != null) {
                this.c.Q();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void g() {
        Object object = this.a;
        synchronized (object) {
            if (this.c != null) {
                this.c.R();
            }
            return;
        }
    }
}

