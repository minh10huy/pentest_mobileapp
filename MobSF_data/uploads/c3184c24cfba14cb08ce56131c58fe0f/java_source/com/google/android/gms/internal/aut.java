/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.ati;
import com.google.android.gms.internal.aty;
import com.google.android.gms.internal.auy;
import com.google.android.gms.internal.ava;
import com.google.android.gms.internal.avc;
import com.google.android.gms.internal.ave;
import com.google.android.gms.internal.avp;
import com.google.android.gms.internal.avr;
import com.google.android.gms.internal.awo;
import com.google.android.gms.internal.awq;
import com.google.android.gms.internal.awz;
import com.google.android.gms.internal.ayb;
import com.google.android.gms.internal.bfx;
import com.google.android.gms.internal.bgv;
import com.google.android.gms.internal.bhb;
import com.google.android.gms.internal.bhu;
import java.security.GeneralSecurityException;
import java.util.Arrays;

final class aut
implements ayb {
    private final String a;
    private final int b;
    private avp c;
    private auy d;
    private int e;

    aut(awz object) {
        this.a = object.a();
        if (this.a.equals("type.googleapis.com/google.crypto.tink.AesGcmKey")) {
            try {
                avr avr2 = avr.a(object.b());
                this.c = (avp)aty.b((awz)object);
                this.b = avr2.a();
                return;
            }
            catch (bhb bhb2) {
                throw new GeneralSecurityException("invalid KeyFormat protobuf, expected AesGcmKeyFormat", bhb2);
            }
        }
        if (this.a.equals("type.googleapis.com/google.crypto.tink.AesCtrHmacAeadKey")) {
            try {
                ava ava2 = ava.a(object.b());
                this.d = (auy)aty.b((awz)object);
                this.e = ava2.a().b();
                int n2 = ava2.b().b();
                this.b = this.e + n2;
                return;
            }
            catch (bhb bhb3) {
                throw new GeneralSecurityException("invalid KeyFormat protobuf, expected AesGcmKeyFormat", bhb3);
            }
        }
        object = String.valueOf(this.a);
        object = object.length() != 0 ? "unsupported AEAD DEM key type: ".concat((String)object) : new String("unsupported AEAD DEM key type: ");
        throw new GeneralSecurityException((String)object);
    }

    @Override
    public final int a() {
        return this.b;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Override
    public final ati a(byte[] object) {
        void var1_3;
        if (((byte[])object).length != this.b) throw new GeneralSecurityException("Symmetric key has incorrect length");
        if (this.a.equals("type.googleapis.com/google.crypto.tink.AesGcmKey")) {
            avp avp2 = (avp)((bgv)((avp.a)avp.c().a(this.c)).a(bfx.a(object, 0, this.b)).d());
            do {
                return (ati)aty.b(this.a, (bhu)var1_3);
                break;
            } while (true);
        }
        if (!this.a.equals("type.googleapis.com/google.crypto.tink.AesCtrHmacAeadKey")) throw new GeneralSecurityException("unknown DEM key type");
        byte[] arrby = Arrays.copyOfRange(object, 0, this.e);
        byte[] arrby2 = Arrays.copyOfRange(object, this.e, this.b);
        avc avc2 = (avc)((bgv)((avc.a)avc.e().a(this.d.b())).a(bfx.a(arrby)).d());
        awo awo2 = (awo)((bgv)((awo.a)awo.e().a(this.d.c())).a(bfx.a(arrby2)).d());
        auy auy2 = (auy)((bgv)auy.e().a(this.d.a()).a(avc2).a(awo2).d());
        return (ati)aty.b(this.a, (bhu)var1_3);
    }
}

