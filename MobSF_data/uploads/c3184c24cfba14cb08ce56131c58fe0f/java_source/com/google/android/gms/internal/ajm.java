/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.asj;
import java.util.HashMap;
import java.util.Map;

public final class ajm {
    private ajm a;
    private Map<String, asj> b = null;

    public ajm() {
        this(null);
    }

    private ajm(ajm ajm2) {
        this.a = ajm2;
    }

    public final ajm a() {
        return new ajm(this);
    }

    public final void a(String string2, asj<?> asj2) {
        if (this.b == null) {
            this.b = new HashMap<String, asj>();
        }
        this.b.put(string2, asj2);
    }

    public final boolean a(String string2) {
        ajm ajm2 = this;
        do {
            if (ajm2.b != null && ajm2.b.containsKey(string2)) {
                return true;
            }
            if (ajm2.a == null) break;
            ajm2 = ajm2.a;
        } while (true);
        return false;
    }

    public final asj<?> b(String string2) {
        ajm ajm2 = this;
        do {
            if (ajm2.b != null && ajm2.b.containsKey(string2)) {
                return ajm2.b.get(string2);
            }
            if (ajm2.a == null) break;
            ajm2 = ajm2.a;
        } while (true);
        string2 = (string2 = String.valueOf(string2)).length() != 0 ? "Trying to get a non existent symbol: ".concat(string2) : new String("Trying to get a non existent symbol: ");
        throw new IllegalStateException(string2);
    }

    public final void b(String string2, asj<?> asj2) {
        ajm ajm2 = this;
        do {
            if (ajm2.b != null && ajm2.b.containsKey(string2)) {
                ajm2.b.put(string2, asj2);
                return;
            }
            if (ajm2.a == null) {
                string2 = (string2 = String.valueOf(string2)).length() != 0 ? "Trying to modify a non existent symbol: ".concat(string2) : new String("Trying to modify a non existent symbol: ");
                throw new IllegalStateException(string2);
            }
            ajm2 = ajm2.a;
        } while (true);
    }

    public final void c(String string2) {
        ajm ajm2 = this;
        do {
            ah.a(ajm2.a(string2));
            if (ajm2.b != null && ajm2.b.containsKey(string2)) {
                ajm2.b.remove(string2);
                return;
            }
            ajm2 = ajm2.a;
        } while (true);
    }
}

