/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Handler
 *  android.os.RemoteException
 */
package com.google.android.gms.internal;

import android.content.Context;
import android.os.Handler;
import android.os.RemoteException;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bj;
import com.google.android.gms.internal.bpu;
import com.google.android.gms.internal.bpy;
import com.google.android.gms.internal.bvl;
import com.google.android.gms.internal.cav;
import com.google.android.gms.internal.caw;
import com.google.android.gms.internal.cax;
import com.google.android.gms.internal.cba;
import com.google.android.gms.internal.cbd;
import com.google.android.gms.internal.cbf;
import com.google.android.gms.internal.cbi;
import com.google.android.gms.internal.cbj;
import com.google.android.gms.internal.cbn;
import com.google.android.gms.internal.cbw;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.hm;
import com.google.android.gms.internal.hs;
import com.google.android.gms.internal.km;
import com.google.android.gms.internal.lf;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

@ak
public final class cbg
implements cav {
    private final bj a;
    private final cbn b;
    private final Context c;
    private final cax d;
    private final boolean e;
    private final long f;
    private final long g;
    private final int h;
    private final Object i = new Object();
    private boolean j = false;
    private final Map<lf<cbd>, cba> k = new HashMap<lf<cbd>, cba>();
    private final boolean l;
    private final String m;
    private List<cbd> n = new ArrayList<cbd>();
    private final boolean o;

    public cbg(Context context, bj bj2, cbn cbn2, cax cax2, boolean bl2, boolean bl3, String string2, long l2, long l3, int n2, boolean bl4) {
        this.c = context;
        this.a = bj2;
        this.b = cbn2;
        this.d = cax2;
        this.e = bl2;
        this.l = bl3;
        this.m = string2;
        this.f = l2;
        this.g = l3;
        this.h = 2;
        this.o = bl4;
    }

    static /* synthetic */ Object a(cbg cbg2) {
        return cbg2.i;
    }

    private final void a(lf<cbd> lf2) {
        hs.a.post((Runnable)new cbj(this, lf2));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final cbd b(List<lf<cbd>> iterator) {
        lf<cbd> lf2 = this.i;
        synchronized (lf2) {
            if (this.j) {
                return new cbd(-1);
            }
        }
        iterator = iterator.iterator();
        do {
            if (!iterator.hasNext()) {
                this.a((lf<cbd>)null);
                return new cbd(1);
            }
            lf2 = iterator.next();
            try {
                cbd cbd2 = lf2.get();
                this.n.add(cbd2);
                if (cbd2 == null || cbd2.a != 0) continue;
                this.a(lf2);
                return cbd2;
            }
            catch (InterruptedException | ExecutionException exception) {
                he.c("Exception while processing an adapter; continuing with other adapters", exception);
                continue;
            }
            break;
        } while (true);
    }

    static /* synthetic */ boolean b(cbg cbg2) {
        return cbg2.j;
    }

    static /* synthetic */ long c(cbg cbg2) {
        return cbg2.f;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    private final cbd c(List<lf<cbd>> var1_1) {
        var8_3 = this.i;
        // MONITORENTER : var8_3
        if (this.j) {
            var1_1 = new cbd(-1);
            // MONITOREXIT : var8_3
            return var1_1;
        }
        // MONITOREXIT : var8_3
        var4_4 = this.d.m != -1L ? this.d.m : 10000L;
        var13_5 = var1_1.iterator();
        var1_1 = null;
        var8_3 = null;
        var2_6 = -1;
        do {
            block16 : {
                if (!var13_5.hasNext()) {
                    this.a((lf<cbd>)var1_1);
                    if (var8_3 != null) return var8_3;
                    return new cbd(1);
                }
                var11_12 = (lf)var13_5.next();
                var6_8 = av.l().a();
                if (var4_4 != 0L) ** GOTO lbl-1000
                try {
                    if (var11_12.isDone()) {
                        var9_9 /* !! */  = var11_12.get();
                    } else lbl-1000: // 2 sources:
                    {
                        var9_9 /* !! */  = var11_12.get(var4_4, TimeUnit.MILLISECONDS);
                    }
                    var12_13 = (cbd)var9_9 /* !! */ ;
                    this.n.add(var12_13);
                    var9_9 /* !! */  = var8_3;
                    var10_11 = var1_1;
                    var3_7 = var2_6;
                    if (var12_13 != null) {
                        var9_9 /* !! */  = var8_3;
                        var10_11 = var1_1;
                        var3_7 = var2_6;
                        if (var12_13.a == 0) {
                            var14_14 = var12_13.f;
                            var9_9 /* !! */  = var8_3;
                            var10_11 = var1_1;
                            var3_7 = var2_6;
                            if (var14_14 != null) {
                                var9_9 /* !! */  = var8_3;
                                var10_11 = var1_1;
                                var3_7 = var2_6;
                                if (var14_14.a() > var2_6) {
                                    var3_7 = var14_14.a();
                                    var10_11 = var11_12;
                                    var9_9 /* !! */  = var12_13;
                                }
                            }
                        }
                    }
                    break block16;
                }
                catch (Throwable var1_2) {}
                Math.max(var4_4 - (av.l().a() - var6_8), 0L);
                throw var1_2;
                catch (RemoteException | InterruptedException | ExecutionException | TimeoutException var9_10) {}
                he.c("Exception while processing an adapter; continuing with other adapters", (Throwable)var9_10);
                var3_7 = var2_6;
                var10_11 = var1_1;
                var9_9 /* !! */  = var8_3;
            }
            var4_4 = Math.max(var4_4 - (av.l().a() - var6_8), 0L);
            var8_3 = var9_9 /* !! */ ;
            var1_1 = var10_11;
            var2_6 = var3_7;
        } while (true);
    }

    static /* synthetic */ long d(cbg cbg2) {
        return cbg2.g;
    }

    static /* synthetic */ Map e(cbg cbg2) {
        return cbg2.k;
    }

    @Override
    public final cbd a(List<caw> object) {
        he.b("Starting mediation.");
        ExecutorService executorService = Executors.newCachedThreadPool();
        ArrayList<lf<cbd>> arrayList = new ArrayList<lf<cbd>>();
        Object object2 = this.a.d;
        Object object3 = new int[2];
        Object object4 = object2;
        if (object2.g != null) {
            av.w();
            object4 = object2;
            if (cbf.a(this.m, object3)) {
                int n2 = 0;
                int n3 = object3[0];
                int n4 = object3[1];
                object3 = object2.g;
                int n5 = ((int[])object3).length;
                do {
                    object4 = object2;
                    if (n2 >= n5) break;
                    object4 = object3[n2];
                    if (n3 == object4.e && n4 == object4.b) break;
                    ++n2;
                } while (true);
            }
        }
        object2 = object.iterator();
        while (object2.hasNext()) {
            object3 = (caw)object2.next();
            object = String.valueOf(object3.b);
            object = object.length() != 0 ? "Trying mediation network: ".concat((String)object) : new String("Trying mediation network: ");
            he.d((String)object);
            for (String string2 : object3.c) {
                cba object5 = new cba(this.c, string2, this.b, this.d, (caw)object3, this.a.c, (bpy)object4, this.a.k, this.e, this.l, this.a.y, this.a.n, this.a.z, this.a.X, this.o);
                lf lf2 = hm.a(executorService, new cbi(this, object5));
                this.k.put(lf2, object5);
                arrayList.add(lf2);
            }
        }
        if (this.h != 2) {
            return this.b(arrayList);
        }
        return this.c(arrayList);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a() {
        Object object = this.i;
        synchronized (object) {
            this.j = true;
            Iterator<cba> iterator = this.k.values().iterator();
            while (iterator.hasNext()) {
                iterator.next().a();
            }
            return;
        }
    }

    @Override
    public final List<cbd> b() {
        return this.n;
    }
}

