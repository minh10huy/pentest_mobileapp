/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.accounts.Account
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  android.text.TextUtils
 *  org.json.JSONArray
 *  org.json.JSONException
 *  org.json.JSONObject
 */
package com.google.android.gms.auth.api.signin;

import android.accounts.Account;
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;
import com.google.android.gms.auth.api.signin.d;
import com.google.android.gms.auth.api.signin.e;
import com.google.android.gms.auth.api.signin.internal.l;
import com.google.android.gms.auth.api.signin.internal.n;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.common.api.a;
import com.google.android.gms.common.internal.ReflectedParcelable;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.internal.wz;
import com.google.android.gms.internal.xc;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class GoogleSignInOptions
extends wz
implements a.a.e,
ReflectedParcelable {
    public static final Parcelable.Creator<GoogleSignInOptions> CREATOR;
    public static final Scope a;
    public static final Scope b;
    public static final Scope c;
    public static final Scope d;
    public static final Scope e;
    public static final GoogleSignInOptions f;
    public static final GoogleSignInOptions g;
    private static Comparator<Scope> r;
    private int h;
    private final ArrayList<Scope> i;
    private Account j;
    private boolean k;
    private final boolean l;
    private final boolean m;
    private String n;
    private String o;
    private ArrayList<l> p;
    private Map<Integer, l> q;

    static {
        a = new Scope("profile");
        b = new Scope("email");
        c = new Scope("openid");
        d = new Scope("https://www.googleapis.com/auth/games_lite");
        e = new Scope("https://www.googleapis.com/auth/games");
        f = new a().a().b().c();
        g = new a().a(d, new Scope[0]).c();
        CREATOR = new e();
        r = new d();
    }

    GoogleSignInOptions(int n2, ArrayList<Scope> arrayList, Account account, boolean bl2, boolean bl3, boolean bl4, String string2, String string3, ArrayList<l> arrayList2) {
        this(n2, arrayList, account, bl2, bl3, bl4, string2, string3, GoogleSignInOptions.b(arrayList2));
    }

    private GoogleSignInOptions(int n2, ArrayList<Scope> arrayList, Account account, boolean bl2, boolean bl3, boolean bl4, String string2, String string3, Map<Integer, l> map) {
        this.h = n2;
        this.i = arrayList;
        this.j = account;
        this.k = bl2;
        this.l = bl3;
        this.m = bl4;
        this.n = string2;
        this.o = string3;
        this.p = new ArrayList<l>(map.values());
        this.q = map;
    }

    /* synthetic */ GoogleSignInOptions(int n2, ArrayList arrayList, Account account, boolean bl2, boolean bl3, boolean bl4, String string2, String string3, Map map, d d2) {
        this(3, (ArrayList<Scope>)arrayList, account, bl2, bl3, bl4, string2, string3, map);
    }

    public static GoogleSignInOptions a(String string2) {
        if (TextUtils.isEmpty((CharSequence)string2)) {
            return null;
        }
        JSONObject jSONObject = new JSONObject(string2);
        HashSet<Scope> hashSet = new HashSet<Scope>();
        string2 = jSONObject.getJSONArray("scopes");
        int n2 = string2.length();
        for (int i2 = 0; i2 < n2; ++i2) {
            hashSet.add(new Scope(string2.getString(i2)));
        }
        string2 = jSONObject.optString("accountName", null);
        string2 = !TextUtils.isEmpty((CharSequence)string2) ? new Account(string2, "com.google") : null;
        return new GoogleSignInOptions(3, new ArrayList<Scope>(hashSet), (Account)string2, jSONObject.getBoolean("idTokenRequested"), jSONObject.getBoolean("serverAuthRequested"), jSONObject.getBoolean("forceCodeForRefreshToken"), jSONObject.optString("serverClientId", null), jSONObject.optString("hostedDomain", null), new HashMap<Integer, l>());
    }

    private static Map<Integer, l> b(List<l> object) {
        HashMap<Integer, l> hashMap = new HashMap<Integer, l>();
        if (object == null) {
            return hashMap;
        }
        object = object.iterator();
        while (object.hasNext()) {
            l l2 = (l)object.next();
            hashMap.put(l2.a(), l2);
        }
        return hashMap;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final JSONObject c() {
        JSONObject jSONObject = new JSONObject();
        try {
            JSONArray jSONArray = new JSONArray();
            Collections.sort(this.i, r);
            ArrayList<Scope> arrayList = this.i;
            int n2 = arrayList.size();
            for (int i2 = 0; i2 < n2; ++i2) {
                Scope scope = arrayList.get(i2);
                jSONArray.put((Object)scope.a());
            }
            jSONObject.put("scopes", (Object)jSONArray);
            if (this.j != null) {
                jSONObject.put("accountName", (Object)this.j.name);
            }
            jSONObject.put("idTokenRequested", this.k);
            jSONObject.put("forceCodeForRefreshToken", this.m);
            jSONObject.put("serverAuthRequested", this.l);
            if (!TextUtils.isEmpty((CharSequence)this.n)) {
                jSONObject.put("serverClientId", (Object)this.n);
            }
            if (!TextUtils.isEmpty((CharSequence)this.o)) {
                jSONObject.put("hostedDomain", (Object)this.o);
            }
            return jSONObject;
        }
        catch (JSONException jSONException) {
            throw new RuntimeException((Throwable)jSONException);
        }
    }

    public final ArrayList<Scope> a() {
        return new ArrayList<Scope>(this.i);
    }

    public final String b() {
        return this.c().toString();
    }

    public boolean equals(Object object) {
        block5 : {
            boolean bl2;
            boolean bl3;
            block7 : {
                block6 : {
                    if (object == null) {
                        return false;
                    }
                    try {
                        object = (GoogleSignInOptions)object;
                        if (this.p.size() > 0) break block5;
                        if (object.p.size() <= 0) break block6;
                        return false;
                    }
                    catch (ClassCastException classCastException) {
                        return false;
                    }
                }
                if (this.i.size() != object.a().size()) break block5;
                if (this.i.containsAll(object.a())) break block7;
                return false;
            }
            if (!(this.j == null ? object.j == null : this.j.equals((Object)object.j)) || !(TextUtils.isEmpty((CharSequence)this.n) ? TextUtils.isEmpty((CharSequence)object.n) : this.n.equals(object.n)) || this.m != object.m || this.k != object.k || (bl3 = this.l) != (bl2 = object.l)) break block5;
            return true;
        }
        return false;
    }

    public int hashCode() {
        ArrayList<String> arrayList = new ArrayList<String>();
        ArrayList<Scope> arrayList2 = this.i;
        int n2 = arrayList2.size();
        for (int i2 = 0; i2 < n2; ++i2) {
            Scope scope = arrayList2.get(i2);
            arrayList.add(scope.a());
        }
        Collections.sort(arrayList);
        return new n().a(arrayList).a((Object)this.j).a(this.n).a(this.m).a(this.k).a(this.l).a();
    }

    public void writeToParcel(Parcel parcel, int n2) {
        int n3 = xc.a(parcel);
        xc.a(parcel, 1, this.h);
        xc.c(parcel, 2, this.a(), false);
        xc.a(parcel, 3, (Parcelable)this.j, n2, false);
        xc.a(parcel, 4, this.k);
        xc.a(parcel, 5, this.l);
        xc.a(parcel, 6, this.m);
        xc.a(parcel, 7, this.n, false);
        xc.a(parcel, 8, this.o, false);
        xc.c(parcel, 9, this.p, false);
        xc.a(parcel, n3);
    }

    public static final class a {
        private Set<Scope> a = new HashSet<Scope>();
        private boolean b;
        private boolean c;
        private boolean d;
        private String e;
        private Account f;
        private String g;
        private Map<Integer, l> h = new HashMap<Integer, l>();

        public a() {
        }

        public a(GoogleSignInOptions googleSignInOptions) {
            ah.a(googleSignInOptions);
            this.a = new HashSet<Scope>(googleSignInOptions.i);
            this.b = googleSignInOptions.l;
            this.c = googleSignInOptions.m;
            this.d = googleSignInOptions.k;
            this.e = googleSignInOptions.n;
            this.f = googleSignInOptions.j;
            this.g = googleSignInOptions.o;
            this.h = GoogleSignInOptions.b(googleSignInOptions.p);
        }

        public final a a() {
            this.a.add(GoogleSignInOptions.c);
            return this;
        }

        public final /* varargs */ a a(Scope scope, Scope ... arrscope) {
            this.a.add(scope);
            this.a.addAll(Arrays.asList(arrscope));
            return this;
        }

        public final a b() {
            this.a.add(GoogleSignInOptions.a);
            return this;
        }

        public final GoogleSignInOptions c() {
            if (this.a.contains(GoogleSignInOptions.e) && this.a.contains(GoogleSignInOptions.d)) {
                this.a.remove(GoogleSignInOptions.d);
            }
            if (this.d && (this.f == null || !this.a.isEmpty())) {
                this.a();
            }
            return new GoogleSignInOptions(3, new ArrayList<Scope>(this.a), this.f, this.d, this.b, this.c, this.e, this.g, this.h, null);
        }
    }

}

