/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Bundle
 *  android.os.IBinder
 *  android.os.IInterface
 *  android.os.Looper
 *  android.os.Parcelable
 *  android.os.RemoteException
 *  android.text.TextUtils
 */
package com.google.android.gms.internal;

import android.content.Context;
import android.os.Bundle;
import android.os.IBinder;
import android.os.IInterface;
import android.os.Looper;
import android.os.Parcelable;
import android.os.RemoteException;
import android.text.TextUtils;
import com.google.android.gms.cast.CastDevice;
import com.google.android.gms.cast.d;
import com.google.android.gms.cast.e;
import com.google.android.gms.cast.g;
import com.google.android.gms.cast.n;
import com.google.android.gms.common.a;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.api.f;
import com.google.android.gms.common.api.internal.cq;
import com.google.android.gms.common.internal.BinderWrapper;
import com.google.android.gms.common.internal.bd;
import com.google.android.gms.common.internal.c;
import com.google.android.gms.internal.vf;
import com.google.android.gms.internal.vq;
import com.google.android.gms.internal.vr;
import com.google.android.gms.internal.vw;
import com.google.android.gms.internal.vx;
import com.google.android.gms.internal.wb;
import com.google.android.gms.internal.wc;
import com.google.android.gms.internal.wi;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.atomic.AtomicLong;

public final class vp
extends c<wb> {
    private static final Object A;
    private static final Object B;
    private static final wi d;
    private d e;
    private final CastDevice f;
    private final e.d g;
    private final Map<String, e.e> h;
    private final long i;
    private final Bundle j;
    private vr k;
    private String l;
    private boolean m;
    private boolean n;
    private boolean o;
    private boolean p;
    private double q;
    private int r;
    private int s;
    private final AtomicLong t;
    private String u;
    private String v;
    private Bundle w;
    private final Map<Long, cq<Status>> x;
    private cq<e.a> y;
    private cq<Status> z;

    static {
        d = new wi("CastClientImpl");
        A = new Object();
        B = new Object();
    }

    public vp(Context context, Looper looper, bd bd2, CastDevice castDevice, long l2, e.d d2, Bundle bundle, f.b b2, f.c c2) {
        super(context, looper, 10, bd2, b2, c2);
        this.f = castDevice;
        this.g = d2;
        this.i = l2;
        this.j = bundle;
        this.h = new HashMap<String, e.e>();
        this.t = new AtomicLong(0L);
        this.x = new HashMap<Long, cq<Status>>();
        this.B();
    }

    static /* synthetic */ Object A() {
        return B;
    }

    private final void B() {
        this.p = false;
        this.r = -1;
        this.s = -1;
        this.e = null;
        this.l = null;
        this.q = 0.0;
        this.m = false;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void C() {
        d.a("removing all MessageReceivedCallbacks", new Object[0]);
        Map<String, e.e> map = this.h;
        synchronized (map) {
            this.h.clear();
            return;
        }
    }

    private final void D() {
        if (this.p && this.k != null && !this.k.b()) {
            return;
        }
        throw new IllegalStateException("Not connected to a device");
    }

    static /* synthetic */ d a(vp vp2, d d2) {
        vp2.e = d2;
        return d2;
    }

    static /* synthetic */ cq a(vp vp2, cq cq2) {
        vp2.y = null;
        return null;
    }

    static /* synthetic */ String a(vp vp2, String string2) {
        vp2.u = string2;
        return string2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    private final void a(cq<e.a> cq2) {
        Object object = A;
        synchronized (object) {
            if (this.y != null) {
                this.y.a(new vq(new Status(2002)));
            }
            this.y = cq2;
            return;
        }
    }

    @Override
    private final void a(vf object) {
        boolean bl2;
        if (!vw.a(object = object.a(), this.l)) {
            this.l = object;
            bl2 = true;
        } else {
            bl2 = false;
        }
        d.a("hasChanged=%b, mFirstApplicationStatusUpdate=%b", bl2, this.n);
        if (this.g != null && (bl2 || this.n)) {
            this.g.a();
        }
        this.n = false;
    }

    static /* synthetic */ void a(vp vp2) {
        vp2.B();
    }

    static /* synthetic */ void a(vp vp2, vf vf2) {
        vp2.a(vf2);
    }

    static /* synthetic */ void a(vp vp2, vx vx2) {
        vp2.a(vx2);
    }

    @Override
    private final void a(vx vx2) {
        int n2;
        double d2;
        boolean bl2;
        d d3 = vx2.e();
        if (!vw.a(d3, this.e)) {
            this.e = d3;
            this.g.a(this.e);
        }
        if (!Double.isNaN(d2 = vx2.a()) && Math.abs(d2 - this.q) > 1.0E-7) {
            this.q = d2;
            bl2 = true;
        } else {
            bl2 = false;
        }
        boolean bl3 = vx2.b();
        if (bl3 != this.m) {
            this.m = bl3;
            bl2 = true;
        }
        d.a("hasVolumeChanged=%b, mFirstDeviceStatusUpdate=%b", bl2, this.o);
        if (this.g != null && (bl2 || this.o)) {
            this.g.b();
        }
        if ((n2 = vx2.c()) != this.r) {
            this.r = n2;
            bl2 = true;
        } else {
            bl2 = false;
        }
        d.a("hasActiveInputChanged=%b, mFirstDeviceStatusUpdate=%b", bl2, this.o);
        if (this.g != null && (bl2 || this.o)) {
            this.g.b(this.r);
        }
        if ((n2 = vx2.d()) != this.s) {
            this.s = n2;
            bl2 = true;
        } else {
            bl2 = false;
        }
        d.a("hasStandbyStateChanged=%b, mFirstDeviceStatusUpdate=%b", bl2, this.o);
        if (this.g != null && (bl2 || this.o)) {
            this.g.c(this.s);
        }
        this.o = false;
    }

    static /* synthetic */ cq b(vp vp2) {
        return vp2.y;
    }

    static /* synthetic */ cq b(vp vp2, cq cq2) {
        vp2.z = null;
        return null;
    }

    static /* synthetic */ String b(vp vp2, String string2) {
        vp2.v = string2;
        return string2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void b(cq<Status> cq2) {
        Object object = B;
        synchronized (object) {
            if (this.z != null) {
                cq2.a(new Status(2001));
                return;
            }
            this.z = cq2;
            return;
        }
    }

    static /* synthetic */ e.d c(vp vp2) {
        return vp2.g;
    }

    static /* synthetic */ String c(vp vp2, String string2) {
        vp2.l = string2;
        return string2;
    }

    static /* synthetic */ Map d(vp vp2) {
        return vp2.h;
    }

    static /* synthetic */ CastDevice e(vp vp2) {
        return vp2.f;
    }

    static /* synthetic */ wi e() {
        return d;
    }

    static /* synthetic */ Map f(vp vp2) {
        return vp2.x;
    }

    static /* synthetic */ cq g(vp vp2) {
        return vp2.z;
    }

    static /* synthetic */ Object z() {
        return A;
    }

    @Override
    public final Bundle a() {
        if (this.w != null) {
            Bundle bundle = this.w;
            this.w = null;
            return bundle;
        }
        return super.a();
    }

    @Override
    protected final /* synthetic */ IInterface a(IBinder iBinder) {
        if (iBinder == null) {
            return null;
        }
        IInterface iInterface = iBinder.queryLocalInterface("com.google.android.gms.cast.internal.ICastDeviceController");
        if (iInterface instanceof wb) {
            return (wb)iInterface;
        }
        return new wc(iBinder);
    }

    @Override
    protected final void a(int n2, IBinder iBinder, Bundle bundle, int n3) {
        d.a("in onPostInitHandler; statusCode=%d", n2);
        if (n2 != 0 && n2 != 1001) {
            this.p = false;
        } else {
            this.p = true;
            this.n = true;
            this.o = true;
        }
        int n4 = n2;
        if (n2 == 1001) {
            this.w = new Bundle();
            this.w.putBoolean("com.google.android.gms.cast.EXTRA_APP_NO_LONGER_RUNNING", true);
            n4 = 0;
        }
        super.a(n4, iBinder, bundle, n3);
    }

    @Override
    public final void a(a a2) {
        super.a(a2);
        this.C();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    @Override
    public final void a(String string2) {
        if (TextUtils.isEmpty((CharSequence)string2)) throw new IllegalArgumentException("Channel namespace cannot be null or empty");
        Map<String, e.e> map = this.h;
        // MONITORENTER : map
        e.e e2 = this.h.remove(string2);
        // MONITOREXIT : map
        if (e2 == null) return;
        try {
            ((wb)super.x()).c(string2);
            return;
        }
        catch (IllegalStateException illegalStateException) {
            d.a(illegalStateException, "Error unregistering namespace (%s): %s", string2, illegalStateException.getMessage());
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a(String string2, e.e e2) {
        vw.a(string2);
        this.a(string2);
        if (e2 != null) {
            Map<String, e.e> map = this.h;
            synchronized (map) {
                this.h.put(string2, e2);
            }
            ((wb)super.x()).b(string2);
            return;
        }
    }

    public final void a(String string2, g g2, cq<e.a> cq2) {
        this.a(cq2);
        ((wb)super.x()).a(string2, g2);
    }

    public final void a(String string2, cq<Status> cq2) {
        this.b(cq2);
        ((wb)super.x()).a(string2);
    }

    public final void a(String string2, String string3, n n2, cq<e.a> object) {
        this.a((cq<e.a>)object);
        object = n2;
        if (n2 == null) {
            object = new n();
        }
        ((wb)super.x()).a(string2, string3, (n)object);
    }

    public final void a(String string2, String string3, cq<Status> cq2) {
        if (!TextUtils.isEmpty((CharSequence)string3)) {
            if (string3.length() <= 65536) {
                vw.a(string2);
                this.D();
                long l2 = this.t.incrementAndGet();
                try {
                    this.x.put(l2, cq2);
                    ((wb)super.x()).a(string2, string3, l2);
                    return;
                }
                catch (Throwable throwable) {
                    this.x.remove(l2);
                    throw throwable;
                }
            }
            throw new IllegalArgumentException("Message exceeds maximum size");
        }
        throw new IllegalArgumentException("The message payload cannot be null or empty");
    }

    @Override
    protected final String b() {
        return "com.google.android.gms.cast.internal.ICastDeviceController";
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public final void f() {
        Throwable throwable2222;
        d.a("disconnect(); ServiceListener=%s, isConnected=%b", this.k, this.g());
        vr vr2 = this.k;
        this.k = null;
        if (vr2 != null && vr2.a() != null) {
            this.C();
            ((wb)super.x()).a();
            super.f();
            return;
        }
        d.a("already disposed, so short-circuiting", new Object[0]);
        return;
        {
            catch (Throwable throwable2222) {
            }
            catch (RemoteException | IllegalStateException object) {}
            {
                d.a(object, "Error while disconnecting the controller interface: %s", object.getMessage());
            }
            super.f();
            return;
        }
        super.f();
        throw throwable2222;
    }

    @Override
    protected final String j_() {
        return "com.google.android.gms.cast.service.BIND_CAST_DEVICE_CONTROLLER_SERVICE";
    }

    @Override
    protected final Bundle v() {
        Bundle bundle = new Bundle();
        d.a("getRemoteService(): mLastApplicationId=%s, mLastSessionId=%s", this.u, this.v);
        this.f.a(bundle);
        bundle.putLong("com.google.android.gms.cast.EXTRA_CAST_FLAGS", this.i);
        if (this.j != null) {
            bundle.putAll(this.j);
        }
        this.k = new vr(this);
        bundle.putParcelable("listener", (Parcelable)new BinderWrapper(this.k.asBinder()));
        if (this.u != null) {
            bundle.putString("last_application_id", this.u);
            if (this.v != null) {
                bundle.putString("last_session_id", this.v);
            }
        }
        return bundle;
    }
}

