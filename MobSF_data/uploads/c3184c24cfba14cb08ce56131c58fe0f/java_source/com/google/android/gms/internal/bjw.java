/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.bjs;
import com.google.android.gms.internal.bju;
import java.nio.charset.Charset;
import java.util.Arrays;

public final class bjw {
    protected static final Charset a = Charset.forName("UTF-8");
    public static final Object b;
    private static Charset c;

    static {
        c = Charset.forName("ISO-8859-1");
        b = new Object();
    }

    public static int a(long[] arrl) {
        if (arrl != null && arrl.length != 0) {
            return Arrays.hashCode(arrl);
        }
        return 0;
    }

    public static int a(Object[] arrobject) {
        int n2 = arrobject == null ? 0 : arrobject.length;
        int n3 = 0;
        for (int i2 = 0; i2 < n2; ++i2) {
            Object object = arrobject[i2];
            int n4 = n3;
            if (object != null) {
                n4 = n3 * 31 + object.hashCode();
            }
            n3 = n4;
        }
        return n3;
    }

    public static void a(bjs bjs2, bjs bjs3) {
        if (bjs2.X != null) {
            bjs3.X = (bju)bjs2.X.clone();
        }
    }

    public static boolean a(long[] arrl, long[] arrl2) {
        if (arrl != null && arrl.length != 0) {
            return Arrays.equals(arrl, arrl2);
        }
        if (arrl2 != null && arrl2.length != 0) {
            return false;
        }
        return true;
    }

    public static boolean a(Object[] arrobject, Object[] arrobject2) {
        int n2 = arrobject == null ? 0 : arrobject.length;
        int n3 = arrobject2 == null ? 0 : arrobject2.length;
        int n4 = 0;
        int n5 = 0;
        do {
            int n6 = n5;
            if (n4 < n2) {
                n6 = n5;
                if (arrobject[n4] == null) {
                    ++n4;
                    continue;
                }
            }
            while (n6 < n3 && arrobject2[n6] == null) {
                ++n6;
            }
            n5 = n4 >= n2 ? 1 : 0;
            int n7 = n6 >= n3 ? 1 : 0;
            if (n5 != 0 && n7 != 0) {
                return true;
            }
            if (n5 != n7) {
                return false;
            }
            if (!arrobject[n4].equals(arrobject2[n6])) {
                return false;
            }
            ++n4;
            n5 = n6 + 1;
        } while (true);
    }
}

