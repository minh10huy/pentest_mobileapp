/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.content.Context
 *  android.graphics.SurfaceTexture
 *  android.graphics.SurfaceTexture$OnFrameAvailableListener
 *  android.opengl.GLES20
 *  android.opengl.GLUtils
 *  android.util.Log
 *  javax.microedition.khronos.egl.EGL10
 *  javax.microedition.khronos.egl.EGLConfig
 *  javax.microedition.khronos.egl.EGLContext
 *  javax.microedition.khronos.egl.EGLDisplay
 *  javax.microedition.khronos.egl.EGLSurface
 */
package com.google.android.gms.internal;

import android.annotation.TargetApi;
import android.content.Context;
import android.graphics.SurfaceTexture;
import android.opengl.GLES20;
import android.opengl.GLUtils;
import android.util.Log;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.mw;
import com.google.android.gms.internal.my;
import java.nio.Buffer;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import java.util.concurrent.CountDownLatch;
import javax.microedition.khronos.egl.EGL10;
import javax.microedition.khronos.egl.EGLConfig;
import javax.microedition.khronos.egl.EGLContext;
import javax.microedition.khronos.egl.EGLDisplay;
import javax.microedition.khronos.egl.EGLSurface;

@ak
@TargetApi(value=14)
public final class mz
extends Thread
implements SurfaceTexture.OnFrameAvailableListener,
my {
    private static final float[] a = new float[]{-1.0f, -1.0f, -1.0f, 1.0f, -1.0f, -1.0f, -1.0f, 1.0f, -1.0f, 1.0f, 1.0f, -1.0f};
    private volatile boolean A;
    private volatile boolean B;
    private final mw b;
    private final float[] c;
    private final float[] d;
    private final float[] e;
    private final float[] f;
    private final float[] g;
    private final float[] h;
    private final float[] i;
    private float j;
    private float k;
    private float l;
    private int m;
    private int n;
    private SurfaceTexture o;
    private SurfaceTexture p;
    private int q;
    private int r;
    private int s;
    private FloatBuffer t = ByteBuffer.allocateDirect(a.length << 2).order(ByteOrder.nativeOrder()).asFloatBuffer();
    private final CountDownLatch u;
    private final Object v;
    private EGL10 w;
    private EGLDisplay x;
    private EGLContext y;
    private EGLSurface z;

    public mz(Context context) {
        super("SphericalVideoProcessor");
        this.t.put(a).position(0);
        this.c = new float[9];
        this.d = new float[9];
        this.e = new float[9];
        this.f = new float[9];
        this.g = new float[9];
        this.h = new float[9];
        this.i = new float[9];
        this.j = Float.NaN;
        this.b = new mw(context);
        this.b.a(this);
        this.u = new CountDownLatch(1);
        this.v = new Object();
    }

    private static int a(int n2, String object) {
        int n3 = GLES20.glCreateShader((int)n2);
        mz.a("createShader");
        int n4 = n3;
        if (n3 != 0) {
            GLES20.glShaderSource((int)n3, (String)object);
            mz.a("shaderSource");
            GLES20.glCompileShader((int)n3);
            mz.a("compileShader");
            object = new int[1];
            GLES20.glGetShaderiv((int)n3, (int)35713, (int[])object, (int)0);
            mz.a("getShaderiv");
            n4 = n3;
            if (object[0] == 0) {
                object = new StringBuilder(37);
                object.append("Could not compile shader ");
                object.append(n2);
                object.append(":");
                Log.e((String)"SphericalVideoRenderer", (String)object.toString());
                Log.e((String)"SphericalVideoRenderer", (String)GLES20.glGetShaderInfoLog((int)n3));
                GLES20.glDeleteShader((int)n3);
                mz.a("deleteShader");
                n4 = 0;
            }
        }
        return n4;
    }

    private static void a(String string2) {
        int n2 = GLES20.glGetError();
        if (n2 != 0) {
            StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 21);
            stringBuilder.append(string2);
            stringBuilder.append(": glError ");
            stringBuilder.append(n2);
            Log.e((String)"SphericalVideoRenderer", (String)stringBuilder.toString());
        }
    }

    private static void a(float[] arrf, float f2) {
        arrf[0] = 1.0f;
        arrf[1] = 0.0f;
        arrf[2] = 0.0f;
        arrf[3] = 0.0f;
        double d2 = f2;
        arrf[4] = (float)Math.cos(d2);
        arrf[5] = (float)(- Math.sin(d2));
        arrf[6] = 0.0f;
        arrf[7] = (float)Math.sin(d2);
        arrf[8] = (float)Math.cos(d2);
    }

    private static void a(float[] arrf, float[] arrf2, float[] arrf3) {
        arrf[0] = arrf2[0] * arrf3[0] + arrf2[1] * arrf3[3] + arrf2[2] * arrf3[6];
        arrf[1] = arrf2[0] * arrf3[1] + arrf2[1] * arrf3[4] + arrf2[2] * arrf3[7];
        arrf[2] = arrf2[0] * arrf3[2] + arrf2[1] * arrf3[5] + arrf2[2] * arrf3[8];
        arrf[3] = arrf2[3] * arrf3[0] + arrf2[4] * arrf3[3] + arrf2[5] * arrf3[6];
        arrf[4] = arrf2[3] * arrf3[1] + arrf2[4] * arrf3[4] + arrf2[5] * arrf3[7];
        arrf[5] = arrf2[3] * arrf3[2] + arrf2[4] * arrf3[5] + arrf2[5] * arrf3[8];
        arrf[6] = arrf2[6] * arrf3[0] + arrf2[7] * arrf3[3] + arrf2[8] * arrf3[6];
        arrf[7] = arrf2[6] * arrf3[1] + arrf2[7] * arrf3[4] + arrf2[8] * arrf3[7];
        arrf[8] = arrf2[6] * arrf3[2] + arrf2[7] * arrf3[5] + arrf2[8] * arrf3[8];
    }

    private static void b(float[] arrf, float f2) {
        double d2 = f2;
        arrf[0] = (float)Math.cos(d2);
        arrf[1] = (float)(- Math.sin(d2));
        arrf[2] = 0.0f;
        arrf[3] = (float)Math.sin(d2);
        arrf[4] = (float)Math.cos(d2);
        arrf[5] = 0.0f;
        arrf[6] = 0.0f;
        arrf[7] = 0.0f;
        arrf[8] = 1.0f;
    }

    private final void d() {
        float f2;
        float[] arrf;
        while (this.s > 0) {
            this.o.updateTexImage();
            --this.s;
        }
        if (this.b.a(this.c)) {
            if (Float.isNaN(this.j)) {
                float[] arrf2;
                arrf = this.c;
                float[] arrf3 = arrf2 = new float[3];
                arrf3[0] = 0.0f;
                arrf3[1] = 1.0f;
                arrf3[2] = 0.0f;
                float[] arrf4 = new float[]{arrf[0] * arrf2[0] + arrf[1] * arrf2[1] + arrf[2] * arrf2[2], arrf[3] * arrf2[0] + arrf[4] * arrf2[1] + arrf[5] * arrf2[2], arrf[6] * arrf2[0] + arrf[7] * arrf2[1] + arrf[8] * arrf2[2]};
                this.j = - (float)Math.atan2(arrf4[1], arrf4[0]) - 1.5707964f;
            }
            arrf = this.h;
            f2 = this.j + this.k;
        } else {
            mz.a(this.c, -1.5707964f);
            arrf = this.h;
            f2 = this.k;
        }
        mz.b(arrf, f2);
        mz.a(this.d, 1.5707964f);
        mz.a(this.e, this.h, this.d);
        mz.a(this.f, this.c, this.e);
        mz.a(this.g, this.l);
        mz.a(this.i, this.g, this.f);
        GLES20.glUniformMatrix3fv((int)this.r, (int)1, (boolean)false, (float[])this.i, (int)0);
        GLES20.glDrawArrays((int)5, (int)0, (int)4);
        mz.a("drawArrays");
        GLES20.glFinish();
        this.w.eglSwapBuffers(this.x, this.z);
    }

    private final boolean e() {
        boolean bl2;
        EGLSurface eGLSurface = this.z;
        boolean bl3 = bl2 = false;
        if (eGLSurface != null) {
            bl3 = bl2;
            if (this.z != EGL10.EGL_NO_SURFACE) {
                bl3 = this.w.eglMakeCurrent(this.x, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);
                bl3 = this.w.eglDestroySurface(this.x, this.z) | (bl3 | false);
                this.z = null;
            }
        }
        bl2 = bl3;
        if (this.y != null) {
            bl2 = bl3 | this.w.eglDestroyContext(this.x, this.y);
            this.y = null;
        }
        bl3 = bl2;
        if (this.x != null) {
            bl3 = bl2 | this.w.eglTerminate(this.x);
            this.x = null;
        }
        return bl3;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a() {
        Object object = this.v;
        synchronized (object) {
            this.v.notifyAll();
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     */
    public final void a(float f2, float f3) {
        int n2;
        if (this.n > this.m) {
            f2 = f2 * 1.7453293f / (float)this.n;
            f3 *= 1.7453293f;
            n2 = this.n;
        } else {
            f2 = f2 * 1.7453293f / (float)this.m;
            f3 *= 1.7453293f;
            n2 = this.m;
        }
        this.k -= f2;
        this.l -= (f3 /= (float)n2);
        if (this.l < -1.5707964f) {
            this.l = -1.5707964f;
        }
        if (this.l > 1.5707964f) {
            this.l = 1.5707964f;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a(int n2, int n3) {
        Object object = this.v;
        synchronized (object) {
            this.n = n2;
            this.m = n3;
            this.A = true;
            this.v.notifyAll();
            return;
        }
    }

    public final void a(SurfaceTexture surfaceTexture, int n2, int n3) {
        this.n = n2;
        this.m = n3;
        this.p = surfaceTexture;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void b() {
        Object object = this.v;
        synchronized (object) {
            this.B = true;
            this.p = null;
            this.v.notifyAll();
            return;
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public final SurfaceTexture c() {
        if (this.p == null) {
            return null;
        }
        try {
            this.u.await();
            do {
                return this.o;
                break;
            } while (true);
        }
        catch (InterruptedException interruptedException) {
            return this.o;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void onFrameAvailable(SurfaceTexture object) {
        ++this.s;
        object = this.v;
        synchronized (object) {
            this.v.notifyAll();
            return;
        }
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    @Override
    public final void run() {
        block26 : {
            if (this.p == null) {
                he.c("SphericalVideoProcessor started with no output texture.");
                this.u.countDown();
                return;
            }
            this.w = (EGL10)EGLContext.getEGL();
            this.x = this.w.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);
            if (this.x == EGL10.EGL_NO_DISPLAY || !this.w.eglInitialize(this.x, (int[])(var6_1 = new int[2]))) ** GOTO lbl-1000
            var7_6 = new EGLConfig[1];
            var6_1 = new int[1];
            var6_1 = this.w.eglChooseConfig(this.x, new int[]{12352, 4, 12324, 8, 12323, 8, 12322, 8, 12325, 16, 12344}, var7_6, 1, (int[])var6_1) != false && var6_1[0] > 0 ? var7_6[0] : null;
            if (var6_1 == null) ** GOTO lbl-1000
            this.y = this.w.eglCreateContext(this.x, (EGLConfig)var6_1, EGL10.EGL_NO_CONTEXT, new int[]{12440, 2, 12344});
            if (this.y == null || this.y == EGL10.EGL_NO_CONTEXT) ** GOTO lbl-1000
            this.z = this.w.eglCreateWindowSurface(this.x, (EGLConfig)var6_1, (Object)this.p, null);
            if (this.z == null || this.z == EGL10.EGL_NO_SURFACE || !this.w.eglMakeCurrent(this.x, this.z, this.z, this.y)) lbl-1000: // 4 sources:
            {
                var1_7 = 0;
            } else {
                var1_7 = 1;
            }
            var6_1 = btk.bb;
            var6_1 = ((String)bqj.f().a(var6_1)).equals(var6_1.b()) == false ? (String)bqj.f().a(var6_1) : "attribute highp vec3 aPosition;varying vec3 pos;void main() {  gl_Position = vec4(aPosition, 1.0);  pos = aPosition;}";
            var4_8 = mz.a(35633, (String)var6_1);
            if (var4_8 == 0) ** GOTO lbl45
            var6_1 = btk.bc;
            var6_1 = ((String)bqj.f().a(var6_1)).equals(var6_1.b()) == false ? (String)bqj.f().a(var6_1) : "#extension GL_OES_EGL_image_external : require\n#define INV_PI 0.3183\nprecision highp float;varying vec3 pos;uniform samplerExternalOES uSplr;uniform mat3 uVMat;uniform float uFOVx;uniform float uFOVy;void main() {  vec3 ray = vec3(pos.x * tan(uFOVx), pos.y * tan(uFOVy), -1);  ray = (uVMat * ray).xyz;  ray = normalize(ray);  vec2 texCrd = vec2(    0.5 + atan(ray.x, - ray.z) * INV_PI * 0.5, acos(ray.y) * INV_PI);  gl_FragColor = vec4(texture2D(uSplr, texCrd).xyz, 1.0);}";
            var5_11 = mz.a(35632, (String)var6_1);
            if (var5_11 == 0) ** GOTO lbl45
            var3_10 /* !! */  = GLES20.glCreateProgram();
            mz.a("createProgram");
            var2_9 = var3_10 /* !! */ ;
            if (var3_10 /* !! */  == 0) break block26;
            GLES20.glAttachShader((int)var3_10 /* !! */ , (int)var4_8);
            mz.a("attachShader");
            GLES20.glAttachShader((int)var3_10 /* !! */ , (int)var5_11);
            mz.a("attachShader");
            GLES20.glLinkProgram((int)var3_10 /* !! */ );
            mz.a("linkProgram");
            var6_1 = new int[1];
            GLES20.glGetProgramiv((int)var3_10 /* !! */ , (int)35714, (int[])var6_1, (int)0);
            mz.a("getProgramiv");
            if (var6_1[0] != true) {
                Log.e((String)"SphericalVideoRenderer", (String)"Could not link program: ");
                Log.e((String)"SphericalVideoRenderer", (String)GLES20.glGetProgramInfoLog((int)var3_10 /* !! */ ));
                GLES20.glDeleteProgram((int)var3_10 /* !! */ );
                mz.a("deleteProgram");
lbl45: // 3 sources:
                var2_9 = 0;
            } else {
                GLES20.glValidateProgram((int)var3_10 /* !! */ );
                mz.a("validateProgram");
                var2_9 = var3_10 /* !! */ ;
            }
        }
        this.q = var2_9;
        GLES20.glUseProgram((int)this.q);
        mz.a("useProgram");
        var2_9 = GLES20.glGetAttribLocation((int)this.q, (String)"aPosition");
        GLES20.glVertexAttribPointer((int)var2_9, (int)3, (int)5126, (boolean)false, (int)12, (Buffer)this.t);
        mz.a("vertexAttribPointer");
        GLES20.glEnableVertexAttribArray((int)var2_9);
        mz.a("enableVertexAttribArray");
        var6_1 = new int[1];
        GLES20.glGenTextures((int)1, (int[])var6_1, (int)0);
        mz.a("genTextures");
        var3_10 /* !! */  = (int)var6_1[0];
        GLES20.glBindTexture((int)36197, (int)var3_10 /* !! */ );
        mz.a("bindTextures");
        GLES20.glTexParameteri((int)36197, (int)10240, (int)9729);
        mz.a("texParameteri");
        GLES20.glTexParameteri((int)36197, (int)10241, (int)9729);
        mz.a("texParameteri");
        GLES20.glTexParameteri((int)36197, (int)10242, (int)33071);
        mz.a("texParameteri");
        GLES20.glTexParameteri((int)36197, (int)10243, (int)33071);
        mz.a("texParameteri");
        this.r = GLES20.glGetUniformLocation((int)this.q, (String)"uVMat");
        GLES20.glUniformMatrix3fv((int)this.r, (int)1, (boolean)false, (float[])new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f}, (int)0);
        var2_9 = this.q != 0 ? 1 : 0;
        if (var1_7 == 0 || var2_9 == 0) ** GOTO lbl83
        this.o = new SurfaceTexture(var3_10 /* !! */ );
        this.o.setOnFrameAvailableListener((SurfaceTexture.OnFrameAvailableListener)this);
        this.u.countDown();
        this.b.a();
        try {
            block27 : {
                break block27;
lbl83: // 1 sources:
                var6_1 = String.valueOf(GLUtils.getEGLErrorString((int)this.w.eglGetError()));
                var6_1 = var6_1.length() != 0 ? "EGL initialization failed: ".concat((String)var6_1) : new String("EGL initialization failed: ");
                he.c((String)var6_1);
                av.i().a(new Throwable((String)var6_1), "SphericalVideoProcessor.run.1");
                this.e();
                this.u.countDown();
                return;
            }
            this.A = true;
            do {
                if (!this.B) {
                    block25 : {
                        this.d();
                        if (this.A) {
                            GLES20.glViewport((int)0, (int)0, (int)this.n, (int)this.m);
                            mz.a("viewport");
                            var1_7 = GLES20.glGetUniformLocation((int)this.q, (String)"uFOVx");
                            var2_9 = GLES20.glGetUniformLocation((int)this.q, (String)"uFOVy");
                            if (this.n > this.m) {
                                GLES20.glUniform1f((int)var1_7, (float)0.87266463f);
                                GLES20.glUniform1f((int)var2_9, (float)((float)this.m * 0.87266463f / (float)this.n));
                            } else {
                                GLES20.glUniform1f((int)var1_7, (float)((float)this.n * 0.87266463f / (float)this.m));
                                GLES20.glUniform1f((int)var2_9, (float)0.87266463f);
                            }
                            this.A = false;
                        }
                        var6_1 = this.v;
                        // MONITORENTER : var6_1
                        if (this.B || this.A || this.s != 0) break block25;
                        this.v.wait();
                    }
                    // MONITOREXIT : var6_1
                    continue;
                }
                this.b.b();
                this.o.setOnFrameAvailableListener(null);
                this.o = null;
                this.e();
                return;
                catch (InterruptedException var6_5) {
                    continue;
                }
                break;
            } while (true);
        }
        catch (IllegalStateException var6_4) {}
        {
            catch (Throwable var6_2) {
            }
            catch (Throwable var6_3) {}
            {
                he.b("SphericalVideoProcessor died.", var6_3);
                av.i().a(var6_3, "SphericalVideoProcessor.run.2");
                this.b.b();
            }
            this.o.setOnFrameAvailableListener(null);
            this.o = null;
            this.e();
            return;
        }
        this.b.b();
        this.o.setOnFrameAvailableListener(null);
        this.o = null;
        this.e();
        throw var6_2;
        {
            he.e("SphericalVideoProcessor halted unexpectedly.");
            this.b.b();
        }
        this.o.setOnFrameAvailableListener(null);
        this.o = null;
        this.e();
    }
}

