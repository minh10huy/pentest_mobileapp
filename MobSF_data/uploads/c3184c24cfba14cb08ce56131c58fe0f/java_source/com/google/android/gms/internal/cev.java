/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Handler
 *  org.json.JSONObject
 */
package com.google.android.gms.internal;

import android.content.Context;
import android.os.Handler;
import com.google.android.gms.ads.internal.ad;
import com.google.android.gms.internal.agk;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bj;
import com.google.android.gms.internal.bn;
import com.google.android.gms.internal.boc;
import com.google.android.gms.internal.bp;
import com.google.android.gms.internal.bpu;
import com.google.android.gms.internal.bpy;
import com.google.android.gms.internal.btx;
import com.google.android.gms.internal.bva;
import com.google.android.gms.internal.caw;
import com.google.android.gms.internal.cax;
import com.google.android.gms.internal.caz;
import com.google.android.gms.internal.cbq;
import com.google.android.gms.internal.ceo;
import com.google.android.gms.internal.cew;
import com.google.android.gms.internal.cez;
import com.google.android.gms.internal.fk;
import com.google.android.gms.internal.gl;
import com.google.android.gms.internal.gm;
import com.google.android.gms.internal.ha;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.hm;
import com.google.android.gms.internal.hs;
import com.google.android.gms.internal.jb;
import com.google.android.gms.internal.nu;
import java.util.List;
import java.util.concurrent.CancellationException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Future;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import org.json.JSONObject;

@ak
public final class cev
extends ha {
    private final ceo a;
    private final bn b;
    private final gm c;
    private final cez d;
    private final Object e = new Object();
    private Future<gl> f;

    public cev(Context context, ad ad2, gm gm2, agk agk2, ceo ceo2, btx btx2) {
        this(gm2, ceo2, new cez(context, ad2, new jb(context), agk2, gm2, btx2));
    }

    private cev(gm gm2, ceo ceo2, cez cez2) {
        this.c = gm2;
        this.b = gm2.b;
        this.a = ceo2;
        this.d = cez2;
    }

    static /* synthetic */ ceo a(cev cev2) {
        return cev2.a;
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    @Override
    public final void a() {
        Object object;
        int n2;
        block9 : {
            object = null;
            Object object2 = this.e;
            // MONITORENTER : object2
            cez cez2 = this.d;
            this.f = hm.a(hm.a, cez2);
            // MONITOREXIT : object2
            try {
                object = object2 = this.f.get(60000L, TimeUnit.MILLISECONDS);
                n2 = -2;
                break block9;
            }
            catch (TimeoutException timeoutException) {}
            he.e("Timed out waiting for native ad.");
            this.f.cancel(true);
            n2 = 2;
            break block9;
            catch (InterruptedException | CancellationException | ExecutionException exception) {}
            n2 = 0;
        }
        if (object == null) {
            object = new gl(this.c.a.c, null, null, n2, null, null, this.b.k, this.b.j, this.c.a.i, false, null, null, null, null, null, this.b.h, this.c.d, this.b.f, this.c.f, this.b.m, this.b.n, this.c.h, null, null, null, null, this.c.b.D, this.c.b.E, null, null, this.b.L, this.c.i, this.c.b.O, false);
        }
        hs.a.post((Runnable)new cew(this, (gl)object));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void b() {
        Object object = this.e;
        synchronized (object) {
            if (this.f != null) {
                this.f.cancel(true);
            }
            return;
        }
    }
}

