/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.app.ActivityManager
 *  android.app.ActivityManager$RunningAppProcessInfo
 *  android.app.KeyguardManager
 *  android.content.Context
 *  android.content.res.Resources
 *  android.graphics.Rect
 *  android.os.PowerManager
 *  android.os.Process
 *  android.text.TextUtils
 *  android.view.View
 *  android.view.ViewGroup
 *  android.webkit.WebView
 *  android.widget.EditText
 *  android.widget.TextView
 *  org.json.JSONException
 *  org.json.JSONObject
 */
package com.google.android.gms.internal;

import android.annotation.TargetApi;
import android.app.ActivityManager;
import android.app.KeyguardManager;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.Rect;
import android.os.PowerManager;
import android.os.Process;
import android.text.TextUtils;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.EditText;
import android.widget.TextView;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.common.util.p;
import com.google.android.gms.internal.ai;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bmn;
import com.google.android.gms.internal.bmo;
import com.google.android.gms.internal.bmv;
import com.google.android.gms.internal.bmx;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.nu;
import java.util.Iterator;
import java.util.List;
import org.json.JSONException;
import org.json.JSONObject;

@ak
@TargetApi(value=14)
public final class bmt
extends Thread {
    private boolean a = false;
    private boolean b = false;
    private boolean c = false;
    private final Object d;
    private final bmo e;
    private final ai f;
    private final int g;
    private final int h;
    private final int i;
    private final int j;
    private final int k;
    private final int l;
    private final int m;
    private final int n;
    private final String o;
    private final boolean p;

    public bmt(bmo bsz2, ai ai2) {
        this.e = bsz2;
        this.f = ai2;
        this.d = new Object();
        bsz2 = btk.N;
        this.h = (Integer)bqj.f().a(bsz2);
        bsz2 = btk.O;
        this.i = bqj.f().a(bsz2);
        bsz2 = btk.P;
        this.j = bqj.f().a(bsz2);
        bsz2 = btk.Q;
        this.k = bqj.f().a(bsz2);
        bsz2 = btk.T;
        this.l = bqj.f().a(bsz2);
        bsz2 = btk.V;
        this.m = bqj.f().a(bsz2);
        bsz2 = btk.W;
        this.n = bqj.f().a(bsz2);
        bsz2 = btk.R;
        this.g = bqj.f().a(bsz2);
        bsz2 = btk.Y;
        this.o = (String)((Object)bqj.f().a(bsz2));
        bsz2 = btk.aa;
        this.p = (Boolean)((Object)bqj.f().a(bsz2));
        this.setName("ContentFetchTask");
    }

    private final bmx a(View view, bmn bmn2) {
        int n2 = 0;
        if (view == null) {
            return new bmx(this, 0, 0);
        }
        Object object = av.h().b();
        if (object != null) {
            Resources resources = object.getResources();
            bsz<String> bsz2 = btk.X;
            object = (String)view.getTag(resources.getIdentifier(bqj.f().a(bsz2), "id", object.getPackageName()));
            if (!TextUtils.isEmpty((CharSequence)this.o) && object != null && object.equals(this.o)) {
                return new bmx(this, 0, 0);
            }
        }
        boolean bl2 = view.getGlobalVisibleRect(new Rect());
        if (view instanceof TextView && !(view instanceof EditText)) {
            object = ((TextView)view).getText();
            if (!TextUtils.isEmpty((CharSequence)object)) {
                bmn2.b(object.toString(), bl2, view.getX(), view.getY(), view.getWidth(), view.getHeight());
                return new bmx(this, 1, 0);
            }
            return new bmx(this, 0, 0);
        }
        if (view instanceof WebView && !(view instanceof nu)) {
            boolean bl3;
            bmn2.g();
            view = (WebView)view;
            if (!p.e()) {
                bl3 = false;
            } else {
                bmn2.g();
                view.post((Runnable)new bmv(this, bmn2, (WebView)view, bl2));
                bl3 = true;
            }
            if (bl3) {
                return new bmx(this, 0, 1);
            }
            return new bmx(this, 0, 0);
        }
        if (view instanceof ViewGroup) {
            view = (ViewGroup)view;
            int n3 = 0;
            int n4 = 0;
            while (n2 < view.getChildCount()) {
                object = this.a(view.getChildAt(n2), bmn2);
                n3 += object.a;
                n4 += object.b;
                ++n2;
            }
            return new bmx(this, n3, n4);
        }
        return new bmx(this, 0, 0);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static boolean e() {
        boolean bl2 = false;
        try {
            Context context = av.h().b();
            if (context == null) {
                return false;
            }
            Object object = (ActivityManager)context.getSystemService("activity");
            KeyguardManager keyguardManager = (KeyguardManager)context.getSystemService("keyguard");
            boolean bl3 = bl2;
            if (object == null) return bl3;
            if (keyguardManager == null) {
                return false;
            }
            if ((object = object.getRunningAppProcesses()) == null) {
                return false;
            }
            object = object.iterator();
            do {
                bl3 = bl2;
                if (!object.hasNext()) return bl3;
                ActivityManager.RunningAppProcessInfo runningAppProcessInfo = (ActivityManager.RunningAppProcessInfo)object.next();
            } while (Process.myPid() != runningAppProcessInfo.pid);
            bl3 = bl2;
            if (runningAppProcessInfo.importance != 100) return bl3;
            bl3 = bl2;
            if (keyguardManager.inKeyguardRestrictedInputMode()) return bl3;
            boolean bl4 = (context = (PowerManager)context.getSystemService("power")) == null ? false : context.isScreenOn();
            bl3 = bl2;
            if (!bl4) return bl3;
            return true;
        }
        catch (Throwable throwable) {
            av.i().a(throwable, "ContentFetchTask.isInForeground");
            return false;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void f() {
        Object object = this.d;
        synchronized (object) {
            boolean bl2 = this.b = true;
            StringBuilder stringBuilder = new StringBuilder(42);
            stringBuilder.append("ContentFetchThread: paused, mPause = ");
            stringBuilder.append(bl2);
            he.b(stringBuilder.toString());
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a() {
        Object object = this.d;
        synchronized (object) {
            if (this.a) {
                he.b("Content hash thread already started, quiting...");
                return;
            }
            this.a = true;
        }
        this.start();
    }

    final void a(View object) {
        try {
            bmn bmn2 = new bmn(this.h, this.i, this.j, this.k, this.l, this.m, this.n);
            object = this.a((View)object, bmn2);
            bmn2.h();
            if (object.a == 0 && object.b == 0) {
                return;
            }
            if (object.b == 0 && bmn2.j() == 0) {
                return;
            }
            if (object.b == 0 && this.e.a(bmn2)) {
                return;
            }
            this.e.c(bmn2);
            return;
        }
        catch (Exception exception) {
            he.b("Exception in fetchContentOnUIThread", exception);
            this.f.a(exception, "ContentFetchTask.fetchContent");
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    final void a(bmn bmn2, WebView webView, String string2, boolean bl2) {
        bmn2.f();
        try {
            if (!TextUtils.isEmpty((CharSequence)string2)) {
                string2 = new JSONObject(string2).optString("text");
                if (!this.p && !TextUtils.isEmpty((CharSequence)webView.getTitle())) {
                    String string3 = webView.getTitle();
                    StringBuilder stringBuilder = new StringBuilder(String.valueOf(string3).length() + 1 + String.valueOf(string2).length());
                    stringBuilder.append(string3);
                    stringBuilder.append("\n");
                    stringBuilder.append(string2);
                    bmn2.a(stringBuilder.toString(), bl2, webView.getX(), webView.getY(), webView.getWidth(), webView.getHeight());
                } else {
                    bmn2.a(string2, bl2, webView.getX(), webView.getY(), webView.getWidth(), webView.getHeight());
                }
            }
            if (bmn2.a()) {
                this.e.b(bmn2);
            }
            return;
        }
        catch (Throwable throwable) {
            he.a("Failed to get webview content.", throwable);
            this.f.a(throwable, "ContentFetchTask.processWebViewContent");
            return;
        }
        catch (JSONException jSONException) {}
        he.b("Json string may be malformed.");
    }

    public final bmn b() {
        return this.e.a();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void c() {
        Object object = this.d;
        synchronized (object) {
            this.b = false;
            this.d.notifyAll();
            he.b("ContentFetchThread: wakeup");
            return;
        }
    }

    public final boolean d() {
        return this.b;
    }

    /*
     * Exception decompiling
     */
    @Override
    public final void run() {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [1[TRYBLOCK]], but top level block is 3[TRYBLOCK]
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:416)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:468)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:2960)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:818)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }
}

