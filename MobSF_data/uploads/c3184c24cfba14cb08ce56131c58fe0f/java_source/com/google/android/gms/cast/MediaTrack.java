/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  org.json.JSONException
 *  org.json.JSONObject
 */
package com.google.android.gms.cast;

import android.os.Parcel;
import android.os.Parcelable;
import com.google.android.gms.cast.v;
import com.google.android.gms.common.internal.ReflectedParcelable;
import com.google.android.gms.common.util.o;
import com.google.android.gms.internal.vw;
import com.google.android.gms.internal.wz;
import com.google.android.gms.internal.xc;
import java.util.Arrays;
import org.json.JSONException;
import org.json.JSONObject;

public final class MediaTrack
extends wz
implements ReflectedParcelable {
    public static final Parcelable.Creator<MediaTrack> CREATOR = new v();
    private long a;
    private int b;
    private String c;
    private String d;
    private String e;
    private String f;
    private int g;
    private String h;
    private JSONObject i;

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    MediaTrack(long l2, int n2, String string2, String string3, String string4, String string5, int n3, String string6) {
        this.a = l2;
        this.b = n2;
        this.c = string2;
        this.d = string3;
        this.e = string4;
        this.f = string5;
        this.g = n3;
        this.h = string6;
        if (this.h == null) {
            this.i = null;
            return;
        }
        try {
            this.i = new JSONObject(this.h);
            return;
        }
        catch (JSONException jSONException) {}
        this.i = null;
        this.h = null;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    MediaTrack(JSONObject var1_1) {
        block15 : {
            block13 : {
                block14 : {
                    block12 : {
                        this(0L, 0, null, null, null, null, -1, null);
                        this.a = var1_1.getLong("trackId");
                        var3_2 = var1_1.getString("type");
                        if (!"TEXT".equals(var3_2)) break block12;
                        this.b = 1;
                        break block13;
                    }
                    if (!"AUDIO".equals(var3_2)) break block14;
                    this.b = 2;
                    break block13;
                }
                if (!"VIDEO".equals(var3_2)) break block15;
                this.b = 3;
            }
            this.c = var1_1.optString("trackContentId", null);
            this.d = var1_1.optString("trackContentType", null);
            this.e = var1_1.optString("name", null);
            this.f = var1_1.optString("language", null);
            if (!var1_1.has("subtype")) ** GOTO lbl42
            var3_2 = var1_1.getString("subtype");
            if ("SUBTITLES".equals(var3_2)) {
                this.g = 1;
            } else if ("CAPTIONS".equals(var3_2)) {
                this.g = 2;
            } else if ("DESCRIPTIONS".equals(var3_2)) {
                this.g = 3;
            } else {
                if ("CHAPTERS".equals(var3_2)) {
                    var2_3 = 4;
                } else if ("METADATA".equals(var3_2)) {
                    var2_3 = 5;
                } else {
                    var1_1 = String.valueOf(var3_2);
                    if (var1_1.length() != 0) {
                        var1_1 = "invalid subtype: ".concat((String)var1_1);
                        throw new JSONException((String)var1_1);
                    }
                    var1_1 = new String("invalid subtype: ");
                    throw new JSONException((String)var1_1);
lbl42: // 1 sources:
                    var2_3 = 0;
                }
                this.g = var2_3;
            }
            this.i = var1_1.optJSONObject("customData");
            return;
        }
        var1_1 = String.valueOf(var3_2);
        if (var1_1.length() != 0) {
            var1_1 = "invalid type: ".concat((String)var1_1);
            throw new JSONException((String)var1_1);
        }
        var1_1 = new String("invalid type: ");
        throw new JSONException((String)var1_1);
    }

    public final long a() {
        return this.a;
    }

    public final int b() {
        return this.b;
    }

    public final String c() {
        return this.c;
    }

    public final String d() {
        return this.d;
    }

    public final String e() {
        return this.e;
    }

    public final boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof MediaTrack)) {
            return false;
        }
        object = (MediaTrack)object;
        boolean bl2 = this.i == null;
        boolean bl3 = object.i == null;
        if (bl2 != bl3) {
            return false;
        }
        if (this.i != null && object.i != null && !o.a((Object)this.i, (Object)object.i)) {
            return false;
        }
        if (this.a == object.a && this.b == object.b && vw.a(this.c, object.c) && vw.a(this.d, object.d) && vw.a(this.e, object.e) && vw.a(this.f, object.f) && this.g == object.g) {
            return true;
        }
        return false;
    }

    public final String f() {
        return this.f;
    }

    public final int g() {
        return this.g;
    }

    /*
     * Exception decompiling
     */
    public final JSONObject h() {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // org.benf.cfr.reader.util.ConfusedCFRException: First case is not immediately after switch.
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.examineSwitchContiguity(SwitchReplacer.java:366)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.replaceRawSwitches(SwitchReplacer.java:65)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:416)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }

    public final int hashCode() {
        return Arrays.hashCode(new Object[]{this.a, this.b, this.c, this.d, this.e, this.f, this.g, String.valueOf((Object)this.i)});
    }

    public final void writeToParcel(Parcel parcel, int n2) {
        String string2 = this.i == null ? null : this.i.toString();
        this.h = string2;
        n2 = xc.a(parcel);
        xc.a(parcel, 2, this.a());
        xc.a(parcel, 3, this.b());
        xc.a(parcel, 4, this.c(), false);
        xc.a(parcel, 5, this.d(), false);
        xc.a(parcel, 6, this.e(), false);
        xc.a(parcel, 7, this.f(), false);
        xc.a(parcel, 8, this.g());
        xc.a(parcel, 9, this.h, false);
        xc.a(parcel, n2);
    }
}

