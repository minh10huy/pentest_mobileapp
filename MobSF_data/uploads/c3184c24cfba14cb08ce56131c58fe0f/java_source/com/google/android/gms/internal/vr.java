/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Handler
 *  android.os.Looper
 */
package com.google.android.gms.internal;

import android.os.Handler;
import android.os.Looper;
import com.google.android.gms.cast.d;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.api.internal.cq;
import com.google.android.gms.internal.vf;
import com.google.android.gms.internal.vp;
import com.google.android.gms.internal.vq;
import com.google.android.gms.internal.vs;
import com.google.android.gms.internal.vt;
import com.google.android.gms.internal.vu;
import com.google.android.gms.internal.vv;
import com.google.android.gms.internal.vx;
import com.google.android.gms.internal.we;
import java.util.Map;
import java.util.concurrent.atomic.AtomicReference;

final class vr
extends we {
    private final AtomicReference<vp> a;
    private final Handler b;

    public vr(vp vp2) {
        this.a = new AtomicReference<vp>(vp2);
        this.b = new Handler(vp2.u());
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    private static void a(vp object, long l2, int n2) {
        Map map = vp.f((vp)object);
        // MONITORENTER : map
        object = (cq)vp.f((vp)object).remove(l2);
        // MONITOREXIT : map
        if (object == null) return;
        object.a(new Status(n2));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static boolean a(vp vp2, int n2) {
        Object object = vp.A();
        synchronized (object) {
            if (vp.g(vp2) != null) {
                vp.g(vp2).a(new Status(n2));
                vp.b(vp2, null);
                return true;
            }
            return false;
        }
    }

    public final vp a() {
        vp vp2 = this.a.getAndSet(null);
        if (vp2 == null) {
            return null;
        }
        vp.a(vp2);
        return vp2;
    }

    @Override
    public final void a(int n2) {
        vp vp2 = this.a();
        if (vp2 == null) {
            return;
        }
        vp.e().a("ICastDeviceControllerListener.onDisconnected: %d", n2);
        if (n2 != 0) {
            vp2.b(2);
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(d d2, String string2, String string3, boolean bl2) {
        vp vp2 = this.a.get();
        if (vp2 == null) {
            return;
        }
        vp.a(vp2, d2);
        vp.a(vp2, d2.a());
        vp.b(vp2, string3);
        vp.c(vp2, string2);
        Object object = vp.z();
        synchronized (object) {
            if (vp.b(vp2) != null) {
                vp.b(vp2).a(new vq(new Status(0), d2, string2, string3, bl2));
                vp.a(vp2, null);
            }
            return;
        }
    }

    @Override
    public final void a(vf vf2) {
        vp vp2 = this.a.get();
        if (vp2 == null) {
            return;
        }
        vp.e().a("onApplicationStatusChanged", new Object[0]);
        this.b.post((Runnable)new vu(this, vp2, vf2));
    }

    @Override
    public final void a(vx vx2) {
        vp vp2 = this.a.get();
        if (vp2 == null) {
            return;
        }
        vp.e().a("onDeviceStatusChanged", new Object[0]);
        this.b.post((Runnable)new vt(this, vp2, vx2));
    }

    @Override
    public final void a(String string2, double d2, boolean bl2) {
        vp.e().a("Deprecated callback: \"onStatusreceived\"", new Object[0]);
    }

    @Override
    public final void a(String object, long l2) {
        object = this.a.get();
        if (object == null) {
            return;
        }
        vr.a((vp)object, l2, 0);
    }

    @Override
    public final void a(String object, long l2, int n2) {
        object = this.a.get();
        if (object == null) {
            return;
        }
        vr.a((vp)object, l2, n2);
    }

    @Override
    public final void a(String string2, String string3) {
        vp vp2 = this.a.get();
        if (vp2 == null) {
            return;
        }
        vp.e().a("Receive (type=text, ns=%s) %s", string2, string3);
        this.b.post((Runnable)new vv(this, vp2, string2, string3));
    }

    @Override
    public final void a(String string2, byte[] arrby) {
        if (this.a.get() == null) {
            return;
        }
        vp.e().a("IGNORING: Receive (type=binary, ns=%s) <%d bytes>", string2, arrby.length);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void b(int n2) {
        vp vp2 = this.a.get();
        if (vp2 == null) {
            return;
        }
        Object object = vp.z();
        synchronized (object) {
            if (vp.b(vp2) != null) {
                vp.b(vp2).a(new vq(new Status(n2)));
                vp.a(vp2, null);
            }
            return;
        }
    }

    public final boolean b() {
        if (this.a.get() == null) {
            return true;
        }
        return false;
    }

    @Override
    public final void c(int n2) {
        vp vp2 = this.a.get();
        if (vp2 == null) {
            return;
        }
        vr.a(vp2, n2);
    }

    @Override
    public final void d(int n2) {
        vp vp2 = this.a.get();
        if (vp2 == null) {
            return;
        }
        vr.a(vp2, n2);
    }

    @Override
    public final void e(int n2) {
        vp vp2 = this.a.get();
        if (vp2 == null) {
            return;
        }
        vp.a(vp2, null);
        vp.b(vp2, null);
        vr.a(vp2, n2);
        if (vp.c(vp2) != null) {
            this.b.post((Runnable)new vs(this, vp2, n2));
        }
    }
}

