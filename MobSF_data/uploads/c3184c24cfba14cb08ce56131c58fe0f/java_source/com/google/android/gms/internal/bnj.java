/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bmz;
import java.nio.charset.Charset;
import java.security.MessageDigest;

@ak
public final class bnj
extends bmz {
    private MessageDigest b;
    private final int c;
    private final int d;

    public bnj(int n2) {
        int n3;
        int n4 = n3 = n2 / 8;
        if (n2 % 8 > 0) {
            n4 = n3 + 1;
        }
        this.c = n4;
        this.d = n2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final byte[] a(String arrby) {
        Object object = this.a;
        synchronized (object) {
            this.b = this.a();
            byte[] arrby2 = this.b;
            int n2 = 0;
            if (arrby2 == null) {
                return new byte[0];
            }
            this.b.reset();
            this.b.update(arrby.getBytes(Charset.forName("UTF-8")));
            arrby = this.b.digest();
            int n3 = arrby.length > this.c ? this.c : arrby.length;
            arrby2 = new byte[n3];
            System.arraycopy(arrby, 0, arrby2, 0, arrby2.length);
            if (this.d % 8 > 0) {
                long l2 = 0L;
                n3 = n2;
                do {
                    long l3;
                    if (n3 < arrby2.length) {
                        l3 = l2;
                        if (n3 > 0) {
                            l3 = l2 << 8;
                        }
                    } else {
                        l2 >>>= 8 - this.d % 8;
                        break;
                    }
                    l2 = l3 + (long)(arrby2[n3] & 255);
                    ++n3;
                } while (true);
                for (n3 = this.c - 1; n3 >= 0; l2 >>>= 8, --n3) {
                    arrby2[n3] = (byte)(255L & l2);
                }
            }
            return arrby2;
        }
    }
}

