/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.SuppressLint
 *  android.annotation.TargetApi
 *  android.app.Activity
 *  android.app.AlertDialog
 *  android.app.AlertDialog$Builder
 *  android.app.Dialog
 *  android.app.FragmentManager
 *  android.app.Notification
 *  android.app.Notification$BigTextStyle
 *  android.app.Notification$Builder
 *  android.app.Notification$Style
 *  android.app.NotificationChannel
 *  android.app.NotificationManager
 *  android.app.PendingIntent
 *  android.content.BroadcastReceiver
 *  android.content.Context
 *  android.content.DialogInterface
 *  android.content.DialogInterface$OnCancelListener
 *  android.content.DialogInterface$OnClickListener
 *  android.content.Intent
 *  android.content.IntentFilter
 *  android.content.pm.ApplicationInfo
 *  android.content.res.Resources
 *  android.content.res.Resources$Theme
 *  android.os.Handler
 *  android.os.Looper
 *  android.os.Message
 *  android.util.AttributeSet
 *  android.util.Log
 *  android.util.TypedValue
 *  android.view.View
 *  android.widget.ProgressBar
 */
package com.google.android.gms.common;

import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.FragmentManager;
import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.pm.ApplicationInfo;
import android.content.res.Resources;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.support.v4.app.ab;
import android.support.v4.app.k;
import android.support.v4.app.o;
import android.util.AttributeSet;
import android.util.Log;
import android.util.TypedValue;
import android.view.View;
import android.widget.ProgressBar;
import com.google.android.gms.a;
import com.google.android.gms.common.api.GoogleApiActivity;
import com.google.android.gms.common.api.internal.ax;
import com.google.android.gms.common.api.internal.ay;
import com.google.android.gms.common.api.internal.be;
import com.google.android.gms.common.b;
import com.google.android.gms.common.g;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.internal.bg;
import com.google.android.gms.common.internal.bh;
import com.google.android.gms.common.m;
import com.google.android.gms.common.util.j;
import com.google.android.gms.common.util.p;
import com.google.android.gms.common.z;
import java.util.concurrent.atomic.AtomicBoolean;

public class c
extends m {
    public static final int a;
    private static final Object c;
    private static final c d;
    private String e;

    static {
        c = new Object();
        d = new c();
        a = m.b;
    }

    c() {
    }

    public static Dialog a(Activity activity, DialogInterface.OnCancelListener onCancelListener) {
        ProgressBar progressBar = new ProgressBar((Context)activity, null, 16842874);
        progressBar.setIndeterminate(true);
        progressBar.setVisibility(0);
        AlertDialog.Builder builder = new AlertDialog.Builder((Context)activity);
        builder.setView((View)progressBar);
        builder.setMessage((CharSequence)bg.c((Context)activity, 18));
        builder.setPositiveButton((CharSequence)"", null);
        progressBar = builder.create();
        c.a(activity, (Dialog)progressBar, "GooglePlayServicesUpdatingDialog", onCancelListener);
        return progressBar;
    }

    static Dialog a(Context object, int n2, bh bh2, DialogInterface.OnCancelListener object2) {
        AlertDialog.Builder builder = null;
        if (n2 == 0) {
            return null;
        }
        TypedValue typedValue = new TypedValue();
        object.getTheme().resolveAttribute(16843529, typedValue, true);
        if ("Theme.Dialog.Alert".equals(object.getResources().getResourceEntryName(typedValue.resourceId))) {
            builder = new AlertDialog.Builder(object, 5);
        }
        typedValue = builder;
        if (builder == null) {
            typedValue = new AlertDialog.Builder(object);
        }
        typedValue.setMessage((CharSequence)bg.c(object, n2));
        if (object2 != null) {
            typedValue.setOnCancelListener(object2);
        }
        if ((object2 = bg.e(object, n2)) != null) {
            typedValue.setPositiveButton((CharSequence)object2, (DialogInterface.OnClickListener)bh2);
        }
        if ((object = bg.a(object, n2)) != null) {
            typedValue.setTitle((CharSequence)object);
        }
        return typedValue.create();
    }

    public static ax a(Context context, ay ay2) {
        IntentFilter intentFilter = new IntentFilter("android.intent.action.PACKAGE_ADDED");
        intentFilter.addDataScheme("package");
        ax ax2 = new ax(ay2);
        context.registerReceiver((BroadcastReceiver)ax2, intentFilter);
        ax2.a(context);
        if (!z.a(context, "com.google.android.gms")) {
            ay2.a();
            ax2.a();
            return null;
        }
        return ax2;
    }

    public static c a() {
        return d;
    }

    /*
     * Enabled aggressive block sorting
     */
    @TargetApi(value=26)
    private final String a(Context object, NotificationManager notificationManager) {
        String string2;
        block2 : {
            block4 : {
                String string3;
                block3 : {
                    ah.a(p.i());
                    string2 = string3 = this.c();
                    if (string3 != null) break block2;
                    string2 = "com.google.android.gms.availability";
                    string3 = notificationManager.getNotificationChannel("com.google.android.gms.availability");
                    object = bg.a((Context)object);
                    if (string3 != null) break block3;
                    object = new NotificationChannel("com.google.android.gms.availability", (CharSequence)object, 4);
                    break block4;
                }
                if (object.equals(string3.getName())) break block2;
                string3.setName((CharSequence)object);
                object = string3;
            }
            notificationManager.createNotificationChannel((NotificationChannel)object);
            return "com.google.android.gms.availability";
        }
        return string2;
    }

    static void a(Activity object, Dialog dialog, String string2, DialogInterface.OnCancelListener onCancelListener) {
        if (object instanceof k) {
            object = ((k)object).g();
            g.a(dialog, onCancelListener).a((o)object, string2);
            return;
        }
        object = object.getFragmentManager();
        b.a(dialog, onCancelListener).show((FragmentManager)object, string2);
    }

    @TargetApi(value=20)
    private final void a(Context context, int n2, String string2, PendingIntent object) {
        if (n2 == 18) {
            this.b(context);
            return;
        }
        if (object == null) {
            if (n2 == 6) {
                Log.w((String)"GoogleApiAvailability", (String)"Missing resolution for ConnectionResult.RESOLUTION_REQUIRED. Call GoogleApiAvailability#showErrorNotification(Context, ConnectionResult) instead.");
            }
            return;
        }
        String string3 = bg.b(context, n2);
        String string4 = bg.d(context, n2);
        Resources resources = context.getResources();
        string2 = (NotificationManager)context.getSystemService("notification");
        if (j.b(context)) {
            ah.a(p.f());
            object = new Notification.Builder(context).setSmallIcon(context.getApplicationInfo().icon).setPriority(2).setAutoCancel(true).setContentTitle((CharSequence)string3).setStyle((Notification.Style)new Notification.BigTextStyle().bigText((CharSequence)string4)).addAction(a.a.common_full_open_on_phone, (CharSequence)resources.getString(a.c.common_open_on_phone), (PendingIntent)object);
            if (p.i() && p.i()) {
                object.setChannelId(this.a(context, (NotificationManager)string2));
            }
            context = object.build();
        } else {
            object = new ab.c(context).a(17301642).c(resources.getString(a.c.common_google_play_services_notification_ticker)).a(System.currentTimeMillis()).a(true).a((PendingIntent)object).a((CharSequence)string3).b(string4).b(true).a(new ab.b().a(string4));
            if (p.i() && p.i()) {
                object.a(this.a(context, (NotificationManager)string2));
            }
            context = object.a();
        }
        switch (n2) {
            default: {
                n2 = 39789;
                break;
            }
            case 1: 
            case 2: 
            case 3: {
                n2 = 10436;
                z.c.set(false);
            }
        }
        string2.notify(n2, (Notification)context);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final String c() {
        Object object = c;
        synchronized (object) {
            return this.e;
        }
    }

    @Override
    public int a(Context context) {
        return super.a(context);
    }

    public Dialog a(Activity activity, int n2, int n3, DialogInterface.OnCancelListener onCancelListener) {
        return c.a((Context)activity, n2, bh.a(activity, m.a((Context)activity, n2, "d"), n3), onCancelListener);
    }

    @Override
    public PendingIntent a(Context context, int n2, int n3) {
        return super.a(context, n2, n3);
    }

    public PendingIntent a(Context context, com.google.android.gms.common.a a2) {
        if (a2.a()) {
            return a2.d();
        }
        return this.a(context, a2.c(), 0);
    }

    public void a(Context context, int n2) {
        this.a(context, n2, null, this.a(context, n2, 0, "n"));
    }

    @Override
    public final boolean a(int n2) {
        return super.a(n2);
    }

    public final boolean a(Activity activity, be be2, int n2, int n3, DialogInterface.OnCancelListener onCancelListener) {
        if ((be2 = c.a((Context)activity, n2, bh.a(be2, m.a((Context)activity, n2, "d"), 2), onCancelListener)) == null) {
            return false;
        }
        c.a(activity, (Dialog)be2, "GooglePlayServicesErrorDialog", onCancelListener);
        return true;
    }

    public final boolean a(Context context, com.google.android.gms.common.a a2, int n2) {
        PendingIntent pendingIntent = this.a(context, a2);
        if (pendingIntent != null) {
            this.a(context, a2.c(), null, GoogleApiActivity.a(context, pendingIntent, n2));
            return true;
        }
        return false;
    }

    @Override
    public final String b(int n2) {
        return super.b(n2);
    }

    final void b(Context context) {
        new a(this, context).sendEmptyMessageDelayed(1, 120000L);
    }

    public boolean b(Activity activity, int n2, int n3, DialogInterface.OnCancelListener onCancelListener) {
        Dialog dialog = this.a(activity, n2, n3, onCancelListener);
        if (dialog == null) {
            return false;
        }
        c.a(activity, dialog, "GooglePlayServicesErrorDialog", onCancelListener);
        return true;
    }

    @SuppressLint(value={"HandlerLeak"})
    final class a
    extends Handler {
        private final Context a;
        private /* synthetic */ c b;

        public a(c c2, Context context) {
            this.b = c2;
            c2 = Looper.myLooper() == null ? Looper.getMainLooper() : Looper.myLooper();
            super((Looper)c2);
            this.a = context.getApplicationContext();
        }

        public final void handleMessage(Message object) {
            if (object.what != 1) {
                int n2 = object.what;
                object = new StringBuilder(50);
                object.append("Don't know how to handle this message: ");
                object.append(n2);
                Log.w((String)"GoogleApiAvailability", (String)object.toString());
                return;
            }
            int n3 = this.b.a(this.a);
            if (this.b.a(n3)) {
                this.b.a(this.a, n3);
            }
        }
    }

}

