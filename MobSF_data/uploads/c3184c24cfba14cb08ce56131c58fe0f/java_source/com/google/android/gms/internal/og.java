/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.SuppressLint
 *  android.annotation.TargetApi
 *  android.app.Activity
 *  android.content.ActivityNotFoundException
 *  android.content.Context
 *  android.content.Intent
 *  android.graphics.Canvas
 *  android.net.Uri
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Handler
 *  android.util.DisplayMetrics
 *  android.view.Display
 *  android.view.MotionEvent
 *  android.view.View
 *  android.view.View$MeasureSpec
 *  android.view.View$OnClickListener
 *  android.view.ViewTreeObserver
 *  android.view.ViewTreeObserver$OnGlobalLayoutListener
 *  android.view.ViewTreeObserver$OnScrollChangedListener
 *  android.view.Window
 *  android.view.WindowManager
 *  android.webkit.DownloadListener
 *  android.webkit.ValueCallback
 *  android.webkit.WebSettings
 *  android.webkit.WebView
 *  android.webkit.WebViewClient
 *  org.json.JSONException
 *  org.json.JSONObject
 */
package com.google.android.gms.internal;

import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.app.Activity;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.graphics.Canvas;
import android.net.Uri;
import android.os.Build;
import android.os.Handler;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewTreeObserver;
import android.view.Window;
import android.view.WindowManager;
import android.webkit.DownloadListener;
import android.webkit.ValueCallback;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import com.google.android.gms.ads.internal.ao;
import com.google.android.gms.ads.internal.av;
import com.google.android.gms.ads.internal.br;
import com.google.android.gms.ads.internal.gmsg.aa;
import com.google.android.gms.ads.internal.overlay.c;
import com.google.android.gms.ads.internal.overlay.d;
import com.google.android.gms.common.util.p;
import com.google.android.gms.internal.agk;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bma;
import com.google.android.gms.internal.boc;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.btn;
import com.google.android.gms.internal.btq;
import com.google.android.gms.internal.btv;
import com.google.android.gms.internal.btw;
import com.google.android.gms.internal.btx;
import com.google.android.gms.internal.buw;
import com.google.android.gms.internal.cdn;
import com.google.android.gms.internal.he;
import com.google.android.gms.internal.hs;
import com.google.android.gms.internal.ik;
import com.google.android.gms.internal.jy;
import com.google.android.gms.internal.jz;
import com.google.android.gms.internal.km;
import com.google.android.gms.internal.ly;
import com.google.android.gms.internal.ms;
import com.google.android.gms.internal.nl;
import com.google.android.gms.internal.nm;
import com.google.android.gms.internal.nu;
import com.google.android.gms.internal.nv;
import com.google.android.gms.internal.oh;
import com.google.android.gms.internal.oi;
import com.google.android.gms.internal.oj;
import com.google.android.gms.internal.om;
import com.google.android.gms.internal.pf;
import com.google.android.gms.internal.pk;
import com.google.android.gms.internal.po;
import com.google.android.gms.internal.pp;
import com.google.android.gms.internal.pr;
import java.lang.ref.WeakReference;
import java.util.HashMap;
import java.util.Map;
import org.json.JSONException;
import org.json.JSONObject;

@ak
final class og
extends WebView
implements ViewTreeObserver.OnGlobalLayoutListener,
DownloadListener,
nu {
    private btv A;
    private btv B;
    private btv C;
    private btw D;
    private WeakReference<View.OnClickListener> E;
    private d F;
    private boolean G;
    private jy H;
    private int I = -1;
    private int J = -1;
    private int K = -1;
    private int L = -1;
    private Map<String, nm> M;
    private final WindowManager N;
    private final boc O;
    private final pp a;
    private final agk b;
    private final km c;
    private final ao d;
    private final br e;
    private final DisplayMetrics f;
    private final float g;
    private nv h;
    private d i;
    private pr j;
    private String k;
    private boolean l;
    private boolean m;
    private boolean n;
    private boolean o;
    private Boolean p;
    private int q;
    private boolean r = true;
    private boolean s = false;
    private String t = "";
    private oj u;
    private boolean v;
    private boolean w;
    private buw x;
    private int y;
    private int z;

    private og(pp pp2, pr pr2, String string2, boolean bl2, boolean bl3, agk agk2, km km2, btx btx2, ao ao2, br br2, boc boc2) {
        super((Context)pp2);
        this.a = pp2;
        this.j = pr2;
        this.k = string2;
        this.n = bl2;
        this.q = -1;
        this.b = agk2;
        this.c = km2;
        this.d = ao2;
        this.e = br2;
        this.N = (WindowManager)this.getContext().getSystemService("window");
        av.e();
        this.f = hs.a(this.N);
        this.g = this.f.density;
        this.O = boc2;
        this.setBackgroundColor(0);
        pr2 = this.getSettings();
        pr2.setAllowFileAccess(false);
        try {
            pr2.setJavaScriptEnabled(true);
        }
        catch (NullPointerException nullPointerException) {
            he.b("Unable to enable Javascript.", nullPointerException);
        }
        pr2.setSavePassword(false);
        pr2.setSupportMultipleWindows(true);
        pr2.setJavaScriptCanOpenWindowsAutomatically(true);
        if (Build.VERSION.SDK_INT >= 21) {
            pr2.setMixedContentMode(2);
        }
        av.e().a((Context)pp2, km2.a, (WebSettings)pr2);
        av.g().a(this.getContext(), (WebSettings)pr2);
        this.setDownloadListener((DownloadListener)this);
        this.M();
        if (p.c()) {
            this.addJavascriptInterface(om.a(this), "googleAdsJsInterface");
        }
        this.removeJavascriptInterface("accessibility");
        this.removeJavascriptInterface("accessibilityTraversal");
        this.H = new jy(this.a.a(), (View)this, this, null);
        this.R();
        this.D = new btw(new btx(true, "make_wv", this.k));
        this.D.a().a(btx2);
        this.B = btq.a(this.D.a());
        this.D.a("native:view_create", this.B);
        this.C = null;
        this.A = null;
        av.g().b((Context)pp2);
    }

    private final boolean I() {
        int n2;
        int n3;
        boolean bl2 = this.h.b();
        boolean bl3 = false;
        if (!bl2 && !this.h.c()) {
            return false;
        }
        bqj.a();
        int n4 = jz.b(this.f, this.f.widthPixels);
        bqj.a();
        int n5 = jz.b(this.f, this.f.heightPixels);
        int[] arrn = this.a.a();
        if (arrn != null && arrn.getWindow() != null) {
            av.e();
            arrn = hs.a((Activity)arrn);
            bqj.a();
            n3 = jz.b(this.f, arrn[0]);
            bqj.a();
            n2 = jz.b(this.f, arrn[1]);
        } else {
            n3 = n4;
            n2 = n5;
        }
        if (this.J == n4 && this.I == n5 && this.K == n3 && this.L == n2) {
            return false;
        }
        if (this.J != n4 || this.I != n5) {
            bl3 = true;
        }
        this.J = n4;
        this.I = n5;
        this.K = n3;
        this.L = n2;
        new cdn(this).a(n4, n5, n3, n2, this.f.density, this.N.getDefaultDisplay().getRotation());
        return bl3;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void J() {
        synchronized (this) {
            Boolean bl2 = this.p = av.i().c();
            if (bl2 == null) {
                try {
                    this.evaluateJavascript("(function(){})()", null);
                    this.a((Boolean)true);
                    return;
                }
                catch (IllegalStateException illegalStateException) {}
                this.a((Boolean)false);
            }
            return;
        }
    }

    private final Boolean K() {
        synchronized (this) {
            Boolean bl2 = this.p;
            return bl2;
        }
    }

    private final void L() {
        btq.a(this.D.a(), this.B, "aeh2");
    }

    private final void M() {
        synchronized (this) {
            if (!this.n && !this.j.d()) {
                if (Build.VERSION.SDK_INT < 18) {
                    he.b("Disabling hardware acceleration on an AdView.");
                    this.N();
                    return;
                }
                he.b("Enabling hardware acceleration on an AdView.");
                this.O();
                return;
            }
            he.b("Enabling hardware acceleration on an overlay.");
            this.O();
            return;
        }
    }

    private final void N() {
        synchronized (this) {
            if (!this.o) {
                av.g().c((View)this);
            }
            this.o = true;
            return;
        }
    }

    private final void O() {
        synchronized (this) {
            if (this.o) {
                av.g().b((View)this);
            }
            this.o = false;
            return;
        }
    }

    private final void P() {
        synchronized (this) {
            if (!this.G) {
                this.G = true;
                av.i().j();
            }
            return;
        }
    }

    private final void Q() {
        synchronized (this) {
            this.M = null;
            return;
        }
    }

    private final void R() {
        if (this.D == null) {
            return;
        }
        btx btx2 = this.D.a();
        if (btx2 != null && av.i().b() != null) {
            av.i().b().a(btx2);
        }
    }

    static /* synthetic */ int a(og og2) {
        return og2.z;
    }

    static /* synthetic */ int a(og og2, int n2) {
        og2.z = n2;
        return n2;
    }

    static og a(Context context, pr pr2, String string2, boolean bl2, boolean bl3, agk agk2, km km2, btx btx2, ao ao2, br br2, boc boc2) {
        return new og(new pp(context), pr2, string2, bl2, bl3, agk2, km2, btx2, ao2, br2, boc2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void a(Boolean bl2) {
        synchronized (this) {
            this.p = bl2;
        }
        av.i().a(bl2);
    }

    @TargetApi(value=19)
    private final void a(String string2, ValueCallback<String> valueCallback) {
        synchronized (this) {
            if (!this.y()) {
                this.evaluateJavascript(string2, null);
                return;
            }
            he.e("The webview is destroyed. Ignoring action.");
            return;
        }
    }

    static /* synthetic */ void b(og og2) {
        super.destroy();
    }

    private final void b(String string2) {
        synchronized (this) {
            if (!this.y()) {
                this.loadUrl(string2);
                return;
            }
            he.e("The webview is destroyed. Ignoring action.");
            return;
        }
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    private final void c(String string2) {
        // MONITORENTER : this
        super.loadUrl(string2);
        // MONITOREXIT : this
        return;
        catch (Exception | IncompatibleClassChangeError | NoClassDefFoundError | UnsatisfiedLinkError throwable3) {
            av.i().a(throwable3, "AdWebViewImpl.loadUrlUnsafe");
            he.c("Could not call loadUrl. ", throwable3);
            // MONITOREXIT : this
            return;
        }
    }

    private final void d(String string2) {
        if (p.e()) {
            if (this.K() == null) {
                this.J();
            }
            if (this.K().booleanValue()) {
                this.a(string2, (ValueCallback<String>)null);
                return;
            }
            string2 = (string2 = String.valueOf(string2)).length() != 0 ? "javascript:".concat(string2) : new String("javascript:");
            this.b(string2);
            return;
        }
        string2 = (string2 = String.valueOf(string2)).length() != 0 ? "javascript:".concat(string2) : new String("javascript:");
        this.b(string2);
    }

    private final void f(boolean bl2) {
        HashMap<String, String> hashMap = new HashMap<String, String>();
        String string2 = bl2 ? "1" : "0";
        hashMap.put("isVisible", string2);
        this.a("onAdVisibilityChanged", hashMap);
    }

    @Override
    public final boolean A() {
        synchronized (this) {
            boolean bl2 = this.r;
            return bl2;
        }
    }

    @Override
    public final boolean B() {
        synchronized (this) {
            boolean bl2 = this.s;
            return bl2;
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Override
    public final boolean C() {
        synchronized (this) {
            int n2 = this.y;
            if (n2 <= 0) return false;
            return true;
        }
    }

    @Override
    public final void D() {
        this.H.a();
    }

    @Override
    public final void E() {
        if (this.C == null) {
            this.C = btq.a(this.D.a());
            this.D.a("native:view_load", this.C);
        }
    }

    @Override
    public final buw F() {
        synchronized (this) {
            buw buw2 = this.x;
            return buw2;
        }
    }

    @Override
    public final void G() {
        this.setBackgroundColor(0);
    }

    @Override
    public final void H() {
        he.a("Cannot add text view to inner AdWebView");
    }

    @Override
    public final ms a() {
        return null;
    }

    @Override
    public final void a(int n2) {
        if (n2 == 0) {
            btq.a(this.D.a(), this.B, "aebb2");
        }
        this.L();
        if (this.D.a() != null) {
            this.D.a().a("close_type", String.valueOf(n2));
        }
        HashMap<String, String> hashMap = new HashMap<String, String>(2);
        hashMap.put("closetype", String.valueOf(n2));
        hashMap.put("version", this.c.a);
        this.a("onhide", hashMap);
    }

    @Override
    public final void a(c c2) {
        this.h.a(c2);
    }

    @Override
    public final void a(d d2) {
        synchronized (this) {
            this.i = d2;
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(bma bma2) {
        synchronized (this) {
            this.v = bma2.a;
        }
        this.f(bma2.a);
    }

    @Override
    public final void a(buw buw2) {
        synchronized (this) {
            this.x = buw2;
            return;
        }
    }

    @Override
    public final void a(oj oj2) {
        synchronized (this) {
            if (this.u != null) {
                he.c("Attempt to create multiple AdWebViewVideoControllers.");
                return;
            }
            this.u = oj2;
            return;
        }
    }

    @Override
    public final void a(pr pr2) {
        synchronized (this) {
            this.j = pr2;
            this.requestLayout();
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(String string2) {
        synchronized (this) {
            String string3 = string2;
            if (string2 == null) {
                string3 = "";
            }
            try {
                this.t = string3;
                return;
            }
            catch (Throwable throwable) {}
            throw throwable;
        }
    }

    @Override
    public final void a(String string2, aa<? super nu> aa2) {
        if (this.h != null) {
            this.h.a(string2, aa2);
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(String string2, String string3, String string4) {
        synchronized (this) {
            void var3_3;
            void var2_2;
            if (this.y()) {
                he.e("The webview is destroyed. Ignoring action.");
                return;
            }
            bsz<Boolean> bsz2 = btk.aw;
            String string5 = var2_2;
            if (bqj.f().a(bsz2).booleanValue()) {
                string5 = pf.a((String)var2_2, pf.a());
            }
            super.loadDataWithBaseURL(string2, string5, "text/html", "UTF-8", (String)var3_3);
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void a(String string2, Map<String, ?> jSONObject) {
        try {
            jSONObject = av.e().a((Map<String, ?>)jSONObject);
        }
        catch (JSONException jSONException) {}
        this.a(string2, jSONObject);
        return;
        he.e("Could not convert parameters to JSON.");
    }

    @Override
    public final void a(String string2, JSONObject object) {
        Object object2 = object;
        if (object == null) {
            object2 = new JSONObject();
        }
        object2 = object2.toString();
        object = new StringBuilder();
        object.append("(window.AFMA_ReceiveMessage || function() {})('");
        object.append(string2);
        object.append("'");
        object.append(",");
        object.append((String)object2);
        object.append(");");
        string2 = String.valueOf(object.toString());
        string2 = string2.length() != 0 ? "Dispatching AFMA event: ".concat(string2) : new String("Dispatching AFMA event: ");
        he.b(string2);
        this.d(object.toString());
    }

    @Override
    public final void a(boolean bl2) {
        this.h.a(bl2);
    }

    @Override
    public final void a(boolean bl2, int n2) {
        this.h.a(bl2, n2);
    }

    @Override
    public final void a(boolean bl2, int n2, String string2) {
        this.h.a(bl2, n2, string2);
    }

    @Override
    public final void a(boolean bl2, int n2, String string2, String string3) {
        this.h.a(bl2, n2, string2, string3);
    }

    @Override
    public final oj b() {
        synchronized (this) {
            oj oj2 = this.u;
            return oj2;
        }
    }

    @Override
    public final void b(d d2) {
        synchronized (this) {
            this.F = d2;
            return;
        }
    }

    @Override
    public final void b(String string2, aa<? super nu> aa2) {
        if (this.h != null) {
            this.h.b(string2, aa2);
        }
    }

    @Override
    public final void b(String string2, JSONObject object) {
        Object object2 = object;
        if (object == null) {
            object2 = new JSONObject();
        }
        object = object2.toString();
        object2 = new StringBuilder(String.valueOf(string2).length() + 3 + String.valueOf(object).length());
        object2.append(string2);
        object2.append("(");
        object2.append((String)object);
        object2.append(");");
        this.d(object2.toString());
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void b(boolean bl2) {
        synchronized (this) {
            boolean bl3 = bl2 != this.n;
            this.n = bl2;
            this.M();
            if (bl3) {
                cdn cdn2 = new cdn(this);
                String string2 = bl2 ? "expanded" : "default";
                cdn2.c(string2);
            }
            return;
        }
    }

    @Override
    public final btv c() {
        return this.B;
    }

    @Override
    public final void c(boolean bl2) {
        synchronized (this) {
            if (this.i != null) {
                this.i.a(this.h.b(), bl2);
                return;
            }
            this.l = bl2;
            return;
        }
    }

    @Override
    public final Activity d() {
        return this.a.a();
    }

    @Override
    public final void d(boolean bl2) {
        synchronized (this) {
            this.r = bl2;
            return;
        }
    }

    @Override
    public final void destroy() {
        synchronized (this) {
            block5 : {
                this.R();
                this.H.b();
                if (this.i != null) {
                    this.i.a();
                    this.i.k();
                    this.i = null;
                }
                this.h.k();
                boolean bl2 = this.m;
                if (!bl2) break block5;
                return;
            }
            av.y();
            nl.a(this);
            this.Q();
            this.m = true;
            he.a("Initiating WebView self destruct sequence in 3...");
            he.a("Loading blank page in WebView, 2...");
            this.c("about:blank");
            return;
        }
    }

    @Override
    public final br e() {
        return this.e;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void e(boolean bl2) {
        synchronized (this) {
            int n2 = this.y;
            int n3 = bl2 ? 1 : -1;
            this.y = n2 + n3;
            if (this.y <= 0 && this.i != null) {
                this.i.q();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @TargetApi(value=19)
    public final void evaluateJavascript(String string2, ValueCallback<String> valueCallback) {
        synchronized (this) {
            void var2_2;
            if (!this.y()) {
                super.evaluateJavascript(string2, (ValueCallback)var2_2);
                return;
            }
            he.e("The webview is destroyed. Ignoring action.");
            if (var2_2 != null) {
                var2_2.onReceiveValue(null);
            }
            return;
        }
    }

    @Override
    public final void f() {
        d d2 = this.q();
        if (d2 != null) {
            d2.p();
        }
    }

    @Override
    public final void f_() {
        synchronized (this) {
            this.s = true;
            if (this.d != null) {
                this.d.f_();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    protected final void finalize() {
        block6 : {
            try {
                synchronized (this) {
                    if (this.m) break block6;
                    this.h.k();
                }
            }
            catch (Throwable throwable) {
                Object.super.finalize();
                throw throwable;
            }
            {
                av.y();
                nl.a(this);
                this.Q();
                this.P();
            }
        }
        Object.super.finalize();
    }

    @Override
    public final btw g() {
        return this.D;
    }

    @Override
    public final void g_() {
        synchronized (this) {
            this.s = false;
            if (this.d != null) {
                this.d.g_();
            }
            return;
        }
    }

    @Override
    public final View.OnClickListener getOnClickListener() {
        return this.E.get();
    }

    @Override
    public final String getRequestId() {
        synchronized (this) {
            String string2 = this.t;
            return string2;
        }
    }

    @Override
    public final int getRequestedOrientation() {
        synchronized (this) {
            int n2 = this.q;
            return n2;
        }
    }

    @Override
    public final View getView() {
        return this;
    }

    @Override
    public final WebView getWebView() {
        return this;
    }

    @Override
    public final km j() {
        return this.c;
    }

    @Override
    public final int k() {
        return this.getMeasuredHeight();
    }

    @Override
    public final int l() {
        return this.getMeasuredWidth();
    }

    @Override
    public final void loadData(String string2, String string3, String string4) {
        synchronized (this) {
            if (!this.y()) {
                super.loadData(string2, string3, string4);
                return;
            }
            he.e("The webview is destroyed. Ignoring action.");
            return;
        }
    }

    @Override
    public final void loadDataWithBaseURL(String string2, String string3, String string4, String string5, String string6) {
        synchronized (this) {
            if (!this.y()) {
                super.loadDataWithBaseURL(string2, string3, string4, string5, string6);
                return;
            }
            he.e("The webview is destroyed. Ignoring action.");
            return;
        }
    }

    @Override
    public final void loadUrl(String string2) {
        synchronized (this) {
            block7 : {
                boolean bl2 = this.y();
                if (bl2) break block7;
                super.loadUrl(string2);
                return;
            }
            he.e("The webview is destroyed. Ignoring action.");
            return;
            finally {
            }
        }
    }

    @Override
    public final void m() {
        this.L();
        HashMap<String, String> hashMap = new HashMap<String, String>(1);
        hashMap.put("version", this.c.a);
        this.a("onhide", hashMap);
    }

    @Override
    public final void n() {
        if (this.A == null) {
            btq.a(this.D.a(), this.B, "aes2");
            this.A = btq.a(this.D.a());
            this.D.a("native:view_show", this.A);
        }
        HashMap<String, String> hashMap = new HashMap<String, String>(1);
        hashMap.put("version", this.c.a);
        this.a("onshow", hashMap);
    }

    @Override
    public final void o() {
        HashMap<String, String> hashMap = new HashMap<String, String>(3);
        hashMap.put("app_muted", String.valueOf(av.C().b()));
        hashMap.put("app_volume", String.valueOf(av.C().a()));
        hashMap.put("device_volume", String.valueOf(ik.a(this.getContext())));
        this.a("volume", hashMap);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    protected final void onAttachedToWindow() {
        synchronized (this) {
            boolean bl2;
            super.onAttachedToWindow();
            if (!this.y()) {
                this.H.c();
            }
            boolean bl3 = bl2 = this.v;
            if (this.h != null) {
                bl3 = bl2;
                if (this.h.c()) {
                    if (!this.w) {
                        ViewTreeObserver.OnGlobalLayoutListener onGlobalLayoutListener = this.h.d();
                        if (onGlobalLayoutListener != null) {
                            av.z();
                            ly.a((View)this, onGlobalLayoutListener);
                        }
                        if ((onGlobalLayoutListener = this.h.e()) != null) {
                            av.z();
                            ly.a((View)this, (ViewTreeObserver.OnScrollChangedListener)onGlobalLayoutListener);
                        }
                        this.w = true;
                    }
                    this.I();
                    bl3 = true;
                }
            }
            this.f(bl3);
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    protected final void onDetachedFromWindow() {
        synchronized (this) {
            if (!this.y()) {
                this.H.d();
            }
            super.onDetachedFromWindow();
            if (this.w && this.h != null && this.h.c() && this.getViewTreeObserver() != null && this.getViewTreeObserver().isAlive()) {
                ViewTreeObserver.OnGlobalLayoutListener onGlobalLayoutListener = this.h.d();
                if (onGlobalLayoutListener != null) {
                    av.g().a(this.getViewTreeObserver(), onGlobalLayoutListener);
                }
                if ((onGlobalLayoutListener = this.h.e()) != null) {
                    this.getViewTreeObserver().removeOnScrollChangedListener((ViewTreeObserver.OnScrollChangedListener)onGlobalLayoutListener);
                }
                this.w = false;
            }
        }
        this.f(false);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void onDownloadStart(String string2, String string3, String string4, String string5, long l2) {
        try {
            string3 = new Intent("android.intent.action.VIEW");
            string3.setDataAndType(Uri.parse((String)string2), string5);
            av.e();
            hs.a(this.getContext(), (Intent)string3);
            return;
        }
        catch (ActivityNotFoundException activityNotFoundException) {}
        StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 51 + String.valueOf(string5).length());
        stringBuilder.append("Couldn't find an Activity to view url/mimetype: ");
        stringBuilder.append(string2);
        stringBuilder.append(" / ");
        stringBuilder.append(string5);
        he.b(stringBuilder.toString());
    }

    @TargetApi(value=21)
    protected final void onDraw(Canvas canvas) {
        if (this.y()) {
            return;
        }
        if (Build.VERSION.SDK_INT == 21 && canvas.isHardwareAccelerated() && !this.isAttachedToWindow()) {
            return;
        }
        super.onDraw(canvas);
        if (this.h != null && this.h.l() != null) {
            this.h.l().a();
        }
    }

    public final boolean onGenericMotionEvent(MotionEvent motionEvent) {
        bsz<Boolean> bsz2 = btk.au;
        if (bqj.f().a(bsz2).booleanValue()) {
            float f2 = motionEvent.getAxisValue(9);
            float f3 = motionEvent.getAxisValue(10);
            if (motionEvent.getActionMasked() == 8 && (f2 > 0.0f && !this.canScrollVertically(-1) || f2 < 0.0f && !this.canScrollVertically(1) || f3 > 0.0f && !this.canScrollHorizontally(-1) || f3 < 0.0f && !this.canScrollHorizontally(1))) {
                return false;
            }
        }
        return super.onGenericMotionEvent(motionEvent);
    }

    public final void onGlobalLayout() {
        boolean bl2 = this.I();
        d d2 = this.q();
        if (d2 != null && bl2) {
            d2.o();
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SuppressLint(value={"DrawAllocation"})
    protected final void onMeasure(int n2, int n3) {
        synchronized (this) {
            int n4;
            int n5;
            int n6;
            int n7;
            block24 : {
                block23 : {
                    block22 : {
                        block21 : {
                            if (this.y()) {
                                this.setMeasuredDimension(0, 0);
                                return;
                            }
                            if (this.isInEditMode() || this.n || this.j.e()) break block21;
                            if (this.j.f()) {
                                int n8;
                                int n9;
                                int n10;
                                int n11;
                                oj oj2 = this.b();
                                float f2 = oj2 != null ? oj2.e() : 0.0f;
                                if (f2 == 0.0f) {
                                    super.onMeasure(n2, n3);
                                    return;
                                }
                                int n12 = View.MeasureSpec.getSize((int)n2);
                                int n13 = View.MeasureSpec.getSize((int)n3);
                                n2 = (int)((float)n13 * f2);
                                n3 = (int)((float)n12 / f2);
                                if (n13 == 0 && n3 != 0) {
                                    n10 = (int)((float)n3 * f2);
                                    n11 = n3;
                                    n8 = n3;
                                    n9 = n12;
                                } else {
                                    n10 = n2;
                                    n8 = n3;
                                    n9 = n12;
                                    n11 = n13;
                                    if (n12 == 0) {
                                        n10 = n2;
                                        n8 = n3;
                                        n9 = n12;
                                        n11 = n13;
                                        if (n2 != 0) {
                                            n8 = (int)((float)n2 / f2);
                                            n9 = n2;
                                            n11 = n13;
                                            n10 = n2;
                                        }
                                    }
                                }
                                this.setMeasuredDimension(Math.min(n10, n9), Math.min(n8, n11));
                                return;
                            }
                            if (this.j.c()) {
                                bsz<Boolean> bsz2 = btk.cc;
                                if (!bqj.f().a(bsz2).booleanValue() && p.c()) {
                                    this.a("/contentHeight", new oh(this));
                                    this.d("(function() {  var height = -1;  if (document.body) {    height = document.body.offsetHeight;  } else if (document.documentElement) {    height = document.documentElement.offsetHeight;  }  var url = 'gmsg://mobileads.google.com/contentHeight?';  url += 'height=' + height;  try {    window.googleAdsJsInterface.notify(url);  } catch (e) {    var frame = document.getElementById('afma-notify-fluid');    if (!frame) {      frame = document.createElement('IFRAME');      frame.id = 'afma-notify-fluid';      frame.style.display = 'none';      var body = document.body || document.documentElement;      body.appendChild(frame);    }    frame.src = url;  }})();");
                                    float f3 = this.f.density;
                                    int n14 = View.MeasureSpec.getSize((int)n2);
                                    n2 = this.z != -1 ? (int)((float)this.z * f3) : View.MeasureSpec.getSize((int)n3);
                                    this.setMeasuredDimension(n14, n2);
                                    return;
                                }
                                super.onMeasure(n2, n3);
                                return;
                            }
                            if (this.j.d()) {
                                this.setMeasuredDimension(this.f.widthPixels, this.f.heightPixels);
                                return;
                            }
                            n5 = View.MeasureSpec.getMode((int)n2);
                            n7 = View.MeasureSpec.getSize((int)n2);
                            n2 = View.MeasureSpec.getMode((int)n3);
                            n4 = View.MeasureSpec.getSize((int)n3);
                            n6 = Integer.MAX_VALUE;
                            if (n5 != Integer.MIN_VALUE && n5 != 1073741824) break block22;
                            break block23;
                        }
                        super.onMeasure(n2, n3);
                        return;
                    }
                    n3 = Integer.MAX_VALUE;
                    break block24;
                }
                n3 = n7;
            }
            if (n2 == Integer.MIN_VALUE || n2 == 1073741824) {
                n6 = n4;
            }
            n2 = this.j.b;
            int n15 = 1;
            n2 = n2 <= n3 && this.j.a <= n6 ? 0 : 1;
            Object object = btk.cT;
            n5 = n2;
            if (bqj.f().a(object).booleanValue()) {
                n3 = (float)this.j.b / this.g <= (float)n3 / this.g && (float)this.j.a / this.g <= (float)n6 / this.g ? n15 : 0;
                n5 = n2;
                if (n2 != 0) {
                    n5 = n3;
                }
            }
            if (n5 != 0) {
                float f4 = this.f.density;
                n2 = (int)((float)this.j.b / this.g);
                n3 = (int)((float)this.j.a / this.g);
                n6 = (int)((float)n7 / this.g);
                n5 = (int)((float)n4 / this.g);
                object = new StringBuilder(103);
                object.append("Not enough space to show ad. Needs ");
                object.append(n2);
                object.append("x");
                object.append(n3);
                object.append(" dp, but only has ");
                object.append(n6);
                object.append("x");
                object.append(n5);
                object.append(" dp.");
                he.e(object.toString());
                if (this.getVisibility() != 8) {
                    this.setVisibility(4);
                }
                this.setMeasuredDimension(0, 0);
                return;
            }
            if (this.getVisibility() != 8) {
                this.setVisibility(0);
            }
            this.setMeasuredDimension(this.j.b, this.j.a);
            return;
        }
    }

    @Override
    public final void onPause() {
        if (this.y()) {
            return;
        }
        try {
            super.onPause();
            return;
        }
        catch (Exception exception) {
            he.b("Could not pause webview.", exception);
            return;
        }
    }

    @Override
    public final void onResume() {
        if (this.y()) {
            return;
        }
        try {
            super.onResume();
            return;
        }
        catch (Exception exception) {
            he.b("Could not resume webview.", exception);
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final boolean onTouchEvent(MotionEvent motionEvent) {
        if (this.h.c()) {
            synchronized (this) {
                if (this.x != null) {
                    this.x.a(motionEvent);
                }
            }
        } else if (this.b != null) {
            this.b.a(motionEvent);
        }
        if (this.y()) {
            return false;
        }
        return super.onTouchEvent(motionEvent);
    }

    @Override
    public final Context p() {
        return this.a.b();
    }

    @Override
    public final d q() {
        synchronized (this) {
            d d2 = this.i;
            return d2;
        }
    }

    @Override
    public final d r() {
        synchronized (this) {
            d d2 = this.F;
            return d2;
        }
    }

    @Override
    public final pr s() {
        synchronized (this) {
            pr pr2 = this.j;
            return pr2;
        }
    }

    @Override
    public final void setContext(Context context) {
        this.a.setBaseContext(context);
        this.H.a(this.a.a());
    }

    @Override
    public final void setOnClickListener(View.OnClickListener onClickListener) {
        this.E = new WeakReference<View.OnClickListener>(onClickListener);
        super.setOnClickListener(onClickListener);
    }

    @Override
    public final void setRequestedOrientation(int n2) {
        synchronized (this) {
            this.q = n2;
            if (this.i != null) {
                this.i.a(this.q);
            }
            return;
        }
    }

    @Override
    public final void setWebViewClient(WebViewClient webViewClient) {
        super.setWebViewClient(webViewClient);
        if (webViewClient instanceof nv) {
            this.h = (nv)webViewClient;
        }
    }

    @Override
    public final void stopLoading() {
        if (this.y()) {
            return;
        }
        try {
            super.stopLoading();
            return;
        }
        catch (Exception exception) {
            he.b("Could not stop loading webview.", exception);
            return;
        }
    }

    @Override
    public final String t() {
        synchronized (this) {
            String string2 = this.k;
            return string2;
        }
    }

    @Override
    public final /* synthetic */ pk u() {
        return this.h;
    }

    @Override
    public final boolean v() {
        synchronized (this) {
            boolean bl2 = this.l;
            return bl2;
        }
    }

    @Override
    public final agk w() {
        return this.b;
    }

    @Override
    public final boolean x() {
        synchronized (this) {
            boolean bl2 = this.n;
            return bl2;
        }
    }

    @Override
    public final boolean y() {
        synchronized (this) {
            boolean bl2 = this.m;
            return bl2;
        }
    }

    @Override
    public final void z() {
        synchronized (this) {
            he.a("Destroying WebView!");
            this.P();
            hs.a.post((Runnable)new oi(this));
            return;
        }
    }
}

