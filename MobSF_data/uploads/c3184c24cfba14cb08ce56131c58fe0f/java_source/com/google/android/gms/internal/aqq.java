/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Bundle
 */
package com.google.android.gms.internal;

import android.content.Context;
import android.os.Bundle;
import com.google.android.gms.analytics.a.a;
import com.google.android.gms.analytics.a.b;
import com.google.android.gms.analytics.a.c;
import com.google.android.gms.analytics.c;
import com.google.android.gms.analytics.e;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.util.g;
import com.google.android.gms.internal.aic;
import com.google.android.gms.internal.aiv;
import com.google.android.gms.internal.ajj;
import com.google.android.gms.internal.ajm;
import com.google.android.gms.internal.akw;
import com.google.android.gms.internal.alc;
import com.google.android.gms.internal.ald;
import com.google.android.gms.internal.asj;
import com.google.android.gms.internal.asm;
import com.google.android.gms.internal.asp;
import com.google.android.gms.internal.asu;
import com.google.android.gms.internal.asy;
import com.google.android.gms.internal.xo;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public final class aqq
extends ald {
    private static final String a = xo.P.toString();
    private static final List<String> b = Arrays.asList("detail", "checkout", "checkout_option", "click", "add", "remove", "purchase", "refund");
    private static final Pattern c = Pattern.compile("dimension(\\d+)");
    private static final Pattern d = Pattern.compile("metric(\\d+)");
    private static final Set<String> e = g.a("", "0", "false");
    private static final Map<String, String> f = g.a("transactionId", "&ti", "transactionAffiliation", "&ta", "transactionTax", "&tt", "transactionShipping", "&ts", "transactionTotal", "&tr", "transactionCurrency", "&cu");
    private static final Map<String, String> g = g.a("name", "&in", "sku", "&ic", "category", "&iv", "price", "&ip", "quantity", "&iq", "currency", "&cu");
    private final akw h;
    private final ajj i;
    private Map<String, Object> j;

    public aqq(Context context, ajj ajj2) {
        this(new akw(context), ajj2);
    }

    private aqq(akw akw2, ajj ajj2) {
        this.i = ajj2;
        this.h = akw2;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private static a a(Map<String, Object> var0) {
        var4_1 = new a();
        var2_2 = var0.get("id");
        if (var2_2 != null) {
            var4_1.a(String.valueOf(var2_2));
        }
        if ((var2_2 = var0.get("name")) != null) {
            var4_1.b(String.valueOf(var2_2));
        }
        if ((var2_2 = var0.get("brand")) != null) {
            var4_1.c(String.valueOf(var2_2));
        }
        if ((var2_2 = var0.get("category")) != null) {
            var4_1.d(String.valueOf(var2_2));
        }
        if ((var2_2 = var0.get("variant")) != null) {
            var4_1.e(String.valueOf(var2_2));
        }
        if ((var2_2 = var0.get("coupon")) != null) {
            var4_1.f(String.valueOf(var2_2));
        }
        if ((var2_2 = var0.get("position")) != null) {
            var4_1.a(aqq.b(var2_2));
        }
        if ((var2_2 = var0.get("price")) != null) {
            var4_1.a(aqq.a(var2_2));
        }
        if ((var2_2 = var0.get("quantity")) != null) {
            var4_1.b(aqq.b(var2_2));
        }
        var5_3 = var0.keySet().iterator();
        while (var5_3.hasNext() != false) {
            block17 : {
                var2_2 = var5_3.next();
                var3_5 = aqq.c.matcher((CharSequence)var2_2);
                if (var3_5.matches()) {
                    var1_4 = Integer.parseInt(var3_5.group(1));
                    var4_1.a(var1_4, String.valueOf(var0.get(var2_2)));
                    continue;
                }
                var3_5 = aqq.d.matcher((CharSequence)var2_2);
                if (!var3_5.matches()) continue;
                try {
                    var1_4 = Integer.parseInt(var3_5.group(1));
                }
                catch (NumberFormatException var3_7) {}
                var4_1.a(var1_4, aqq.b(var0.get(var2_2)));
                continue;
                catch (NumberFormatException var3_6) {}
                var3_5 = "illegal number in custom dimension value: ";
                var2_2 = String.valueOf(var2_2);
                if (var2_2.length() != 0) ** GOTO lbl-1000
                var2_2 = new String("illegal number in custom dimension value: ");
                break block17;
                var3_5 = "illegal number in custom metric value: ";
                var2_2 = String.valueOf(var2_2);
                if (var2_2.length() != 0) lbl-1000: // 2 sources:
                {
                    var2_2 = var3_5.concat((String)var2_2);
                } else {
                    var2_2 = new String("illegal number in custom metric value: ");
                }
            }
            aiv.b((String)var2_2);
        }
        return var4_1;
    }

    private static Double a(Object object) {
        if (object instanceof String) {
            try {
                object = Double.valueOf((String)object);
                return object;
            }
            catch (NumberFormatException numberFormatException) {
                String string2 = String.valueOf(numberFormatException.getMessage());
                string2 = string2.length() != 0 ? "Cannot convert the object to Double: ".concat(string2) : new String("Cannot convert the object to Double: ");
                throw new RuntimeException(string2);
            }
        }
        if (object instanceof Integer) {
            return ((Integer)object).doubleValue();
        }
        if (object instanceof Double) {
            return (Double)object;
        }
        object = (object = String.valueOf(object.toString())).length() != 0 ? "Cannot convert the object to Double: ".concat((String)object) : new String("Cannot convert the object to Double: ");
        throw new RuntimeException((String)object);
    }

    private final List<Map<String, Object>> a(String object) {
        if ((object = this.j.get(object)) == null) {
            return null;
        }
        if (object instanceof List) {
            object = (List)object;
            Iterator iterator = object.iterator();
            while (iterator.hasNext()) {
                if (iterator.next() instanceof Map) continue;
                throw new IllegalArgumentException("Each element of transactionProducts should be of type Map.");
            }
            return object;
        }
        throw new IllegalArgumentException("transactionProducts should be of type List.");
    }

    private static Map<String, String> a(asj<?> iterator) {
        ah.a(iterator);
        ah.b(iterator instanceof asu);
        LinkedHashMap<String, String> linkedHashMap = new LinkedHashMap<String, String>();
        iterator = asy.a(asy.b(iterator));
        ah.a(iterator instanceof Map);
        for (Map.Entry entry : ((Map)((Object)iterator)).entrySet()) {
            linkedHashMap.put(entry.getKey().toString(), entry.getValue().toString());
        }
        return linkedHashMap;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void a(e e2, asj<?> arrayList, asj<?> map, asj<?> asj2) {
        String string2 = (String)this.j.get("transactionId");
        if (string2 == null) {
            aiv.a("Cannot find transactionId in data layer.");
            return;
        }
        ArrayList<Object> arrayList2 = new ArrayList<Object>();
        try {
            Object object;
            Object object2 = aqq.b(arrayList);
            object2.put((String)"&t", (String)"transaction");
            map = map == asp.e ? f : aqq.a(map);
            for (Map.Entry entry : map.entrySet()) {
                object = (String)this.j.get(entry.getKey());
                if (object == null) continue;
                object2.put((String)entry.getValue(), object);
            }
            arrayList2.add(object2);
            map = this.a("transactionProducts");
            if (map != null) {
                object2 = map.iterator();
                while (object2.hasNext()) {
                    Map map2 = (Map)object2.next();
                    if (map2.get("name") == null) {
                        aiv.a("Unable to send transaction item hit due to missing 'name' field.");
                        return;
                    }
                    object = aqq.b(arrayList);
                    object.put("&t", "item");
                    object.put("&ti", string2);
                    map = asj2 == asp.e ? g : aqq.a(asj2);
                    for (Map.Entry entry : map.entrySet()) {
                        Object v2 = map2.get(entry.getKey());
                        if (v2 == null) continue;
                        object.put((String)entry.getValue(), v2.toString());
                    }
                    arrayList2.add(object);
                }
            }
            arrayList = arrayList2;
            int n2 = arrayList.size();
            int n3 = 0;
            while (n3 < n2) {
                map = arrayList.get(n3);
                ++n3;
                e2.a(map);
            }
            return;
        }
        catch (IllegalArgumentException illegalArgumentException) {
            aiv.a("Unable to send transaction", illegalArgumentException);
            return;
        }
    }

    private static Integer b(Object object) {
        if (object instanceof String) {
            try {
                object = Integer.valueOf((String)object);
                return object;
            }
            catch (NumberFormatException numberFormatException) {
                String string2 = String.valueOf(numberFormatException.getMessage());
                string2 = string2.length() != 0 ? "Cannot convert the object to Integer: ".concat(string2) : new String("Cannot convert the object to Integer: ");
                throw new RuntimeException(string2);
            }
        }
        if (object instanceof Double) {
            return ((Double)object).intValue();
        }
        if (object instanceof Integer) {
            return (Integer)object;
        }
        object = (object = String.valueOf(object.toString())).length() != 0 ? "Cannot convert the object to Integer: ".concat((String)object) : new String("Cannot convert the object to Integer: ");
        throw new RuntimeException((String)object);
    }

    private static Map<String, String> b(asj<?> object) {
        String string2 = (String)(object = aqq.a(object)).get("&aip");
        if (string2 != null && e.contains(string2.toLowerCase())) {
            object.remove("&aip");
        }
        return object;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    protected final /* varargs */ asj<?> a(ajm var1_1, asj<?> ... var2_7) {
        block66 : {
            block65 : {
                block61 : {
                    block67 : {
                        block62 : {
                            block63 : {
                                block64 : {
                                    block60 : {
                                        block59 : {
                                            block58 : {
                                                block57 : {
                                                    block56 : {
                                                        block55 : {
                                                            block54 : {
                                                                block53 : {
                                                                    block52 : {
                                                                        block51 : {
                                                                            block50 : {
                                                                                block49 : {
                                                                                    var4_8 = true;
                                                                                    ah.b(true);
                                                                                    var5_9 = ((Object)var2_7).length > 0;
                                                                                    ah.b(var5_9);
                                                                                    try {
                                                                                        this.j = asy.a(this.i.a().e());
                                                                                    }
                                                                                    catch (Throwable var1_6) {
                                                                                        this.j = null;
                                                                                        throw var1_6;
                                                                                    }
                                                                                    var13_10 = var2_7[0];
                                                                                    if (((Object)var2_7).length <= 1) break block49;
                                                                                    var1_1 = var2_7[1];
                                                                                    ** GOTO lbl18
                                                                                }
                                                                                var1_1 = new asm(true);
lbl18: // 2 sources:
                                                                                if (((Object)var2_7).length <= 2) break block50;
                                                                                var6_11 = var2_7[2];
                                                                                ** GOTO lbl24
                                                                            }
                                                                            var6_11 = new asm(false);
lbl24: // 2 sources:
                                                                            if (((Object)var2_7).length <= 3) break block51;
                                                                            var7_12 = var2_7[3];
                                                                            ** GOTO lbl30
                                                                        }
                                                                        var7_12 = asp.e;
lbl30: // 2 sources:
                                                                        if (((Object)var2_7).length <= 4) break block52;
                                                                        var8_13 = var2_7[4];
                                                                        ** GOTO lbl36
                                                                    }
                                                                    var8_13 = asp.e;
lbl36: // 2 sources:
                                                                    if (((Object)var2_7).length <= 5) break block53;
                                                                    var9_14 = var2_7[5];
                                                                    ** GOTO lbl42
                                                                }
                                                                var9_14 = new asm(false);
lbl42: // 2 sources:
                                                                if (((Object)var2_7).length <= 6) break block54;
                                                                var10_15 = var2_7[6];
                                                                ** GOTO lbl48
                                                            }
                                                            var10_15 = new asm(false);
lbl48: // 2 sources:
                                                            if (((Object)var2_7).length <= 7) break block55;
                                                            var11_16 = var2_7[7];
                                                            ** GOTO lbl54
                                                        }
                                                        var11_16 = asp.e;
lbl54: // 2 sources:
                                                        if (((Object)var2_7).length <= 8) break block56;
                                                        var2_7 = var2_7[8];
                                                        ** GOTO lbl60
                                                    }
                                                    var2_7 = new asm(false);
lbl60: // 2 sources:
                                                    ah.b(var13_10 instanceof asu);
                                                    if (var7_12 != asp.e && !(var7_12 instanceof asu)) break block57;
                                                    break block58;
                                                }
                                                var5_9 = false;
                                                break block59;
                                            }
                                            var5_9 = true;
                                        }
                                        ah.b(var5_9);
                                        var5_9 = var8_13 == asp.e || var8_13 instanceof asu;
                                        ah.b(var5_9);
                                        var5_9 = var11_16 == asp.e || var11_16 instanceof asu;
                                        ah.b(var5_9);
                                        var12_17 = this.h.a("_GTM_DEFAULT_TRACKER_");
                                        var12_17.a(alc.a(var2_7));
                                        if (!alc.a(var9_14)) break block60;
                                        var6_11 = new c.b();
                                        var2_7 = aqq.b(var13_10);
                                        var6_11.a((Map<String, String>)var2_7);
                                        var1_1 = alc.a(var10_15) != false ? this.j.get("ecommerce") : asy.a(asy.b(var11_16));
                                        if (!(var1_1 instanceof Map)) break block61;
                                        var7_12 = (Map)var1_1;
                                        var1_1 = var2_7 = (String)var2_7.get("&cu");
                                        if (var2_7 == null) {
                                            var1_1 = (String)var7_12.get("currencyCode");
                                        }
                                        if (var1_1 != null) {
                                            var6_11.a("&cu", (String)var1_1);
                                        }
                                        if (!((var1_1 = var7_12.get("impressions")) instanceof List)) break block62;
                                        var2_7 = ((List)var1_1).iterator();
                                        break block63;
                                    }
                                    if (!alc.a(var1_1)) break block64;
                                    var1_1 = aqq.b(var13_10);
                                    break block65;
                                }
                                if (alc.a(var6_11)) {
                                    this.a(var12_17, (asj<?>)var13_10, (asj<?>)var7_12, (asj<?>)var8_13);
                                } else {
                                    aiv.b("Ignoring unknown tag.");
                                }
                                break block66;
                            }
                            while (var2_7.hasNext()) {
                                var1_1 = (Map)var2_7.next();
                                try {
                                    var6_11.a(aqq.a((Map<String, Object>)var1_1), (String)var1_1.get("list"));
                                }
                                catch (RuntimeException var1_2) {
                                    var1_1 = String.valueOf(var1_2.getMessage());
                                    var1_1 = var1_1.length() != 0 ? "Failed to extract a product from event data. ".concat((String)var1_1) : new String("Failed to extract a product from event data. ");
                                    aiv.a((String)var1_1);
                                }
                            }
                        }
                        if (!var7_12.containsKey("promoClick")) break block67;
                        var1_1 = ((Map)var7_12.get("promoClick")).get("promotions");
                        ** GOTO lbl119
                    }
                    if (var7_12.containsKey("promoView")) {
                        var1_1 = ((Map)var7_12.get("promoView")).get("promotions");
lbl119: // 2 sources:
                        var1_1 = (List)var1_1;
                    } else {
                        var1_1 = null;
                    }
                    var3_18 = var4_8;
                    if (var1_1 != null) {
                        var2_7 = var1_1.iterator();
                        while (var2_7.hasNext()) {
                            var8_13 = (Map)var2_7.next();
                            try {
                                var1_1 = new c();
                                var9_14 = (String)var8_13.get("id");
                                if (var9_14 != null) {
                                    var1_1.a(String.valueOf(var9_14));
                                }
                                if ((var9_14 = (String)var8_13.get("name")) != null) {
                                    var1_1.b(String.valueOf(var9_14));
                                }
                                if ((var9_14 = (String)var8_13.get("creative")) != null) {
                                    var1_1.c(String.valueOf(var9_14));
                                }
                                if ((var8_13 = (String)var8_13.get("position")) != null) {
                                    var1_1.d(String.valueOf(var8_13));
                                }
                                var6_11.a((c)var1_1);
                            }
                            catch (RuntimeException var1_3) {
                                var1_1 = String.valueOf(var1_3.getMessage());
                                var1_1 = var1_1.length() != 0 ? "Failed to extract a promotion from event data. ".concat((String)var1_1) : new String("Failed to extract a promotion from event data. ");
                                aiv.a((String)var1_1);
                            }
                        }
                        if (var7_12.containsKey("promoClick")) {
                            var6_11.a("&promoa", "click");
                            var3_18 = false;
                        } else {
                            var6_11.a("&promoa", "view");
                            var3_18 = var4_8;
                        }
                    }
                    if (var3_18) {
                        var1_1 = aqq.b.iterator();
                        while (var1_1.hasNext()) {
                            var2_7 = var1_1.next();
                            if (!var7_12.containsKey(var2_7)) continue;
                            var1_1 = (List)(var7_12 = (Map)var7_12.get(var2_7)).get("products");
                            if (var1_1 != null) {
                                var8_13 = var1_1.iterator();
                                while (var8_13.hasNext()) {
                                    var1_1 = (Map)var8_13.next();
                                    try {
                                        var6_11.a(aqq.a((Map<String, Object>)var1_1));
                                    }
                                    catch (RuntimeException var1_4) {
                                        var1_1 = String.valueOf(var1_4.getMessage());
                                        var1_1 = var1_1.length() != 0 ? "Failed to extract a product from event data. ".concat((String)var1_1) : new String("Failed to extract a product from event data. ");
                                        aiv.a((String)var1_1);
                                    }
                                }
                            }
                            try {
                                if (var7_12.containsKey("actionField")) {
                                    var1_1 = (Map)var7_12.get("actionField");
                                    var2_7 = new b((String)var2_7);
                                    var7_12 = var1_1.get("id");
                                    if (var7_12 != null) {
                                        var2_7.a(String.valueOf(var7_12));
                                    }
                                    if ((var7_12 = var1_1.get("affiliation")) != null) {
                                        var2_7.b(String.valueOf(var7_12));
                                    }
                                    if ((var7_12 = var1_1.get("coupon")) != null) {
                                        var2_7.c(String.valueOf(var7_12));
                                    }
                                    if ((var7_12 = var1_1.get("list")) != null) {
                                        var2_7.e(String.valueOf(var7_12));
                                    }
                                    if ((var7_12 = var1_1.get("option")) != null) {
                                        var2_7.d(String.valueOf(var7_12));
                                    }
                                    if ((var7_12 = var1_1.get("revenue")) != null) {
                                        var2_7.a(aqq.a(var7_12));
                                    }
                                    if ((var7_12 = var1_1.get("tax")) != null) {
                                        var2_7.b(aqq.a(var7_12));
                                    }
                                    if ((var7_12 = var1_1.get("shipping")) != null) {
                                        var2_7.c(aqq.a(var7_12));
                                    }
                                    var7_12 = var1_1.get("step");
                                    var1_1 = var2_7;
                                    if (var7_12 != null) {
                                        var2_7.a(aqq.b(var7_12));
                                        var1_1 = var2_7;
                                    }
                                } else {
                                    var1_1 = new b((String)var2_7);
                                }
                                var6_11.a((b)var1_1);
                                break;
                            }
                            catch (RuntimeException var1_5) {
                                var1_1 = String.valueOf(var1_5.getMessage());
                                var1_1 = var1_1.length() != 0 ? "Failed to extract a product action from event data. ".concat((String)var1_1) : new String("Failed to extract a product action from event data. ");
                                aiv.a((String)var1_1);
                                break;
                            }
                        }
                    }
                }
                var1_1 = var6_11.a();
            }
            var12_17.a((Map<String, String>)var1_1);
        }
        this.j = null;
        return asp.e;
    }
}

