/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.bmz;
import com.google.android.gms.internal.bnb;
import com.google.android.gms.internal.bnc;
import com.google.android.gms.internal.bnd;
import com.google.android.gms.internal.bne;
import com.google.android.gms.internal.bng;
import com.google.android.gms.internal.bni;
import com.google.android.gms.internal.he;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Iterator;
import java.util.Locale;
import java.util.PriorityQueue;

@ak
public final class bna {
    private final int a;
    private final int b;
    private final int c;
    private final bmz d = new bne();

    public bna(int n2) {
        this.b = n2;
        this.a = 6;
        this.c = 0;
    }

    private final String a(String object) {
        Object object2 = object.split("\n");
        if (((String[])object2).length == 0) {
            return "";
        }
        object = new bnc();
        Object object3 = new PriorityQueue(this.b, new bnb(this));
        for (int i2 = 0; i2 < ((String[])object2).length; ++i2) {
            String[] arrstring = bnd.a(object2[i2], false);
            if (arrstring.length == 0) continue;
            bng.a(arrstring, this.b, this.a, (PriorityQueue<bni>)object3);
        }
        object2 = object3.iterator();
        while (object2.hasNext()) {
            object3 = (bni)object2.next();
            try {
                object.a(this.d.a(object3.b));
            }
            catch (IOException iOException) {
                he.b("Error while writing hash to byteStream", iOException);
                break;
            }
        }
        return object.toString();
    }

    public final String a(ArrayList<String> arrayList) {
        StringBuilder stringBuilder = new StringBuilder();
        int n2 = arrayList.size();
        for (int i2 = 0; i2 < n2; ++i2) {
            String string2 = arrayList.get(i2);
            stringBuilder.append(string2.toLowerCase(Locale.US));
            stringBuilder.append('\n');
        }
        return this.a(stringBuilder.toString());
    }
}

