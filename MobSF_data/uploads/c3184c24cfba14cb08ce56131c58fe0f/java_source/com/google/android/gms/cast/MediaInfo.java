/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  org.json.JSONArray
 *  org.json.JSONException
 *  org.json.JSONObject
 */
package com.google.android.gms.cast;

import android.os.Parcel;
import android.os.Parcelable;
import com.google.android.gms.cast.MediaTrack;
import com.google.android.gms.cast.a;
import com.google.android.gms.cast.b;
import com.google.android.gms.cast.h;
import com.google.android.gms.cast.k;
import com.google.android.gms.cast.q;
import com.google.android.gms.common.internal.ReflectedParcelable;
import com.google.android.gms.common.util.o;
import com.google.android.gms.internal.vw;
import com.google.android.gms.internal.wz;
import com.google.android.gms.internal.xc;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class MediaInfo
extends wz
implements ReflectedParcelable {
    public static final Parcelable.Creator<MediaInfo> CREATOR = new q();
    private final String a;
    private int b;
    private String c;
    private h d;
    private long e;
    private List<MediaTrack> f;
    private k g;
    private String h;
    private List<b> i;
    private List<a> j;
    private String k;
    private JSONObject l;

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    MediaInfo(String var1_1, int var2_3, String var3_4, h var4_5, long var5_6, List<MediaTrack> var7_7, k var8_8, String var9_9, List<b> var10_10, List<a> var11_11, String var12_12) {
        block4 : {
            super();
            this.a = var1_1;
            this.b = var2_3;
            this.c = var3_4;
            this.d = var4_5;
            this.e = var5_6;
            this.f = var7_7;
            this.g = var8_8;
            this.h = var9_9;
            if (this.h != null) {
                this.l = new JSONObject(this.h);
                ** GOTO lbl19
            } else {
                this.l = null;
            }
            break block4;
            catch (JSONException var1_2) {}
            this.l = null;
            this.h = null;
        }
        this.i = var10_10;
        this.j = var11_11;
        this.k = var12_12;
    }

    /*
     * Enabled aggressive block sorting
     */
    MediaInfo(JSONObject jSONObject) {
        int n2;
        double d2;
        JSONArray jSONArray;
        this(jSONObject.getString("contentId"), -1, null, null, -1L, null, null, null, null, null, null);
        Object object = jSONObject.getString("streamType");
        boolean bl2 = "NONE".equals(object);
        int n3 = 0;
        if (bl2) {
            this.b = 0;
        } else {
            n2 = "BUFFERED".equals(object) ? 1 : ("LIVE".equals(object) ? 2 : -1);
            this.b = n2;
        }
        this.c = jSONObject.getString("contentType");
        if (jSONObject.has("metadata")) {
            object = jSONObject.getJSONObject("metadata");
            this.d = new h(object.getInt("metadataType"));
            this.d.a((JSONObject)object);
        }
        this.e = -1L;
        if (jSONObject.has("duration") && !jSONObject.isNull("duration") && !Double.isNaN(d2 = jSONObject.optDouble("duration", 0.0)) && !Double.isInfinite(d2)) {
            this.e = (long)(d2 * 1000.0);
        }
        bl2 = jSONObject.has("tracks");
        object = null;
        if (bl2) {
            this.f = new ArrayList<MediaTrack>();
            jSONArray = jSONObject.getJSONArray("tracks");
            for (n2 = n3; n2 < jSONArray.length(); ++n2) {
                MediaTrack mediaTrack = new MediaTrack(jSONArray.getJSONObject(n2));
                this.f.add(mediaTrack);
            }
        } else {
            this.f = null;
        }
        if (jSONObject.has("textTrackStyle")) {
            jSONArray = jSONObject.getJSONObject("textTrackStyle");
            object = new k();
            object.a((JSONObject)jSONArray);
        }
        this.g = object;
        this.a(jSONObject);
        this.l = jSONObject.optJSONObject("customData");
        if (jSONObject.has("entity")) {
            this.k = jSONObject.getString("entity");
        }
    }

    public String a() {
        return this.a;
    }

    public final void a(List<b> list) {
        this.i = list;
    }

    final void a(JSONObject jSONObject) {
        int n2;
        Object object;
        boolean bl2 = jSONObject.has("breaks");
        int n3 = 0;
        if (bl2) {
            object = jSONObject.getJSONArray("breaks");
            this.i = new ArrayList<b>(object.length());
            for (n2 = 0; n2 < object.length(); ++n2) {
                b b2 = b.a(object.getJSONObject(n2));
                if (b2 != null) {
                    this.i.add(b2);
                    continue;
                }
                this.i.clear();
                break;
            }
        }
        if (jSONObject.has("breakClips")) {
            jSONObject = jSONObject.getJSONArray("breakClips");
            this.j = new ArrayList<a>(jSONObject.length());
            for (n2 = n3; n2 < jSONObject.length(); ++n2) {
                object = a.a(jSONObject.getJSONObject(n2));
                if (object != null) {
                    this.j.add((a)object);
                    continue;
                }
                this.j.clear();
                break;
            }
        }
    }

    public int b() {
        return this.b;
    }

    public String c() {
        return this.c;
    }

    public h d() {
        return this.d;
    }

    public long e() {
        return this.e;
    }

    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof MediaInfo)) {
            return false;
        }
        object = (MediaInfo)object;
        boolean bl2 = this.l == null;
        boolean bl3 = object.l == null;
        if (bl2 != bl3) {
            return false;
        }
        if (this.l != null && object.l != null && !o.a((Object)this.l, (Object)object.l)) {
            return false;
        }
        if (vw.a(this.a, object.a) && this.b == object.b && vw.a(this.c, object.c) && vw.a(this.d, object.d) && this.e == object.e && vw.a(this.f, object.f) && vw.a(this.g, object.g) && vw.a(this.i, object.i) && vw.a(this.j, object.j) && vw.a(this.k, object.k)) {
            return true;
        }
        return false;
    }

    public List<MediaTrack> f() {
        return this.f;
    }

    public k g() {
        return this.g;
    }

    public List<b> h() {
        if (this.i == null) {
            return null;
        }
        return Collections.unmodifiableList(this.i);
    }

    public int hashCode() {
        return Arrays.hashCode(new Object[]{this.a, this.b, this.c, this.d, this.e, String.valueOf((Object)this.l), this.f, this.g, this.i, this.j, this.k});
    }

    public List<a> i() {
        if (this.j == null) {
            return null;
        }
        return Collections.unmodifiableList(this.j);
    }

    public String j() {
        return this.k;
    }

    /*
     * Exception decompiling
     */
    public final JSONObject k() {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // org.benf.cfr.reader.util.ConfusedCFRException: First case is not immediately after switch.
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.examineSwitchContiguity(SwitchReplacer.java:366)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.replaceRawSwitches(SwitchReplacer.java:65)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:416)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }

    public void writeToParcel(Parcel parcel, int n2) {
        String string2 = this.l == null ? null : this.l.toString();
        this.h = string2;
        int n3 = xc.a(parcel);
        xc.a(parcel, 2, this.a(), false);
        xc.a(parcel, 3, this.b());
        xc.a(parcel, 4, this.c(), false);
        xc.a(parcel, 5, this.d(), n2, false);
        xc.a(parcel, 6, this.e());
        xc.c(parcel, 7, this.f(), false);
        xc.a(parcel, 8, this.g(), n2, false);
        xc.a(parcel, 9, this.h, false);
        xc.c(parcel, 10, this.h(), false);
        xc.c(parcel, 11, this.i(), false);
        xc.a(parcel, 12, this.j(), false);
        xc.a(parcel, n3);
    }
}

