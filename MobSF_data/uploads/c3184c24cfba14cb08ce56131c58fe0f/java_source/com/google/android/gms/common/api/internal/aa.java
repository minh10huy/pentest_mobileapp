/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Bundle
 *  android.os.Handler
 *  android.os.Looper
 *  android.os.Message
 *  android.util.Log
 */
package com.google.android.gms.common.api.internal;

import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.util.Log;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.api.a;
import com.google.android.gms.common.api.f;
import com.google.android.gms.common.api.g;
import com.google.android.gms.common.api.internal.BasePendingResult;
import com.google.android.gms.common.api.internal.ab;
import com.google.android.gms.common.api.internal.ac;
import com.google.android.gms.common.api.internal.ad;
import com.google.android.gms.common.api.internal.ae;
import com.google.android.gms.common.api.internal.af;
import com.google.android.gms.common.api.internal.ag;
import com.google.android.gms.common.api.internal.ai;
import com.google.android.gms.common.api.internal.ax;
import com.google.android.gms.common.api.internal.b;
import com.google.android.gms.common.api.internal.bb;
import com.google.android.gms.common.api.internal.bc;
import com.google.android.gms.common.api.internal.bj;
import com.google.android.gms.common.api.internal.bp;
import com.google.android.gms.common.api.internal.bv;
import com.google.android.gms.common.api.internal.bz;
import com.google.android.gms.common.api.internal.cc;
import com.google.android.gms.common.api.internal.cf;
import com.google.android.gms.common.api.internal.cp;
import com.google.android.gms.common.api.internal.cw;
import com.google.android.gms.common.api.internal.cy;
import com.google.android.gms.common.api.k;
import com.google.android.gms.common.api.l;
import com.google.android.gms.common.c;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.internal.bd;
import com.google.android.gms.common.m;
import com.google.android.gms.internal.agr;
import com.google.android.gms.internal.ags;
import com.google.android.gms.internal.xg;
import com.google.android.gms.internal.xi;
import com.google.android.gms.internal.xp;
import java.io.FileDescriptor;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Set;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.locks.Lock;

public final class aa
extends f
implements bc {
    final Queue<cp<?, ?>> a = new LinkedList();
    final Map<a.d<?>, a.f> b;
    Set<Scope> c = new HashSet<Scope>();
    Set<bz> d = null;
    final cc e;
    private final Lock f;
    private boolean g;
    private final com.google.android.gms.common.internal.f h;
    private bb i = null;
    private final int j;
    private final Context k;
    private final Looper l;
    private volatile boolean m;
    private long n = 120000L;
    private long o = 5000L;
    private final af p;
    private final c q;
    private ax r;
    private bd s;
    private Map<a<?>, Boolean> t;
    private a.b<? extends agr, ags> u;
    private final bj v = new bj();
    private final ArrayList<cw> w;
    private Integer x = null;
    private final com.google.android.gms.common.internal.g y = new ab(this);

    public aa(Context object, Lock object22, Looper looper, bd bd2, c c2, a.b<? extends agr, ags> b2, Map<a<?>, Boolean> map, List<f.b> list, List<f.c> list2, Map<a.d<?>, a.f> map2, int n2, int n3, ArrayList<cw> arrayList, boolean bl2) {
        void var11_15;
        void var9_13;
        void var6_10;
        void var8_12;
        void var4_8;
        void var10_14;
        void var7_11;
        void var5_9;
        void var3_7;
        void var13_17;
        this.k = object;
        this.f = object22;
        this.g = false;
        this.h = new com.google.android.gms.common.internal.f((Looper)var3_7, this.y);
        this.l = var3_7;
        this.p = new af(this, (Looper)var3_7);
        this.q = var5_9;
        this.j = var11_15;
        if (this.j >= 0) {
            void var12_16;
            this.x = (int)var12_16;
        }
        this.t = var7_11;
        this.b = var10_14;
        this.w = var13_17;
        this.e = new cc(this.b);
        for (f.b b3 : var8_12) {
            this.h.a(b3);
        }
        for (f.c c3 : var9_13) {
            this.h.a(c3);
        }
        this.s = var4_8;
        this.u = var6_10;
    }

    public static int a(Iterable<a.f> object, boolean bl2) {
        object = object.iterator();
        boolean bl3 = false;
        boolean bl4 = false;
        while (object.hasNext()) {
            a.f f2 = (a.f)object.next();
            boolean bl5 = bl3;
            if (f2.i()) {
                bl5 = true;
            }
            bl3 = bl5;
            if (!f2.c()) continue;
            bl4 = true;
            bl3 = bl5;
        }
        if (bl3) {
            if (bl4 && bl2) {
                return 2;
            }
            return 1;
        }
        return 3;
    }

    private final void a(f f2, bv bv2, boolean bl2) {
        xg.c.a(f2).a(new ae(this, bv2, bl2, f2));
    }

    static /* synthetic */ void a(aa aa2) {
        aa2.p();
    }

    static /* synthetic */ void a(aa aa2, f f2, bv bv2, boolean bl2) {
        aa2.a(f2, bv2, true);
    }

    private final void b(int n2) {
        block16 : {
            block15 : {
                block14 : {
                    if (this.x != null) break block14;
                    this.x = n2;
                    break block15;
                }
                if (this.x != n2) break block16;
            }
            if (this.i != null) {
                return;
            }
            Iterator<a.f> iterator = this.b.values().iterator();
            boolean bl2 = false;
            n2 = 0;
            while (iterator.hasNext()) {
                a.f f2 = iterator.next();
                boolean bl3 = bl2;
                if (f2.i()) {
                    bl3 = true;
                }
                bl2 = bl3;
                if (!f2.c()) continue;
                n2 = 1;
                bl2 = bl3;
            }
            switch (this.x) {
                default: {
                    break;
                }
                case 2: {
                    if (!bl2) break;
                    if (this.g) {
                        this.i = new b(this.k, this.f, this.l, this.q, this.b, this.s, this.t, this.u, this.w, this, true);
                        return;
                    }
                    this.i = cy.a(this.k, this, this.f, this.l, this.q, this.b, this.s, this.t, this.u, this.w);
                    return;
                }
                case 1: {
                    if (bl2) {
                        if (n2 == 0) break;
                        throw new IllegalStateException("Cannot use SIGN_IN_MODE_REQUIRED with GOOGLE_SIGN_IN_API. Use connect(SIGN_IN_MODE_OPTIONAL) instead.");
                    }
                    throw new IllegalStateException("SIGN_IN_MODE_REQUIRED cannot be used on a GoogleApiClient that does not contain any authenticated APIs. Use connect() instead.");
                }
                case 3: 
            }
            if (this.g && n2 == 0) {
                this.i = new b(this.k, this.f, this.l, this.q, this.b, this.s, this.t, this.u, this.w, this, false);
                return;
            }
            this.i = new ai(this.k, this, this.f, this.l, this.q, this.b, this.s, this.t, this.u, this.w, this);
            return;
        }
        String string2 = aa.c(n2);
        String string3 = aa.c(this.x);
        StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 51 + String.valueOf(string3).length());
        stringBuilder.append("Cannot use sign-in mode: ");
        stringBuilder.append(string2);
        stringBuilder.append(". Mode was already set to ");
        stringBuilder.append(string3);
        throw new IllegalStateException(stringBuilder.toString());
    }

    static /* synthetic */ void b(aa aa2) {
        aa2.q();
    }

    static /* synthetic */ Context c(aa aa2) {
        return aa2.k;
    }

    private static String c(int n2) {
        switch (n2) {
            default: {
                return "UNKNOWN";
            }
            case 3: {
                return "SIGN_IN_MODE_NONE";
            }
            case 2: {
                return "SIGN_IN_MODE_OPTIONAL";
            }
            case 1: 
        }
        return "SIGN_IN_MODE_REQUIRED";
    }

    private final void o() {
        this.h.b();
        this.i.a();
    }

    private final void p() {
        this.f.lock();
        try {
            if (this.m) {
                this.o();
            }
            return;
        }
        finally {
            this.f.unlock();
        }
    }

    private final void q() {
        this.f.lock();
        try {
            if (this.l()) {
                this.o();
            }
            return;
        }
        finally {
            this.f.unlock();
        }
    }

    @Override
    public final <C extends a.f> C a(a.d<C> object) {
        object = this.b.get(object);
        ah.a(object, (Object)"Appropriate Api was not requested.");
        return (C)object;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Override
    public final <A extends a.c, T extends cp<? extends k, A>> T a(T t2) {
        boolean bl2 = t2.g() != null;
        ah.b(bl2, "This task can not be executed (it's probably a Batch or malformed)");
        bl2 = this.b.containsKey(t2.g());
        Object object = t2.h() != null ? t2.h().d() : "the API";
        StringBuilder stringBuilder = new StringBuilder(String.valueOf(object).length() + 65);
        stringBuilder.append("GoogleApiClient is not configured to use ");
        stringBuilder.append((String)object);
        stringBuilder.append(" required for this call.");
        ah.b(bl2, stringBuilder.toString());
        this.f.lock();
        try {
            if (this.i == null) throw new IllegalStateException("GoogleApiClient is not connected yet.");
            if (this.m) {
                this.a.add((cp<?, ?>)t2);
                do {
                    object = t2;
                    if (this.a.isEmpty()) break;
                    object = this.a.remove();
                    this.e.a((BasePendingResult<? extends k>)object);
                    object.b(Status.c);
                } while (true);
                do {
                    return (T)object;
                    break;
                } while (true);
            }
            object = this.i.a(t2);
            return (T)object;
        }
        finally {
            this.f.unlock();
        }
    }

    @Override
    public final void a(int n2) {
        boolean bl2;
        this.f.lock();
        boolean bl3 = bl2 = true;
        if (n2 != 3) {
            bl3 = bl2;
            if (n2 != 1) {
                bl3 = n2 == 2 ? bl2 : false;
            }
        }
        try {
            StringBuilder stringBuilder = new StringBuilder(33);
            stringBuilder.append("Illegal sign-in mode: ");
            stringBuilder.append(n2);
            ah.b(bl3, stringBuilder.toString());
            this.b(n2);
            this.o();
            return;
        }
        finally {
            this.f.unlock();
        }
    }

    @Override
    public final void a(int n2, boolean bl2) {
        if (n2 == 1 && !bl2 && !this.m) {
            this.m = true;
            if (this.r == null) {
                this.r = c.a(this.k.getApplicationContext(), new ag(this));
            }
            this.p.sendMessageDelayed(this.p.obtainMessage(1), this.n);
            this.p.sendMessageDelayed(this.p.obtainMessage(2), this.o);
        }
        this.e.b();
        this.h.a(n2);
        this.h.a();
        if (n2 == 2) {
            this.o();
        }
    }

    @Override
    public final void a(Bundle bundle) {
        while (!this.a.isEmpty()) {
            this.a(this.a.remove());
        }
        this.h.a(bundle);
    }

    @Override
    public final void a(com.google.android.gms.common.a a2) {
        if (!m.c(this.k, a2.c())) {
            this.l();
        }
        if (!this.m) {
            this.h.a(a2);
            this.h.a();
        }
    }

    @Override
    public final void a(f.c c2) {
        this.h.a(c2);
    }

    @Override
    public final void a(bz bz2) {
        this.f.lock();
        try {
            if (this.d == null) {
                this.d = new HashSet<bz>();
            }
            this.d.add(bz2);
            return;
        }
        finally {
            this.f.unlock();
        }
    }

    @Override
    public final void a(String string2, FileDescriptor fileDescriptor, PrintWriter printWriter, String[] arrstring) {
        printWriter.append(string2).append("mContext=").println((Object)this.k);
        printWriter.append(string2).append("mResuming=").print(this.m);
        printWriter.append(" mWorkQueue.size()=").print(this.a.size());
        cc cc2 = this.e;
        printWriter.append(" mUnconsumedApiCalls.size()=").println(cc2.b.size());
        if (this.i != null) {
            this.i.a(string2, fileDescriptor, printWriter, arrstring);
        }
    }

    @Override
    public final boolean a(bp bp2) {
        if (this.i != null && this.i.a(bp2)) {
            return true;
        }
        return false;
    }

    @Override
    public final Context b() {
        return this.k;
    }

    @Override
    public final void b(f.c c2) {
        this.h.b(c2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void b(bz object) {
        this.f.lock();
        try {
            block7 : {
                Exception exception;
                block6 : {
                    block5 : {
                        if (this.d != null) break block5;
                        object = "Attempted to remove pending transform when no transforms are registered.";
                        exception = new Exception();
                        break block6;
                    }
                    if (this.d.remove(object)) break block7;
                    object = "Failed to remove pending transform - this may lead to memory leaks!";
                    exception = new Exception();
                }
                Log.wtf((String)"GoogleApiClientImpl", (String)object, (Throwable)exception);
                return;
            }
            if (this.m()) return;
            this.i.g();
            return;
        }
        finally {
            this.f.unlock();
        }
    }

    @Override
    public final Looper c() {
        return this.l;
    }

    @Override
    public final void d() {
        if (this.i != null) {
            this.i.f();
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void e() {
        this.f.lock();
        try {
            int n2 = this.j;
            boolean bl2 = false;
            if (n2 >= 0) {
                if (this.x != null) {
                    bl2 = true;
                }
                ah.a(bl2, (Object)"Sign-in mode should have been set explicitly by auto-manage.");
            } else if (this.x == null) {
                this.x = aa.a(this.b.values(), false);
            } else if (this.x == 2) throw new IllegalStateException("Cannot call connect() when SignInMode is set to SIGN_IN_MODE_OPTIONAL. Call connect(SIGN_IN_MODE_OPTIONAL) instead.");
            this.a(this.x);
            return;
        }
        finally {
            this.f.unlock();
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final com.google.android.gms.common.a f() {
        Looper looper = Looper.myLooper();
        Looper looper2 = Looper.getMainLooper();
        boolean bl2 = true;
        boolean bl3 = looper != looper2;
        ah.a(bl3, (Object)"blockingConnect must not be called on the UI thread");
        this.f.lock();
        try {
            block8 : {
                block6 : {
                    block7 : {
                        block5 : {
                            if (this.j < 0) break block5;
                            bl3 = this.x != null ? bl2 : false;
                            ah.a(bl3, (Object)"Sign-in mode should have been set explicitly by auto-manage.");
                            break block6;
                        }
                        if (this.x != null) break block7;
                        this.x = aa.a(this.b.values(), false);
                        break block6;
                    }
                    if (this.x == 2) break block8;
                }
                this.b(this.x);
                this.h.b();
                com.google.android.gms.common.a a2 = this.i.b();
                this.f.unlock();
                return a2;
            }
            throw new IllegalStateException("Cannot call blockingConnect() when sign-in mode is set to SIGN_IN_MODE_OPTIONAL. Call connect(SIGN_IN_MODE_OPTIONAL) instead.");
        }
        catch (Throwable throwable) {
            this.f.unlock();
            throw throwable;
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Override
    public final void g() {
        block7 : {
            this.f.lock();
            this.e.a();
            if (this.i != null) {
                this.i.c();
            }
            this.v.a();
            for (cp<?, ?> cp2 : this.a) {
                cp2.a((cf)null);
                cp2.a();
            }
            this.a.clear();
            bb bb2 = this.i;
            if (bb2 != null) break block7;
            do {
                return;
                break;
            } while (true);
        }
        try {
            this.l();
            this.h.a();
            return;
        }
        finally {
            this.f.unlock();
        }
    }

    @Override
    public final void h() {
        this.g();
        this.e();
    }

    @Override
    public final g<Status> i() {
        ah.a(this.j(), (Object)"GoogleApiClient is not connected yet.");
        boolean bl2 = this.x != 2;
        ah.a(bl2, (Object)"Cannot use clearDefaultAccountAndReconnect with GOOGLE_SIGN_IN_API");
        bv bv2 = new bv(this);
        if (this.b.containsKey(xg.a)) {
            this.a(this, bv2, false);
            return bv2;
        }
        AtomicReference<Object> atomicReference = new AtomicReference<Object>();
        Object object = new ac(this, atomicReference, bv2);
        ad ad2 = new ad(this, bv2);
        object = new f.a(this.k).a(xg.b).a((f.b)object).a(ad2).a(this.p).b();
        atomicReference.set(object);
        object.e();
        return bv2;
    }

    @Override
    public final boolean j() {
        if (this.i != null && this.i.d()) {
            return true;
        }
        return false;
    }

    final boolean l() {
        if (!this.m) {
            return false;
        }
        this.m = false;
        this.p.removeMessages(2);
        this.p.removeMessages(1);
        if (this.r != null) {
            this.r.a();
            this.r = null;
        }
        return true;
    }

    final boolean m() {
        block4 : {
            this.f.lock();
            Set<bz> set = this.d;
            if (set != null) break block4;
            this.f.unlock();
            return false;
        }
        try {
            boolean bl2 = this.d.isEmpty();
            return bl2 ^ true;
        }
        finally {
            this.f.unlock();
        }
    }

    final String n() {
        StringWriter stringWriter = new StringWriter();
        this.a("", null, new PrintWriter(stringWriter), null);
        return stringWriter.toString();
    }
}

