/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.net.Uri
 *  android.net.Uri$Builder
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Looper
 *  android.text.TextUtils
 */
package com.google.android.gms.internal;

import android.content.Context;
import android.net.Uri;
import android.os.Build;
import android.os.Looper;
import android.text.TextUtils;
import com.google.android.gms.internal.af;
import com.google.android.gms.internal.ag;
import com.google.android.gms.internal.ah;
import com.google.android.gms.internal.ai;
import com.google.android.gms.internal.aj;
import com.google.android.gms.internal.ak;
import com.google.android.gms.internal.azg;
import com.google.android.gms.internal.bqj;
import com.google.android.gms.internal.bsz;
import com.google.android.gms.internal.btk;
import com.google.android.gms.internal.jz;
import com.google.android.gms.internal.kj;
import com.google.android.gms.internal.kk;
import com.google.android.gms.internal.km;
import com.google.android.gms.internal.ye;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.WeakHashMap;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

@ak
public final class ae
implements ai {
    private static final Object a = new Object();
    private static ai b = null;
    private static ai c = null;
    private final Object d = new Object();
    private final Context e;
    private final WeakHashMap<Thread, Boolean> f = new WeakHashMap();
    private final ExecutorService g = Executors.newCachedThreadPool();
    private final km h;

    private ae(Context context) {
        this(context, km.a());
    }

    private ae(Context context, km km2) {
        Context context2 = context;
        if (context.getApplicationContext() != null) {
            context2 = context.getApplicationContext();
        }
        this.e = context2;
        this.h = km2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final Uri.Builder a(String string2, String bsz2, String string3, int n2) {
        String string4;
        boolean bl2;
        String string5;
        block5 : {
            try {
                bl2 = ye.a(this.e).a();
            }
            catch (Throwable throwable) {
                kj.b("Error fetching instant app info", throwable);
                bl2 = false;
            }
            string4 = "unknown";
            try {
                string4 = string5 = this.e.getPackageName();
                break block5;
            }
            catch (Throwable throwable) {}
            kj.e("Cannot obtain package name, proceeding.");
        }
        Uri.Builder builder = new Uri.Builder().scheme("https").path("//pagead2.googlesyndication.com/pagead/gen_204").appendQueryParameter("is_aia", Boolean.toString(bl2)).appendQueryParameter("id", "gmob-apps-report-exception").appendQueryParameter("os", Build.VERSION.RELEASE).appendQueryParameter("api", String.valueOf(Build.VERSION.SDK_INT));
        String string6 = Build.MANUFACTURER;
        string5 = Build.MODEL;
        if (!string5.startsWith(string6)) {
            StringBuilder stringBuilder = new StringBuilder(String.valueOf(string6).length() + 1 + String.valueOf(string5).length());
            stringBuilder.append(string6);
            stringBuilder.append(" ");
            stringBuilder.append(string5);
            string5 = stringBuilder.toString();
        }
        string2 = builder.appendQueryParameter("device", string5).appendQueryParameter("js", this.h.a).appendQueryParameter("appid", string4).appendQueryParameter("exceptiontype", string2).appendQueryParameter("stacktrace", bsz2).appendQueryParameter("eids", TextUtils.join((CharSequence)",", btk.a())).appendQueryParameter("exceptionkey", string3).appendQueryParameter("cl", "190237664").appendQueryParameter("rc", "dev").appendQueryParameter("session_id", bqj.c()).appendQueryParameter("sampling_rate", Integer.toString(1));
        bsz2 = btk.cV;
        return string2.appendQueryParameter("pb_tm", String.valueOf(bqj.f().a(bsz2)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static ai a(Context context) {
        Object object = a;
        synchronized (object) {
            if (b == null) {
                bsz<Boolean> bsz2 = btk.b;
                b = bqj.f().a(bsz2) != false ? new ae(context) : new aj();
            }
            return b;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static ai a(Context object, km object2) {
        Object object3 = a;
        synchronized (object3) {
            if (c == null) {
                Object object4 = btk.b;
                if (bqj.f().a(object4).booleanValue()) {
                    object2 = new ae((Context)object, (km)object2);
                    object4 = Looper.getMainLooper().getThread();
                    if (object4 != null) {
                        object = object2.d;
                        synchronized (object) {
                            object2.f.put((Thread)object4, true);
                        }
                        object4.setUncaughtExceptionHandler(new ag((ae)object2, object4.getUncaughtExceptionHandler()));
                    }
                    Thread.setDefaultUncaughtExceptionHandler(new af((ae)object2, Thread.getDefaultUncaughtExceptionHandler()));
                    c = object2;
                } else {
                    c = new aj();
                }
            }
            return c;
        }
    }

    private final void a(List<String> object) {
        object = object.iterator();
        while (object.hasNext()) {
            String string2 = (String)object.next();
            kk kk2 = new kk();
            this.g.submit(new ah(this, kk2, string2));
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    protected final void a(Thread object, Throwable object2) {
        int n2 = 0;
        if (object2 == null) return;
        object = object2;
        int n3 = 0;
        int n4 = 0;
        while (object != null) {
            StackTraceElement[] arrstackTraceElement = object.getStackTrace();
            int n5 = arrstackTraceElement.length;
            int n6 = n3;
            int n7 = 0;
            n3 = n4;
            n4 = n6;
            for (n6 = n7; n6 < n5; ++n6) {
                Object object3 = arrstackTraceElement[n6];
                if (jz.b(object3.getClassName())) {
                    n4 = 1;
                }
                if (!this.getClass().getName().equals(object3.getClassName())) continue;
                n3 = 1;
            }
            object = object.getCause();
            n6 = n3;
            n3 = n4;
            n4 = n6;
        }
    }

    @Override
    public final void a(Throwable object, String string2) {
        if (jz.a((Throwable)object) != null) {
            String string3 = object.getClass().getName();
            Object object2 = new StringWriter();
            azg.a((Throwable)object, new PrintWriter((Writer)object2));
            object = object2.toString();
            boolean bl2 = Math.random() < 1.0;
            if (bl2) {
                object2 = new ArrayList();
                object2.add(this.a(string3, (String)object, string2, 1).toString());
                this.a((List<String>)object2);
            }
        }
    }
}

