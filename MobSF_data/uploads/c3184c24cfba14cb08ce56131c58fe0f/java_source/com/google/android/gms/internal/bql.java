/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal;

import com.google.android.gms.ads.a;
import com.google.android.gms.internal.ak;

@ak
public class bql
extends a {
    private final Object a = new Object();
    private a b;

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public void a() {
        Object object = this.a;
        synchronized (object) {
            if (this.b != null) {
                this.b.a();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public void a(int n2) {
        Object object = this.a;
        synchronized (object) {
            if (this.b != null) {
                this.b.a(n2);
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void a(a a2) {
        Object object = this.a;
        synchronized (object) {
            this.b = a2;
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public void b() {
        Object object = this.a;
        synchronized (object) {
            if (this.b != null) {
                this.b.b();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public void c() {
        Object object = this.a;
        synchronized (object) {
            if (this.b != null) {
                this.b.c();
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public void d() {
        Object object = this.a;
        synchronized (object) {
            if (this.b != null) {
                this.b.d();
            }
            return;
        }
    }
}

