/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Bundle
 *  android.os.Message
 *  android.os.Messenger
 *  android.os.RemoteException
 *  android.util.Log
 *  android.util.SparseArray
 */
package com.google.firebase.iid;

import android.os.Bundle;
import android.os.Message;
import android.os.Messenger;
import android.os.RemoteException;
import android.util.Log;
import android.util.SparseArray;
import com.google.firebase.iid.o;
import com.google.firebase.iid.q;
import com.google.firebase.iid.u;
import com.google.firebase.iid.v;
import com.google.firebase.iid.x;
import java.util.Queue;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.TimeUnit;

final class t
implements Runnable {
    private final q a;

    t(q q2) {
        this.a = q2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    @Override
    public final void run() {
        q q2 = this.a;
        do {
            String string2;
            Object object;
            // MONITORENTER : q2
            if (q2.a != 2) {
                // MONITOREXIT : q2
                return;
            }
            if (q2.d.isEmpty()) {
                q2.a();
                // MONITOREXIT : q2
                return;
            }
            x<?> x2 = q2.d.poll();
            q2.e.put(x2.a, x2);
            o.b(q2.f).schedule(new u(q2, x2), 30L, TimeUnit.SECONDS);
            // MONITOREXIT : q2
            if (Log.isLoggable((String)"MessengerIpcClient", (int)3)) {
                string2 = String.valueOf(x2);
                object = new StringBuilder(String.valueOf(string2).length() + 8);
                object.append("Sending ");
                object.append(string2);
                Log.d((String)"MessengerIpcClient", (String)object.toString());
            }
            string2 = o.a(q2.f);
            Messenger messenger = q2.b;
            object = Message.obtain();
            object.what = x2.c;
            object.arg1 = x2.a;
            object.replyTo = messenger;
            messenger = new Bundle();
            messenger.putBoolean("oneWay", x2.a());
            messenger.putString("pkg", string2.getPackageName());
            messenger.putBundle("data", x2.d);
            object.setData((Bundle)messenger);
            try {
                q2.c.a((Message)object);
                continue;
            }
            catch (RemoteException remoteException) {
                q2.a(2, remoteException.getMessage());
                continue;
            }
            break;
        } while (true);
    }
}

