/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.Intent
 *  android.net.ConnectivityManager
 *  android.net.NetworkInfo
 *  android.os.Parcelable
 *  android.os.PowerManager
 *  android.os.PowerManager$WakeLock
 *  android.util.Log
 */
package com.google.firebase.iid;

import android.content.Context;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Parcelable;
import android.os.PowerManager;
import android.util.Log;
import com.google.firebase.b;
import com.google.firebase.iid.FirebaseInstanceId;
import com.google.firebase.iid.FirebaseInstanceIdReceiver;
import com.google.firebase.iid.aa;
import com.google.firebase.iid.c;
import com.google.firebase.iid.e;
import java.io.IOException;

final class d
implements Runnable {
    private final long a;
    private final PowerManager.WakeLock b;
    private final FirebaseInstanceId c;
    private final aa d;

    d(FirebaseInstanceId firebaseInstanceId, aa aa2, long l2) {
        this.c = firebaseInstanceId;
        this.d = aa2;
        this.a = l2;
        this.b = ((PowerManager)this.a().getSystemService("power")).newWakeLock(1, "fiid-sync");
        this.b.setReferenceCounted(false);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private final boolean a(String var1_1) {
        var4_4 /* !! */  = var1_1.split("!");
        if (var4_4 /* !! */ .length != 2) return true;
        var1_1 = var4_4 /* !! */ [0];
        var4_4 /* !! */  = var4_4 /* !! */ [1];
        var2_5 = -1;
        try {
            var3_6 = var1_1.hashCode();
            if (var3_6 != 83) {
                if (var3_6 == 85 && var1_1.equals("U")) {
                    var2_5 = 1;
                }
            } else if (var1_1.equals("S")) {
                var2_5 = 0;
            }
        }
        catch (IOException var1_2) {
            var1_3 = String.valueOf(var1_2.getMessage());
            var1_3 = var1_3.length() != 0 ? "Topic sync failed: ".concat(var1_3) : new String("Topic sync failed: ");
            Log.e((String)"FirebaseInstanceId", (String)var1_3);
            return false;
        }
        switch (var2_5) {
            case 1: {
                this.c.b((String)var4_4 /* !! */ );
                if (FirebaseInstanceId.g() == false) return true;
                var1_1 = "unsubscribe operation succeeded";
                ** GOTO lbl30
            }
            case 0: {
                this.c.a((String)var4_4 /* !! */ );
                if (FirebaseInstanceId.g() == false) return true;
                var1_1 = "subscribe operation succeeded";
lbl30: // 2 sources:
                Log.d((String)"FirebaseInstanceId", (String)var1_1);
                return true;
            }
        }
        return true;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final boolean c() {
        c c2 = this.c.d();
        if (c2 != null && !c2.b(this.d.b())) {
            return true;
        }
        try {
            String string2 = this.c.e();
            if (string2 == null) {
                Log.e((String)"FirebaseInstanceId", (String)"Token retrieval failed: null");
                return false;
            }
            if (Log.isLoggable((String)"FirebaseInstanceId", (int)3)) {
                Log.d((String)"FirebaseInstanceId", (String)"Token successfully retrieved");
            }
            if (c2 == null || c2 != null && !string2.equals(c2.a)) {
                c2 = this.a();
                string2 = new Intent("com.google.firebase.iid.TOKEN_REFRESH");
                Intent intent = new Intent("com.google.firebase.INSTANCE_ID_EVENT");
                intent.setClass((Context)c2, FirebaseInstanceIdReceiver.class);
                intent.putExtra("wrapped_intent", (Parcelable)string2);
                c2.sendBroadcast(intent);
            }
            return true;
        }
        catch (IOException | SecurityException exception) {
            String string3 = String.valueOf(exception.getMessage());
            string3 = string3.length() != 0 ? "Token retrieval failed: ".concat(string3) : new String("Token retrieval failed: ");
            Log.e((String)"FirebaseInstanceId", (String)string3);
            return false;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    private final boolean d() {
        do {
            FirebaseInstanceId firebaseInstanceId = this.c;
            // MONITORENTER : firebaseInstanceId
            String string2 = FirebaseInstanceId.f().a();
            if (string2 == null) {
                Log.d((String)"FirebaseInstanceId", (String)"topic sync succeeded");
                // MONITOREXIT : firebaseInstanceId
                return true;
            }
            // MONITOREXIT : firebaseInstanceId
            if (!this.a(string2)) {
                return false;
            }
            FirebaseInstanceId.f().a(string2);
        } while (true);
    }

    final Context a() {
        return this.c.b().a();
    }

    final boolean b() {
        Object object = (ConnectivityManager)this.a().getSystemService("connectivity");
        object = object != null ? object.getActiveNetworkInfo() : null;
        if (object != null && object.isConnected()) {
            return true;
        }
        return false;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public final void run() {
        this.b.acquire();
        try {
            block9 : {
                var2_1 = this.c;
                var1_3 = true;
                var2_1.a(true);
                if (this.d.a() == 0) {
                    var1_3 = false;
                }
                if (var1_3) break block9;
                var2_1 = this.c;
                ** GOTO lbl17
            }
            if (!this.b()) {
                new e(this).a();
                return;
            } else if (this.c() && this.d()) {
                var2_1 = this.c;
lbl17: // 2 sources:
                var2_1.a(false);
                return;
            } else {
                this.c.a(this.a);
            }
            return;
        }
        finally {
            this.b.release();
        }
    }
}

