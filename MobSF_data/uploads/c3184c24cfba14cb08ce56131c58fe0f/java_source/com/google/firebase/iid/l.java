/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.BroadcastReceiver
 *  android.content.BroadcastReceiver$PendingResult
 *  android.content.ComponentName
 *  android.content.Context
 *  android.content.Intent
 *  android.content.ServiceConnection
 *  android.os.IBinder
 *  android.util.Log
 */
package com.google.firebase.iid;

import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.IBinder;
import android.util.Log;
import com.google.android.gms.common.stats.a;
import com.google.firebase.iid.h;
import com.google.firebase.iid.j;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledThreadPoolExecutor;

public final class l
implements ServiceConnection {
    private final Context a;
    private final Intent b;
    private final ScheduledExecutorService c;
    private final Queue<h> d = new ArrayDeque<h>();
    private j e;
    private boolean f = false;

    public l(Context context, String string2) {
        this(context, string2, new ScheduledThreadPoolExecutor(0));
    }

    private l(Context context, String string2, ScheduledExecutorService scheduledExecutorService) {
        this.a = context.getApplicationContext();
        this.b = new Intent(string2).setPackage(this.a.getPackageName());
        this.c = scheduledExecutorService;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void a() {
        synchronized (this) {
            boolean bl2;
            Object object;
            if (Log.isLoggable((String)"EnhancedIntentService", (int)3)) {
                Log.d((String)"EnhancedIntentService", (String)"flush queue called");
            }
            do {
                if (this.d.isEmpty()) {
                    return;
                }
                if (Log.isLoggable((String)"EnhancedIntentService", (int)3)) {
                    Log.d((String)"EnhancedIntentService", (String)"found intent to be delivered");
                }
                if (this.e == null || !this.e.isBinderAlive()) break;
                if (Log.isLoggable((String)"EnhancedIntentService", (int)3)) {
                    Log.d((String)"EnhancedIntentService", (String)"binder is alive, sending the intent.");
                }
                object = this.d.poll();
                this.e.a((h)object);
            } while (true);
            if (Log.isLoggable((String)"EnhancedIntentService", (int)3)) {
                bl2 = this.f;
                object = new StringBuilder(39);
                object.append("binder is dead. start connection? ");
                object.append(bl2 ^ true);
                Log.d((String)"EnhancedIntentService", (String)object.toString());
            }
            if (!this.f) {
                block14 : {
                    this.f = true;
                    bl2 = a.a().a(this.a, this.b, this, 65);
                    if (!bl2) break block14;
                    return;
                }
                try {
                    Log.e((String)"EnhancedIntentService", (String)"binding to the service failed");
                }
                catch (SecurityException securityException) {
                    Log.e((String)"EnhancedIntentService", (String)"Exception while binding the service", (Throwable)securityException);
                }
                while (!this.d.isEmpty()) {
                    this.d.poll().a();
                }
            }
            return;
        }
    }

    public final void a(Intent intent, BroadcastReceiver.PendingResult pendingResult) {
        synchronized (this) {
            if (Log.isLoggable((String)"EnhancedIntentService", (int)3)) {
                Log.d((String)"EnhancedIntentService", (String)"new intent queued in the bind-strategy delivery");
            }
            this.d.add(new h(intent, pendingResult, this.c));
            this.a();
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void onServiceConnected(ComponentName object, IBinder object2) {
        synchronized (this) {
            this.f = false;
            this.e = (j)((Object)object2);
            if (Log.isLoggable((String)"EnhancedIntentService", (int)3)) {
                object = String.valueOf(object);
                object2 = new StringBuilder(String.valueOf(object).length() + 20);
                object2.append("onServiceConnected: ");
                object2.append((String)object);
                Log.d((String)"EnhancedIntentService", (String)object2.toString());
            }
            this.a();
            return;
        }
    }

    public final void onServiceDisconnected(ComponentName object) {
        if (Log.isLoggable((String)"EnhancedIntentService", (int)3)) {
            object = String.valueOf(object);
            StringBuilder stringBuilder = new StringBuilder(String.valueOf(object).length() + 23);
            stringBuilder.append("onServiceDisconnected: ");
            stringBuilder.append((String)object);
            Log.d((String)"EnhancedIntentService", (String)stringBuilder.toString());
        }
        this.a();
    }
}

