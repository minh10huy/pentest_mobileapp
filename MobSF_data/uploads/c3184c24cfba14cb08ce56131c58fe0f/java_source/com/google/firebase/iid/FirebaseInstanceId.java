/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.Intent
 *  android.content.SharedPreferences
 *  android.content.pm.ApplicationInfo
 *  android.content.pm.PackageManager
 *  android.content.pm.PackageManager$NameNotFoundException
 *  android.content.pm.ResolveInfo
 *  android.content.pm.ServiceInfo
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Bundle
 *  android.os.Looper
 *  android.util.Log
 */
package com.google.firebase.iid;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.pm.ServiceInfo;
import android.os.Build;
import android.os.Bundle;
import android.os.Looper;
import android.support.annotation.Keep;
import android.support.v4.g.a;
import android.util.Log;
import com.google.firebase.e;
import com.google.firebase.iid.aa;
import com.google.firebase.iid.ab;
import com.google.firebase.iid.b;
import com.google.firebase.iid.c;
import com.google.firebase.iid.d;
import java.io.IOException;
import java.security.KeyPair;
import java.util.Map;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

public class FirebaseInstanceId {
    private static final long a = TimeUnit.HOURS.toSeconds(8L);
    private static Map<String, FirebaseInstanceId> b = new a<String, FirebaseInstanceId>();
    private static b c;
    private static ScheduledThreadPoolExecutor d;
    private final com.google.firebase.b e;
    private final aa f;
    private final ab g;
    private KeyPair h;
    private boolean i = false;
    private boolean j;

    private FirebaseInstanceId(com.google.firebase.b b2, aa aa2) {
        if (aa.a(b2) != null) {
            this.e = b2;
            this.f = aa2;
            this.g = new ab(b2.a(), aa2);
            this.j = this.n();
            if (this.j()) {
                this.k();
            }
            return;
        }
        throw new IllegalStateException("FirebaseInstanceId failed to initialize, FirebaseApp is missing project ID");
    }

    public static FirebaseInstanceId a() {
        return FirebaseInstanceId.getInstance(com.google.firebase.b.d());
    }

    private final String a(String string2, String charSequence, Bundle bundle) {
        bundle.putString("scope", (String)charSequence);
        bundle.putString("sender", string2);
        bundle.putString("subtype", string2);
        bundle.putString("appid", this.c());
        bundle.putString("gmp_app_id", this.e.c().b());
        bundle.putString("gmsv", Integer.toString(this.f.d()));
        bundle.putString("osv", Integer.toString(Build.VERSION.SDK_INT));
        bundle.putString("app_ver", this.f.b());
        bundle.putString("app_ver_name", this.f.c());
        bundle.putString("cliv", "fiid-12211000");
        string2 = this.g.a(bundle);
        if (string2 != null) {
            charSequence = string2.getString("registration_id");
            if (charSequence != null) {
                return charSequence;
            }
            charSequence = string2.getString("unregistered");
            if (charSequence != null) {
                return charSequence;
            }
            charSequence = string2.getString("error");
            if (!"RST".equals(charSequence)) {
                if (charSequence != null) {
                    throw new IOException((String)charSequence);
                }
                string2 = String.valueOf(string2);
                charSequence = new StringBuilder(String.valueOf(string2).length() + 21);
                charSequence.append("Unexpected response: ");
                charSequence.append(string2);
                Log.w((String)"FirebaseInstanceId", (String)charSequence.toString(), (Throwable)new Throwable());
                throw new IOException("SERVICE_NOT_AVAILABLE");
            }
            this.h();
            throw new IOException("INSTANCE_ID_RESET");
        }
        throw new IOException("SERVICE_NOT_AVAILABLE");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    static void a(Runnable runnable, long l2) {
        synchronized (FirebaseInstanceId.class) {
            if (d == null) {
                d = new ScheduledThreadPoolExecutor(1);
            }
            d.schedule(runnable, l2, TimeUnit.SECONDS);
            return;
        }
    }

    static b f() {
        return c;
    }

    static boolean g() {
        if (!(Log.isLoggable((String)"FirebaseInstanceId", (int)3) || Build.VERSION.SDK_INT == 23 && Log.isLoggable((String)"FirebaseInstanceId", (int)3))) {
            return false;
        }
        return true;
    }

    @Keep
    public static FirebaseInstanceId getInstance(com.google.firebase.b b2) {
        synchronized (FirebaseInstanceId.class) {
            FirebaseInstanceId firebaseInstanceId;
            block6 : {
                FirebaseInstanceId firebaseInstanceId2;
                firebaseInstanceId = firebaseInstanceId2 = b.get(b2.c().b());
                if (firebaseInstanceId2 != null) break block6;
                if (c == null) {
                    c = new b(b2.a());
                }
                firebaseInstanceId = new FirebaseInstanceId(b2, new aa(b2.a()));
                b.put(b2.c().b(), firebaseInstanceId);
            }
            return firebaseInstanceId;
            finally {
            }
        }
    }

    private final void k() {
        c c2 = this.d();
        if (c2 == null || c2.b(this.f.b()) || c.a() != null) {
            this.l();
        }
    }

    private final void l() {
        synchronized (this) {
            if (!this.i) {
                this.a(0L);
            }
            return;
        }
    }

    private final KeyPair m() {
        synchronized (this) {
            if (this.h == null) {
                this.h = c.d("");
            }
            if (this.h == null) {
                this.h = c.b("");
            }
            KeyPair keyPair = this.h;
            return keyPair;
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private final boolean n() {
        Context context = this.e.a();
        SharedPreferences sharedPreferences = context.getSharedPreferences("com.google.firebase.messaging", 0);
        if (sharedPreferences.contains("auto_init")) {
            return sharedPreferences.getBoolean("auto_init", true);
        }
        try {
            sharedPreferences = context.getPackageManager();
            if (sharedPreferences == null) return this.o();
        }
        catch (PackageManager.NameNotFoundException nameNotFoundException) {
            return this.o();
        }
        context = sharedPreferences.getApplicationInfo(context.getPackageName(), 128);
        if (context == null) return this.o();
        if (context.metaData == null) return this.o();
        if (!context.metaData.containsKey("firebase_messaging_auto_init_enabled")) return this.o();
        return context.metaData.getBoolean("firebase_messaging_auto_init_enabled");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final boolean o() {
        try {
            Class.forName("com.google.firebase.messaging.a");
            return true;
        }
        catch (ClassNotFoundException classNotFoundException) {}
        Context context = this.e.a();
        Intent intent = new Intent("com.google.firebase.MESSAGING_EVENT");
        intent.setPackage(context.getPackageName());
        context = context.getPackageManager().resolveService(intent, 0);
        if (context != null && context.serviceInfo != null) {
            return true;
        }
        return false;
    }

    public String a(String string2, String string3) {
        if (Looper.getMainLooper() != Looper.myLooper()) {
            Object object = c.a("", string2, string3);
            if (object != null && !object.b(this.f.b())) {
                return object.a;
            }
            object = this.a(string2, string3, new Bundle());
            if (object != null) {
                c.a("", string2, string3, (String)object, this.f.b());
            }
            return object;
        }
        throw new IOException("MAIN_THREAD");
    }

    final void a(long l2) {
        synchronized (this) {
            long l3 = Math.min(Math.max(30L, l2 << 1), a);
            FirebaseInstanceId.a(new d(this, this.f, l3), l2);
            this.i = true;
            return;
        }
    }

    final void a(String string2) {
        Object object = this.d();
        if (object != null && !object.b(this.f.b())) {
            Bundle bundle = new Bundle();
            String string3 = String.valueOf("/topics/");
            String string4 = String.valueOf(string2);
            string3 = string4.length() != 0 ? string3.concat(string4) : new String(string3);
            bundle.putString("gcm.topic", string3);
            string3 = object.a;
            object = String.valueOf("/topics/");
            string2 = String.valueOf(string2);
            string2 = string2.length() != 0 ? object.concat(string2) : new String((String)object);
            this.a(string3, string2, bundle);
            return;
        }
        throw new IOException("token not available");
    }

    final void a(boolean bl2) {
        synchronized (this) {
            this.i = bl2;
            return;
        }
    }

    final com.google.firebase.b b() {
        return this.e;
    }

    final void b(String string2) {
        Object object = this.d();
        if (object != null && !object.b(this.f.b())) {
            Bundle bundle = new Bundle();
            String string3 = String.valueOf("/topics/");
            String string4 = String.valueOf(string2);
            string3 = string4.length() != 0 ? string3.concat(string4) : new String(string3);
            bundle.putString("gcm.topic", string3);
            bundle.putString("delete", "1");
            string3 = object.a;
            object = String.valueOf("/topics/");
            string2 = String.valueOf(string2);
            string2 = string2.length() != 0 ? object.concat(string2) : new String((String)object);
            this.a(string3, string2, bundle);
            return;
        }
        throw new IOException("token not available");
    }

    public String c() {
        this.k();
        return aa.a(this.m());
    }

    final c d() {
        return c.a("", aa.a(this.e), "*");
    }

    final String e() {
        return this.a(aa.a(this.e), "*");
    }

    final void h() {
        synchronized (this) {
            c.b();
            this.h = null;
            if (this.j()) {
                this.l();
            }
            return;
        }
    }

    final void i() {
        c.c("");
        this.l();
    }

    public final boolean j() {
        synchronized (this) {
            boolean bl2 = this.j;
            return bl2;
        }
    }
}

