/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.RemoteException
 */
package com.google.firebase.database.connection.idl;

import android.os.RemoteException;
import com.google.android.gms.a.a;
import com.google.android.gms.a.m;
import com.google.android.gms.internal.bcq;
import com.google.android.gms.internal.bdh;
import com.google.firebase.database.connection.idl.IPersistentConnectionImpl;
import com.google.firebase.database.connection.idl.ac;
import com.google.firebase.database.connection.idl.k;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

final class d
implements bcq {
    private /* synthetic */ ac a;

    d(ac ac2) {
        this.a = ac2;
    }

    @Override
    public final void a() {
        try {
            this.a.a();
            return;
        }
        catch (RemoteException remoteException) {
            throw new RuntimeException((Throwable)remoteException);
        }
    }

    @Override
    public final void a(List<String> list, Object object, boolean bl2, Long l2) {
        try {
            this.a.a(list, m.a(object), bl2, IPersistentConnectionImpl.a(l2));
            return;
        }
        catch (RemoteException remoteException) {
            throw new RuntimeException((Throwable)remoteException);
        }
    }

    @Override
    public final void a(List<String> list, List<bdh> object, Long l2) {
        ArrayList<k> arrayList = new ArrayList<k>(object.size());
        ArrayList<Object> arrayList2 = new ArrayList<Object>(object.size());
        object = object.iterator();
        while (object.hasNext()) {
            bdh bdh2 = (bdh)object.next();
            arrayList.add(new k(bdh2.a(), bdh2.b()));
            arrayList2.add(bdh2.c());
        }
        try {
            this.a.a(list, arrayList, m.a(arrayList2), IPersistentConnectionImpl.a(l2));
            return;
        }
        catch (RemoteException remoteException) {
            throw new RuntimeException((Throwable)remoteException);
        }
    }

    @Override
    public final void a(Map<String, Object> map) {
        try {
            this.a.a(m.a(map));
            return;
        }
        catch (RemoteException remoteException) {
            throw new RuntimeException((Throwable)remoteException);
        }
    }

    @Override
    public final void a(boolean bl2) {
        try {
            this.a.a(bl2);
            return;
        }
        catch (RemoteException remoteException) {
            throw new RuntimeException((Throwable)remoteException);
        }
    }

    @Override
    public final void b() {
        try {
            this.a.b();
            return;
        }
        catch (RemoteException remoteException) {
            throw new RuntimeException((Throwable)remoteException);
        }
    }
}

