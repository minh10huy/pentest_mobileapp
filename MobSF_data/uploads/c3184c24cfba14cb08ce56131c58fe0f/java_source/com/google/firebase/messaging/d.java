/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.app.ActivityManager
 *  android.app.ActivityManager$RunningAppProcessInfo
 *  android.app.KeyguardManager
 *  android.app.Notification
 *  android.app.Notification$BigTextStyle
 *  android.app.Notification$Builder
 *  android.app.Notification$Style
 *  android.app.NotificationManager
 *  android.app.PendingIntent
 *  android.content.Context
 *  android.content.Intent
 *  android.content.pm.ApplicationInfo
 *  android.content.pm.PackageManager
 *  android.content.pm.PackageManager$NameNotFoundException
 *  android.content.res.Resources
 *  android.content.res.Resources$NotFoundException
 *  android.content.res.Resources$Theme
 *  android.graphics.Color
 *  android.graphics.drawable.AdaptiveIconDrawable
 *  android.graphics.drawable.Drawable
 *  android.media.RingtoneManager
 *  android.net.Uri
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Bundle
 *  android.os.Parcelable
 *  android.os.Process
 *  android.os.SystemClock
 *  android.text.TextUtils
 *  android.util.Log
 *  org.json.JSONArray
 *  org.json.JSONException
 */
package com.google.firebase.messaging;

import android.annotation.TargetApi;
import android.app.ActivityManager;
import android.app.KeyguardManager;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.res.Resources;
import android.graphics.Color;
import android.graphics.drawable.AdaptiveIconDrawable;
import android.graphics.drawable.Drawable;
import android.media.RingtoneManager;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Parcelable;
import android.os.Process;
import android.os.SystemClock;
import android.support.v4.app.ab;
import android.support.v4.content.b;
import android.text.TextUtils;
import android.util.Log;
import com.google.android.gms.a;
import com.google.android.gms.common.util.p;
import com.google.firebase.iid.ad;
import com.google.firebase.messaging.FirebaseMessagingService;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.MissingFormatArgumentException;
import java.util.Set;
import java.util.concurrent.atomic.AtomicInteger;
import org.json.JSONArray;
import org.json.JSONException;

final class d {
    private static d a;
    private final Context b;
    private Bundle c;
    private Method d;
    private Method e;
    private final AtomicInteger f = new AtomicInteger((int)SystemClock.elapsedRealtime());

    private d(Context context) {
        this.b = context.getApplicationContext();
    }

    @TargetApi(value=26)
    private final Notification a(CharSequence charSequence, String string2, int n2, Integer n3, Uri uri, PendingIntent pendingIntent, PendingIntent pendingIntent2, String string3) {
        Notification.Builder builder = new Notification.Builder(this.b).setAutoCancel(true).setSmallIcon(n2);
        if (!TextUtils.isEmpty((CharSequence)charSequence)) {
            builder.setContentTitle(charSequence);
        }
        if (!TextUtils.isEmpty((CharSequence)string2)) {
            builder.setContentText((CharSequence)string2);
            builder.setStyle((Notification.Style)new Notification.BigTextStyle().bigText((CharSequence)string2));
        }
        if (n3 != null) {
            builder.setColor(n3.intValue());
        }
        if (uri != null) {
            builder.setSound(uri);
        }
        if (pendingIntent != null) {
            builder.setContentIntent(pendingIntent);
        }
        if (pendingIntent2 != null) {
            builder.setDeleteIntent(pendingIntent2);
        }
        if (string3 != null) {
            if (this.d == null) {
                this.d = d.a("setChannelId");
            }
            if (this.d == null) {
                this.d = d.a("setChannel");
            }
            if (this.d == null) {
                Log.e((String)"FirebaseMessaging", (String)"Error while setting the notification channel");
            } else {
                try {
                    this.d.invoke((Object)builder, string3);
                }
                catch (IllegalAccessException | IllegalArgumentException | SecurityException | InvocationTargetException exception) {
                    Log.e((String)"FirebaseMessaging", (String)"Error while setting the notification channel", (Throwable)exception);
                }
            }
        }
        return builder.build();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final Bundle a() {
        ApplicationInfo applicationInfo;
        if (this.c != null) {
            return this.c;
        }
        applicationInfo = null;
        try {
            ApplicationInfo applicationInfo2;
            applicationInfo = applicationInfo2 = this.b.getPackageManager().getApplicationInfo(this.b.getPackageName(), 128);
        }
        catch (PackageManager.NameNotFoundException nameNotFoundException) {}
        if (applicationInfo != null && applicationInfo.metaData != null) {
            this.c = applicationInfo.metaData;
            return this.c;
        }
        return Bundle.EMPTY;
    }

    static d a(Context object) {
        synchronized (d.class) {
            if (a == null) {
                a = new d((Context)object);
            }
            object = a;
            return object;
        }
    }

    static String a(Bundle bundle, String string2) {
        String string3;
        String string4 = string3 = bundle.getString(string2);
        if (string3 == null) {
            string4 = bundle.getString(string2.replace("gcm.n.", "gcm.notification."));
        }
        return string4;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @TargetApi(value=26)
    private static Method a(String object) {
        try {
            return Notification.Builder.class.getMethod((String)object, String.class);
        }
        catch (NoSuchMethodException | SecurityException exception) {
            return null;
        }
    }

    private static void a(Intent intent, Bundle bundle) {
        for (String string2 : bundle.keySet()) {
            if (!string2.startsWith("google.c.a.") && !string2.equals("from")) continue;
            intent.putExtra(string2, bundle.getString(string2));
        }
    }

    @TargetApi(value=26)
    private final boolean a(int n2) {
        if (Build.VERSION.SDK_INT != 26) {
            return true;
        }
        try {
            if (this.b.getResources().getDrawable(n2, null) instanceof AdaptiveIconDrawable) {
                StringBuilder stringBuilder = new StringBuilder(77);
                stringBuilder.append("Adaptive icons cannot be used in notifications. Ignoring icon id: ");
                stringBuilder.append(n2);
                Log.e((String)"FirebaseMessaging", (String)stringBuilder.toString());
                return false;
            }
            return true;
        }
        catch (Resources.NotFoundException notFoundException) {
            return false;
        }
    }

    static boolean a(Bundle bundle) {
        if (!"1".equals(d.a(bundle, "gcm.n.e")) && d.a(bundle, "gcm.n.icon") == null) {
            return false;
        }
        return true;
    }

    static Uri b(Bundle bundle) {
        String string2;
        String string3 = string2 = d.a(bundle, "gcm.n.link_android");
        if (TextUtils.isEmpty((CharSequence)string2)) {
            string3 = d.a(bundle, "gcm.n.link");
        }
        if (!TextUtils.isEmpty((CharSequence)string3)) {
            return Uri.parse((String)string3);
        }
        return null;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final Integer b(String string2) {
        int n2;
        if (Build.VERSION.SDK_INT < 21) {
            return null;
        }
        if (!TextUtils.isEmpty((CharSequence)string2)) {
            int n3;
            try {
                n3 = Color.parseColor((String)string2);
            }
            catch (IllegalArgumentException illegalArgumentException) {}
            return n3;
            StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 54);
            stringBuilder.append("Color ");
            stringBuilder.append(string2);
            stringBuilder.append(" not valid. Notification will use default color.");
            Log.w((String)"FirebaseMessaging", (String)stringBuilder.toString());
        }
        if ((n2 = this.a().getInt("com.google.firebase.messaging.default_notification_color", 0)) != 0) {
            try {
                n2 = b.c(this.b, n2);
            }
            catch (Resources.NotFoundException notFoundException) {}
            return n2;
            Log.w((String)"FirebaseMessaging", (String)"Cannot find the color resource referenced in AndroidManifest.");
        }
        return null;
    }

    static String b(Bundle bundle, String string2) {
        string2 = String.valueOf(string2);
        String string3 = String.valueOf("_loc_key");
        string2 = string3.length() != 0 ? string2.concat(string3) : new String(string2);
        return d.a(bundle, string2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @TargetApi(value=26)
    private final String c(String class_) {
        StringBuilder stringBuilder;
        NotificationManager notificationManager;
        block9 : {
            block8 : {
                if (!p.i()) {
                    return null;
                }
                notificationManager = (NotificationManager)this.b.getSystemService(NotificationManager.class);
                try {
                    if (this.e == null) {
                        this.e = notificationManager.getClass().getMethod("getNotificationChannel", String.class);
                    }
                    if (!TextUtils.isEmpty(class_)) {
                        if (this.e.invoke((Object)notificationManager, class_) != null) {
                            return class_;
                        }
                        stringBuilder = new StringBuilder(String.valueOf(class_).length() + 122);
                        stringBuilder.append("Notification Channel requested (");
                        stringBuilder.append((String)((Object)class_));
                        stringBuilder.append(") has not been created by the app. Manifest configuration, or default, value will be used.");
                        Log.w((String)"FirebaseMessaging", (String)stringBuilder.toString());
                    }
                    if (TextUtils.isEmpty((CharSequence)((Object)(class_ = this.a().getString("com.google.firebase.messaging.default_notification_channel_id"))))) break block8;
                    if (this.e.invoke((Object)notificationManager, class_) != null) {
                        return class_;
                    }
                }
                catch (ClassNotFoundException | IllegalAccessException | IllegalArgumentException | InstantiationException | LinkageError | NoSuchMethodException | SecurityException | InvocationTargetException throwable) {
                    Log.e((String)"FirebaseMessaging", (String)"Error while setting the notification channel", (Throwable)throwable);
                    return null;
                }
                class_ = "Notification Channel set in AndroidManifest.xml has not been created by the app. Default value will be used.";
                break block9;
            }
            class_ = "Missing Default Notification Channel metadata in AndroidManifest. Default value will be used.";
        }
        Log.w((String)"FirebaseMessaging", (String)((Object)class_));
        if (this.e.invoke((Object)notificationManager, "fcm_fallback_notification_channel") == null) {
            class_ = Class.forName("android.app.NotificationChannel");
            stringBuilder = class_.getConstructor(String.class, CharSequence.class, Integer.TYPE).newInstance("fcm_fallback_notification_channel", this.b.getString(a.c.fcm_fallback_notification_channel_label), 3);
            notificationManager.getClass().getMethod("createNotificationChannel", class_).invoke((Object)notificationManager, stringBuilder);
        }
        return "fcm_fallback_notification_channel";
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    static Object[] c(Bundle bundle, String charSequence) {
        String string2 = String.valueOf(charSequence);
        Object[] arrobject = String.valueOf("_loc_args");
        string2 = arrobject.length() != 0 ? string2.concat((String)arrobject) : new String(string2);
        if (TextUtils.isEmpty((CharSequence)(string2 = d.a(bundle, string2)))) {
            return null;
        }
        try {
            bundle = new JSONArray(string2);
            arrobject = new String[bundle.length()];
            int n2 = 0;
            while (n2 < arrobject.length) {
                arrobject[n2] = bundle.opt(n2);
                ++n2;
            }
            return arrobject;
        }
        catch (JSONException jSONException) {}
        String string3 = String.valueOf(charSequence);
        charSequence = String.valueOf("_loc_args");
        string3 = charSequence.length() != 0 ? string3.concat((String)charSequence) : new String(string3);
        string3 = string3.substring(6);
        charSequence = new StringBuilder(String.valueOf(string3).length() + 41 + String.valueOf(string2).length());
        charSequence.append("Malformed ");
        charSequence.append(string3);
        charSequence.append(": ");
        charSequence.append(string2);
        charSequence.append("  Default value will be used.");
        Log.w((String)"FirebaseMessaging", (String)charSequence.toString());
        return null;
    }

    static String d(Bundle bundle) {
        String string2;
        String string3 = string2 = d.a(bundle, "gcm.n.sound2");
        if (TextUtils.isEmpty((CharSequence)string2)) {
            string3 = d.a(bundle, "gcm.n.sound");
        }
        return string3;
    }

    private final String d(Bundle object, String charSequence) {
        String string2 = d.a((Bundle)object, (String)charSequence);
        if (!TextUtils.isEmpty((CharSequence)string2)) {
            return string2;
        }
        string2 = d.b((Bundle)object, (String)charSequence);
        if (TextUtils.isEmpty((CharSequence)string2)) {
            return null;
        }
        Object object2 = this.b.getResources();
        int n2 = object2.getIdentifier(string2, "string", this.b.getPackageName());
        if (n2 == 0) {
            object = String.valueOf(charSequence);
            charSequence = String.valueOf("_loc_key");
            object = charSequence.length() != 0 ? object.concat((String)charSequence) : new String((String)object);
            object = object.substring(6);
            charSequence = new StringBuilder(String.valueOf(object).length() + 49 + String.valueOf(string2).length());
            charSequence.append((String)object);
            charSequence.append(" resource not found: ");
            charSequence.append(string2);
            charSequence.append(" Default value will be used.");
            Log.w((String)"FirebaseMessaging", (String)charSequence.toString());
            return null;
        }
        if ((object = d.c((Bundle)object, (String)charSequence)) == null) {
            return object2.getString(n2);
        }
        try {
            charSequence = object2.getString(n2, (Object[])object);
            return charSequence;
        }
        catch (MissingFormatArgumentException missingFormatArgumentException) {
            object = Arrays.toString((Object[])object);
            object2 = new StringBuilder(String.valueOf(string2).length() + 58 + String.valueOf(object).length());
            object2.append("Missing format argument for ");
            object2.append(string2);
            object2.append(": ");
            object2.append((String)object);
            object2.append(" Default value will be used.");
            Log.w((String)"FirebaseMessaging", (String)object2.toString(), (Throwable)missingFormatArgumentException);
            return null;
        }
    }

    private final PendingIntent e(Bundle object) {
        String string2 = d.a((Bundle)object, "gcm.n.click_action");
        if (!TextUtils.isEmpty((CharSequence)string2)) {
            string2 = new Intent(string2);
            string2.setPackage(this.b.getPackageName());
            string2.setFlags(268435456);
        } else {
            Object object2 = d.b((Bundle)object);
            if (object2 != null) {
                string2 = new Intent("android.intent.action.VIEW");
                string2.setPackage(this.b.getPackageName());
                string2.setData((Uri)object2);
            } else {
                object2 = this.b.getPackageManager().getLaunchIntentForPackage(this.b.getPackageName());
                string2 = object2;
                if (object2 == null) {
                    Log.w((String)"FirebaseMessaging", (String)"No activity found to launch app");
                    string2 = object2;
                }
            }
        }
        if (string2 == null) {
            return null;
        }
        string2.addFlags(67108864);
        object = new Bundle((Bundle)object);
        FirebaseMessagingService.a((Bundle)object);
        string2.putExtras((Bundle)object);
        for (Object object2 : object.keySet()) {
            if (!object2.startsWith("gcm.n.") && !object2.startsWith("gcm.notification.")) continue;
            string2.removeExtra((String)object2);
        }
        return PendingIntent.getActivity((Context)this.b, (int)this.f.incrementAndGet(), (Intent)string2, (int)1073741824);
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    final boolean c(Bundle object) {
        String string2;
        Object object2;
        Object object3;
        int n2;
        void var8_7;
        Object object4;
        block29 : {
            int n3;
            block33 : {
                block32 : {
                    block31 : {
                        block30 : {
                            block28 : {
                                if ("1".equals(d.a((Bundle)object, "gcm.n.noui"))) {
                                    return true;
                                }
                                if (!((KeyguardManager)this.b.getSystemService("keyguard")).inKeyguardRestrictedInputMode()) {
                                    if (!p.g()) {
                                        SystemClock.sleep((long)10L);
                                    }
                                    n2 = Process.myPid();
                                    object4 = ((ActivityManager)this.b.getSystemService("activity")).getRunningAppProcesses();
                                    if (object4 != null) {
                                        object4 = object4.iterator();
                                        while (object4.hasNext()) {
                                            ActivityManager.RunningAppProcessInfo runningAppProcessInfo = (ActivityManager.RunningAppProcessInfo)object4.next();
                                            if (runningAppProcessInfo.pid != n2) continue;
                                            if (runningAppProcessInfo.importance != 100) break;
                                            return false;
                                        }
                                    }
                                }
                                if ((n2 = 0) != 0) {
                                    return false;
                                }
                                object4 = this.d((Bundle)object, "gcm.n.title");
                                String string3 = object4;
                                if (TextUtils.isEmpty((CharSequence)object4)) {
                                    CharSequence charSequence = this.b.getApplicationInfo().loadLabel(this.b.getPackageManager());
                                }
                                string2 = this.d((Bundle)object, "gcm.n.body");
                                object4 = d.a((Bundle)object, "gcm.n.icon");
                                if (TextUtils.isEmpty((CharSequence)object4)) break block28;
                                object2 = this.b.getResources();
                                n2 = object2.getIdentifier((String)object4, "drawable", this.b.getPackageName());
                                if (n2 != 0 && this.a(n2) || (n2 = object2.getIdentifier((String)object4, "mipmap", this.b.getPackageName())) != 0 && this.a(n2)) break block29;
                                object2 = new StringBuilder(String.valueOf(object4).length() + 61);
                                object2.append("Icon resource ");
                                object2.append((String)object4);
                                object2.append(" not found. Notification will use default icon.");
                                Log.w((String)"FirebaseMessaging", (String)object2.toString());
                            }
                            if ((n3 = this.a().getInt("com.google.firebase.messaging.default_notification_icon", 0)) == 0) break block30;
                            n2 = n3;
                            if (this.a(n3)) break block31;
                        }
                        n2 = this.b.getApplicationInfo().icon;
                    }
                    if (n2 == 0) break block32;
                    n3 = n2;
                    if (this.a(n2)) break block33;
                }
                n3 = 17301651;
            }
            n2 = n3;
        }
        Integer n4 = this.b(d.a((Bundle)object, "gcm.n.color"));
        object4 = d.d((Bundle)object);
        boolean bl2 = TextUtils.isEmpty((CharSequence)object4);
        Intent intent = null;
        if (bl2) {
            object4 = null;
        } else if (!"default".equals(object4) && this.b.getResources().getIdentifier((String)object4, "raw", this.b.getPackageName()) != 0) {
            object2 = this.b.getPackageName();
            object3 = new StringBuilder(String.valueOf(object2).length() + 24 + String.valueOf(object4).length());
            object3.append("android.resource://");
            object3.append((String)object2);
            object3.append("/raw/");
            object3.append((String)object4);
            object4 = Uri.parse((String)object3.toString());
        } else {
            object4 = RingtoneManager.getDefaultUri((int)2);
        }
        object2 = object3 = this.e((Bundle)object);
        if (FirebaseMessagingService.b((Bundle)object)) {
            object2 = new Intent("com.google.firebase.messaging.NOTIFICATION_OPEN");
            d.a((Intent)object2, (Bundle)object);
            object2.putExtra("pending_intent", (Parcelable)object3);
            object2 = ad.a(this.b, this.f.incrementAndGet(), (Intent)object2, 1073741824);
            intent = new Intent("com.google.firebase.messaging.NOTIFICATION_DISMISS");
            d.a(intent, (Bundle)object);
            intent = ad.a(this.b, this.f.incrementAndGet(), intent, 1073741824);
        }
        if (p.i() && this.b.getApplicationInfo().targetSdkVersion > 25) {
            object4 = this.a((CharSequence)var8_7, string2, n2, n4, (Uri)object4, (PendingIntent)object2, (PendingIntent)intent, this.c(d.a((Bundle)object, "gcm.n.android_channel_id")));
        } else {
            object3 = new ab.c(this.b).a(true).a(n2);
            if (!TextUtils.isEmpty((CharSequence)var8_7)) {
                object3.a((CharSequence)var8_7);
            }
            if (!TextUtils.isEmpty((CharSequence)string2)) {
                object3.b(string2);
                object3.a(new ab.b().a(string2));
            }
            if (n4 != null) {
                object3.b(n4);
            }
            if (object4 != null) {
                object3.a((Uri)object4);
            }
            if (object2 != null) {
                object3.a((PendingIntent)object2);
            }
            if (intent != null) {
                object3.b((PendingIntent)intent);
            }
            object4 = object3.a();
        }
        String string4 = d.a((Bundle)object, "gcm.n.tag");
        if (Log.isLoggable((String)"FirebaseMessaging", (int)3)) {
            Log.d((String)"FirebaseMessaging", (String)"Showing notification");
        }
        object2 = (NotificationManager)this.b.getSystemService("notification");
        object = string4;
        if (TextUtils.isEmpty((CharSequence)string4)) {
            long l2 = SystemClock.uptimeMillis();
            object = new StringBuilder(37);
            object.append("FCM-Notification:");
            object.append(l2);
            object = object.toString();
        }
        object2.notify((String)object, 0, (Notification)object4);
        return true;
    }
}

