/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.net.Uri
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  android.text.TextUtils
 *  android.util.Log
 *  org.json.JSONException
 *  org.json.JSONObject
 */
package com.google.firebase.auth.internal;

import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;
import android.util.Log;
import com.google.android.gms.internal.azm;
import com.google.android.gms.internal.wz;
import com.google.android.gms.internal.xc;
import com.google.firebase.auth.internal.f;
import com.google.firebase.auth.o;
import org.json.JSONException;
import org.json.JSONObject;

public final class e
extends wz
implements o {
    public static final Parcelable.Creator<e> CREATOR = new f();
    private String a;
    private String b;
    private String c;
    private String d;
    private Uri e;
    private String f;
    private String g;
    private boolean h;
    private String i;

    public e(String string2, String string3, String string4, String string5, String string6, String string7, boolean bl2, String string8) {
        this.a = string2;
        this.b = string3;
        this.f = string4;
        this.g = string5;
        this.c = string6;
        this.d = string7;
        if (!TextUtils.isEmpty((CharSequence)this.d)) {
            this.e = Uri.parse((String)this.d);
        }
        this.h = bl2;
        this.i = string8;
    }

    public static e a(String object) {
        try {
            object = new JSONObject((String)object);
            object = new e(object.optString("userId"), object.optString("providerId"), object.optString("email"), object.optString("phoneNumber"), object.optString("displayName"), object.optString("photoUrl"), object.optBoolean("isEmailVerified"), object.optString("rawUserInfo"));
            return object;
        }
        catch (JSONException jSONException) {
            Log.d((String)"DefaultAuthUserInfo", (String)"Failed to unpack UserInfo from JSON");
            throw new azm((Throwable)jSONException);
        }
    }

    public final String a() {
        return this.a;
    }

    public final String b() {
        return this.c;
    }

    public final String c() {
        return this.f;
    }

    public final String d() {
        return this.g;
    }

    public final boolean e() {
        return this.h;
    }

    public final String f() {
        Object object = new JSONObject();
        try {
            object.putOpt("userId", (Object)this.a);
            object.putOpt("providerId", (Object)this.b);
            object.putOpt("displayName", (Object)this.c);
            object.putOpt("photoUrl", (Object)this.d);
            object.putOpt("email", (Object)this.f);
            object.putOpt("phoneNumber", (Object)this.g);
            object.putOpt("isEmailVerified", (Object)this.h);
            object.putOpt("rawUserInfo", (Object)this.i);
            object = object.toString();
            return object;
        }
        catch (JSONException jSONException) {
            Log.d((String)"DefaultAuthUserInfo", (String)"Failed to jsonify this object");
            throw new azm((Throwable)jSONException);
        }
    }

    @Override
    public final String j() {
        return this.b;
    }

    public final void writeToParcel(Parcel parcel, int n2) {
        n2 = xc.a(parcel);
        xc.a(parcel, 1, this.a(), false);
        xc.a(parcel, 2, this.j(), false);
        xc.a(parcel, 3, this.b(), false);
        xc.a(parcel, 4, this.d, false);
        xc.a(parcel, 5, this.c(), false);
        xc.a(parcel, 6, this.d(), false);
        xc.a(parcel, 7, this.e());
        xc.a(parcel, 8, this.i, false);
        xc.a(parcel, n2);
    }
}

