/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.app.Application
 *  android.content.BroadcastReceiver
 *  android.content.Context
 *  android.content.Intent
 *  android.content.IntentFilter
 *  android.text.TextUtils
 *  android.util.Log
 */
package com.google.firebase;

import android.annotation.TargetApi;
import android.app.Application;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.text.TextUtils;
import android.util.Log;
import com.google.android.gms.common.api.internal.cn;
import com.google.android.gms.common.api.internal.co;
import com.google.android.gms.common.internal.ae;
import com.google.android.gms.common.internal.ag;
import com.google.android.gms.common.internal.ah;
import com.google.android.gms.common.util.r;
import com.google.firebase.e;
import com.google.firebase.g;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicReference;

public class b {
    static final Map<String, b> a;
    private static final List<String> b;
    private static final List<String> c;
    private static final List<String> d;
    private static final List<String> e;
    private static final Set<String> f;
    private static final Object g;
    private final Context h;
    private final String i;
    private final e j;
    private final AtomicBoolean k = new AtomicBoolean(false);
    private final AtomicBoolean l = new AtomicBoolean();
    private final List<a> m = new CopyOnWriteArrayList<a>();
    private final List<b> n = new CopyOnWriteArrayList<b>();
    private final List<Object> o = new CopyOnWriteArrayList<Object>();
    private com.google.firebase.a.a p;
    private c q;

    static {
        b = Arrays.asList("com.google.firebase.auth.FirebaseAuth", "com.google.firebase.iid.FirebaseInstanceId");
        c = Collections.singletonList("com.google.firebase.crash.FirebaseCrash");
        d = Arrays.asList("com.google.android.gms.measurement.AppMeasurement");
        e = Arrays.asList(new String[0]);
        f = Collections.emptySet();
        g = new Object();
        a = new android.support.v4.g.a<String, b>();
    }

    private b(Context context, String string2, e e2) {
        this.h = ah.a(context);
        this.i = ah.a(string2);
        this.j = ah.a(e2);
        this.q = new com.google.firebase.a.b();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static b a(Context object) {
        Object object2 = g;
        synchronized (object2) {
            if (a.containsKey("[DEFAULT]")) {
                return b.d();
            }
            e e2 = e.a(object);
            if (e2 != null) return b.a(object, e2);
            return null;
        }
    }

    public static b a(Context context, e e2) {
        return b.a(context, e2, "[DEFAULT]");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static b a(Context object, e e2, String string2) {
        com.google.firebase.a.c.a((Context)object);
        if (object.getApplicationContext() instanceof Application) {
            cn.a((Application)object.getApplicationContext());
            cn.a().a(new g());
        }
        string2 = string2.trim();
        if (object.getApplicationContext() != null) {
            object = object.getApplicationContext();
        }
        Object object2 = g;
        synchronized (object2) {
            boolean bl2 = a.containsKey(string2);
            StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 33);
            stringBuilder.append("FirebaseApp name ");
            stringBuilder.append(string2);
            stringBuilder.append(" already exists!");
            ah.a(bl2 ^ true, (Object)stringBuilder.toString());
            ah.a(object, (Object)"Application context cannot be null.");
            object = new b((Context)object, string2, e2);
            a.put(string2, (b)object);
        }
        com.google.firebase.a.c.a((b)object);
        b.super.a(b.class, object, b);
        if (object.e()) {
            b.super.a(b.class, object, c);
            b.super.a((Class<T>)Context.class, (T)object.a(), (Iterable<String>)d);
        }
        return object;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static b a(String string2) {
        Object object = g;
        synchronized (object) {
            List<String> list = a.get(string2.trim());
            if (list != null) {
                return list;
            }
            list = b.i();
            list = !list.isEmpty() ? ((list = String.valueOf(TextUtils.join((CharSequence)", ", (Iterable)list))).length() != 0 ? "Available app names: ".concat((String)((Object)list)) : new String("Available app names: ")) : "";
            throw new IllegalStateException(String.format("FirebaseApp with name %s doesn't exist. %s", string2, list));
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private final <T> void a(Class<T> var1_1, T var2_3, Iterable<String> var3_4) {
        var5_6 = android.support.v4.content.b.b(this.h);
        if (var5_6) {
            d.a(this.h);
        }
        var6_7 = var3_4.iterator();
        while (var6_7.hasNext() != false) {
            var3_4 = (String)var6_7.next();
            if (!var5_6) ** GOTO lbl10
            try {
                if (!b.e.contains(var3_4)) continue;
lbl10: // 2 sources:
                if (!Modifier.isPublic(var4_8 = (var7_9 = Class.forName((String)var3_4).getMethod("getInstance", new Class[]{var1_1})).getModifiers()) || !Modifier.isStatic(var4_8)) continue;
                var7_9.invoke(null, new Object[]{var2_3});
                continue;
            }
            catch (ClassNotFoundException var7_11) {}
            if (b.f.contains(var3_4) != false) throw new IllegalStateException(String.valueOf(var3_4).concat(" is missing, but is required. Check if it has been removed by Proguard."));
            Log.d((String)"FirebaseApp", (String)String.valueOf(var3_4).concat(" is not linked. Skipping initialization."));
            continue;
            catch (NoSuchMethodException var1_2) {
                throw new IllegalStateException(String.valueOf(var3_4).concat("#getInstance has been removed by Proguard. Add keep rule to prevent it."));
            }
            catch (IllegalAccessException var7_10) {}
            var3_4 = String.valueOf(var3_4);
            var3_4 = var3_4.length() != 0 ? "Failed to initialize ".concat((String)var3_4) : new String("Failed to initialize ");
            Log.wtf((String)"FirebaseApp", (String)var3_4, (Throwable)var7_10);
            continue;
            catch (InvocationTargetException var3_5) {}
            Log.wtf((String)"FirebaseApp", (String)"Firebase API initialization failure.", (Throwable)var3_5);
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static void a(boolean bl2) {
        Object object = g;
        synchronized (object) {
            ArrayList<b> arrayList = new ArrayList<b>(a.values());
            int n2 = arrayList.size();
            int n3 = 0;
            while (n3 < n2) {
                int n4;
                b b2 = arrayList.get(n3);
                n3 = n4 = n3 + 1;
                if (!b2.k.get()) continue;
                b2.b(bl2);
                n3 = n4;
            }
            return;
        }
    }

    private final void b(boolean bl2) {
        Log.d((String)"FirebaseApp", (String)"Notifying background state change listeners.");
        Iterator<b> iterator = this.n.iterator();
        while (iterator.hasNext()) {
            iterator.next().a(bl2);
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static b d() {
        Object object = g;
        synchronized (object) {
            Object object2 = a.get("[DEFAULT]");
            if (object2 != null) {
                return object2;
            }
            object2 = r.a();
            StringBuilder stringBuilder = new StringBuilder(String.valueOf(object2).length() + 116);
            stringBuilder.append("Default FirebaseApp is not initialized in this process ");
            stringBuilder.append((String)object2);
            stringBuilder.append(". Make sure to call FirebaseApp.initializeApp(Context) first.");
            throw new IllegalStateException(stringBuilder.toString());
        }
    }

    private final void h() {
        ah.a(this.l.get() ^ true, (Object)"FirebaseApp was deleted");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static List<String> i() {
        android.support.v4.g.b<String> b2 = new android.support.v4.g.b<String>();
        ArrayList<String> arrayList = g;
        synchronized (arrayList) {
            Iterator<b> iterator = a.values().iterator();
            while (iterator.hasNext()) {
                b2.add(iterator.next().b());
            }
            if (com.google.firebase.a.c.a() != null) {
                b2.addAll(com.google.firebase.a.c.b());
            }
        }
        arrayList = new ArrayList<String>(b2);
        Collections.sort(arrayList);
        return arrayList;
    }

    private final void j() {
        this.a(b.class, this, b);
        if (this.e()) {
            this.a(b.class, this, c);
            this.a((Class<T>)Context.class, (T)this.h, (Iterable<String>)d);
        }
    }

    public Context a() {
        this.h();
        return this.h;
    }

    public final void a(com.google.firebase.a.a a2) {
        this.p = ah.a(a2);
    }

    public final void a(com.google.firebase.a.d d2) {
        Log.d((String)"FirebaseApp", (String)"Notifying auth state listeners.");
        Iterator<a> iterator = this.m.iterator();
        int n2 = 0;
        while (iterator.hasNext()) {
            iterator.next().a(d2);
            ++n2;
        }
        Log.d((String)"FirebaseApp", (String)String.format("Notified %d auth state listeners.", n2));
    }

    public final void a(c c2) {
        this.q = ah.a(c2);
        this.q.a(this.m.size());
    }

    public String b() {
        this.h();
        return this.i;
    }

    public e c() {
        this.h();
        return this.j;
    }

    public final boolean e() {
        return "[DEFAULT]".equals(this.b());
    }

    public boolean equals(Object object) {
        if (!(object instanceof b)) {
            return false;
        }
        return this.i.equals(((b)object).b());
    }

    public final String f() {
        String string2 = com.google.android.gms.common.util.d.b(this.b().getBytes());
        String string3 = com.google.android.gms.common.util.d.b(this.c().b().getBytes());
        StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 1 + String.valueOf(string3).length());
        stringBuilder.append(string2);
        stringBuilder.append("+");
        stringBuilder.append(string3);
        return stringBuilder.toString();
    }

    public int hashCode() {
        return this.i.hashCode();
    }

    public String toString() {
        return ae.a(this).a("name", this.i).a("options", this.j).toString();
    }

    public static interface a {
        public void a(com.google.firebase.a.d var1);
    }

    public static interface b {
        public void a(boolean var1);
    }

    public static interface c {
        public void a(int var1);
    }

    @TargetApi(value=24)
    static final class d
    extends BroadcastReceiver {
        private static AtomicReference<d> a = new AtomicReference();
        private final Context b;

        private d(Context context) {
            this.b = context;
        }

        static /* synthetic */ void a(Context context) {
            d.b(context);
        }

        private static void b(Context context) {
            d d2;
            if (a.get() == null && a.compareAndSet(null, d2 = new d(context))) {
                context.registerReceiver((BroadcastReceiver)d2, new IntentFilter("android.intent.action.USER_UNLOCKED"));
            }
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        public final void onReceive(Context object, Intent object2) {
            object = g;
            synchronized (object) {
                object2 = b.a.values().iterator();
                do {
                    if (!object2.hasNext()) {
                        // MONITOREXIT [2, 3, 4] lbl6 : MonitorExitStatement: MONITOREXIT : var1_1 /* !! */ 
                        this.b.unregisterReceiver((BroadcastReceiver)this);
                        return;
                    }
                    ((b)object2.next()).j();
                } while (true);
            }
        }
    }

}

