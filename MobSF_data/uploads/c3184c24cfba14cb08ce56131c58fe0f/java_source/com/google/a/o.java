/*
 * Decompiled with CFR 0_132.
 */
package com.google.a;

import com.google.a.b.a;
import com.google.a.b.f;
import com.google.a.j;
import java.math.BigInteger;

public final class o
extends j {
    private static final Class<?>[] a = new Class[]{Integer.TYPE, Long.TYPE, Short.TYPE, Float.TYPE, Double.TYPE, Byte.TYPE, Boolean.TYPE, Character.TYPE, Integer.class, Long.class, Short.class, Float.class, Double.class, Byte.class, Boolean.class, Character.class};
    private Object b;

    public o(Boolean bl2) {
        this.a(bl2);
    }

    public o(Number number) {
        this.a(number);
    }

    public o(String string2) {
        this.a(string2);
    }

    private static boolean a(o object) {
        boolean bl2;
        block2 : {
            block3 : {
                boolean bl3;
                boolean bl4 = object.b instanceof Number;
                bl2 = bl3 = false;
                if (!bl4) break block2;
                object = (Number)object.b;
                if (object instanceof BigInteger || object instanceof Long || object instanceof Integer || object instanceof Short) break block3;
                bl2 = bl3;
                if (!(object instanceof Byte)) break block2;
            }
            bl2 = true;
        }
        return bl2;
    }

    private static boolean b(Object class_) {
        if (class_ instanceof String) {
            return true;
        }
        class_ = class_.getClass();
        Class<?>[] arrclass = a;
        int n2 = arrclass.length;
        for (int i2 = 0; i2 < n2; ++i2) {
            if (!arrclass[i2].isAssignableFrom(class_)) continue;
            return true;
        }
        return false;
    }

    @Override
    public Number a() {
        if (this.b instanceof String) {
            return new f((String)this.b);
        }
        return (Number)this.b;
    }

    /*
     * Enabled aggressive block sorting
     */
    void a(Object object) {
        if (object instanceof Character) {
            object = String.valueOf(((Character)object).charValue());
        } else {
            boolean bl2 = object instanceof Number || o.b(object);
            a.a(bl2);
        }
        this.b = object;
    }

    @Override
    public String b() {
        if (this.p()) {
            return this.a().toString();
        }
        if (this.o()) {
            return this.n().toString();
        }
        return (String)this.b;
    }

    @Override
    public double c() {
        if (this.p()) {
            return this.a().doubleValue();
        }
        return Double.parseDouble(this.b());
    }

    @Override
    public long d() {
        if (this.p()) {
            return this.a().longValue();
        }
        return Long.parseLong(this.b());
    }

    @Override
    public int e() {
        if (this.p()) {
            return this.a().intValue();
        }
        return Integer.parseInt(this.b());
    }

    public boolean equals(Object object) {
        boolean bl2 = true;
        if (this == object) {
            return true;
        }
        if (object != null) {
            if (this.getClass() != object.getClass()) {
                return false;
            }
            object = (o)object;
            if (this.b == null) {
                if (object.b == null) {
                    return true;
                }
                return false;
            }
            if (o.a(this) && o.a((o)object)) {
                if (this.a().longValue() == object.a().longValue()) {
                    return true;
                }
                return false;
            }
            if (this.b instanceof Number && object.b instanceof Number) {
                double d2;
                double d3 = this.a().doubleValue();
                if (d3 != (d2 = object.a().doubleValue())) {
                    if (Double.isNaN(d3) && Double.isNaN(d2)) {
                        return true;
                    }
                    bl2 = false;
                }
                return bl2;
            }
            return this.b.equals(object.b);
        }
        return false;
    }

    @Override
    public boolean f() {
        if (this.o()) {
            return this.n();
        }
        return Boolean.parseBoolean(this.b());
    }

    public int hashCode() {
        if (this.b == null) {
            return 31;
        }
        if (o.a(this)) {
            long l2 = this.a().longValue();
            return (int)(l2 >>> 32 ^ l2);
        }
        if (this.b instanceof Number) {
            long l3 = Double.doubleToLongBits(this.a().doubleValue());
            return (int)(l3 >>> 32 ^ l3);
        }
        return this.b.hashCode();
    }

    @Override
    Boolean n() {
        return (Boolean)this.b;
    }

    public boolean o() {
        return this.b instanceof Boolean;
    }

    public boolean p() {
        return this.b instanceof Number;
    }

    public boolean q() {
        return this.b instanceof String;
    }
}

