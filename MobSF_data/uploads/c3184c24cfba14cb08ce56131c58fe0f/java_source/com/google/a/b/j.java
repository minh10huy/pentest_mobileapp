/*
 * Decompiled with CFR 0_132.
 */
package com.google.a.b;

import com.google.a.b.a.n;
import com.google.a.d.b;
import com.google.a.d.c;
import com.google.a.d.d;
import com.google.a.k;
import com.google.a.l;
import com.google.a.r;
import com.google.a.t;
import java.io.EOFException;
import java.io.IOException;
import java.io.Writer;

public final class j {
    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public static com.google.a.j a(com.google.a.d.a object) {
        boolean bl2;
        block8 : {
            try {
                object.f();
                bl2 = false;
                try {
                    return n.X.b((com.google.a.d.a)object);
                }
                catch (EOFException eOFException) {
                    break block8;
                }
            }
            catch (NumberFormatException numberFormatException) {
                throw new r(numberFormatException);
            }
            catch (IOException iOException) {
                throw new k(iOException);
            }
            catch (d d2) {
                throw new r(d2);
            }
            catch (EOFException eOFException) {
                return l.a;
            }
        }
        if (!bl2) void var0_6;
        throw new r((Throwable)var0_6);
        return l.a;
    }

    public static Writer a(Appendable appendable) {
        if (appendable instanceof Writer) {
            return (Writer)appendable;
        }
        return new a(appendable);
    }

    public static void a(com.google.a.j j2, c c2) {
        n.X.a(c2, j2);
    }

    private static final class com.google.a.b.j$a
    extends Writer {
        private final Appendable a;
        private final a b = new a();

        com.google.a.b.j$a(Appendable appendable) {
            this.a = appendable;
        }

        @Override
        public void close() {
        }

        @Override
        public void flush() {
        }

        @Override
        public void write(int n2) {
            this.a.append((char)n2);
        }

        @Override
        public void write(char[] arrc, int n2, int n3) {
            this.b.a = arrc;
            this.a.append(this.b, n2, n3 + n2);
        }

        static class a
        implements CharSequence {
            char[] a;

            a() {
            }

            @Override
            public char charAt(int n2) {
                return this.a[n2];
            }

            @Override
            public int length() {
                return this.a.length;
            }

            @Override
            public CharSequence subSequence(int n2, int n3) {
                return new String(this.a, n2, n3 - n2);
            }
        }

    }

}

