/*
 * Decompiled with CFR 0_132.
 */
package com.google.a;

import com.google.a.b.a.g;
import com.google.a.b.a.h;
import com.google.a.b.a.i;
import com.google.a.b.a.n;
import com.google.a.b.d;
import com.google.a.b.j;
import com.google.a.d.b;
import com.google.a.d.c;
import com.google.a.f;
import com.google.a.k;
import com.google.a.l;
import com.google.a.r;
import com.google.a.s;
import com.google.a.t;
import com.google.a.u;
import java.io.Closeable;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.lang.reflect.Type;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicLongArray;

public final class e {
    private static final com.google.a.c.a<?> a = com.google.a.c.a.b(Object.class);
    private final ThreadLocal<Map<com.google.a.c.a<?>, a<?>>> b = new ThreadLocal();
    private final Map<com.google.a.c.a<?>, t<?>> c = new ConcurrentHashMap();
    private final List<u> d;
    private final com.google.a.b.c e;
    private final d f;
    private final com.google.a.d g;
    private final boolean h;
    private final boolean i;
    private final boolean j;
    private final boolean k;
    private final boolean l;
    private final com.google.a.b.a.d m;

    public e() {
        this(d.a, com.google.a.c.a, Collections.emptyMap(), false, false, false, true, false, false, false, s.a, Collections.emptyList());
    }

    e(d d2, com.google.a.d d3, Map<Type, f<?>> object, boolean bl2, boolean bl3, boolean bl4, boolean bl5, boolean bl6, boolean bl7, boolean bl8, s object2, List<u> list) {
        this.e = new com.google.a.b.c((Map<Type, f<?>>)object);
        this.f = d2;
        this.g = d3;
        this.h = bl2;
        this.j = bl4;
        this.i = bl5;
        this.k = bl6;
        this.l = bl7;
        object = new ArrayList();
        object.add(n.Y);
        object.add(h.a);
        object.add(d2);
        object.addAll(list);
        object.add(n.D);
        object.add(n.m);
        object.add(n.g);
        object.add(n.i);
        object.add(n.k);
        object2 = e.a(object2);
        object.add(n.a(Long.TYPE, Long.class, object2));
        object.add(n.a(Double.TYPE, Double.class, this.a(bl8)));
        object.add(n.a(Float.TYPE, Float.class, this.b(bl8)));
        object.add(n.x);
        object.add(n.o);
        object.add(n.q);
        object.add(n.a(AtomicLong.class, e.a((t<Number>)object2)));
        object.add(n.a(AtomicLongArray.class, e.b((t<Number>)object2)));
        object.add(n.s);
        object.add(n.z);
        object.add(n.F);
        object.add(n.H);
        object.add(n.a(BigDecimal.class, n.B));
        object.add(n.a(BigInteger.class, n.C));
        object.add(n.J);
        object.add(n.L);
        object.add(n.P);
        object.add(n.R);
        object.add(n.W);
        object.add(n.N);
        object.add(n.d);
        object.add(com.google.a.b.a.c.a);
        object.add(n.U);
        object.add(com.google.a.b.a.k.a);
        object.add(com.google.a.b.a.j.a);
        object.add(n.S);
        object.add(com.google.a.b.a.a.a);
        object.add(n.b);
        object.add(new com.google.a.b.a.b(this.e));
        object.add(new g(this.e, bl3));
        this.m = new com.google.a.b.a.d(this.e);
        object.add(this.m);
        object.add(n.Z);
        object.add(new i(this.e, d3, d2, this.m));
        this.d = Collections.unmodifiableList(object);
    }

    private static t<Number> a(s s2) {
        if (s2 == s.a) {
            return n.t;
        }
        return new t<Number>(){

            public Number a(com.google.a.d.a a2) {
                if (a2.f() == b.i) {
                    a2.j();
                    return null;
                }
                return a2.l();
            }

            @Override
            public void a(c c2, Number number) {
                if (number == null) {
                    c2.f();
                    return;
                }
                c2.b(number.toString());
            }

            @Override
            public /* synthetic */ Object b(com.google.a.d.a a2) {
                return this.a(a2);
            }
        };
    }

    private static t<AtomicLong> a(final t<Number> t2) {
        return new t<AtomicLong>(){

            public AtomicLong a(com.google.a.d.a a2) {
                return new AtomicLong(((Number)t2.b(a2)).longValue());
            }

            @Override
            public void a(c c2, AtomicLong atomicLong) {
                t2.a(c2, atomicLong.get());
            }

            @Override
            public /* synthetic */ Object b(com.google.a.d.a a2) {
                return this.a(a2);
            }
        }.a();
    }

    private t<Number> a(boolean bl2) {
        if (bl2) {
            return n.v;
        }
        return new t<Number>(){

            public Double a(com.google.a.d.a a2) {
                if (a2.f() == b.i) {
                    a2.j();
                    return null;
                }
                return a2.k();
            }

            @Override
            public void a(c c2, Number number) {
                if (number == null) {
                    c2.f();
                    return;
                }
                e.a(number.doubleValue());
                c2.a(number);
            }

            @Override
            public /* synthetic */ Object b(com.google.a.d.a a2) {
                return this.a(a2);
            }
        };
    }

    static void a(double d2) {
        if (!Double.isNaN(d2) && !Double.isInfinite(d2)) {
            return;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(d2);
        stringBuilder.append(" is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.");
        throw new IllegalArgumentException(stringBuilder.toString());
    }

    private static void a(Object object, com.google.a.d.a a2) {
        if (object != null) {
            try {
                if (a2.f() == b.j) {
                    return;
                }
                throw new k("JSON document was not fully consumed.");
            }
            catch (IOException iOException) {
                throw new k(iOException);
            }
            catch (com.google.a.d.d d2) {
                throw new r(d2);
            }
        }
    }

    private static t<AtomicLongArray> b(final t<Number> t2) {
        return new t<AtomicLongArray>(){

            public AtomicLongArray a(com.google.a.d.a object) {
                ArrayList<Long> arrayList = new ArrayList<Long>();
                object.a();
                while (object.e()) {
                    arrayList.add(((Number)t2.b((com.google.a.d.a)object)).longValue());
                }
                object.b();
                int n2 = arrayList.size();
                object = new AtomicLongArray(n2);
                for (int i2 = 0; i2 < n2; ++i2) {
                    object.set(i2, (Long)arrayList.get(i2));
                }
                return object;
            }

            @Override
            public void a(c c2, AtomicLongArray atomicLongArray) {
                c2.b();
                int n2 = atomicLongArray.length();
                for (int i2 = 0; i2 < n2; ++i2) {
                    t2.a(c2, atomicLongArray.get(i2));
                }
                c2.c();
            }

            @Override
            public /* synthetic */ Object b(com.google.a.d.a a2) {
                return this.a(a2);
            }
        }.a();
    }

    private t<Number> b(boolean bl2) {
        if (bl2) {
            return n.u;
        }
        return new t<Number>(){

            public Float a(com.google.a.d.a a2) {
                if (a2.f() == b.i) {
                    a2.j();
                    return null;
                }
                return Float.valueOf((float)a2.k());
            }

            @Override
            public void a(c c2, Number number) {
                if (number == null) {
                    c2.f();
                    return;
                }
                e.a(number.floatValue());
                c2.a(number);
            }

            @Override
            public /* synthetic */ Object b(com.google.a.d.a a2) {
                return this.a(a2);
            }
        };
    }

    public com.google.a.d.a a(Reader closeable) {
        closeable = new com.google.a.d.a((Reader)closeable);
        closeable.a(this.l);
        return closeable;
    }

    public c a(Writer closeable) {
        if (this.j) {
            closeable.write(")]}'\n");
        }
        closeable = new c((Writer)closeable);
        if (this.k) {
            closeable.c("  ");
        }
        closeable.d(this.h);
        return closeable;
    }

    public <T> t<T> a(com.google.a.c.a<T> a2) {
        Object object = this.c;
        Object object2 = a2 == null ? a : a2;
        if ((object2 = object.get(object2)) != null) {
            return object2;
        }
        object = this.b.get();
        boolean bl2 = false;
        object2 = object;
        if (object == null) {
            object2 = new HashMap();
            this.b.set((Map<com.google.a.c.a<?>, a<?>>)object2);
            bl2 = true;
        }
        if ((object = (a)object2.get(a2)) != null) {
            return object;
        }
        try {
            object = new a();
            object2.put(a2, object);
            Iterator<u> iterator = this.d.iterator();
            while (iterator.hasNext()) {
                t<T> t2 = iterator.next().a(this, a2);
                if (t2 == null) continue;
                object.a(t2);
                this.c.put(a2, t2);
                return t2;
            }
            object = new StringBuilder();
            object.append("GSON cannot handle ");
            object.append(a2);
            throw new IllegalArgumentException(object.toString());
        }
        finally {
            object2.remove(a2);
            if (bl2) {
                this.b.remove();
            }
        }
    }

    public <T> t<T> a(u object, com.google.a.c.a<T> a2) {
        Iterator<u> u2 = object;
        if (!this.d.contains(object)) {
            u2 = this.m;
        }
        boolean bl2 = false;
        for (u u3 : this.d) {
            if (!bl2) {
                if (u3 != u2) continue;
                bl2 = true;
                continue;
            }
            t<T> t2 = u3.a(this, a2);
            if (t2 == null) continue;
            return t2;
        }
        object = new StringBuilder();
        object.append("GSON cannot serialize ");
        object.append(a2);
        throw new IllegalArgumentException(object.toString());
    }

    public <T> t<T> a(Class<T> class_) {
        return this.a(com.google.a.c.a.b(class_));
    }

    /*
     * Exception decompiling
     */
    public <T> T a(com.google.a.d.a var1_1, Type var2_2) {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // org.benf.cfr.reader.util.ConfusedCFRException: Started 2 blocks at once
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.getStartingBlocks(Op04StructuredStatement.java:393)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:471)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:2960)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:818)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }

    public <T> T a(Reader closeable, Type type2) {
        closeable = this.a((Reader)closeable);
        type2 = this.a((com.google.a.d.a)closeable, type2);
        e.a(type2, (com.google.a.d.a)closeable);
        return (T)type2;
    }

    public <T> T a(String string2, Type type2) {
        if (string2 == null) {
            return null;
        }
        return this.a(new StringReader(string2), type2);
    }

    public String a(com.google.a.j j2) {
        StringWriter stringWriter = new StringWriter();
        this.a(j2, stringWriter);
        return stringWriter.toString();
    }

    public String a(Object object) {
        if (object == null) {
            return this.a(l.a);
        }
        return this.a(object, object.getClass());
    }

    public String a(Object object, Type type2) {
        StringWriter stringWriter = new StringWriter();
        this.a(object, type2, stringWriter);
        return stringWriter.toString();
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public void a(com.google.a.j j2, c c2) {
        Throwable throwable2222;
        boolean bl2 = c2.g();
        c2.b(true);
        boolean bl3 = c2.h();
        c2.c(this.i);
        boolean bl4 = c2.i();
        c2.d(this.h);
        j.a(j2, c2);
        c2.b(bl2);
        c2.c(bl3);
        c2.d(bl4);
        return;
        {
            catch (Throwable throwable2222) {
            }
            catch (IOException iOException) {}
            {
                throw new k(iOException);
            }
        }
        c2.b(bl2);
        c2.c(bl3);
        c2.d(bl4);
        throw throwable2222;
    }

    public void a(com.google.a.j j2, Appendable appendable) {
        try {
            this.a(j2, this.a(j.a(appendable)));
            return;
        }
        catch (IOException iOException) {
            throw new k(iOException);
        }
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public void a(Object object, Type object2, c c2) {
        Throwable throwable2222;
        object2 = this.a(com.google.a.c.a.a(object2));
        boolean bl2 = c2.g();
        c2.b(true);
        boolean bl3 = c2.h();
        c2.c(this.i);
        boolean bl4 = c2.i();
        c2.d(this.h);
        object2.a(c2, object);
        c2.b(bl2);
        c2.c(bl3);
        c2.d(bl4);
        return;
        {
            catch (Throwable throwable2222) {
            }
            catch (IOException iOException) {}
            {
                throw new k(iOException);
            }
        }
        c2.b(bl2);
        c2.c(bl3);
        c2.d(bl4);
        throw throwable2222;
    }

    public void a(Object object, Type type2, Appendable appendable) {
        try {
            this.a(object, type2, this.a(j.a(appendable)));
            return;
        }
        catch (IOException iOException) {
            throw new k(iOException);
        }
    }

    public String toString() {
        StringBuilder stringBuilder = new StringBuilder("{serializeNulls:");
        stringBuilder.append(this.h);
        stringBuilder.append(",factories:");
        stringBuilder.append(this.d);
        stringBuilder.append(",instanceCreators:");
        stringBuilder.append(this.e);
        stringBuilder.append("}");
        return stringBuilder.toString();
    }

    static class a<T>
    extends t<T> {
        private t<T> a;

        a() {
        }

        @Override
        public void a(c c2, T t2) {
            if (this.a != null) {
                this.a.a(c2, t2);
                return;
            }
            throw new IllegalStateException();
        }

        public void a(t<T> t2) {
            if (this.a == null) {
                this.a = t2;
                return;
            }
            throw new AssertionError();
        }

        @Override
        public T b(com.google.a.d.a a2) {
            if (this.a != null) {
                return this.a.b(a2);
            }
            throw new IllegalStateException();
        }
    }

}

