/*
 * Decompiled with CFR 0_132.
 */
package com.google.a.d;

import com.google.a.b.e;
import com.google.a.d.b;
import com.google.a.d.d;
import java.io.Closeable;
import java.io.EOFException;
import java.io.IOException;
import java.io.Reader;

public class a
implements Closeable {
    private static final char[] b = ")]}'\n".toCharArray();
    int a = 0;
    private final Reader c;
    private boolean d = false;
    private final char[] e = new char[1024];
    private int f = 0;
    private int g = 0;
    private int h = 0;
    private int i = 0;
    private long j;
    private int k;
    private String l;
    private int[] m = new int[32];
    private int n = 0;
    private String[] o;
    private int[] p;

    static {
        e.a = new e(){

            /*
             * Enabled aggressive block sorting
             */
            @Override
            public void a(a a2) {
                int n2;
                if (a2 instanceof com.google.a.b.a.e) {
                    ((com.google.a.b.a.e)a2).o();
                    return;
                }
                int n3 = n2 = a2.a;
                if (n2 == 0) {
                    n3 = a2.r();
                }
                if (n3 == 13) {
                    n3 = 9;
                } else if (n3 == 12) {
                    n3 = 8;
                } else {
                    if (n3 != 14) {
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("Expected a name but was ");
                        stringBuilder.append((Object)a2.f());
                        stringBuilder.append(a2.s());
                        throw new IllegalStateException(stringBuilder.toString());
                    }
                    n3 = 10;
                }
                a2.a = n3;
            }
        };
    }

    public a(Reader reader) {
        int[] arrn = this.m;
        int n2 = this.n;
        this.n = n2 + 1;
        arrn[n2] = 6;
        this.o = new String[32];
        this.p = new int[32];
        if (reader != null) {
            this.c = reader;
            return;
        }
        throw new NullPointerException("in == null");
    }

    private void a(int n2) {
        int[] arrn;
        if (this.n == this.m.length) {
            arrn = new int[this.n * 2];
            int[] arrn2 = new int[this.n * 2];
            String[] arrstring = new String[this.n * 2];
            System.arraycopy(this.m, 0, arrn, 0, this.n);
            System.arraycopy(this.p, 0, arrn2, 0, this.n);
            System.arraycopy(this.o, 0, arrstring, 0, this.n);
            this.m = arrn;
            this.p = arrn2;
            this.o = arrstring;
        }
        arrn = this.m;
        int n3 = this.n;
        this.n = n3 + 1;
        arrn[n3] = n2;
    }

    private boolean a(char c2) {
        switch (c2) {
            default: {
                return true;
            }
            case '#': 
            case '/': 
            case ';': 
            case '=': 
            case '\\': {
                this.w();
            }
            case '\t': 
            case '\n': 
            case '\f': 
            case '\r': 
            case ' ': 
            case ',': 
            case ':': 
            case '[': 
            case ']': 
            case '{': 
            case '}': 
        }
        return false;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    private boolean a(String var1_1) {
        var3_2 = var1_1.length();
        block0 : do {
            block6 : {
                var4_4 = this.f;
                var5_5 = this.g;
                var2_3 = 0;
                if (var4_4 + var3_2 > var5_5) {
                    if (this.b(var3_2) == false) return false;
                }
                if (this.e[this.f] != '\n') break block6;
                ++this.h;
                this.i = this.f + 1;
                ** GOTO lbl15
            }
            while (var2_3 < var3_2) {
                block7 : {
                    if (this.e[this.f + var2_3] == var1_1.charAt(var2_3)) break block7;
lbl15: // 2 sources:
                    ++this.f;
                    continue block0;
                }
                ++var2_3;
            }
            return true;
            break;
        } while (true);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    private int b(boolean var1_1) {
        var7_2 = this.e;
        block0 : do {
            var2_3 /* !! */  = this.f;
            block1 : do {
                var4_5 = this.g;
                do {
                    block13 : {
                        block12 : {
                            var5_6 = var2_3 /* !! */ ;
                            var3_4 = var4_5;
                            if (var2_3 /* !! */  == var4_5) {
                                this.f = var2_3 /* !! */ ;
                                if (!this.b(1)) {
                                    if (!var1_1) {
                                        return -1;
                                    }
                                    var7_2 = new StringBuilder();
                                    var7_2.append("End of input");
                                    var7_2.append(this.s());
                                    throw new EOFException(var7_2.toString());
                                }
                                var5_6 = this.f;
                                var3_4 = this.g;
                            }
                            var2_3 /* !! */  = var5_6 + 1;
                            var4_5 = var7_2[var5_6];
                            if (var4_5 != 10) break block12;
                            ++this.h;
                            this.i = var2_3 /* !! */ ;
                            break block13;
                        }
                        if (var4_5 == 32 || var4_5 == 13 || var4_5 == 9) break block13;
                        if (var4_5 != 47) ** GOTO lbl47
                        this.f = var2_3 /* !! */ ;
                        if (var2_3 /* !! */  == var3_4) {
                            --this.f;
                            var6_7 = this.b(2);
                            ++this.f;
                            if (!var6_7) {
                                return var4_5;
                            }
                        }
                        this.w();
                        var2_3 /* !! */  = (int)var7_2[this.f];
                        if (var2_3 /* !! */  != 42) {
                            if (var2_3 /* !! */  != 47) {
                                return var4_5;
                            }
                            ++this.f;
                        } else {
                            ++this.f;
                            if (this.a("*/") == false) throw this.b("Unterminated comment");
                            var2_3 /* !! */  = this.f + 2;
                            continue block1;
lbl47: // 1 sources:
                            if (var4_5 != 35) {
                                this.f = var2_3 /* !! */ ;
                                return var4_5;
                            }
                            this.f = var2_3 /* !! */ ;
                            this.w();
                        }
                        this.x();
                        continue block0;
                    }
                    var4_5 = var3_4;
                } while (true);
                break;
            } while (true);
            break;
        } while (true);
    }

    private IOException b(String string2) {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(string2);
        stringBuilder.append(this.s());
        throw new d(stringBuilder.toString());
    }

    private String b(char c2) {
        char[] arrc = this.e;
        StringBuilder stringBuilder = null;
        block0 : do {
            StringBuilder stringBuilder2;
            int n2;
            int n3 = this.f;
            int n4 = this.g;
            int n5 = n3;
            while ((n2 = n5) < n4) {
                n5 = n2 + 1;
                if ((n2 = arrc[n2]) == c2) {
                    this.f = n5;
                    c2 = (char)(n5 - n3 - 1);
                    if (stringBuilder == null) {
                        return new String(arrc, n3, (int)c2);
                    }
                    stringBuilder.append(arrc, n3, (int)c2);
                    return stringBuilder.toString();
                }
                if (n2 == 92) {
                    this.f = n5;
                    n5 = n5 - n3 - 1;
                    stringBuilder2 = stringBuilder;
                    if (stringBuilder == null) {
                        stringBuilder2 = new StringBuilder(Math.max((n5 + 1) * 2, 16));
                    }
                    stringBuilder2.append(arrc, n3, n5);
                    stringBuilder2.append(this.y());
                    stringBuilder = stringBuilder2;
                    continue block0;
                }
                if (n2 != 10) continue;
                ++this.h;
                this.i = n5;
            }
            stringBuilder2 = stringBuilder;
            if (stringBuilder == null) {
                stringBuilder2 = new StringBuilder(Math.max((n2 - n3) * 2, 16));
            }
            stringBuilder2.append(arrc, n3, n2 - n3);
            this.f = n2;
            if (!this.b(1)) break;
            stringBuilder = stringBuilder2;
        } while (true);
        throw this.b("Unterminated string");
    }

    private boolean b(int n2) {
        int n3;
        char[] arrc = this.e;
        this.i -= this.f;
        if (this.g != this.f) {
            this.g -= this.f;
            System.arraycopy(arrc, this.f, arrc, 0, this.g);
        } else {
            this.g = 0;
        }
        this.f = 0;
        while ((n3 = this.c.read(arrc, this.g, arrc.length - this.g)) != -1) {
            this.g += n3;
            n3 = n2;
            if (this.h == 0) {
                n3 = n2;
                if (this.i == 0) {
                    n3 = n2;
                    if (this.g > 0) {
                        n3 = n2;
                        if (arrc[0] == '\ufeff') {
                            ++this.f;
                            ++this.i;
                            n3 = n2 + 1;
                        }
                    }
                }
            }
            n2 = n3;
            if (this.g < n3) continue;
            return true;
        }
        return false;
    }

    private void c(char c2) {
        char[] arrc = this.e;
        block0 : do {
            int n2 = this.f;
            int n3 = this.g;
            while (n2 < n3) {
                int n4 = n2 + 1;
                if ((n2 = arrc[n2]) == c2) {
                    this.f = n4;
                    return;
                }
                if (n2 == 92) {
                    this.f = n4;
                    this.y();
                    continue block0;
                }
                if (n2 == 10) {
                    ++this.h;
                    this.i = n4;
                }
                n2 = n4;
            }
            this.f = n2;
            if (!this.b(1)) break;
        } while (true);
        throw this.b("Unterminated string");
    }

    private int o() {
        String string2;
        String string3;
        int n2 = this.e[this.f];
        if (n2 != 116 && n2 != 84) {
            if (n2 != 102 && n2 != 70) {
                if (n2 != 110 && n2 != 78) {
                    return 0;
                }
                string2 = "null";
                string3 = "NULL";
                n2 = 7;
            } else {
                string2 = "false";
                string3 = "FALSE";
                n2 = 6;
            }
        } else {
            string2 = "true";
            string3 = "TRUE";
            n2 = 5;
        }
        int n3 = string2.length();
        for (int i2 = 1; i2 < n3; ++i2) {
            if (this.f + i2 >= this.g && !this.b(i2 + 1)) {
                return 0;
            }
            char c2 = this.e[this.f + i2];
            if (c2 == string2.charAt(i2) || c2 == string3.charAt(i2)) continue;
            return 0;
        }
        if ((this.f + n3 < this.g || this.b(n3 + 1)) && this.a(this.e[this.f + n3])) {
            return 0;
        }
        this.f += n3;
        this.a = n2;
        return n2;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    private int t() {
        var14_1 = this.e;
        var9_2 = this.f;
        var4_3 = this.g;
        var6_4 = 0;
        var2_5 = 0;
        var3_6 = 1;
        var10_7 = 0L;
        var5_8 = false;
        do {
            block18 : {
                block20 : {
                    block16 : {
                        block17 : {
                            block19 : {
                                block15 : {
                                    var8_11 = var9_2;
                                    var7_10 = var4_3;
                                    if (var9_2 + var6_4 != var4_3) break block15;
                                    if (var6_4 == var14_1.length) {
                                        return 0;
                                    }
                                    if (!this.b(var6_4 + 1)) ** GOTO lbl50
                                    var8_11 = this.f;
                                    var7_10 = this.g;
                                }
                                if ((var1_9 = var14_1[var8_11 + var6_4]) == '+') break block16;
                                if (var1_9 == 'E' || var1_9 == 'e') break block17;
                                switch (var1_9) {
                                    default: {
                                        if (var1_9 < '0' || var1_9 > '9') ** GOTO lbl49
                                        if (var2_5 == 1 || var2_5 == 0) ** GOTO lbl46
                                        if (var2_5 != 2) ** GOTO lbl33
                                        if (var10_7 == 0L) {
                                            return 0;
                                        }
                                        var12_12 = 10L * var10_7 - (long)(var1_9 - 48);
                                        var4_3 = (int)(var10_7 LCMP -922337203685477580L);
                                        var4_3 = var4_3 <= 0 && (var4_3 != 0 || var12_12 >= var10_7) ? 0 : 1;
                                        var4_3 &= var3_6;
                                        ** GOTO lbl-1000
lbl33: // 1 sources:
                                        if (var2_5 != 3) ** GOTO lbl36
                                        var2_5 = 4;
                                        break block18;
lbl36: // 1 sources:
                                        if (var2_5 != 5) {
                                            var4_3 = var3_6;
                                            var12_12 = var10_7;
                                            ** if (var2_5 == 6) goto lbl-1000
                                        }
                                        ** GOTO lbl-1000
lbl-1000: // 2 sources:
                                        {
                                            var3_6 = var4_3;
                                            var10_7 = var12_12;
                                            ** GOTO lbl84
                                        }
lbl-1000: // 2 sources:
                                        {
                                            var2_5 = 7;
                                        }
                                        break block18;
lbl46: // 1 sources:
                                        var10_7 = - var1_9 - 48;
                                        var2_5 = 2;
                                        break block18;
lbl49: // 1 sources:
                                        if (this.a(var1_9) != false) return 0;
lbl50: // 2 sources:
                                        if (!(var2_5 != 2 || var3_6 == 0 || var10_7 == Long.MIN_VALUE && !var5_8 || var10_7 == 0L && var5_8)) {
                                            if (!var5_8) {
                                                var10_7 = - var10_7;
                                            }
                                            this.j = var10_7;
                                            this.f += var6_4;
                                            var2_5 = 15;
                                        } else {
                                            if (var2_5 != 2 && var2_5 != 4) {
                                                if (var2_5 != 7) return 0;
                                            }
                                            this.k = var6_4;
                                            var2_5 = 16;
                                        }
                                        this.a = var2_5;
                                        return var2_5;
                                    }
                                    case '.': {
                                        if (var2_5 != 2) return 0;
                                        var2_5 = 3;
                                        break block18;
                                    }
                                    case '-': 
                                }
                                if (var2_5 != 0) break block19;
                                var2_5 = 1;
                                var5_8 = true;
                                break block18;
                            }
                            if (var2_5 != 5) return 0;
                            break block20;
                        }
                        if (var2_5 != 2) {
                            if (var2_5 != 4) return 0;
                        }
                        var2_5 = 5;
                        break block18;
                    }
                    if (var2_5 != 5) return 0;
                }
                var2_5 = 6;
            }
            ++var6_4;
            var9_2 = var8_11;
            var4_3 = var7_10;
        } while (true);
    }

    /*
     * Exception decompiling
     */
    private String u() {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // org.benf.cfr.reader.util.ConfusedCFRException: Extractable last case doesn't follow previous
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.examineSwitchContiguity(SwitchReplacer.java:486)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.replaceRawSwitches(SwitchReplacer.java:65)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:416)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }

    private void v() {
        do {
            int n2 = 0;
            block5 : while (this.f + n2 < this.g) {
                switch (this.e[this.f + n2]) {
                    default: {
                        ++n2;
                        continue block5;
                    }
                    case '#': 
                    case '/': 
                    case ';': 
                    case '=': 
                    case '\\': {
                        this.w();
                    }
                    case '\t': 
                    case '\n': 
                    case '\f': 
                    case '\r': 
                    case ' ': 
                    case ',': 
                    case ':': 
                    case '[': 
                    case ']': 
                    case '{': 
                    case '}': 
                }
                this.f += n2;
                return;
            }
            this.f += n2;
        } while (this.b(1));
    }

    private void w() {
        if (this.d) {
            return;
        }
        throw this.b("Use JsonReader.setLenient(true) to accept malformed JSON");
    }

    private void x() {
        while (this.f < this.g || this.b(1)) {
            char[] arrc = this.e;
            int n2 = this.f;
            this.f = n2 + 1;
            if ((n2 = arrc[n2]) == 10) {
                ++this.h;
                this.i = this.f;
                return;
            }
            if (n2 != 13) continue;
        }
    }

    /*
     * Enabled aggressive block sorting
     */
    private char y() {
        if (this.f == this.g && !this.b(1)) {
            throw this.b("Unterminated escape sequence");
        }
        Object object = this.e;
        int n2 = this.f;
        this.f = n2 + 1;
        char c2 = object[n2];
        if (c2 != '\n') {
            if (c2 == '\"' || c2 == '\'' || c2 == '/' || c2 == '\\') return c2;
            {
                if (c2 == 'b') {
                    return '\b';
                }
                if (c2 == 'f') {
                    return '\f';
                }
                if (c2 == 'n') {
                    return '\n';
                }
                if (c2 == 'r') {
                    return '\r';
                }
                switch (c2) {
                    default: {
                        throw this.b("Invalid escape sequence");
                    }
                    case 'u': {
                        int n3;
                        if (this.f + 4 > this.g && !this.b(4)) {
                            throw this.b("Unterminated escape sequence");
                        }
                        c2 = '\u0000';
                        n2 = n3 = this.f;
                        do {
                            int n4;
                            if ((n4 = n2) >= n3 + 4) {
                                this.f += 4;
                                return c2;
                            }
                            n2 = this.e[n4];
                            char c3 = (char)(c2 << 4);
                            if (n2 >= 48 && n2 <= 57) {
                                n2 -= 48;
                            } else {
                                if (n2 >= 97 && n2 <= 102) {
                                    n2 -= 97;
                                } else {
                                    if (n2 < 65 || n2 > 70) break;
                                    n2 -= 65;
                                }
                                n2 += 10;
                            }
                            c2 = (char)(c3 + n2);
                            n2 = n4 + 1;
                        } while (true);
                        object = new StringBuilder();
                        object.append("\\u");
                        object.append(new String(this.e, this.f, 4));
                        throw new NumberFormatException(object.toString());
                    }
                    case 't': 
                }
                return '\t';
            }
        } else {
            ++this.h;
            this.i = this.f;
        }
        return c2;
    }

    private void z() {
        this.b(true);
        --this.f;
        if (this.f + b.length > this.g && !this.b(b.length)) {
            return;
        }
        for (int i2 = 0; i2 < b.length; ++i2) {
            if (this.e[this.f + i2] == b[i2]) continue;
            return;
        }
        this.f += b.length;
    }

    public void a() {
        int n2;
        int n3 = n2 = this.a;
        if (n2 == 0) {
            n3 = this.r();
        }
        if (n3 == 3) {
            this.a(1);
            this.p[this.n - 1] = 0;
            this.a = 0;
            return;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Expected BEGIN_ARRAY but was ");
        stringBuilder.append((Object)this.f());
        stringBuilder.append(this.s());
        throw new IllegalStateException(stringBuilder.toString());
    }

    public final void a(boolean bl2) {
        this.d = bl2;
    }

    public void b() {
        int n2;
        int n3 = n2 = this.a;
        if (n2 == 0) {
            n3 = this.r();
        }
        if (n3 == 4) {
            --this.n;
            int[] arrn = this.p;
            n3 = this.n - 1;
            arrn[n3] = arrn[n3] + 1;
            this.a = 0;
            return;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Expected END_ARRAY but was ");
        stringBuilder.append((Object)this.f());
        stringBuilder.append(this.s());
        throw new IllegalStateException(stringBuilder.toString());
    }

    public void c() {
        int n2;
        int n3 = n2 = this.a;
        if (n2 == 0) {
            n3 = this.r();
        }
        if (n3 == 1) {
            this.a(3);
            this.a = 0;
            return;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Expected BEGIN_OBJECT but was ");
        stringBuilder.append((Object)this.f());
        stringBuilder.append(this.s());
        throw new IllegalStateException(stringBuilder.toString());
    }

    @Override
    public void close() {
        this.a = 0;
        this.m[0] = 8;
        this.n = 1;
        this.c.close();
    }

    public void d() {
        int n2;
        int n3 = n2 = this.a;
        if (n2 == 0) {
            n3 = this.r();
        }
        if (n3 == 2) {
            --this.n;
            this.o[this.n] = null;
            int[] arrn = this.p;
            n3 = this.n - 1;
            arrn[n3] = arrn[n3] + 1;
            this.a = 0;
            return;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Expected END_OBJECT but was ");
        stringBuilder.append((Object)this.f());
        stringBuilder.append(this.s());
        throw new IllegalStateException(stringBuilder.toString());
    }

    public boolean e() {
        int n2;
        int n3 = n2 = this.a;
        if (n2 == 0) {
            n3 = this.r();
        }
        if (n3 != 2 && n3 != 4) {
            return true;
        }
        return false;
    }

    public b f() {
        int n2;
        int n3 = n2 = this.a;
        if (n2 == 0) {
            n3 = this.r();
        }
        switch (n3) {
            default: {
                throw new AssertionError();
            }
            case 17: {
                return b.j;
            }
            case 15: 
            case 16: {
                return b.g;
            }
            case 12: 
            case 13: 
            case 14: {
                return b.e;
            }
            case 8: 
            case 9: 
            case 10: 
            case 11: {
                return b.f;
            }
            case 7: {
                return b.i;
            }
            case 5: 
            case 6: {
                return b.h;
            }
            case 4: {
                return b.b;
            }
            case 3: {
                return b.a;
            }
            case 2: {
                return b.d;
            }
            case 1: 
        }
        return b.c;
    }

    /*
     * Enabled aggressive block sorting
     */
    public String g() {
        int n2;
        String string2;
        int n3 = n2 = this.a;
        if (n2 == 0) {
            n3 = this.r();
        }
        if (n3 == 14) {
            string2 = this.u();
        } else {
            int n4;
            if (n3 == 12) {
                n4 = 39;
            } else {
                if (n3 != 13) {
                    StringBuilder stringBuilder = new StringBuilder();
                    stringBuilder.append("Expected a name but was ");
                    stringBuilder.append((Object)this.f());
                    stringBuilder.append(this.s());
                    throw new IllegalStateException(stringBuilder.toString());
                }
                n4 = 34;
            }
            string2 = this.b((char)n4);
        }
        this.a = 0;
        this.o[this.n - 1] = string2;
        return string2;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    public String h() {
        block9 : {
            block10 : {
                block8 : {
                    var2_2 = var3_1 = this.a;
                    if (var3_1 == 0) {
                        var2_2 = this.r();
                    }
                    if (var2_2 != 10) break block8;
                    var4_3 = this.u();
                    break block9;
                }
                if (var2_2 != 8) break block10;
                var1_5 = 39;
                ** GOTO lbl14
            }
            if (var2_2 == 9) {
                var1_5 = 34;
lbl14: // 2 sources:
                var4_3 = this.b((char)var1_5);
            } else if (var2_2 == 11) {
                var4_3 = this.l;
                this.l = null;
            } else if (var2_2 == 15) {
                var4_3 = Long.toString(this.j);
            } else {
                if (var2_2 != 16) {
                    var4_4 = new StringBuilder();
                    var4_4.append("Expected a string but was ");
                    var4_4.append((Object)this.f());
                    var4_4.append(this.s());
                    throw new IllegalStateException(var4_4.toString());
                }
                var4_3 = new String(this.e, this.f, this.k);
                this.f += this.k;
            }
        }
        this.a = 0;
        var5_6 = this.p;
        var2_2 = this.n - 1;
        var5_6[var2_2] = var5_6[var2_2] + 1;
        return var4_3;
    }

    public boolean i() {
        int n2;
        int n3 = n2 = this.a;
        if (n2 == 0) {
            n3 = this.r();
        }
        if (n3 == 5) {
            this.a = 0;
            int[] arrn = this.p;
            n3 = this.n - 1;
            arrn[n3] = arrn[n3] + 1;
            return true;
        }
        if (n3 == 6) {
            this.a = 0;
            int[] arrn = this.p;
            n3 = this.n - 1;
            arrn[n3] = arrn[n3] + 1;
            return false;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Expected a boolean but was ");
        stringBuilder.append((Object)this.f());
        stringBuilder.append(this.s());
        throw new IllegalStateException(stringBuilder.toString());
    }

    public void j() {
        int n2;
        int n3 = n2 = this.a;
        if (n2 == 0) {
            n3 = this.r();
        }
        if (n3 == 7) {
            this.a = 0;
            int[] arrn = this.p;
            n3 = this.n - 1;
            arrn[n3] = arrn[n3] + 1;
            return;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Expected null but was ");
        stringBuilder.append((Object)this.f());
        stringBuilder.append(this.s());
        throw new IllegalStateException(stringBuilder.toString());
    }

    /*
     * Enabled aggressive block sorting
     */
    public double k() {
        int[] arrn;
        int n2;
        block5 : {
            block8 : {
                block6 : {
                    block7 : {
                        block4 : {
                            int n3;
                            n2 = n3 = this.a;
                            if (n3 == 0) {
                                n2 = this.r();
                            }
                            if (n2 == 15) {
                                this.a = 0;
                                int[] arrn2 = this.p;
                                n2 = this.n - 1;
                                arrn2[n2] = arrn2[n2] + 1;
                                return this.j;
                            }
                            if (n2 != 16) break block4;
                            this.l = new String(this.e, this.f, this.k);
                            this.f += this.k;
                            break block5;
                        }
                        if (n2 == 8 || n2 == 9) break block6;
                        if (n2 != 10) break block7;
                        arrn = this.u();
                        break block8;
                    }
                    if (n2 != 11) {
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("Expected a double but was ");
                        stringBuilder.append((Object)this.f());
                        stringBuilder.append(this.s());
                        throw new IllegalStateException(stringBuilder.toString());
                    }
                    break block5;
                }
                char c2 = n2 == 8 ? (char)'\'' : '\"';
                arrn = this.b(c2);
            }
            this.l = arrn;
        }
        this.a = 11;
        double d2 = Double.parseDouble(this.l);
        if (!this.d && (Double.isNaN(d2) || Double.isInfinite(d2))) {
            arrn = new StringBuilder();
            arrn.append("JSON forbids NaN and infinities: ");
            arrn.append(d2);
            arrn.append(this.s());
            throw new d(arrn.toString());
        }
        this.l = null;
        this.a = 0;
        arrn = this.p;
        n2 = this.n - 1;
        arrn[n2] = arrn[n2] + 1;
        return d2;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public long l() {
        int n2;
        int n3 = n2 = this.a;
        if (n2 == 0) {
            n3 = this.r();
        }
        if (n3 == 15) {
            this.a = 0;
            int[] arrn = this.p;
            n3 = this.n - 1;
            arrn[n3] = arrn[n3] + 1;
            return this.j;
        }
        if (n3 == 16) {
            this.l = new String(this.e, this.f, this.k);
            this.f += this.k;
        } else {
            long l2;
            int[] arrn;
            if (n3 != 8 && n3 != 9 && n3 != 10) {
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("Expected a long but was ");
                stringBuilder.append((Object)this.f());
                stringBuilder.append(this.s());
                throw new IllegalStateException(stringBuilder.toString());
            }
            if (n3 == 10) {
                arrn = this.u();
            } else {
                char c2 = n3 == 8 ? (char)'\'' : '\"';
                arrn = this.b(c2);
            }
            this.l = arrn;
            try {
                l2 = Long.parseLong(this.l);
                this.a = 0;
                arrn = this.p;
                n3 = this.n - 1;
            }
            catch (NumberFormatException numberFormatException) {}
            arrn[n3] = arrn[n3] + 1;
            return l2;
        }
        this.a = 11;
        double d2 = Double.parseDouble(this.l);
        long l3 = (long)d2;
        if ((double)l3 == d2) {
            this.l = null;
            this.a = 0;
            int[] arrn = this.p;
            n3 = this.n - 1;
            arrn[n3] = arrn[n3] + 1;
            return l3;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Expected a long but was ");
        stringBuilder.append(this.l);
        stringBuilder.append(this.s());
        throw new NumberFormatException(stringBuilder.toString());
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public int m() {
        int n2;
        int n3 = n2 = this.a;
        if (n2 == 0) {
            n3 = this.r();
        }
        if (n3 == 15) {
            n3 = (int)this.j;
            if (this.j == (long)n3) {
                this.a = 0;
                int[] arrn = this.p;
                n2 = this.n - 1;
                arrn[n2] = arrn[n2] + 1;
                return n3;
            }
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Expected an int but was ");
            stringBuilder.append(this.j);
            stringBuilder.append(this.s());
            throw new NumberFormatException(stringBuilder.toString());
        }
        if (n3 == 16) {
            this.l = new String(this.e, this.f, this.k);
            this.f += this.k;
        } else {
            int[] arrn;
            if (n3 != 8 && n3 != 9 && n3 != 10) {
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("Expected an int but was ");
                stringBuilder.append((Object)this.f());
                stringBuilder.append(this.s());
                throw new IllegalStateException(stringBuilder.toString());
            }
            if (n3 == 10) {
                arrn = this.u();
            } else {
                char c2 = n3 == 8 ? (char)'\'' : '\"';
                arrn = this.b(c2);
            }
            this.l = arrn;
            try {
                n3 = Integer.parseInt(this.l);
                this.a = 0;
                arrn = this.p;
                n2 = this.n - 1;
            }
            catch (NumberFormatException numberFormatException) {}
            arrn[n2] = arrn[n2] + 1;
            return n3;
        }
        this.a = 11;
        double d2 = Double.parseDouble(this.l);
        n3 = (int)d2;
        if ((double)n3 == d2) {
            this.l = null;
            this.a = 0;
            int[] arrn = this.p;
            n2 = this.n - 1;
            arrn[n2] = arrn[n2] + 1;
            return n3;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Expected an int but was ");
        stringBuilder.append(this.l);
        stringBuilder.append(this.s());
        throw new NumberFormatException(stringBuilder.toString());
    }

    /*
     * Enabled aggressive block sorting
     */
    public void n() {
        int n2;
        int n3 = 0;
        do {
            block6 : {
                block8 : {
                    int n4;
                    block11 : {
                        block9 : {
                            block10 : {
                                int n5;
                                block7 : {
                                    block5 : {
                                        block4 : {
                                            block3 : {
                                                n5 = n2 = this.a;
                                                if (n2 == 0) {
                                                    n5 = this.r();
                                                }
                                                if (n5 != 3) break block3;
                                                this.a(1);
                                                break block4;
                                            }
                                            if (n5 != 1) break block5;
                                            this.a(3);
                                        }
                                        n2 = n3 + 1;
                                        break block6;
                                    }
                                    if (n5 != 4 && n5 != 2) break block7;
                                    --this.n;
                                    n2 = n3 - 1;
                                    break block6;
                                }
                                if (n5 == 14 || n5 == 10) break block8;
                                if (n5 == 8 || n5 == 12) break block9;
                                if (n5 == 9 || n5 == 13) break block10;
                                n2 = n3;
                                if (n5 == 16) {
                                    this.f += this.k;
                                    n2 = n3;
                                }
                                break block6;
                            }
                            n4 = 34;
                            break block11;
                        }
                        n4 = 39;
                    }
                    this.c((char)n4);
                    n2 = n3;
                    break block6;
                }
                this.v();
                n2 = n3;
            }
            this.a = 0;
            n3 = n2;
        } while (n2 != 0);
        int[] arrn = this.p;
        n2 = this.n - 1;
        arrn[n2] = arrn[n2] + 1;
        this.o[this.n - 1] = "null";
    }

    public String p() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append('$');
        int n2 = this.n;
        block4 : for (int i2 = 0; i2 < n2; ++i2) {
            switch (this.m[i2]) {
                default: {
                    continue block4;
                }
                case 3: 
                case 4: 
                case 5: {
                    stringBuilder.append('.');
                    if (this.o[i2] == null) continue block4;
                    stringBuilder.append(this.o[i2]);
                    continue block4;
                }
                case 1: 
                case 2: {
                    stringBuilder.append('[');
                    stringBuilder.append(this.p[i2]);
                    stringBuilder.append(']');
                }
            }
        }
        return stringBuilder.toString();
    }

    public final boolean q() {
        return this.d;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    int r() {
        block28 : {
            block22 : {
                block20 : {
                    block26 : {
                        block24 : {
                            block27 : {
                                block25 : {
                                    block23 : {
                                        block21 : {
                                            block19 : {
                                                var2_1 = this.m[this.n - 1];
                                                if (var2_1 != 1) break block19;
                                                this.m[this.n - 1] = 2;
                                                break block20;
                                            }
                                            if (var2_1 != 2) break block21;
                                            var1_2 = this.b(true);
                                            if (var1_2 != 44) {
                                                if (var1_2 != 59) {
                                                    if (var1_2 != 93) throw this.b("Unterminated array");
                                                    this.a = 4;
                                                    return 4;
                                                }
                                                this.w();
                                            }
                                            break block20;
                                        }
                                        if (var2_1 == 3 || var2_1 == 5) break block22;
                                        if (var2_1 != 4) break block23;
                                        this.m[this.n - 1] = 5;
                                        var1_2 = this.b(true);
                                        if (var1_2 == 58) break block20;
                                        if (var1_2 != 61) throw this.b("Expected ':'");
                                        this.w();
                                        if (this.f >= this.g && !this.b(1) || this.e[this.f] != '>') break block20;
                                        var1_2 = this.f + 1;
                                        break block24;
                                    }
                                    if (var2_1 != 6) break block25;
                                    if (this.d) {
                                        this.z();
                                    }
                                    this.m[this.n - 1] = 7;
                                    break block20;
                                }
                                if (var2_1 != 7) break block26;
                                if (this.b(false) != -1) break block27;
                                var1_2 = 17;
                                break block28;
                            }
                            this.w();
                            var1_2 = this.f - 1;
                        }
                        this.f = var1_2;
                        break block20;
                    }
                    if (var2_1 == 8) throw new IllegalStateException("JsonReader is closed");
                }
                var1_2 = this.b(true);
                if (var1_2 == 34) ** GOTO lbl80
                if (var1_2 == 39) {
                    this.w();
                    this.a = 8;
                    return 8;
                }
                if (var1_2 == 44 || var1_2 == 59) ** GOTO lbl74
                if (var1_2 == 91) {
                    this.a = 3;
                    return 3;
                }
                if (var1_2 != 93) {
                    if (var1_2 == 123) {
                        this.a = 1;
                        return 1;
                    }
                    --this.f;
                    var1_2 = this.o();
                    if (var1_2 != 0) {
                        return var1_2;
                    }
                    var1_2 = this.t();
                    if (var1_2 != 0) {
                        return var1_2;
                    }
                    if (this.a(this.e[this.f]) == false) throw this.b("Expected value");
                    this.w();
                    var1_2 = 10;
                } else {
                    if (var2_1 == 1) {
                        this.a = 4;
                        return 4;
                    }
lbl74: // 3 sources:
                    if (var2_1 != 1) {
                        if (var2_1 != 2) throw this.b("Unexpected value");
                    }
                    this.w();
                    --this.f;
                    this.a = 7;
                    return 7;
lbl80: // 1 sources:
                    var1_2 = 9;
                }
                break block28;
            }
            this.m[this.n - 1] = 4;
            if (var2_1 == 5 && (var1_2 = this.b(true)) != 44) {
                if (var1_2 != 59) {
                    if (var1_2 != 125) throw this.b("Unterminated object");
                    this.a = 2;
                    return 2;
                }
                this.w();
            }
            if ((var1_2 = this.b(true)) != 34) {
                if (var1_2 != 39) {
                    if (var1_2 == 125) {
                        if (var2_1 == 5) throw this.b("Expected name");
                        this.a = 2;
                        return 2;
                    }
                    this.w();
                    --this.f;
                    if (this.a((char)var1_2) == false) throw this.b("Expected name");
                    var1_2 = 14;
                } else {
                    this.w();
                    var1_2 = 12;
                }
            } else {
                var1_2 = 13;
            }
        }
        this.a = var1_2;
        return var1_2;
    }

    String s() {
        int n2 = this.h;
        int n3 = this.f;
        int n4 = this.i;
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(" at line ");
        stringBuilder.append(n2 + 1);
        stringBuilder.append(" column ");
        stringBuilder.append(n3 - n4 + 1);
        stringBuilder.append(" path ");
        stringBuilder.append(this.p());
        return stringBuilder.toString();
    }

    public String toString() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(this.getClass().getSimpleName());
        stringBuilder.append(this.s());
        return stringBuilder.toString();
    }

}

