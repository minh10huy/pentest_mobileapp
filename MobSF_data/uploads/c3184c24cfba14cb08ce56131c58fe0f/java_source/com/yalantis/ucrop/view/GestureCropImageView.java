/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Handler
 *  android.util.AttributeSet
 *  android.view.GestureDetector
 *  android.view.GestureDetector$OnGestureListener
 *  android.view.GestureDetector$SimpleOnGestureListener
 *  android.view.MotionEvent
 *  android.view.ScaleGestureDetector
 *  android.view.ScaleGestureDetector$OnScaleGestureListener
 *  android.view.ScaleGestureDetector$SimpleOnScaleGestureListener
 */
package com.yalantis.ucrop.view;

import android.content.Context;
import android.os.Handler;
import android.util.AttributeSet;
import android.view.GestureDetector;
import android.view.MotionEvent;
import android.view.ScaleGestureDetector;
import com.yalantis.ucrop.d.h;

public class GestureCropImageView
extends com.yalantis.ucrop.view.a {
    private ScaleGestureDetector i;
    private h j;
    private GestureDetector k;
    private float l;
    private float m;
    private boolean n = true;
    private boolean o = true;
    private int p = 5;

    public GestureCropImageView(Context context) {
        super(context);
    }

    public GestureCropImageView(Context context, AttributeSet attributeSet) {
        this(context, attributeSet, 0);
    }

    public GestureCropImageView(Context context, AttributeSet attributeSet, int n2) {
        super(context, attributeSet, n2);
    }

    private void f() {
        this.k = new GestureDetector(this.getContext(), (GestureDetector.OnGestureListener)new a(), null, true);
        this.i = new ScaleGestureDetector(this.getContext(), (ScaleGestureDetector.OnScaleGestureListener)new c());
        this.j = new h(new b());
    }

    @Override
    protected void e() {
        super.e();
        this.f();
    }

    public int getDoubleTapScaleSteps() {
        return this.p;
    }

    protected float getDoubleTapTargetScale() {
        return this.getCurrentScale() * (float)Math.pow(this.getMaxScale() / this.getMinScale(), 1.0f / (float)this.p);
    }

    public boolean onTouchEvent(MotionEvent motionEvent) {
        if ((motionEvent.getAction() & 255) == 0) {
            this.a();
        }
        if (motionEvent.getPointerCount() > 1) {
            this.l = (motionEvent.getX(0) + motionEvent.getX(1)) / 2.0f;
            this.m = (motionEvent.getY(0) + motionEvent.getY(1)) / 2.0f;
        }
        this.k.onTouchEvent(motionEvent);
        if (this.o) {
            this.i.onTouchEvent(motionEvent);
        }
        if (this.n) {
            this.j.a(motionEvent);
        }
        if ((motionEvent.getAction() & 255) == 1) {
            this.b();
        }
        return true;
    }

    public void setDoubleTapScaleSteps(int n2) {
        this.p = n2;
    }

    public void setRotateEnabled(boolean bl2) {
        this.n = bl2;
    }

    public void setScaleEnabled(boolean bl2) {
        this.o = bl2;
    }

    private class a
    extends GestureDetector.SimpleOnGestureListener {
        private a() {
        }

        public boolean onDoubleTap(MotionEvent motionEvent) {
            GestureCropImageView.this.a(GestureCropImageView.this.getDoubleTapTargetScale(), motionEvent.getX(), motionEvent.getY(), 200L);
            return super.onDoubleTap(motionEvent);
        }

        public boolean onScroll(MotionEvent motionEvent, MotionEvent motionEvent2, float f2, float f3) {
            GestureCropImageView.this.a(- f2, - f3);
            return true;
        }
    }

    private class b
    extends h.b {
        private b() {
        }

        @Override
        public boolean a(h h2) {
            GestureCropImageView.this.d(h2.a(), GestureCropImageView.this.l, GestureCropImageView.this.m);
            return true;
        }
    }

    private class c
    extends ScaleGestureDetector.SimpleOnScaleGestureListener {
        private c() {
        }

        public boolean onScale(ScaleGestureDetector scaleGestureDetector) {
            GestureCropImageView.this.c(scaleGestureDetector.getScaleFactor(), GestureCropImageView.this.l, GestureCropImageView.this.m);
            return true;
        }
    }

}

