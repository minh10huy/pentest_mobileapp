/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.content.Context
 *  android.content.res.Resources
 *  android.graphics.Canvas
 *  android.graphics.Paint
 *  android.graphics.Paint$Style
 *  android.graphics.Rect
 *  android.util.AttributeSet
 *  android.view.MotionEvent
 *  android.view.View
 */
package com.yalantis.ucrop.view.widget;

import android.annotation.TargetApi;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Rect;
import android.support.v4.content.b;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;
import com.yalantis.ucrop.a;

public class HorizontalProgressWheelView
extends View {
    private final Rect a = new Rect();
    private a b;
    private float c;
    private Paint d;
    private int e;
    private int f;
    private int g;
    private boolean h;
    private float i;
    private int j;

    public HorizontalProgressWheelView(Context context) {
        this(context, null);
    }

    public HorizontalProgressWheelView(Context context, AttributeSet attributeSet) {
        this(context, attributeSet, 0);
    }

    public HorizontalProgressWheelView(Context context, AttributeSet attributeSet, int n2) {
        super(context, attributeSet, n2);
        this.a();
    }

    @TargetApi(value=21)
    public HorizontalProgressWheelView(Context context, AttributeSet attributeSet, int n2, int n3) {
        super(context, attributeSet, n2, n3);
    }

    private void a() {
        this.j = b.c(this.getContext(), a.a.ucrop_color_progress_wheel_line);
        this.e = this.getContext().getResources().getDimensionPixelSize(a.b.ucrop_width_horizontal_wheel_progress_line);
        this.f = this.getContext().getResources().getDimensionPixelSize(a.b.ucrop_height_horizontal_wheel_progress_line);
        this.g = this.getContext().getResources().getDimensionPixelSize(a.b.ucrop_margin_horizontal_wheel_progress_line);
        this.d = new Paint(1);
        this.d.setStyle(Paint.Style.STROKE);
        this.d.setStrokeWidth((float)this.e);
    }

    private void a(MotionEvent motionEvent, float f2) {
        this.i -= f2;
        this.postInvalidate();
        this.c = motionEvent.getX();
        if (this.b != null) {
            this.b.a(- f2, this.i);
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    protected void onDraw(Canvas var1_1) {
        super.onDraw(var1_1);
        var1_1.getClipBounds(this.a);
        var8_2 = this.a.width() / (this.e + this.g);
        var3_3 = this.i;
        var4_4 = this.g + this.e;
        this.d.setColor(this.getResources().getColor(a.a.ucrop_color_progress_wheel_line));
        var7_5 = 0;
        do {
            block4 : {
                if (var7_5 >= var8_2) {
                    this.d.setColor(this.j);
                    var2_6 = this.a.centerX();
                    var3_3 = this.a.centerY();
                    var4_4 = (float)this.f / 2.0f;
                    var5_9 = this.a.centerX();
                    var6_10 = this.a.centerY();
                    var1_1.drawLine(var2_6, var3_3 - var4_4, var5_9, (float)this.f / 2.0f + var6_10, this.d);
                    return;
                }
                var9_7 = var8_2 / 4;
                if (var7_5 >= var9_7) break block4;
                var10_8 = this.d;
                var2_6 = var7_5;
                ** GOTO lbl27
            }
            if (var7_5 > var8_2 * 3 / 4) {
                var10_8 = this.d;
                var2_6 = var8_2 - var7_5;
lbl27: // 2 sources:
                var10_8.setAlpha((int)(var2_6 / (float)var9_7 * 255.0f));
            } else {
                this.d.setAlpha(255);
            }
            var2_6 = - var3_3 % var4_4;
            var1_1.drawLine((float)this.a.left + var2_6 + (float)((this.e + this.g) * var7_5), (float)this.a.centerY() - (float)this.f / 4.0f, var2_6 + (float)this.a.left + (float)((this.e + this.g) * var7_5), (float)this.a.centerY() + (float)this.f / 4.0f, this.d);
            ++var7_5;
        } while (true);
    }

    public boolean onTouchEvent(MotionEvent motionEvent) {
        switch (motionEvent.getAction()) {
            default: {
                return true;
            }
            case 2: {
                float f2 = motionEvent.getX() - this.c;
                if (f2 == 0.0f) break;
                if (!this.h) {
                    this.h = true;
                    if (this.b != null) {
                        this.b.b();
                    }
                }
                this.a(motionEvent, f2);
                return true;
            }
            case 1: {
                if (this.b == null) break;
                this.h = false;
                this.b.a();
                return true;
            }
            case 0: {
                this.c = motionEvent.getX();
            }
        }
        return true;
    }

    public void setMiddleLineColor(int n2) {
        this.j = n2;
        this.invalidate();
    }

    public void setScrollingListener(a a2) {
        this.b = a2;
    }

    public static interface a {
        public void a();

        public void a(float var1, float var2);

        public void b();
    }

}

