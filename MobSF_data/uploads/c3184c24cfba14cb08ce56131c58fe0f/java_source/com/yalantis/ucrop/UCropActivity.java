/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.animation.TimeInterpolator
 *  android.annotation.TargetApi
 *  android.content.Context
 *  android.content.Intent
 *  android.content.res.Resources
 *  android.graphics.Bitmap
 *  android.graphics.Bitmap$CompressFormat
 *  android.graphics.PorterDuff
 *  android.graphics.PorterDuff$Mode
 *  android.graphics.drawable.Animatable
 *  android.graphics.drawable.Drawable
 *  android.net.Uri
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Bundle
 *  android.os.Parcelable
 *  android.text.TextUtils
 *  android.util.Log
 *  android.view.LayoutInflater
 *  android.view.Menu
 *  android.view.MenuInflater
 *  android.view.MenuItem
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.view.ViewGroup
 *  android.view.ViewGroup$LayoutParams
 *  android.view.ViewPropertyAnimator
 *  android.view.Window
 *  android.view.animation.AccelerateInterpolator
 *  android.widget.FrameLayout
 *  android.widget.ImageView
 *  android.widget.LinearLayout
 *  android.widget.LinearLayout$LayoutParams
 *  android.widget.RelativeLayout
 *  android.widget.RelativeLayout$LayoutParams
 *  android.widget.TextView
 */
package com.yalantis.ucrop;

import android.animation.TimeInterpolator;
import android.annotation.TargetApi;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.PorterDuff;
import android.graphics.drawable.Animatable;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Parcelable;
import android.support.v7.app.c;
import android.support.v7.widget.Toolbar;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewPropertyAnimator;
import android.view.Window;
import android.view.animation.AccelerateInterpolator;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.yalantis.ucrop.a;
import com.yalantis.ucrop.a.a;
import com.yalantis.ucrop.d.i;
import com.yalantis.ucrop.view.GestureCropImageView;
import com.yalantis.ucrop.view.OverlayView;
import com.yalantis.ucrop.view.UCropView;
import com.yalantis.ucrop.view.b;
import com.yalantis.ucrop.view.widget.AspectRatioTextView;
import com.yalantis.ucrop.view.widget.HorizontalProgressWheelView;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;

public class UCropActivity
extends c {
    public static final Bitmap.CompressFormat n = Bitmap.CompressFormat.JPEG;
    private GestureCropImageView A;
    private OverlayView B;
    private ViewGroup C;
    private ViewGroup D;
    private ViewGroup E;
    private ViewGroup F;
    private ViewGroup G;
    private ViewGroup H;
    private List<ViewGroup> I = new ArrayList<ViewGroup>();
    private TextView J;
    private TextView K;
    private View L;
    private Bitmap.CompressFormat M = n;
    private int N = 90;
    private int[] O = new int[]{1, 2, 3};
    private b.a P = new b.a(){

        @Override
        public void a() {
            UCropActivity.this.z.animate().alpha(1.0f).setDuration(300L).setInterpolator((TimeInterpolator)new AccelerateInterpolator());
            UCropActivity.this.L.setClickable(false);
            UCropActivity.this.y = false;
            UCropActivity.this.e();
        }

        @Override
        public void a(float f2) {
            UCropActivity.this.a(f2);
        }

        @Override
        public void a(Exception exception) {
            UCropActivity.this.a(exception);
            UCropActivity.this.finish();
        }

        @Override
        public void b(float f2) {
            UCropActivity.this.b(f2);
        }
    };
    private final View.OnClickListener Q = new View.OnClickListener(){

        public void onClick(View view) {
            if (!view.isSelected()) {
                UCropActivity.this.e(view.getId());
            }
        }
    };
    private String o;
    private int p;
    private int q;
    private int r;
    private int s;
    private int t;
    private int u;
    private int v;
    private int w;
    private boolean x;
    private boolean y = true;
    private UCropView z;

    private void a(float f2) {
        if (this.J != null) {
            this.J.setText((CharSequence)String.format(Locale.getDefault(), "%.1f\u00b0", Float.valueOf(f2)));
        }
    }

    private void b(float f2) {
        if (this.K != null) {
            this.K.setText((CharSequence)String.format(Locale.getDefault(), "%d%%", (int)(f2 * 100.0f)));
        }
    }

    @TargetApi(value=21)
    private void c(int n2) {
        Window window;
        if (Build.VERSION.SDK_INT >= 21 && (window = this.getWindow()) != null) {
            window.addFlags(Integer.MIN_VALUE);
            window.setStatusBarColor(n2);
        }
    }

    private void c(Intent object) {
        Uri uri = (Uri)object.getParcelableExtra("com.yalantis.ucrop.InputUri");
        Uri uri2 = (Uri)object.getParcelableExtra("com.yalantis.ucrop.OutputUri");
        this.d((Intent)object);
        if (uri != null && uri2 != null) {
            try {
                this.A.a(uri, uri2);
                return;
            }
            catch (Exception exception) {}
        } else {
            object = new NullPointerException(this.getString(a.g.ucrop_error_input_data_is_absent));
        }
        this.a((Throwable)object);
        this.finish();
    }

    private void d(int n2) {
        this.A.c(n2);
        this.A.b();
    }

    private void d(Intent intent) {
        Object object = intent.getStringExtra("com.yalantis.ucrop.CompressionFormatName");
        object = !TextUtils.isEmpty((CharSequence)object) ? Bitmap.CompressFormat.valueOf((String)object) : null;
        Object object2 = object;
        if (object == null) {
            object2 = n;
        }
        this.M = object2;
        this.N = intent.getIntExtra("com.yalantis.ucrop.CompressionQuality", 90);
        object = intent.getIntArrayExtra("com.yalantis.ucrop.AllowedGestures");
        if (object != null && ((int[])object).length == 3) {
            this.O = object;
        }
        this.A.setMaxBitmapSize(intent.getIntExtra("com.yalantis.ucrop.MaxBitmapSize", 0));
        this.A.setMaxScaleMultiplier(intent.getFloatExtra("com.yalantis.ucrop.MaxScaleMultiplier", 10.0f));
        this.A.setImageToWrapCropBoundsAnimDuration(intent.getIntExtra("com.yalantis.ucrop.ImageToCropBoundsAnimDuration", 500));
        this.B.setFreestyleCropEnabled(intent.getBooleanExtra("com.yalantis.ucrop.FreeStyleCrop", false));
        this.B.setDimmedColor(intent.getIntExtra("com.yalantis.ucrop.DimmedLayerColor", this.getResources().getColor(a.a.ucrop_color_default_dimmed)));
        this.B.setCircleDimmedLayer(intent.getBooleanExtra("com.yalantis.ucrop.CircleDimmedLayer", false));
        this.B.setShowCropFrame(intent.getBooleanExtra("com.yalantis.ucrop.ShowCropFrame", true));
        this.B.setCropFrameColor(intent.getIntExtra("com.yalantis.ucrop.CropFrameColor", this.getResources().getColor(a.a.ucrop_color_default_crop_frame)));
        this.B.setCropFrameStrokeWidth(intent.getIntExtra("com.yalantis.ucrop.CropFrameStrokeWidth", this.getResources().getDimensionPixelSize(a.b.ucrop_default_crop_frame_stoke_width)));
        this.B.setShowCropGrid(intent.getBooleanExtra("com.yalantis.ucrop.ShowCropGrid", true));
        this.B.setCropGridRowCount(intent.getIntExtra("com.yalantis.ucrop.CropGridRowCount", 2));
        this.B.setCropGridColumnCount(intent.getIntExtra("com.yalantis.ucrop.CropGridColumnCount", 2));
        this.B.setCropGridColor(intent.getIntExtra("com.yalantis.ucrop.CropGridColor", this.getResources().getColor(a.a.ucrop_color_default_crop_grid)));
        this.B.setCropGridStrokeWidth(intent.getIntExtra("com.yalantis.ucrop.CropGridStrokeWidth", this.getResources().getDimensionPixelSize(a.b.ucrop_default_crop_grid_stoke_width)));
        float f2 = 0.0f;
        float f3 = intent.getFloatExtra("com.yalantis.ucrop.AspectRatioX", 0.0f);
        float f4 = intent.getFloatExtra("com.yalantis.ucrop.AspectRatioY", 0.0f);
        int n2 = intent.getIntExtra("com.yalantis.ucrop.AspectRatioSelectedByDefault", 0);
        object2 = intent.getParcelableArrayListExtra("com.yalantis.ucrop.AspectRatioOptions");
        if (f3 > 0.0f && f4 > 0.0f) {
            if (this.C != null) {
                this.C.setVisibility(8);
            }
            this.A.setTargetAspectRatio(f3 / f4);
        } else {
            if (object2 != null && n2 < object2.size()) {
                object = this.A;
                f2 = ((com.yalantis.ucrop.b.a)object2.get(n2)).b() / ((com.yalantis.ucrop.b.a)object2.get(n2)).c();
            } else {
                object = this.A;
            }
            object.setTargetAspectRatio(f2);
        }
        n2 = intent.getIntExtra("com.yalantis.ucrop.MaxSizeX", 0);
        int n3 = intent.getIntExtra("com.yalantis.ucrop.MaxSizeY", 0);
        if (n2 > 0 && n3 > 0) {
            this.A.setMaxResultImageSizeX(n2);
            this.A.setMaxResultImageSizeY(n3);
        }
    }

    private void e(int n2) {
        if (!this.x) {
            return;
        }
        ViewGroup viewGroup = this.C;
        boolean bl2 = n2 == a.d.state_aspect_ratio;
        viewGroup.setSelected(bl2);
        viewGroup = this.D;
        bl2 = n2 == a.d.state_rotate;
        viewGroup.setSelected(bl2);
        viewGroup = this.E;
        bl2 = n2 == a.d.state_scale;
        viewGroup.setSelected(bl2);
        viewGroup = this.F;
        int n3 = a.d.state_aspect_ratio;
        int n4 = 8;
        n3 = n2 == n3 ? 0 : 8;
        viewGroup.setVisibility(n3);
        viewGroup = this.G;
        n3 = n2 == a.d.state_rotate ? 0 : 8;
        viewGroup.setVisibility(n3);
        viewGroup = this.H;
        n3 = n4;
        if (n2 == a.d.state_scale) {
            n3 = 0;
        }
        viewGroup.setVisibility(n3);
        if (n2 == a.d.state_scale) {
            this.f(0);
            return;
        }
        if (n2 == a.d.state_rotate) {
            this.f(1);
            return;
        }
        this.f(2);
    }

    private void e(Intent intent) {
        this.q = intent.getIntExtra("com.yalantis.ucrop.StatusBarColor", android.support.v4.content.b.c((Context)this, a.a.ucrop_color_statusbar));
        this.p = intent.getIntExtra("com.yalantis.ucrop.ToolbarColor", android.support.v4.content.b.c((Context)this, a.a.ucrop_color_toolbar));
        this.r = intent.getIntExtra("com.yalantis.ucrop.UcropColorWidgetActive", android.support.v4.content.b.c((Context)this, a.a.ucrop_color_widget_active));
        this.s = intent.getIntExtra("com.yalantis.ucrop.UcropToolbarWidgetColor", android.support.v4.content.b.c((Context)this, a.a.ucrop_color_toolbar_widget));
        this.u = intent.getIntExtra("com.yalantis.ucrop.UcropToolbarCancelDrawable", a.c.ucrop_ic_cross);
        this.v = intent.getIntExtra("com.yalantis.ucrop.UcropToolbarCropDrawable", a.c.ucrop_ic_done);
        this.o = intent.getStringExtra("com.yalantis.ucrop.UcropToolbarTitleText");
        String string2 = this.o != null ? this.o : this.getResources().getString(a.g.ucrop_label_edit_photo);
        this.o = string2;
        this.w = intent.getIntExtra("com.yalantis.ucrop.UcropLogoColor", android.support.v4.content.b.c((Context)this, a.a.ucrop_color_default_logo));
        this.x = intent.getBooleanExtra("com.yalantis.ucrop.HideBottomControls", false) ^ true;
        this.t = intent.getIntExtra("com.yalantis.ucrop.UcropRootViewBackgroundColor", android.support.v4.content.b.c((Context)this, a.a.ucrop_color_crop_background));
        this.n();
        this.o();
        if (this.x) {
            string2 = (ViewGroup)this.findViewById(a.d.ucrop_photobox);
            View.inflate((Context)this, (int)a.e.ucrop_controls, (ViewGroup)string2);
            this.C = (ViewGroup)this.findViewById(a.d.state_aspect_ratio);
            this.C.setOnClickListener(this.Q);
            this.D = (ViewGroup)this.findViewById(a.d.state_rotate);
            this.D.setOnClickListener(this.Q);
            this.E = (ViewGroup)this.findViewById(a.d.state_scale);
            this.E.setOnClickListener(this.Q);
            this.F = (ViewGroup)this.findViewById(a.d.layout_aspect_ratio);
            this.G = (ViewGroup)this.findViewById(a.d.layout_rotate_wheel);
            this.H = (ViewGroup)this.findViewById(a.d.layout_scale_wheel);
            this.f(intent);
            this.q();
            this.r();
            this.p();
        }
    }

    private void f(int n2) {
        GestureCropImageView gestureCropImageView;
        boolean bl2;
        block4 : {
            block3 : {
                gestureCropImageView = this.A;
                int n3 = this.O[n2];
                boolean bl3 = false;
                bl2 = n3 == 3 || this.O[n2] == 1;
                gestureCropImageView.setScaleEnabled(bl2);
                gestureCropImageView = this.A;
                if (this.O[n2] == 3) break block3;
                bl2 = bl3;
                if (this.O[n2] != 2) break block4;
            }
            bl2 = true;
        }
        gestureCropImageView.setRotateEnabled(bl2);
    }

    private void f(Intent object) {
        ArrayList arrayList;
        int n2;
        block5 : {
            block4 : {
                n2 = object.getIntExtra("com.yalantis.ucrop.AspectRatioSelectedByDefault", 0);
                arrayList = object.getParcelableArrayListExtra("com.yalantis.ucrop.AspectRatioOptions");
                if (arrayList == null) break block4;
                object = arrayList;
                if (!arrayList.isEmpty()) break block5;
            }
            n2 = 2;
            object = new ArrayList();
            object.add(new com.yalantis.ucrop.b.a(null, 1.0f, 1.0f));
            object.add(new com.yalantis.ucrop.b.a(null, 3.0f, 4.0f));
            object.add(new com.yalantis.ucrop.b.a(this.getString(a.g.ucrop_label_original).toUpperCase(), 0.0f, 0.0f));
            object.add(new com.yalantis.ucrop.b.a(null, 3.0f, 2.0f));
            object.add(new com.yalantis.ucrop.b.a(null, 16.0f, 9.0f));
        }
        arrayList = (LinearLayout)this.findViewById(a.d.layout_aspect_ratio);
        LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(0, -1);
        layoutParams.weight = 1.0f;
        object = object.iterator();
        while (object.hasNext()) {
            com.yalantis.ucrop.b.a a2 = (com.yalantis.ucrop.b.a)object.next();
            FrameLayout frameLayout = (FrameLayout)this.getLayoutInflater().inflate(a.e.ucrop_aspect_ratio, null);
            frameLayout.setLayoutParams((ViewGroup.LayoutParams)layoutParams);
            AspectRatioTextView aspectRatioTextView = (AspectRatioTextView)frameLayout.getChildAt(0);
            aspectRatioTextView.setActiveColor(this.r);
            aspectRatioTextView.setAspectRatio(a2);
            arrayList.addView((View)frameLayout);
            this.I.add((ViewGroup)frameLayout);
        }
        this.I.get(n2).setSelected(true);
        object = this.I.iterator();
        while (object.hasNext()) {
            ((ViewGroup)object.next()).setOnClickListener(new View.OnClickListener(){

                public void onClick(View view) {
                    UCropActivity.this.A.setTargetAspectRatio(((AspectRatioTextView)((ViewGroup)view).getChildAt(0)).a(view.isSelected()));
                    UCropActivity.this.A.b();
                    if (!view.isSelected()) {
                        for (ViewGroup viewGroup : UCropActivity.this.I) {
                            boolean bl2 = viewGroup == view;
                            viewGroup.setSelected(bl2);
                        }
                    }
                }
            });
        }
    }

    private void n() {
        this.c(this.q);
        Object object = (Toolbar)((Object)this.findViewById(a.d.toolbar));
        object.setBackgroundColor(this.p);
        object.setTitleTextColor(this.s);
        TextView textView = (TextView)object.findViewById(a.d.toolbar_title);
        textView.setTextColor(this.s);
        textView.setText((CharSequence)this.o);
        textView = android.support.v4.content.b.a((Context)this, this.u).mutate();
        textView.setColorFilter(this.s, PorterDuff.Mode.SRC_ATOP);
        object.setNavigationIcon((Drawable)textView);
        this.a((Toolbar)((Object)object));
        object = this.i();
        if (object != null) {
            object.b(false);
        }
    }

    private void o() {
        this.z = (UCropView)((Object)this.findViewById(a.d.ucrop));
        this.A = this.z.getCropImageView();
        this.B = this.z.getOverlayView();
        this.A.setTransformImageListener(this.P);
        ((ImageView)this.findViewById(a.d.image_view_logo)).setColorFilter(this.w, PorterDuff.Mode.SRC_ATOP);
        this.findViewById(a.d.ucrop_frame).setBackgroundColor(this.t);
    }

    private void p() {
        ImageView imageView = (ImageView)this.findViewById(a.d.image_view_state_scale);
        ImageView imageView2 = (ImageView)this.findViewById(a.d.image_view_state_rotate);
        ImageView imageView3 = (ImageView)this.findViewById(a.d.image_view_state_aspect_ratio);
        imageView.setImageDrawable((Drawable)new i(imageView.getDrawable(), this.r));
        imageView2.setImageDrawable((Drawable)new i(imageView2.getDrawable(), this.r));
        imageView3.setImageDrawable((Drawable)new i(imageView3.getDrawable(), this.r));
    }

    private void q() {
        this.J = (TextView)this.findViewById(a.d.text_view_rotate);
        ((HorizontalProgressWheelView)((Object)this.findViewById(a.d.rotate_scroll_wheel))).setScrollingListener(new HorizontalProgressWheelView.a(){

            @Override
            public void a() {
                UCropActivity.this.A.b();
            }

            @Override
            public void a(float f2, float f3) {
                UCropActivity.this.A.c(f2 / 42.0f);
            }

            @Override
            public void b() {
                UCropActivity.this.A.a();
            }
        });
        ((HorizontalProgressWheelView)((Object)this.findViewById(a.d.rotate_scroll_wheel))).setMiddleLineColor(this.r);
        this.findViewById(a.d.wrapper_reset_rotate).setOnClickListener(new View.OnClickListener(){

            public void onClick(View view) {
                UCropActivity.this.s();
            }
        });
        this.findViewById(a.d.wrapper_rotate_by_angle).setOnClickListener(new View.OnClickListener(){

            public void onClick(View view) {
                UCropActivity.this.d(90);
            }
        });
    }

    private void r() {
        this.K = (TextView)this.findViewById(a.d.text_view_scale);
        ((HorizontalProgressWheelView)((Object)this.findViewById(a.d.scale_scroll_wheel))).setScrollingListener(new HorizontalProgressWheelView.a(){

            @Override
            public void a() {
                UCropActivity.this.A.b();
            }

            @Override
            public void a(float f2, float f3) {
                if (f2 > 0.0f) {
                    UCropActivity.this.A.b(UCropActivity.this.A.getCurrentScale() + f2 * ((UCropActivity.this.A.getMaxScale() - UCropActivity.this.A.getMinScale()) / 15000.0f));
                    return;
                }
                UCropActivity.this.A.a(UCropActivity.this.A.getCurrentScale() + f2 * ((UCropActivity.this.A.getMaxScale() - UCropActivity.this.A.getMinScale()) / 15000.0f));
            }

            @Override
            public void b() {
                UCropActivity.this.A.a();
            }
        });
        ((HorizontalProgressWheelView)((Object)this.findViewById(a.d.scale_scroll_wheel))).setMiddleLineColor(this.r);
    }

    private void s() {
        this.A.c(- this.A.getCurrentAngle());
        this.A.b();
    }

    /*
     * Enabled aggressive block sorting
     */
    private void t() {
        if (!this.x) {
            this.f(0);
            return;
        }
        int n2 = this.C.getVisibility() == 0 ? a.d.state_aspect_ratio : a.d.state_scale;
        this.e(n2);
    }

    private void u() {
        if (this.L == null) {
            this.L = new View((Context)this);
            RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(-1, -1);
            layoutParams.addRule(3, a.d.toolbar);
            this.L.setLayoutParams((ViewGroup.LayoutParams)layoutParams);
            this.L.setClickable(true);
        }
        ((RelativeLayout)this.findViewById(a.d.ucrop_photobox)).addView(this.L);
    }

    protected void a(Uri uri, float f2, int n2, int n3, int n4, int n5) {
        this.setResult(-1, new Intent().putExtra("com.yalantis.ucrop.OutputUri", (Parcelable)uri).putExtra("com.yalantis.ucrop.CropAspectRatio", f2).putExtra("com.yalantis.ucrop.ImageWidth", n4).putExtra("com.yalantis.ucrop.ImageHeight", n5).putExtra("com.yalantis.ucrop.OffsetX", n2).putExtra("com.yalantis.ucrop.OffsetY", n3));
    }

    protected void a(Throwable throwable) {
        this.setResult(96, new Intent().putExtra("com.yalantis.ucrop.Error", (Serializable)throwable));
    }

    protected void m() {
        this.L.setClickable(true);
        this.y = true;
        this.e();
        this.A.a(this.M, this.N, new a(){

            @Override
            public void a(Uri uri, int n2, int n3, int n4, int n5) {
                UCropActivity.this.a(uri, UCropActivity.this.A.getTargetAspectRatio(), n2, n3, n4, n5);
                UCropActivity.this.finish();
            }

            @Override
            public void a(Throwable throwable) {
                UCropActivity.this.a(throwable);
                UCropActivity.this.finish();
            }
        });
    }

    @Override
    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.setContentView(a.e.ucrop_activity_photobox);
        bundle = this.getIntent();
        this.e((Intent)bundle);
        this.c((Intent)bundle);
        this.t();
        this.u();
    }

    public boolean onCreateOptionsMenu(Menu menu2) {
        this.getMenuInflater().inflate(a.f.ucrop_menu_activity, menu2);
        MenuItem menuItem = menu2.findItem(a.d.menu_loader);
        Drawable drawable2 = menuItem.getIcon();
        if (drawable2 != null) {
            try {
                drawable2.mutate();
                drawable2.setColorFilter(this.s, PorterDuff.Mode.SRC_ATOP);
                menuItem.setIcon(drawable2);
            }
            catch (IllegalStateException illegalStateException) {
                Log.i((String)"UCropActivity", (String)String.format("%s - %s", illegalStateException.getMessage(), this.getString(a.g.ucrop_mutate_exception_hint)));
            }
            ((Animatable)menuItem.getIcon()).start();
        }
        menu2 = menu2.findItem(a.d.menu_crop);
        menuItem = android.support.v4.content.b.a((Context)this, this.v);
        if (menuItem != null) {
            menuItem.mutate();
            menuItem.setColorFilter(this.s, PorterDuff.Mode.SRC_ATOP);
            menu2.setIcon((Drawable)menuItem);
        }
        return true;
    }

    public boolean onOptionsItemSelected(MenuItem menuItem) {
        if (menuItem.getItemId() == a.d.menu_crop) {
            this.m();
        } else if (menuItem.getItemId() == 16908332) {
            this.onBackPressed();
        }
        return super.onOptionsItemSelected(menuItem);
    }

    public boolean onPrepareOptionsMenu(Menu menu2) {
        menu2.findItem(a.d.menu_crop).setVisible(this.y ^ true);
        menu2.findItem(a.d.menu_loader).setVisible(this.y);
        return super.onPrepareOptionsMenu(menu2);
    }

    @Override
    protected void onStop() {
        super.onStop();
        if (this.A != null) {
            this.A.a();
        }
    }

}

