/*
 * Decompiled with CFR 0_132.
 */
package c.a.a.h;

import c.a.a.d.e;
import c.a.a.e.d;
import c.a.a.e.f;
import c.a.a.e.k;
import c.a.a.e.l;
import c.a.a.h.b;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.HashMap;

public class a {
    private k a;

    public a(k k2) {
        if (k2 != null) {
            this.a = k2;
            return;
        }
        throw new c.a.a.c.a("zip model is null in ZipEngine constructor");
    }

    private long a(ArrayList arrayList, l l2) {
        if (arrayList != null) {
            long l3 = 0L;
            int n2 = 0;
            do {
                if (n2 >= arrayList.size()) {
                    return l3;
                }
                long l4 = l3;
                if (arrayList.get(n2) instanceof File) {
                    l4 = l3;
                    if (((File)arrayList.get(n2)).exists()) {
                        l4 = l2.b() && l2.c() == 0 ? c.a.a.g.e.c((File)arrayList.get(n2)) * 2L : c.a.a.g.e.c((File)arrayList.get(n2));
                        l4 = l3 += l4;
                        if (this.a.b() != null) {
                            l4 = l3;
                            if (this.a.b().a() != null) {
                                l4 = l3;
                                if (this.a.b().a().size() > 0) {
                                    Object object = c.a.a.g.e.a(((File)arrayList.get(n2)).getAbsolutePath(), l2.i(), l2.l());
                                    object = c.a.a.g.e.a(this.a, (String)object);
                                    l4 = l3;
                                    if (object != null) {
                                        l4 = l3 + (c.a.a.g.e.c(new File(this.a.e())) - object.h());
                                    }
                                }
                            }
                        }
                    }
                }
                ++n2;
                l3 = l4;
            } while (true);
        }
        throw new c.a.a.c.a("file list is null, cannot calculate total work");
    }

    private RandomAccessFile a() {
        Object object = this.a.e();
        if (c.a.a.g.e.a((String)object)) {
            try {
                object = new File((String)object);
                if (!object.getParentFile().exists()) {
                    object.getParentFile().mkdirs();
                }
                object = new RandomAccessFile((File)object, "rw");
                return object;
            }
            catch (FileNotFoundException fileNotFoundException) {
                throw new c.a.a.c.a(fileNotFoundException);
            }
        }
        throw new c.a.a.c.a("invalid output path");
    }

    private void a(l l2) {
        if (l2 != null) {
            if (l2.a() != 0 && l2.a() != 8) {
                throw new c.a.a.c.a("unsupported compression type");
            }
            if (l2.a() == 8 && l2.d() < 0 && l2.d() > 9) {
                throw new c.a.a.c.a("invalid compression level. compression level dor deflate should be in the range of 0-9");
            }
            if (l2.b()) {
                if (l2.c() != 0 && l2.c() != 99) {
                    throw new c.a.a.c.a("unsupported encryption method");
                }
                if (l2.f() != null && l2.f().length > 0) {
                    return;
                }
                throw new c.a.a.c.a("input password is empty or null");
            }
            l2.d(-1);
            l2.b(-1);
            return;
        }
        throw new c.a.a.c.a("cannot validate zip parameters");
    }

    static void a(a a2, ArrayList arrayList, l l2, c.a.a.f.a a3) {
        a2.a(arrayList, l2, a3);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private void a(ArrayList var1_1, l var2_17, c.a.a.f.a var3_20) {
        block53 : {
            block52 : {
                if (var1_1 == null) throw new c.a.a.c.a("one of the input parameters is null when adding files");
                if (var2_17 == null) throw new c.a.a.c.a("one of the input parameters is null when adding files");
                if (var1_1.size() <= 0) throw new c.a.a.c.a("no files to add");
                if (this.a.c() == null) {
                    this.a.a(this.b());
                }
                var9_21 = null;
                var8_25 = null;
                this.a((l)var2_17);
                this.b((ArrayList)var1_1, (l)var2_17, var3_20);
                var6_29 = c.a.a.g.e.c(this.a.e());
                var10_30 = new byte[](new File(this.a.e()), this.a.i());
                var7_31 = new e((OutputStream)var10_30, this.a);
                if (!var6_29) ** GOTO lbl18
                if (this.a.c() == null) throw new c.a.a.c.a("invalid end of central directory record");
                var10_30.a(this.a.c().f());
lbl18: // 2 sources:
                var10_30 = new byte[4096];
                var8_25 = null;
                var4_33 = 0;
                break block52;
                catch (Throwable var1_5) {
                    var8_25 = var7_31 = null;
                    ** GOTO lbl168
                }
                catch (Exception var9_23) {
                    var2_17 = null;
                    var1_1 = var8_25;
                    ** GOTO lbl158
                }
                catch (Throwable var1_16) {
                    var8_25 = null;
                    ** GOTO lbl168
                }
                catch (Exception var9_24) {
                    var2_17 = null;
                    ** GOTO lbl118
                }
                catch (c.a.a.c.a var8_28) {
                    var2_17 = null;
                    ** GOTO lbl121
                }
                catch (c.a.a.c.a var7_32) {
                    var2_17 = null;
                    var1_1 = var9_21;
                    var9_21 = var7_32;
                    break block53;
                }
            }
            do {
                block60 : {
                    block68 : {
                        block66 : {
                            block62 : {
                                block67 : {
                                    block61 : {
                                        block64 : {
                                            block63 : {
                                                block59 : {
                                                    block57 : {
                                                        block55 : {
                                                            block58 : {
                                                                block56 : {
                                                                    block54 : {
                                                                        if (var4_33 < var1_1.size()) break block54;
                                                                        var7_31.b();
                                                                        var3_20.a();
                                                                        ** if (var8_25 == null) goto lbl-1000
lbl-1000: // 1 sources:
                                                                        {
                                                                            var8_25.close();
                                                                        }
lbl-1000: // 2 sources:
                                                                        {
                                                                            break block55;
                                                                        }
                                                                    }
                                                                    if (!var3_20.c()) break block56;
                                                                    var3_20.b(3);
                                                                    var3_20.a(0);
                                                                    ** if (var8_25 == null) goto lbl-1000
lbl-1000: // 1 sources:
                                                                    {
                                                                        var8_25.close();
                                                                    }
lbl-1000: // 2 sources:
                                                                    {
                                                                        break block57;
                                                                    }
                                                                }
                                                                var9_21 = (l)var2_17.clone();
                                                                var3_20.a(((File)var1_1.get(var4_33)).getAbsolutePath());
                                                                if (((File)var1_1.get(var4_33)).isDirectory()) ** GOTO lbl82
                                                                if (!var9_21.b() || var9_21.c() != 0) break block58;
                                                                var3_20.c(3);
                                                                var9_21.e((int)c.a.a.g.b.a(((File)var1_1.get(var4_33)).getAbsolutePath(), var3_20));
                                                                var3_20.c(0);
                                                                if (!var3_20.c()) break block58;
                                                                var3_20.b(3);
                                                                var3_20.a(0);
                                                                ** if (var8_25 == null) goto lbl-1000
lbl-1000: // 1 sources:
                                                                {
                                                                    var8_25.close();
                                                                }
lbl-1000: // 2 sources:
                                                                {
                                                                    break block59;
                                                                }
                                                            }
                                                            try {
                                                                if (c.a.a.g.e.c((File)var1_1.get(var4_33)) == 0L) {
                                                                    var9_21.a(0);
                                                                }
lbl82: // 4 sources:
                                                                var7_31.a((File)var1_1.get(var4_33), (l)var9_21);
                                                                if (((File)var1_1.get(var4_33)).isDirectory()) {
                                                                    var7_31.a();
                                                                    break block60;
                                                                }
                                                                var9_21 = new FileInputStream((File)var1_1.get(var4_33));
                                                                break block61;
                                                            }
                                                            catch (Throwable var1_3) {
                                                                break block62;
                                                            }
                                                            catch (Exception var9_22) {
                                                                var2_17 = var8_25;
                                                                break block63;
                                                            }
                                                            catch (c.a.a.c.a var1_4) {
                                                                var2_17 = var8_25;
                                                                var8_25 = var1_4;
                                                                break block64;
                                                            }
                                                            catch (IOException var1_8) {}
                                                        }
                                                        try {
                                                            var7_31.close();
                                                            return;
                                                        }
                                                        catch (IOException var1_9) {
                                                            return;
                                                        }
                                                        catch (IOException var1_10) {}
                                                    }
                                                    try {
                                                        var7_31.close();
                                                        return;
                                                    }
                                                    catch (IOException var1_11) {
                                                        return;
                                                    }
                                                    catch (IOException var1_12) {}
                                                }
                                                try {
                                                    var7_31.close();
                                                    return;
                                                }
                                                catch (IOException var1_13) {
                                                    return;
                                                }
                                            }
                                            var1_1 = var7_31;
                                            break block67;
                                        }
                                        var1_1 = var7_31;
                                        var9_21 = var8_25;
                                        break;
                                    }
                                    do {
                                        block65 : {
                                            var5_34 = var9_21.read(var10_30);
                                            if (var5_34 == -1) {
                                                var7_31.a();
                                                var9_21.close();
                                                var8_25 = var9_21;
                                                break block60;
                                            }
                                            if (!var3_20.c()) break block65;
                                            var3_20.b(3);
                                            var3_20.a(0);
                                            var9_21.close();
                                            break block66;
                                        }
                                        var7_31.write(var10_30, 0, var5_34);
                                        var3_20.b((long)var5_34);
                                        continue;
                                        break;
                                    } while (true);
                                    catch (Throwable var1_2) {
                                        var8_25 = var9_21;
                                        break block62;
                                    }
                                    catch (Exception var8_26) {
                                        var1_1 = var7_31;
                                        var2_17 = var9_21;
                                        var9_21 = var8_26;
                                        break block67;
                                    }
                                    catch (c.a.a.c.a var8_27) {
                                        var1_1 = var7_31;
                                        var2_17 = var9_21;
                                        var9_21 = var8_27;
                                        break;
                                    }
                                }
                                var7_31 = var1_1;
                                var8_25 = var2_17;
                                try {
                                    var3_20.a((Throwable)var9_21);
                                    var7_31 = var1_1;
                                    var8_25 = var2_17;
                                    throw new c.a.a.c.a((Throwable)var9_21);
                                }
                                catch (Throwable var1_6) {
                                    // empty catch block
                                }
                            }
                            if (var8_25 != null) {
                                var8_25.close();
                            }
                            break block68;
                            catch (IOException var1_14) {}
                        }
                        try {
                            var7_31.close();
                            return;
                        }
                        catch (IOException var1_15) {
                            return;
                        }
                        catch (IOException var2_18) {}
                    }
                    if (var7_31 == null) throw var1_7;
                    try {
                        var7_31.close();
                    }
                    catch (IOException var2_19) {
                        throw var1_7;
                    }
                    throw var1_7;
                }
                ++var4_33;
            } while (true);
        }
        var7_31 = var1_1;
        var8_25 = var2_17;
        var3_20.a((Throwable)var9_21);
        var7_31 = var1_1;
        var8_25 = var2_17;
        throw var9_21;
    }

    private d b() {
        d d2 = new d();
        d2.a(101010256L);
        d2.a(0);
        d2.d(0);
        d2.c(0);
        d2.b(0L);
        return d2;
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private void b(ArrayList var1_1, l var2_11, c.a.a.f.a var3_13) {
        block25 : {
            if (this.a == null) return;
            if (this.a.b() == null) return;
            if (this.a.b().a() == null) return;
            if (this.a.b().a().size() <= 0) {
                return;
            }
            var9_14 = null;
            var4_15 = 0;
            do lbl-1000: // 2 sources:
            {
                var10_19 = var9_14;
                var11_20 = var9_14;
                var5_16 = var1_1.size();
                if (var4_15 < var5_16) ** break block21
                if (var9_14 == null) return;
                var9_14.close();
                return;
                break;
            } while (true);
            catch (IOException var1_7) {
                return;
            }
            {
                block22 : {
                    block24 : {
                        block23 : {
                            
                            var10_19 = var9_14;
                            var11_20 = var9_14;
                            var8_18 = c.a.a.g.e.a(((File)var1_1.get(var4_15)).getAbsolutePath(), var2_11.i(), var2_11.l());
                            var10_19 = var9_14;
                            var11_20 = var9_14;
                            var12_21 = c.a.a.g.e.a(this.a, (String)var8_18);
                            var10_19 = var9_14;
                            if (var12_21 == null) break block22;
                            var8_18 = var9_14;
                            if (var9_14 != null) {
                                var10_19 = var9_14;
                                var11_20 = var9_14;
                                var9_14.close();
                                var8_18 = null;
                            }
                            var10_19 = var8_18;
                            var11_20 = var8_18;
                            var9_14 = new c.a.a.g.a();
                            var10_19 = var8_18;
                            var11_20 = var8_18;
                            var3_13.c(2);
                            var10_19 = var8_18;
                            var11_20 = var8_18;
                            var9_14 = var9_14.a(this.a, var12_21, var3_13);
                            var10_19 = var8_18;
                            var11_20 = var8_18;
                            if (!var3_13.c()) break block23;
                            var10_19 = var8_18;
                            var11_20 = var8_18;
                            var3_13.b(3);
                            var10_19 = var8_18;
                            var11_20 = var8_18;
                            var3_13.a(0);
                            if (var8_18 == null) return;
                            var8_18.close();
                            return;
                        }
                        var10_19 = var8_18;
                        var11_20 = var8_18;
                        var3_13.c(0);
                        var10_19 = var8_18;
                        if (var8_18 != null) break block22;
                        var10_19 = var8_18;
                        var11_20 = var8_18;
                        var8_18 = this.a();
                        if (var9_14 == null) break block24;
                        try {
                            var10_19 = var9_14.get("offsetCentralDir");
                            if (var10_19 == null) break block24;
                            var6_17 = Long.parseLong((String)var9_14.get("offsetCentralDir"));
                            if (var6_17 < 0L) break block24;
                            var8_18.seek(var6_17);
                        }
                        catch (Throwable var1_2) {
                            var10_19 = var8_18;
                            break block25;
                        }
                        catch (IOException var1_3) {
                            var10_19 = var8_18;
                            throw new c.a.a.c.a((Throwable)var1_1);
                        }
                    }
                    var10_19 = var8_18;
                }
                ++var4_15;
                var9_14 = var10_19;
                ** while (true)
            }
            catch (IOException var1_8) {
                return;
            }
            catch (NumberFormatException var1_9) {
                throw new c.a.a.c.a("NumberFormatException while parsing offset central directory. Cannot update already existing file header");
            }
            catch (Exception var1_10) {
                throw new c.a.a.c.a("Error while parsing offset central directory. Cannot update already existing file header");
            }
            catch (Throwable var1_4) {
                break block25;
            }
            catch (IOException var1_5) {
                var10_19 = var11_20;
            }
            {
                throw new c.a.a.c.a((Throwable)var1_1);
            }
        }
        if (var10_19 == null) throw var1_6;
        try {
            var10_19.close();
        }
        catch (IOException var2_12) {
            throw var1_6;
        }
        throw var1_6;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    public void a(File var1_1, l var2_2, c.a.a.f.a var3_3, boolean var4_4) {
        block7 : {
            block5 : {
                block6 : {
                    if (var1_1 == null) throw new c.a.a.c.a("one of the input parameters is null, cannot add folder to zip");
                    if (var2_2 == null) throw new c.a.a.c.a("one of the input parameters is null, cannot add folder to zip");
                    if (c.a.a.g.e.c(var1_1.getAbsolutePath()) == false) throw new c.a.a.c.a("input folder does not exist");
                    if (var1_1.isDirectory() == false) throw new c.a.a.c.a("input file is not a folder, user addFileToZip method to add files");
                    if (!c.a.a.g.e.b(var1_1.getAbsolutePath())) {
                        var2_2 = new StringBuffer("cannot read folder: ");
                        var2_2.append(var1_1.getAbsolutePath());
                        throw new c.a.a.c.a(var2_2.toString());
                    }
                    if (!var2_2.h()) break block5;
                    if (var1_1.getAbsolutePath() == null) break block6;
                    if (var1_1.getAbsoluteFile().getParentFile() == null) ** GOTO lbl-1000
                    var5_5 = var1_1.getAbsoluteFile().getParentFile();
                    ** GOTO lbl17
                }
                if (var1_1.getParentFile() != null) {
                    var5_5 = var1_1.getParentFile();
lbl17: // 2 sources:
                    var5_5 = var5_5.getAbsolutePath();
                } else lbl-1000: // 2 sources:
                {
                    var5_5 = "";
                }
                break block7;
            }
            var5_5 = var1_1.getAbsolutePath();
        }
        var2_2.b((String)var5_5);
        var6_6 = c.a.a.g.e.a(var1_1, var2_2.e());
        var5_5 = var6_6;
        if (var2_2.h()) {
            var5_5 = var6_6;
            if (var6_6 == null) {
                var5_5 = new ArrayList<File>();
            }
            var5_5.add(var1_1);
        }
        this.a(var5_5, (l)var2_2, var3_3, var4_4);
    }

    public void a(ArrayList arrayList, l l2, c.a.a.f.a a2, boolean bl2) {
        if (arrayList != null && l2 != null) {
            if (arrayList.size() > 0) {
                a2.c(0);
                a2.a(1);
                a2.b(1);
                if (bl2) {
                    a2.a(this.a(arrayList, l2));
                    a2.a(((File)arrayList.get(0)).getAbsolutePath());
                    new b(this, "Zip4j", arrayList, l2, a2).start();
                    return;
                }
                this.a(arrayList, l2, a2);
                return;
            }
            throw new c.a.a.c.a("no files to add");
        }
        throw new c.a.a.c.a("one of the input parameters is null when adding files");
    }
}

