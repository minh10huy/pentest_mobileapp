/*
 * Decompiled with CFR 0_132.
 */
package c.a.a.a;

import c.a.a.c.a;
import c.a.a.e.d;
import c.a.a.e.f;
import c.a.a.e.g;
import c.a.a.e.h;
import c.a.a.e.i;
import c.a.a.e.k;
import c.a.a.g.e;
import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

public class b {
    private final int a = 50;

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private int a(k object, f f2, OutputStream arrby, List list) {
        int n2;
        int n3;
        block23 : {
            int n4;
            boolean bl2;
            byte[] arrby2;
            boolean bl3;
            block24 : {
                byte[] arrby3;
                byte[] arrby4;
                byte[] arrby5;
                block22 : {
                    if (f2 == null) throw new a("input parameters is null, cannot write local file header");
                    if (arrby == null) throw new a("input parameters is null, cannot write local file header");
                    try {
                        arrby = new byte[2];
                        n2 = 4;
                        arrby5 = new byte[4];
                        arrby2 = new byte[8];
                        arrby4 = new byte[2];
                        arrby3 = new byte[4];
                        c.a.a.g.d.a(arrby5, 0, f2.a());
                        this.a(arrby5, list);
                        c.a.a.g.d.a(arrby, 0, (short)f2.b());
                        this.a(arrby, list);
                        c.a.a.g.d.a(arrby, 0, (short)f2.c());
                        this.a(arrby, list);
                        this.a(f2.d(), list);
                        c.a.a.g.d.a(arrby, 0, (short)f2.e());
                        this.a(arrby, list);
                        c.a.a.g.d.a(arrby5, 0, f2.f());
                        this.a(arrby5, list);
                        c.a.a.g.d.a(arrby5, 0, (int)f2.g());
                        this.a(arrby5, list);
                        if (f2.h() < 0xFFFFFFFFL && f2.i() + 50L < 0xFFFFFFFFL) {
                            c.a.a.g.d.a(arrby2, 0, f2.h());
                            System.arraycopy(arrby2, 0, arrby5, 0, 4);
                            this.a(arrby5, list);
                            c.a.a.g.d.a(arrby2, 0, f2.i());
                            System.arraycopy(arrby2, 0, arrby5, 0, 4);
                            this.a(arrby5, list);
                            bl3 = false;
                        } else {
                            c.a.a.g.d.a(arrby2, 0, 0xFFFFFFFFL);
                            System.arraycopy(arrby2, 0, arrby5, 0, 4);
                            this.a(arrby5, list);
                            this.a(arrby5, list);
                            bl3 = true;
                        }
                        c.a.a.g.d.a(arrby, 0, (short)f2.j());
                        this.a(arrby, list);
                        arrby5 = new byte[4];
                        if (f2.n() > 0xFFFFFFFFL) {
                            c.a.a.g.d.a(arrby2, 0, 0xFFFFFFFFL);
                            System.arraycopy(arrby2, 0, arrby5, 0, 4);
                            bl2 = true;
                        } else {
                            c.a.a.g.d.a(arrby2, 0, f2.n());
                            System.arraycopy(arrby2, 0, arrby5, 0, 4);
                            bl2 = false;
                        }
                        if (!bl3 && !bl2) {
                            n2 = 0;
                        } else {
                            if (bl3) {
                                n2 = 20;
                            }
                            if (bl2) {
                                n2 += 8;
                            }
                        }
                        n3 = n2;
                        if (f2.w() == null) break block22;
                    }
                    catch (Exception exception) {
                        throw new a(exception);
                    }
                    n3 = n2 + 11;
                }
                c.a.a.g.d.a(arrby, 0, (short)n3);
                this.a(arrby, list);
                this.a(arrby4, list);
                c.a.a.g.d.a(arrby, 0, (short)f2.l());
                this.a(arrby, list);
                this.a(arrby4, list);
                if (f2.m() != null) {
                    this.a(f2.m(), list);
                } else {
                    this.a(arrby3, list);
                }
                this.a(arrby5, list);
                if (e.a(object.j())) {
                    arrby4 = f2.o().getBytes(object.j());
                    this.a(arrby4, list);
                    n2 = arrby4.length;
                } else {
                    this.a(e.e(f2.o()), list);
                    n2 = e.g(f2.o());
                }
                n4 = 46 + n2;
                if (!bl3) {
                    n2 = n4;
                    if (!bl2) break block23;
                }
                object.b(true);
                c.a.a.g.d.a(arrby, 0, (short)1);
                this.a(arrby, list);
                n2 = bl3 ? 16 : 0;
                n3 = n2;
                if (!bl2) break block24;
                n3 = n2 + 8;
            }
            c.a.a.g.d.a(arrby, 0, (short)n3);
            this.a(arrby, list);
            n3 = n2 = n4 + 2 + 2;
            if (bl3) {
                c.a.a.g.d.a(arrby2, 0, f2.i());
                this.a(arrby2, list);
                c.a.a.g.d.a(arrby2, 0, f2.h());
                this.a(arrby2, list);
                n3 = n2 + 8 + 8;
            }
            n2 = n3;
            if (bl2) {
                c.a.a.g.d.a(arrby2, 0, f2.n());
                this.a(arrby2, list);
                n2 = n3 + 8;
            }
        }
        n3 = n2;
        if (f2.w() == null) return n3;
        object = f2.w();
        c.a.a.g.d.a(arrby, 0, (short)object.a());
        this.a(arrby, list);
        c.a.a.g.d.a(arrby, 0, (short)object.b());
        this.a(arrby, list);
        c.a.a.g.d.a(arrby, 0, (short)object.c());
        this.a(arrby, list);
        this.a(object.d().getBytes(), list);
        this.a(new byte[]{(byte)object.e()}, list);
        c.a.a.g.d.a(arrby, 0, (short)object.f());
        this.a(arrby, list);
        return n2 + 11;
    }

    private int a(k k2, OutputStream outputStream, List list) {
        if (k2 != null && outputStream != null) {
            c.a.a.e.b b2 = k2.b();
            int n2 = 0;
            if (b2 != null && k2.b().a() != null) {
                if (k2.b().a().size() <= 0) {
                    return 0;
                }
                int n3 = 0;
                do {
                    if (n2 >= k2.b().a().size()) {
                        return n3;
                    }
                    n3 += this.a(k2, (f)k2.b().a().get(n2), outputStream, list);
                    ++n2;
                } while (true);
            }
            return 0;
        }
        throw new a("input parameters is null, cannot write central directory");
    }

    private int a(ArrayList arrayList, int n2) {
        if (arrayList != null) {
            int n3 = 0;
            int n4 = 0;
            do {
                if (n3 >= arrayList.size()) {
                    return n4;
                }
                int n5 = n4;
                if (((f)arrayList.get(n3)).l() == n2) {
                    n5 = n4 + 1;
                }
                ++n3;
                n4 = n5;
            } while (true);
        }
        throw new a("file headers are null, cannot calculate number of entries on this disk");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private void a(k k2, OutputStream arrby, int n2, long l2, List list) {
        int n3;
        int n4;
        byte[] arrby2;
        block8 : {
            block7 : {
                if (k2 != null && arrby != null) {
                    try {
                        arrby = new byte[2];
                        byte[] arrby3 = new byte[2];
                        byte[] arrby4 = new byte[4];
                        arrby2 = new byte[8];
                        c.a.a.g.d.a(arrby4, 0, 101075792);
                        this.a(arrby4, list);
                        c.a.a.g.d.a(arrby2, 0, 44L);
                        this.a(arrby2, list);
                        if (k2.b() != null && k2.b().a() != null && k2.b().a().size() > 0) {
                            c.a.a.g.d.a(arrby, 0, (short)((f)k2.b().a().get(0)).b());
                            this.a(arrby, list);
                            c.a.a.g.d.a(arrby, 0, (short)((f)k2.b().a().get(0)).c());
                            this.a(arrby, list);
                        } else {
                            this.a(arrby3, list);
                            this.a(arrby3, list);
                        }
                        c.a.a.g.d.a(arrby4, 0, k2.c().b());
                        this.a(arrby4, list);
                        c.a.a.g.d.a(arrby4, 0, k2.c().c());
                        this.a(arrby4, list);
                        if (k2.b() != null && k2.b().a() != null) {
                            n3 = k2.b().a().size();
                            if (!k2.d()) break block7;
                            this.a(k2.b().a(), k2.c().b());
                            n4 = 0;
                            break block8;
                        }
                        throw new a("invalid central directory/file headers, cannot write end of central directory record");
                    }
                    catch (Exception exception) {
                        throw new a(exception);
                    }
                    catch (a a2) {
                        throw a2;
                    }
                }
                throw new a("zip model or output stream is null, cannot write zip64 end of central directory record");
            }
            n4 = n3;
        }
        c.a.a.g.d.a(arrby2, 0, (long)n4);
        this.a(arrby2, list);
        c.a.a.g.d.a(arrby2, 0, (long)n3);
        this.a(arrby2, list);
        c.a.a.g.d.a(arrby2, 0, (long)n2);
        this.a(arrby2, list);
        c.a.a.g.d.a(arrby2, 0, l2);
        this.a(arrby2, list);
    }

    private void a(k k2, OutputStream outputStream, byte[] arrby) {
        if (arrby != null) {
            try {
                if (outputStream instanceof c.a.a.d.d && ((c.a.a.d.d)outputStream).a(arrby.length)) {
                    this.a(k2, outputStream);
                    return;
                }
                outputStream.write(arrby);
                return;
            }
            catch (IOException iOException) {
                throw new a(iOException);
            }
        }
        throw new a("invalid buff to write as zip headers");
    }

    private void a(byte[] arrby, List list) {
        if (list != null && arrby != null) {
            int n2 = 0;
            do {
                if (n2 >= arrby.length) {
                    return;
                }
                list.add(Byte.toString(arrby[n2]));
                ++n2;
            } while (true);
        }
        throw new a("one of the input parameters is null, cannot copy byte array to array list");
    }

    private byte[] a(List list) {
        if (list != null) {
            if (list.size() <= 0) {
                return null;
            }
            byte[] arrby = new byte[list.size()];
            int n2 = 0;
            do {
                if (n2 >= list.size()) {
                    return arrby;
                }
                arrby[n2] = Byte.parseByte((String)list.get(n2));
                ++n2;
            } while (true);
        }
        throw new a("input byte array list is null, cannot conver to byte array");
    }

    private void b(k k2, OutputStream outputStream) {
        int n2 = 0;
        try {
            if (outputStream instanceof c.a.a.d.d) {
                k2.c().b(((c.a.a.d.d)outputStream).a());
                n2 = ((c.a.a.d.d)outputStream).d();
            }
            if (k2.h()) {
                if (k2.g() == null) {
                    k2.a(new i());
                }
                if (k2.f() == null) {
                    k2.a(new h());
                }
                k2.f().a(n2);
                k2.f().b(n2 + 1);
            }
            k2.c().a(n2);
            k2.c().b(n2);
            return;
        }
        catch (IOException iOException) {
            throw new a(iOException);
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private void b(k k2, OutputStream arrby, int n2, long l2, List list) {
        if (k2 == null || arrby == null) throw new a("zip model or output stream is null, cannot write end of central directory record");
        try {
            arrby = new byte[2];
            byte[] arrby2 = new byte[4];
            byte[] arrby3 = new byte[8];
            c.a.a.g.d.a(arrby2, 0, (int)k2.c().a());
            this.a(arrby2, list);
            c.a.a.g.d.a(arrby, 0, (short)k2.c().b());
            this.a(arrby, list);
            c.a.a.g.d.a(arrby, 0, (short)k2.c().c());
            this.a(arrby, list);
            if (k2.b() == null || k2.b().a() == null) throw new a("invalid central directory/file headers, cannot write end of central directory record");
            int n3 = k2.b().a().size();
            int n4 = k2.d() ? this.a(k2.b().a(), k2.c().b()) : n3;
            c.a.a.g.d.a(arrby, 0, (short)n4);
            this.a(arrby, list);
            c.a.a.g.d.a(arrby, 0, (short)n3);
            this.a(arrby, list);
            c.a.a.g.d.a(arrby2, 0, n2);
            this.a(arrby2, list);
            if (l2 > 0xFFFFFFFFL) {
                c.a.a.g.d.a(arrby3, 0, 0xFFFFFFFFL);
                System.arraycopy(arrby3, 0, arrby2, 0, 4);
            } else {
                c.a.a.g.d.a(arrby3, 0, l2);
                System.arraycopy(arrby3, 0, arrby2, 0, 4);
            }
            this.a(arrby2, list);
            n2 = k2.c().h() != null ? k2.c().g() : 0;
            c.a.a.g.d.a(arrby, 0, (short)n2);
            this.a(arrby, list);
            if (n2 <= 0) return;
            {
                this.a(k2.c().i(), list);
                return;
            }
        }
        catch (Exception exception) {
            throw new a(exception);
        }
    }

    private void b(k k2, OutputStream arrby, List list) {
        if (k2 != null && arrby != null) {
            try {
                arrby = new byte[4];
                byte[] arrby2 = new byte[8];
                c.a.a.g.d.a(arrby, 0, 117853008);
                this.a(arrby, list);
                c.a.a.g.d.a(arrby, 0, k2.f().a());
                this.a(arrby, list);
                c.a.a.g.d.a(arrby2, 0, k2.f().b());
                this.a(arrby2, list);
                c.a.a.g.d.a(arrby, 0, k2.f().c());
                this.a(arrby, list);
                return;
            }
            catch (Exception exception) {
                throw new a(exception);
            }
            catch (a a2) {
                throw a2;
            }
        }
        throw new a("zip model or output stream is null, cannot write zip64 end of central directory locator");
    }

    public int a(g arrby, OutputStream outputStream) {
        if (arrby != null && outputStream != null) {
            long l2;
            ArrayList arrayList = new ArrayList();
            byte[] arrby2 = new byte[4];
            c.a.a.g.d.a(arrby2, 0, 134695760);
            this.a(arrby2, arrayList);
            c.a.a.g.d.a(arrby2, 0, (int)arrby.f());
            this.a(arrby2, arrayList);
            long l3 = l2 = arrby.g();
            if (l2 >= Integer.MAX_VALUE) {
                l3 = Integer.MAX_VALUE;
            }
            c.a.a.g.d.a(arrby2, 0, (int)l3);
            this.a(arrby2, arrayList);
            l3 = l2 = arrby.h();
            if (l2 >= Integer.MAX_VALUE) {
                l3 = Integer.MAX_VALUE;
            }
            c.a.a.g.d.a(arrby2, 0, (int)l3);
            this.a(arrby2, arrayList);
            arrby = this.a(arrayList);
            outputStream.write(arrby);
            return arrby.length;
        }
        throw new a("input parameters is null, cannot write extended local header");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public int a(k object, g g2, OutputStream outputStream) {
        ArrayList arrayList;
        byte[] arrby;
        byte[] arrby2;
        boolean bl2;
        int n2;
        byte[] arrby3;
        block10 : {
            if (g2 == null) {
                throw new a("input parameters are null, cannot write local file header");
            }
            arrayList = new ArrayList();
            arrby3 = new byte[2];
            byte[] arrby4 = new byte[4];
            arrby = new byte[8];
            arrby2 = new byte[8];
            c.a.a.g.d.a(arrby4, 0, g2.a());
            this.a(arrby4, arrayList);
            c.a.a.g.d.a(arrby3, 0, (short)g2.b());
            this.a(arrby3, arrayList);
            this.a(g2.c(), arrayList);
            c.a.a.g.d.a(arrby3, 0, (short)g2.d());
            this.a(arrby3, arrayList);
            c.a.a.g.d.a(arrby4, 0, g2.e());
            this.a(arrby4, arrayList);
            c.a.a.g.d.a(arrby4, 0, (int)g2.f());
            this.a(arrby4, arrayList);
            if (g2.h() + 50L >= 0xFFFFFFFFL) {
                c.a.a.g.d.a(arrby, 0, 0xFFFFFFFFL);
                System.arraycopy(arrby, 0, arrby4, 0, 4);
                this.a(arrby4, arrayList);
                this.a(arrby4, arrayList);
                object.b(true);
                g2.c(true);
                bl2 = true;
            } else {
                c.a.a.g.d.a(arrby, 0, g2.g());
                System.arraycopy(arrby, 0, arrby4, 0, 4);
                this.a(arrby4, arrayList);
                c.a.a.g.d.a(arrby, 0, g2.h());
                System.arraycopy(arrby, 0, arrby4, 0, 4);
                this.a(arrby4, arrayList);
                g2.c(false);
                bl2 = false;
            }
            c.a.a.g.d.a(arrby3, 0, (short)g2.i());
            this.a(arrby3, arrayList);
            int n3 = bl2 ? 20 : 0;
            n2 = n3;
            if (g2.o() == null) break block10;
            n2 = n3 + 11;
        }
        try {
            c.a.a.g.d.a(arrby3, 0, (short)n2);
            this.a(arrby3, arrayList);
            object = e.a(object.j()) ? g2.k().getBytes(object.j()) : e.e(g2.k());
            this.a((byte[])object, arrayList);
            if (bl2) {
                c.a.a.g.d.a(arrby3, 0, (short)1);
                this.a(arrby3, arrayList);
                c.a.a.g.d.a(arrby3, 0, (short)16);
                this.a(arrby3, arrayList);
                c.a.a.g.d.a(arrby, 0, g2.h());
                this.a(arrby, arrayList);
                this.a(arrby2, arrayList);
            }
            if (g2.o() != null) {
                object = g2.o();
                c.a.a.g.d.a(arrby3, 0, (short)object.a());
                this.a(arrby3, arrayList);
                c.a.a.g.d.a(arrby3, 0, (short)object.b());
                this.a(arrby3, arrayList);
                c.a.a.g.d.a(arrby3, 0, (short)object.c());
                this.a(arrby3, arrayList);
                this.a(object.d().getBytes(), arrayList);
                this.a(new byte[]{(byte)object.e()}, arrayList);
                c.a.a.g.d.a(arrby3, 0, (short)object.f());
                this.a(arrby3, arrayList);
            }
            object = this.a(arrayList);
            outputStream.write((byte[])object);
            return ((Object)object).length;
        }
        catch (Exception exception) {
            throw new a(exception);
        }
        catch (a a2) {
            throw a2;
        }
    }

    public void a(k k2, OutputStream outputStream) {
        if (k2 != null && outputStream != null) {
            try {
                this.b(k2, outputStream);
                long l2 = k2.c().f();
                ArrayList arrayList = new ArrayList();
                int n2 = this.a(k2, outputStream, arrayList);
                if (k2.h()) {
                    if (k2.g() == null) {
                        k2.a(new i());
                    }
                    if (k2.f() == null) {
                        k2.a(new h());
                    }
                    k2.f().b((long)n2 + l2);
                    if (outputStream instanceof c.a.a.d.d) {
                        k2.f().a(((c.a.a.d.d)outputStream).d());
                        k2.f().b(((c.a.a.d.d)outputStream).d() + 1);
                    } else {
                        k2.f().a(0);
                        k2.f().b(1);
                    }
                    this.a(k2, outputStream, n2, l2, arrayList);
                    this.b(k2, outputStream, arrayList);
                }
                this.b(k2, outputStream, n2, l2, arrayList);
                this.a(k2, outputStream, this.a(arrayList));
                return;
            }
            catch (Exception exception) {
                throw new a(exception);
            }
            catch (a a2) {
                throw a2;
            }
        }
        throw new a("input parameters is null, cannot finalize zip file");
    }
}

