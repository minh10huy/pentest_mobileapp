/*
 * Decompiled with CFR 0_132.
 */
package c.a.a.a;

import c.a.a.a.a;
import c.a.a.e.k;
import c.a.a.e.l;
import c.a.a.g.e;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;

public class c {
    private String a;
    private int b;
    private k c;
    private c.a.a.f.a d;
    private boolean e;
    private String f;

    public c(File file) {
        if (file != null) {
            this.a = file.getPath();
            this.b = 2;
            this.d = new c.a.a.f.a();
            this.e = false;
            return;
        }
        throw new c.a.a.c.a("Input zip file parameter is not null", 1);
    }

    public c(String string2) {
        this(new File(string2));
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private void a() {
        Object object;
        RandomAccessFile randomAccessFile;
        block13 : {
            block12 : {
                block11 : {
                    if (!e.c(this.a)) throw new c.a.a.c.a("zip file does not exist");
                    if (!e.b(this.a)) throw new c.a.a.c.a("no read access for the input zip file");
                    if (this.b != 2) throw new c.a.a.c.a("Invalid mode");
                    randomAccessFile = new RandomAccessFile(new File(this.a), "r");
                    object = randomAccessFile;
                    if (this.c != null) break block11;
                    object = randomAccessFile;
                    this.c = new a(randomAccessFile).a(this.f);
                    object = randomAccessFile;
                    if (this.c == null) break block11;
                    object = randomAccessFile;
                    this.c.a(this.a);
                }
                try {
                    randomAccessFile.close();
                    return;
                }
                catch (IOException iOException) {
                    return;
                }
                catch (FileNotFoundException fileNotFoundException) {
                    object = randomAccessFile;
                    break block12;
                }
                catch (Throwable throwable) {
                    randomAccessFile = null;
                    break block13;
                }
                catch (FileNotFoundException fileNotFoundException) {
                    object = null;
                }
            }
            try {
                void var3_8;
                throw new c.a.a.c.a((Throwable)var3_8);
            }
            catch (Throwable throwable) {
                randomAccessFile = object;
                object = throwable;
            }
        }
        if (randomAccessFile == null) throw object;
        try {
            randomAccessFile.close();
        }
        catch (IOException iOException) {
            throw object;
        }
        throw object;
    }

    private void a(File file, l l2, boolean bl2) {
        this.b();
        if (this.c != null) {
            if (bl2 && this.c.d()) {
                throw new c.a.a.c.a("This is a split archive. Zip file format does not allow updating split/spanned files");
            }
            new c.a.a.h.a(this.c).a(file, l2, this.d, this.e);
            return;
        }
        throw new c.a.a.c.a("internal error: zip model is null");
    }

    private void b() {
        if (this.c == null) {
            if (e.c(this.a)) {
                this.a();
                return;
            }
            this.c();
        }
    }

    private void c() {
        this.c = new k();
        this.c.a(this.a);
        this.c.b(this.f);
    }

    public void a(File file, l l2) {
        if (file != null) {
            if (l2 != null) {
                this.a(file, l2, true);
                return;
            }
            throw new c.a.a.c.a("input parameters are null, cannot add folder to zip file");
        }
        throw new c.a.a.c.a("input path is null, cannot add folder to zip file");
    }

    public void a(String string2, l l2) {
        if (e.a(string2)) {
            this.a(new File(string2), l2);
            return;
        }
        throw new c.a.a.c.a("input path is null or empty, cannot add folder to zip file");
    }
}

