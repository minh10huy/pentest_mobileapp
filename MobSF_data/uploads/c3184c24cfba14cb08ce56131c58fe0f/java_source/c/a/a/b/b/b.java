/*
 * Decompiled with CFR 0_132.
 */
package c.a.a.b.b;

public class b {
    private static final int[] b = new int[256];
    private final int[] a = new int[3];

    static {
        int n2 = 0;
        block0 : while (n2 < 256) {
            int n3 = n2;
            int n4 = 0;
            do {
                if (n4 >= 8) {
                    b.b[n2] = n3;
                    ++n2;
                    continue block0;
                }
                n3 = (n3 & 1) == 1 ? n3 >>> 1 ^ -306674912 : (n3 >>>= 1);
                ++n4;
            } while (true);
            break;
        }
        return;
    }

    private int a(int n2, byte by2) {
        return b[(n2 ^ by2) & 255] ^ n2 >>> 8;
    }

    public byte a() {
        int n2 = this.a[2] | 2;
        return (byte)(n2 * (n2 ^ 1) >>> 8);
    }

    public void a(byte by2) {
        this.a[0] = this.a(this.a[0], by2);
        int[] arrn = this.a;
        arrn[1] = arrn[1] + (this.a[0] & 255);
        this.a[1] = this.a[1] * 134775813 + 1;
        this.a[2] = this.a(this.a[2], (byte)(this.a[1] >> 24));
    }

    public void a(char[] arrc) {
        int[] arrn = this.a;
        int n2 = 0;
        arrn[0] = 305419896;
        this.a[1] = 591751049;
        this.a[2] = 878082192;
        while (n2 < arrc.length) {
            this.a((byte)(arrc[n2] & 255));
            ++n2;
        }
        return;
    }
}

