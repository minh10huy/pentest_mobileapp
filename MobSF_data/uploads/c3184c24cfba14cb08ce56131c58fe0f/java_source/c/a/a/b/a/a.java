/*
 * Decompiled with CFR 0_132.
 */
package c.a.a.b.a;

import c.a.a.b.a.d;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.NoSuchAlgorithmException;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;

public class a
implements d {
    protected Mac a;
    protected int b;
    protected String c;

    public a(String string2) {
        this.c = string2;
        try {
            this.a = Mac.getInstance(string2);
            this.b = this.a.getMacLength();
            return;
        }
        catch (NoSuchAlgorithmException noSuchAlgorithmException) {
            throw new RuntimeException(noSuchAlgorithmException);
        }
    }

    public void a(byte[] arrby, int n2, int n3) {
        try {
            this.a.update(arrby, n2, n3);
            return;
        }
        catch (IllegalStateException illegalStateException) {
            throw new RuntimeException(illegalStateException);
        }
    }

    public byte[] a() {
        return this.a.doFinal();
    }

    @Override
    public byte[] a(byte[] arrby) {
        return this.a.doFinal(arrby);
    }

    @Override
    public int b() {
        return this.b;
    }

    @Override
    public void b(byte[] arrby) {
        try {
            this.a.init(new SecretKeySpec(arrby, this.c));
            return;
        }
        catch (InvalidKeyException invalidKeyException) {
            throw new RuntimeException(invalidKeyException);
        }
    }
}

