/*
 * Decompiled with CFR 0_132.
 */
package c.a.a.d;

import c.a.a.c.a;
import c.a.a.d.b;
import c.a.a.e.k;
import c.a.a.e.l;
import java.io.File;
import java.io.OutputStream;
import java.util.zip.Deflater;

public class c
extends b {
    protected Deflater g = new Deflater();
    private byte[] h = new byte[4096];
    private boolean i = false;

    public c(OutputStream outputStream, k k2) {
        super(outputStream, k2);
    }

    private void c() {
        int n2 = this.g.deflate(this.h, 0, this.h.length);
        if (n2 > 0) {
            int n3 = n2;
            if (this.g.finished()) {
                if (n2 == 4) {
                    return;
                }
                if (n2 < 4) {
                    this.a(4 - n2);
                    return;
                }
                n3 = n2 - 4;
            }
            if (!this.i) {
                super.write(this.h, 2, n3 - 2);
                this.i = true;
                return;
            }
            super.write(this.h, 0, n3);
        }
    }

    @Override
    public void a() {
        if (this.d.a() == 8) {
            if (!this.g.finished()) {
                this.g.finish();
                while (!this.g.finished()) {
                    this.c();
                }
            }
            this.i = false;
        }
        super.a();
    }

    @Override
    public void a(File file, l l2) {
        super.a(file, l2);
        if (l2.a() == 8) {
            this.g.reset();
            if (l2.d() >= 0 && l2.d() <= 9 || l2.d() == -1) {
                this.g.setLevel(l2.d());
                return;
            }
            throw new a("invalid compression level for deflater. compression level should be in the range of 0-9");
        }
    }

    @Override
    public void b() {
        super.b();
    }

    @Override
    public void write(int n2) {
        this.write(new byte[]{(byte)n2}, 0, 1);
    }

    @Override
    public void write(byte[] arrby) {
        this.write(arrby, 0, arrby.length);
    }

    @Override
    public void write(byte[] arrby, int n2, int n3) {
        if (this.d.a() != 8) {
            super.write(arrby, n2, n3);
            return;
        }
        this.g.setInput(arrby, n2, n3);
        while (!this.g.needsInput()) {
            this.c();
        }
        return;
    }
}

