/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.animation.Animator
 *  android.animation.LayoutTransition
 *  android.util.Log
 *  android.view.ViewGroup
 */
package android.support.transition;

import android.animation.Animator;
import android.animation.LayoutTransition;
import android.support.transition.ac;
import android.support.transition.ae;
import android.support.transition.ai;
import android.support.transition.r;
import android.util.Log;
import android.view.ViewGroup;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

class ag
implements ai {
    private static LayoutTransition a;
    private static Field b;
    private static boolean c;
    private static Method d;
    private static boolean e;

    ag() {
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private static void a(LayoutTransition layoutTransition) {
        String string2;
        block7 : {
            if (!e) {
                block6 : {
                    try {
                        d = LayoutTransition.class.getDeclaredMethod("cancel", new Class[0]);
                        d.setAccessible(true);
                        break block6;
                    }
                    catch (NoSuchMethodException noSuchMethodException) {}
                    Log.i((String)"ViewGroupUtilsApi14", (String)"Failed to access cancel method by reflection");
                }
                e = true;
            }
            if (d == null) return;
            try {
                d.invoke((Object)layoutTransition, new Object[0]);
                return;
            }
            catch (IllegalAccessException illegalAccessException) {}
            string2 = "Failed to access cancel method by reflection";
            break block7;
            catch (InvocationTargetException invocationTargetException) {}
            string2 = "Failed to invoke cancel method by reflection";
        }
        Log.i((String)"ViewGroupUtilsApi14", (String)string2);
    }

    @Override
    public ae a(ViewGroup viewGroup) {
        return ac.a(viewGroup);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public void a(ViewGroup var1_1, boolean var2_2) {
        block16 : {
            block14 : {
                block17 : {
                    block15 : {
                        var5_3 = ag.a;
                        var4_7 = false;
                        var3_8 = false;
                        if (var5_3 == null) {
                            ag.a = new LayoutTransition(){

                                public boolean isChangingLayout() {
                                    return true;
                                }
                            };
                            ag.a.setAnimator(2, null);
                            ag.a.setAnimator(0, null);
                            ag.a.setAnimator(1, null);
                            ag.a.setAnimator(3, null);
                            ag.a.setAnimator(4, null);
                        }
                        if (!var2_2) break block15;
                        var5_3 = var1_1.getLayoutTransition();
                        if (var5_3 != null) {
                            if (var5_3.isRunning()) {
                                ag.a(var5_3);
                            }
                            if (var5_3 != ag.a) {
                                var1_1.setTag(r.a.transition_layout_save, (Object)var5_3);
                            }
                        }
                        var5_3 = ag.a;
                        break block16;
                    }
                    var1_1.setLayoutTransition(null);
                    if (!ag.c) {
                        block13 : {
                            try {
                                ag.b = ViewGroup.class.getDeclaredField("mLayoutSuppressed");
                                ag.b.setAccessible(true);
                                break block13;
                            }
                            catch (NoSuchFieldException var5_4) {}
                            Log.i((String)"ViewGroupUtilsApi14", (String)"Failed to access mLayoutSuppressed field by reflection");
                        }
                        ag.c = true;
                    }
                    var2_2 = var4_7;
                    if (ag.b == null) break block14;
                    try {
                        var2_2 = ag.b.getBoolean((Object)var1_1);
                        ** if (!var2_2) goto lbl-1000
                    }
                    catch (IllegalAccessException var5_6) {
                        var2_2 = var3_8;
                    }
lbl-1000: // 1 sources:
                    {
                        ag.b.setBoolean((Object)var1_1, false);
                    }
lbl-1000: // 2 sources:
                    {
                        break block14;
                    }
                    break block17;
                    catch (IllegalAccessException var5_5) {}
                }
                Log.i((String)"ViewGroupUtilsApi14", (String)"Failed to get mLayoutSuppressed field by reflection");
            }
            if (var2_2) {
                var1_1.requestLayout();
            }
            if ((var5_3 = (LayoutTransition)var1_1.getTag(r.a.transition_layout_save)) == null) return;
            var1_1.setTag(r.a.transition_layout_save, null);
        }
        var1_1.setLayoutTransition(var5_3);
    }

}

