/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.animation.Animator
 *  android.animation.Animator$AnimatorListener
 *  android.animation.AnimatorListenerAdapter
 *  android.animation.TimeInterpolator
 *  android.animation.ValueAnimator
 *  android.animation.ValueAnimator$AnimatorUpdateListener
 *  android.content.res.ColorStateList
 *  android.graphics.Paint
 *  android.graphics.PorterDuff
 *  android.graphics.PorterDuff$Mode
 *  android.graphics.Rect
 *  android.graphics.drawable.Drawable
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.view.View
 *  android.view.ViewPropertyAnimator
 *  android.view.ViewTreeObserver
 *  android.view.ViewTreeObserver$OnPreDrawListener
 *  android.view.animation.Interpolator
 */
package android.support.design.widget;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.TimeInterpolator;
import android.animation.ValueAnimator;
import android.content.res.ColorStateList;
import android.graphics.Paint;
import android.graphics.PorterDuff;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.support.design.widget.h;
import android.support.design.widget.i;
import android.support.design.widget.k;
import android.support.design.widget.q;
import android.support.v4.view.s;
import android.view.View;
import android.view.ViewPropertyAnimator;
import android.view.ViewTreeObserver;
import android.view.animation.Interpolator;

class d {
    static final Interpolator a = android.support.design.widget.a.c;
    static final int[] j = new int[]{16842919, 16842910};
    static final int[] k = new int[]{16842908, 16842910};
    static final int[] l = new int[]{16842910};
    static final int[] m = new int[0];
    int b = 0;
    h c;
    Drawable d;
    Drawable e;
    android.support.design.widget.c f;
    Drawable g;
    float h;
    float i;
    final q n;
    final i o;
    private final k p;
    private float q;
    private final Rect r = new Rect();
    private ViewTreeObserver.OnPreDrawListener s;

    d(q q2, i i2) {
        this.n = q2;
        this.o = i2;
        this.p = new k();
        this.p.a(j, this.a(new b()));
        this.p.a(k, this.a(new b()));
        this.p.a(l, this.a(new d()));
        this.p.a(m, this.a(new a()));
        this.q = this.n.getRotation();
    }

    private ValueAnimator a(e e2) {
        ValueAnimator valueAnimator = new ValueAnimator();
        valueAnimator.setInterpolator((TimeInterpolator)a);
        valueAnimator.setDuration(100L);
        valueAnimator.addListener((Animator.AnimatorListener)e2);
        valueAnimator.addUpdateListener((ValueAnimator.AnimatorUpdateListener)e2);
        valueAnimator.setFloatValues(new float[]{0.0f, 1.0f});
        return valueAnimator;
    }

    private static ColorStateList b(int n2) {
        return new ColorStateList((int[][])new int[][]{k, j, new int[0]}, new int[]{n2, n2, 0});
    }

    private void l() {
        if (this.s == null) {
            this.s = new ViewTreeObserver.OnPreDrawListener(){

                public boolean onPreDraw() {
                    d.this.i();
                    return true;
                }
            };
        }
    }

    private boolean m() {
        if (s.u((View)this.n) && !this.n.isInEditMode()) {
            return true;
        }
        return false;
    }

    /*
     * Enabled aggressive block sorting
     */
    private void n() {
        block5 : {
            q q2;
            int n2;
            block7 : {
                block6 : {
                    if (Build.VERSION.SDK_INT != 19) break block5;
                    if (this.q % 90.0f == 0.0f) break block6;
                    int n3 = this.n.getLayerType();
                    n2 = 1;
                    if (n3 == 1) break block5;
                    q2 = this.n;
                    break block7;
                }
                if (this.n.getLayerType() == 0) break block5;
                q2 = this.n;
                n2 = 0;
            }
            q2.setLayerType(n2, null);
        }
        if (this.c != null) {
            this.c.a(- this.q);
        }
        if (this.f != null) {
            this.f.a(- this.q);
        }
    }

    float a() {
        return this.h;
    }

    final void a(float f2) {
        if (this.h != f2) {
            this.h = f2;
            this.a(f2, this.i);
        }
    }

    void a(float f2, float f3) {
        if (this.c != null) {
            this.c.a(f2, this.i + f2);
            this.e();
        }
    }

    void a(int n2) {
        if (this.e != null) {
            android.support.v4.a.a.a.a(this.e, d.b(n2));
        }
    }

    void a(ColorStateList colorStateList) {
        if (this.d != null) {
            android.support.v4.a.a.a.a(this.d, colorStateList);
        }
        if (this.f != null) {
            this.f.a(colorStateList);
        }
    }

    void a(PorterDuff.Mode mode) {
        if (this.d != null) {
            android.support.v4.a.a.a.a(this.d, mode);
        }
    }

    void a(Rect rect) {
        this.c.getPadding(rect);
    }

    void a(final c c2, final boolean bl2) {
        if (this.k()) {
            return;
        }
        this.n.animate().cancel();
        if (this.m()) {
            this.b = 1;
            this.n.animate().scaleX(0.0f).scaleY(0.0f).alpha(0.0f).setDuration(200L).setInterpolator((TimeInterpolator)android.support.design.widget.a.c).setListener((Animator.AnimatorListener)new AnimatorListenerAdapter(){
                private boolean d;

                public void onAnimationCancel(Animator animator2) {
                    this.d = true;
                }

                public void onAnimationEnd(Animator object) {
                    d.this.b = 0;
                    if (!this.d) {
                        object = d.this.n;
                        int n2 = bl2 ? 8 : 4;
                        object.a(n2, bl2);
                        if (c2 != null) {
                            c2.b();
                        }
                    }
                }

                public void onAnimationStart(Animator animator2) {
                    d.this.n.a(0, bl2);
                    this.d = false;
                }
            });
            return;
        }
        q q2 = this.n;
        int n2 = bl2 ? 8 : 4;
        q2.a(n2, bl2);
        if (c2 != null) {
            c2.b();
        }
    }

    void a(int[] arrn) {
        this.p.a(arrn);
    }

    void b() {
        this.p.a();
    }

    void b(Rect rect) {
    }

    void b(final c c2, final boolean bl2) {
        if (this.j()) {
            return;
        }
        this.n.animate().cancel();
        if (this.m()) {
            this.b = 2;
            if (this.n.getVisibility() != 0) {
                this.n.setAlpha(0.0f);
                this.n.setScaleY(0.0f);
                this.n.setScaleX(0.0f);
            }
            this.n.animate().scaleX(1.0f).scaleY(1.0f).alpha(1.0f).setDuration(200L).setInterpolator((TimeInterpolator)android.support.design.widget.a.d).setListener((Animator.AnimatorListener)new AnimatorListenerAdapter(){

                public void onAnimationEnd(Animator animator2) {
                    d.this.b = 0;
                    if (c2 != null) {
                        c2.a();
                    }
                }

                public void onAnimationStart(Animator animator2) {
                    d.this.n.a(0, bl2);
                }
            });
            return;
        }
        this.n.a(0, bl2);
        this.n.setAlpha(1.0f);
        this.n.setScaleY(1.0f);
        this.n.setScaleX(1.0f);
        if (c2 != null) {
            c2.a();
        }
    }

    final Drawable c() {
        return this.g;
    }

    void d() {
    }

    final void e() {
        Rect rect = this.r;
        this.a(rect);
        this.b(rect);
        this.o.a(rect.left, rect.top, rect.right, rect.bottom);
    }

    void f() {
        if (this.h()) {
            this.l();
            this.n.getViewTreeObserver().addOnPreDrawListener(this.s);
        }
    }

    void g() {
        if (this.s != null) {
            this.n.getViewTreeObserver().removeOnPreDrawListener(this.s);
            this.s = null;
        }
    }

    boolean h() {
        return true;
    }

    void i() {
        float f2 = this.n.getRotation();
        if (this.q != f2) {
            this.q = f2;
            this.n();
        }
    }

    boolean j() {
        int n2 = this.n.getVisibility();
        boolean bl2 = false;
        boolean bl3 = false;
        if (n2 != 0) {
            if (this.b == 2) {
                bl3 = true;
            }
            return bl3;
        }
        bl3 = bl2;
        if (this.b != 1) {
            bl3 = true;
        }
        return bl3;
    }

    boolean k() {
        int n2 = this.n.getVisibility();
        boolean bl2 = false;
        boolean bl3 = false;
        if (n2 == 0) {
            if (this.b == 1) {
                bl3 = true;
            }
            return bl3;
        }
        bl3 = bl2;
        if (this.b != 2) {
            bl3 = true;
        }
        return bl3;
    }

    private class a
    extends e {
        a() {
            super();
        }

        @Override
        protected float a() {
            return 0.0f;
        }
    }

    private class b
    extends e {
        b() {
            super();
        }

        @Override
        protected float a() {
            return d.this.h + d.this.i;
        }
    }

    static interface c {
        public void a();

        public void b();
    }

    private class d
    extends e {
        d() {
            super();
        }

        @Override
        protected float a() {
            return d.this.h;
        }
    }

    private abstract class e
    extends AnimatorListenerAdapter
    implements ValueAnimator.AnimatorUpdateListener {
        private boolean a;
        private float c;
        private float d;

        private e() {
        }

        protected abstract float a();

        public void onAnimationEnd(Animator animator2) {
            d.this.c.b(this.d);
            this.a = false;
        }

        public void onAnimationUpdate(ValueAnimator valueAnimator) {
            if (!this.a) {
                this.c = d.this.c.a();
                this.d = this.a();
                this.a = true;
            }
            d.this.c.b(this.c + (this.d - this.c) * valueAnimator.getAnimatedFraction());
        }
    }

}

