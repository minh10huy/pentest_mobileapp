/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.animation.Animator
 *  android.animation.AnimatorSet
 *  android.animation.AnimatorSet$Builder
 *  android.animation.ObjectAnimator
 *  android.animation.StateListAnimator
 *  android.animation.TimeInterpolator
 *  android.content.res.ColorStateList
 *  android.graphics.Rect
 *  android.graphics.drawable.Drawable
 *  android.graphics.drawable.InsetDrawable
 *  android.graphics.drawable.RippleDrawable
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.util.Property
 *  android.view.View
 *  android.view.animation.Interpolator
 */
package android.support.design.widget;

import android.animation.Animator;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.animation.StateListAnimator;
import android.animation.TimeInterpolator;
import android.content.res.ColorStateList;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.InsetDrawable;
import android.graphics.drawable.RippleDrawable;
import android.os.Build;
import android.support.design.widget.d;
import android.support.design.widget.h;
import android.support.design.widget.i;
import android.support.design.widget.q;
import android.util.Property;
import android.view.View;
import android.view.animation.Interpolator;
import java.util.ArrayList;

class e
extends d {
    private InsetDrawable p;

    e(q q2, i i2) {
        super(q2, i2);
    }

    @Override
    public float a() {
        return this.n.getElevation();
    }

    @Override
    void a(float f2, float f3) {
        block5 : {
            block2 : {
                block4 : {
                    block3 : {
                        if (Build.VERSION.SDK_INT != 21) break block2;
                        if (!this.n.isEnabled()) break block3;
                        this.n.setElevation(f2);
                        if (!this.n.isFocused() && !this.n.isPressed()) break block4;
                        this.n.setTranslationZ(f3);
                        break block5;
                    }
                    this.n.setElevation(0.0f);
                }
                this.n.setTranslationZ(0.0f);
                break block5;
            }
            StateListAnimator stateListAnimator = new StateListAnimator();
            AnimatorSet animatorSet = new AnimatorSet();
            animatorSet.play((Animator)ObjectAnimator.ofFloat((Object)((Object)this.n), (String)"elevation", (float[])new float[]{f2}).setDuration(0L)).with((Animator)ObjectAnimator.ofFloat((Object)((Object)this.n), (Property)View.TRANSLATION_Z, (float[])new float[]{f3}).setDuration(100L));
            animatorSet.setInterpolator((TimeInterpolator)a);
            stateListAnimator.addState(j, (Animator)animatorSet);
            animatorSet = new AnimatorSet();
            animatorSet.play((Animator)ObjectAnimator.ofFloat((Object)((Object)this.n), (String)"elevation", (float[])new float[]{f2}).setDuration(0L)).with((Animator)ObjectAnimator.ofFloat((Object)((Object)this.n), (Property)View.TRANSLATION_Z, (float[])new float[]{f3}).setDuration(100L));
            animatorSet.setInterpolator((TimeInterpolator)a);
            stateListAnimator.addState(k, (Animator)animatorSet);
            animatorSet = new AnimatorSet();
            ArrayList<ObjectAnimator> arrayList = new ArrayList<ObjectAnimator>();
            arrayList.add(ObjectAnimator.ofFloat((Object)((Object)this.n), (String)"elevation", (float[])new float[]{f2}).setDuration(0L));
            if (Build.VERSION.SDK_INT >= 22 && Build.VERSION.SDK_INT <= 24) {
                arrayList.add(ObjectAnimator.ofFloat((Object)((Object)this.n), (Property)View.TRANSLATION_Z, (float[])new float[]{this.n.getTranslationZ()}).setDuration(100L));
            }
            arrayList.add(ObjectAnimator.ofFloat((Object)((Object)this.n), (Property)View.TRANSLATION_Z, (float[])new float[]{0.0f}).setDuration(100L));
            animatorSet.playSequentially((Animator[])arrayList.toArray((T[])new ObjectAnimator[0]));
            animatorSet.setInterpolator((TimeInterpolator)a);
            stateListAnimator.addState(l, (Animator)animatorSet);
            animatorSet = new AnimatorSet();
            animatorSet.play((Animator)ObjectAnimator.ofFloat((Object)((Object)this.n), (String)"elevation", (float[])new float[]{0.0f}).setDuration(0L)).with((Animator)ObjectAnimator.ofFloat((Object)((Object)this.n), (Property)View.TRANSLATION_Z, (float[])new float[]{0.0f}).setDuration(0L));
            animatorSet.setInterpolator((TimeInterpolator)a);
            stateListAnimator.addState(m, (Animator)animatorSet);
            this.n.setStateListAnimator(stateListAnimator);
        }
        if (this.o.b()) {
            this.e();
        }
    }

    @Override
    void a(int n2) {
        if (this.e instanceof RippleDrawable) {
            ((RippleDrawable)this.e).setColor(ColorStateList.valueOf((int)n2));
            return;
        }
        super.a(n2);
    }

    @Override
    void a(Rect rect) {
        if (this.o.b()) {
            float f2 = this.o.a();
            float f3 = this.a() + this.i;
            int n2 = (int)Math.ceil(h.b(f3, f2, false));
            int n3 = (int)Math.ceil(h.a(f3, f2, false));
            rect.set(n2, n3, n2, n3);
            return;
        }
        rect.set(0, 0, 0, 0);
    }

    @Override
    void a(int[] arrn) {
    }

    @Override
    void b() {
    }

    /*
     * Enabled aggressive block sorting
     */
    @Override
    void b(Rect rect) {
        i i2;
        if (this.o.b()) {
            this.p = new InsetDrawable(this.e, rect.left, rect.top, rect.right, rect.bottom);
            i2 = this.o;
            rect = this.p;
        } else {
            i2 = this.o;
            rect = this.e;
        }
        i2.a((Drawable)rect);
    }

    @Override
    void d() {
        this.e();
    }

    @Override
    boolean h() {
        return false;
    }
}

