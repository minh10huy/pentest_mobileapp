/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.animation.Animator
 *  android.animation.Animator$AnimatorListener
 *  android.animation.AnimatorListenerAdapter
 *  android.animation.TimeInterpolator
 *  android.animation.ValueAnimator
 *  android.animation.ValueAnimator$AnimatorUpdateListener
 *  android.content.Context
 *  android.content.res.TypedArray
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Handler
 *  android.os.Handler$Callback
 *  android.os.Looper
 *  android.os.Message
 *  android.util.AttributeSet
 *  android.view.MotionEvent
 *  android.view.View
 *  android.view.ViewGroup
 *  android.view.ViewGroup$LayoutParams
 *  android.view.ViewParent
 *  android.view.accessibility.AccessibilityManager
 *  android.view.animation.Animation
 *  android.view.animation.Animation$AnimationListener
 *  android.view.animation.AnimationUtils
 *  android.view.animation.Interpolator
 *  android.widget.FrameLayout
 */
package android.support.design.widget;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.TimeInterpolator;
import android.animation.ValueAnimator;
import android.content.Context;
import android.content.res.TypedArray;
import android.os.Build;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.support.design.a;
import android.support.design.widget.CoordinatorLayout;
import android.support.design.widget.SwipeDismissBehavior;
import android.support.design.widget.j;
import android.support.v4.view.s;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.view.accessibility.AccessibilityManager;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.animation.Interpolator;
import android.widget.FrameLayout;
import java.util.List;

public abstract class b<B extends b<B>> {
    static final Handler a;
    private static final boolean d;
    final f b;
    final j.a c;
    private final ViewGroup e;
    private final c f;
    private List<a<B>> g;
    private final AccessibilityManager h;

    static {
        boolean bl2 = Build.VERSION.SDK_INT >= 16 && Build.VERSION.SDK_INT <= 19;
        d = bl2;
        a = new Handler(Looper.getMainLooper(), new Handler.Callback(){

            public boolean handleMessage(Message message) {
                switch (message.what) {
                    default: {
                        return false;
                    }
                    case 1: {
                        ((b)message.obj).b(message.arg1);
                        return true;
                    }
                    case 0: 
                }
                ((b)message.obj).b();
                return true;
            }
        });
    }

    private void d(final int n2) {
        if (Build.VERSION.SDK_INT >= 12) {
            ValueAnimator valueAnimator = new ValueAnimator();
            valueAnimator.setIntValues(new int[]{0, this.b.getHeight()});
            valueAnimator.setInterpolator((TimeInterpolator)android.support.design.widget.a.b);
            valueAnimator.setDuration(250L);
            valueAnimator.addListener((Animator.AnimatorListener)new AnimatorListenerAdapter(){

                public void onAnimationEnd(Animator animator2) {
                    b.this.c(n2);
                }

                public void onAnimationStart(Animator animator2) {
                    b.this.f.b(0, 180);
                }
            });
            valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
                private int b = 0;

                public void onAnimationUpdate(ValueAnimator valueAnimator) {
                    int n2 = (Integer)valueAnimator.getAnimatedValue();
                    if (d) {
                        s.b((View)b.this.b, n2 - this.b);
                    } else {
                        b.this.b.setTranslationY((float)n2);
                    }
                    this.b = n2;
                }
            });
            valueAnimator.start();
            return;
        }
        Animation animation = AnimationUtils.loadAnimation((Context)this.b.getContext(), (int)a.a.design_snackbar_out);
        animation.setInterpolator(android.support.design.widget.a.b);
        animation.setDuration(250L);
        animation.setAnimationListener(new Animation.AnimationListener(){

            public void onAnimationEnd(Animation animation) {
                b.this.c(n2);
            }

            public void onAnimationRepeat(Animation animation) {
            }

            public void onAnimationStart(Animation animation) {
            }
        });
        this.b.startAnimation(animation);
    }

    void a(int n2) {
        j.a().a(this.c, n2);
    }

    public boolean a() {
        return j.a().e(this.c);
    }

    final void b() {
        if (this.b.getParent() == null) {
            Object object = this.b.getLayoutParams();
            if (object instanceof CoordinatorLayout.e) {
                object = (CoordinatorLayout.e)((Object)object);
                b b2 = new b();
                b2.a(0.1f);
                b2.b(0.6f);
                b2.a(0);
                b2.a(new SwipeDismissBehavior.a(){

                    @Override
                    public void a(int n2) {
                        switch (n2) {
                            default: {
                                return;
                            }
                            case 1: 
                            case 2: {
                                j.a().c(b.this.c);
                                return;
                            }
                            case 0: 
                        }
                        j.a().d(b.this.c);
                    }

                    @Override
                    public void a(View view) {
                        view.setVisibility(8);
                        b.this.a(0);
                    }
                });
                object.a(b2);
                object.g = 80;
            }
            this.e.addView((View)this.b);
        }
        this.b.setOnAttachStateChangeListener(new d(){

            @Override
            public void a(View view) {
            }

            @Override
            public void b(View view) {
                if (b.this.a()) {
                    b.a.post(new Runnable(){

                        @Override
                        public void run() {
                            b.this.c(3);
                        }
                    });
                }
            }

        });
        if (s.u((View)this.b)) {
            if (this.e()) {
                this.c();
                return;
            }
            this.d();
            return;
        }
        this.b.setOnLayoutChangeListener(new e(){

            @Override
            public void a(View view, int n2, int n3, int n4, int n5) {
                b.this.b.setOnLayoutChangeListener(null);
                if (b.this.e()) {
                    b.this.c();
                    return;
                }
                b.this.d();
            }
        });
    }

    final void b(int n2) {
        if (this.e() && this.b.getVisibility() == 0) {
            this.d(n2);
            return;
        }
        this.c(n2);
    }

    void c() {
        if (Build.VERSION.SDK_INT >= 12) {
            final int n2 = this.b.getHeight();
            if (d) {
                s.b((View)this.b, n2);
            } else {
                this.b.setTranslationY((float)n2);
            }
            ValueAnimator valueAnimator = new ValueAnimator();
            valueAnimator.setIntValues(new int[]{n2, 0});
            valueAnimator.setInterpolator((TimeInterpolator)android.support.design.widget.a.b);
            valueAnimator.setDuration(250L);
            valueAnimator.addListener((Animator.AnimatorListener)new AnimatorListenerAdapter(){

                public void onAnimationEnd(Animator animator2) {
                    b.this.d();
                }

                public void onAnimationStart(Animator animator2) {
                    b.this.f.a(70, 180);
                }
            });
            valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
                private int c;
                {
                    this.c = n2;
                }

                public void onAnimationUpdate(ValueAnimator valueAnimator) {
                    int n22 = (Integer)valueAnimator.getAnimatedValue();
                    if (d) {
                        s.b((View)b.this.b, n22 - this.c);
                    } else {
                        b.this.b.setTranslationY((float)n22);
                    }
                    this.c = n22;
                }
            });
            valueAnimator.start();
            return;
        }
        Animation animation = AnimationUtils.loadAnimation((Context)this.b.getContext(), (int)a.a.design_snackbar_in);
        animation.setInterpolator(android.support.design.widget.a.b);
        animation.setDuration(250L);
        animation.setAnimationListener(new Animation.AnimationListener(){

            public void onAnimationEnd(Animation animation) {
                b.this.d();
            }

            public void onAnimationRepeat(Animation animation) {
            }

            public void onAnimationStart(Animation animation) {
            }
        });
        this.b.startAnimation(animation);
    }

    void c(int n2) {
        ViewParent viewParent;
        j.a().a(this.c);
        if (this.g != null) {
            for (int i2 = this.g.size() - 1; i2 >= 0; --i2) {
                this.g.get(i2).a(this, n2);
            }
        }
        if (Build.VERSION.SDK_INT < 11) {
            this.b.setVisibility(8);
        }
        if ((viewParent = this.b.getParent()) instanceof ViewGroup) {
            ((ViewGroup)viewParent).removeView((View)this.b);
        }
    }

    void d() {
        j.a().b(this.c);
        if (this.g != null) {
            for (int i2 = this.g.size() - 1; i2 >= 0; --i2) {
                this.g.get(i2).a(this);
            }
        }
    }

    boolean e() {
        return this.h.isEnabled() ^ true;
    }

    public static abstract class a<B> {
        public void a(B b2) {
        }

        public void a(B b2, int n2) {
        }
    }

    final class b
    extends SwipeDismissBehavior<f> {
        b() {
        }

        /*
         * Enabled aggressive block sorting
         */
        @Override
        public boolean a(CoordinatorLayout coordinatorLayout, f f2, MotionEvent motionEvent) {
            int n2 = motionEvent.getActionMasked();
            if (n2 != 3) {
                switch (n2) {
                    default: {
                        return super.a(coordinatorLayout, f2, motionEvent);
                    }
                    case 0: {
                        if (!coordinatorLayout.a((View)f2, (int)motionEvent.getX(), (int)motionEvent.getY())) return super.a(coordinatorLayout, f2, motionEvent);
                        j.a().c(b.this.c);
                        return super.a(coordinatorLayout, f2, motionEvent);
                    }
                    case 1: 
                }
            }
            j.a().d(b.this.c);
            return super.a(coordinatorLayout, f2, motionEvent);
        }

        @Override
        public boolean a(View view) {
            return view instanceof f;
        }
    }

    public static interface c {
        public void a(int var1, int var2);

        public void b(int var1, int var2);
    }

    static interface d {
        public void a(View var1);

        public void b(View var1);
    }

    static interface e {
        public void a(View var1, int var2, int var3, int var4, int var5);
    }

    static class f
    extends FrameLayout {
        private e a;
        private d b;

        f(Context context) {
            this(context, null);
        }

        f(Context context, AttributeSet attributeSet) {
            super(context, attributeSet);
            context = context.obtainStyledAttributes(attributeSet, a.i.SnackbarLayout);
            if (context.hasValue(a.i.SnackbarLayout_elevation)) {
                s.a((View)this, (float)context.getDimensionPixelSize(a.i.SnackbarLayout_elevation, 0));
            }
            context.recycle();
            this.setClickable(true);
        }

        protected void onAttachedToWindow() {
            super.onAttachedToWindow();
            if (this.b != null) {
                this.b.a((View)this);
            }
            s.m((View)this);
        }

        protected void onDetachedFromWindow() {
            super.onDetachedFromWindow();
            if (this.b != null) {
                this.b.b((View)this);
            }
        }

        protected void onLayout(boolean bl2, int n2, int n3, int n4, int n5) {
            super.onLayout(bl2, n2, n3, n4, n5);
            if (this.a != null) {
                this.a.a((View)this, n2, n3, n4, n5);
            }
        }

        void setOnAttachStateChangeListener(d d2) {
            this.b = d2;
        }

        void setOnLayoutChangeListener(e e2) {
            this.a = e2;
        }
    }

}

