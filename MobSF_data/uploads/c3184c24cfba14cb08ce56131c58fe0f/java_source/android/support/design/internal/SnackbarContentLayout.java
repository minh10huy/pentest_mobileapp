/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.res.Resources
 *  android.content.res.TypedArray
 *  android.text.Layout
 *  android.util.AttributeSet
 *  android.view.View
 *  android.view.View$MeasureSpec
 *  android.view.ViewPropertyAnimator
 *  android.widget.Button
 *  android.widget.LinearLayout
 *  android.widget.TextView
 */
package android.support.design.internal;

import android.content.Context;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.support.design.a;
import android.support.design.widget.b;
import android.support.v4.view.s;
import android.text.Layout;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewPropertyAnimator;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;

public class SnackbarContentLayout
extends LinearLayout
implements b.c {
    private TextView a;
    private Button b;
    private int c;
    private int d;

    public SnackbarContentLayout(Context context) {
        this(context, null);
    }

    public SnackbarContentLayout(Context context, AttributeSet attributeSet) {
        super(context, attributeSet);
        context = context.obtainStyledAttributes(attributeSet, a.i.SnackbarLayout);
        this.c = context.getDimensionPixelSize(a.i.SnackbarLayout_android_maxWidth, -1);
        this.d = context.getDimensionPixelSize(a.i.SnackbarLayout_maxActionInlineWidth, -1);
        context.recycle();
    }

    private static void a(View view, int n2, int n3) {
        if (s.p(view)) {
            s.a(view, s.f(view), n2, s.g(view), n3);
            return;
        }
        view.setPadding(view.getPaddingLeft(), n2, view.getPaddingRight(), n3);
    }

    private boolean a(int n2, int n3, int n4) {
        boolean bl2;
        if (n2 != this.getOrientation()) {
            this.setOrientation(n2);
            bl2 = true;
        } else {
            bl2 = false;
        }
        if (this.a.getPaddingTop() != n3 || this.a.getPaddingBottom() != n4) {
            SnackbarContentLayout.a((View)this.a, n3, n4);
            bl2 = true;
        }
        return bl2;
    }

    @Override
    public void a(int n2, int n3) {
        this.a.setAlpha(0.0f);
        ViewPropertyAnimator viewPropertyAnimator = this.a.animate().alpha(1.0f);
        long l2 = n3;
        viewPropertyAnimator = viewPropertyAnimator.setDuration(l2);
        long l3 = n2;
        viewPropertyAnimator.setStartDelay(l3).start();
        if (this.b.getVisibility() == 0) {
            this.b.setAlpha(0.0f);
            this.b.animate().alpha(1.0f).setDuration(l2).setStartDelay(l3).start();
        }
    }

    @Override
    public void b(int n2, int n3) {
        this.a.setAlpha(1.0f);
        ViewPropertyAnimator viewPropertyAnimator = this.a.animate().alpha(0.0f);
        long l2 = n3;
        viewPropertyAnimator = viewPropertyAnimator.setDuration(l2);
        long l3 = n2;
        viewPropertyAnimator.setStartDelay(l3).start();
        if (this.b.getVisibility() == 0) {
            this.b.setAlpha(1.0f);
            this.b.animate().alpha(0.0f).setDuration(l2).setStartDelay(l3).start();
        }
    }

    public Button getActionView() {
        return this.b;
    }

    public TextView getMessageView() {
        return this.a;
    }

    protected void onFinishInflate() {
        super.onFinishInflate();
        this.a = (TextView)this.findViewById(a.e.snackbar_text);
        this.b = (Button)this.findViewById(a.e.snackbar_action);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    protected void onMeasure(int var1_1, int var2_2) {
        super.onMeasure(var1_1, var2_2);
        var3_3 = var1_1;
        if (this.c > 0) {
            var3_3 = var1_1;
            if (this.getMeasuredWidth() > this.c) {
                var3_3 = View.MeasureSpec.makeMeasureSpec((int)this.c, (int)1073741824);
                super.onMeasure(var3_3, var2_2);
            }
        }
        var5_4 = this.getResources().getDimensionPixelSize(a.c.design_snackbar_padding_vertical_2lines);
        var6_5 = this.getResources().getDimensionPixelSize(a.c.design_snackbar_padding_vertical);
        var1_1 = this.a.getLayout().getLineCount();
        var4_6 = 1;
        var1_1 = var1_1 > 1 ? 1 : 0;
        if (var1_1 == 0) ** GOTO lbl-1000
        if (this.d > 0) {
            ** if (this.b.getMeasuredWidth() <= this.d) goto lbl-1000
lbl-1000: // 1 sources:
            {
                if (this.a((int)1, (int)var5_4, (int)(var5_4 - var6_5)) == false) return;
                var1_1 = var4_6;
                ** GOTO lbl26
            }
        }
        ** GOTO lbl-1000
lbl-1000: // 2 sources:
        {
            if (var1_1 != 0) lbl-1000: // 2 sources:
            {
                var1_1 = var5_4;
            } else {
                var1_1 = var6_5;
            }
            if (this.a(0, var1_1, var1_1) == false) return;
            var1_1 = var4_6;
        }
lbl26: // 2 sources:
        if (var1_1 == 0) return;
        super.onMeasure(var3_3, var2_2);
    }
}

