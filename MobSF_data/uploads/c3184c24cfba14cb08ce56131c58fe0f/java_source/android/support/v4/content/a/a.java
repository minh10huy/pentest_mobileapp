/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.res.Resources
 *  android.content.res.TypedArray
 *  android.util.AttributeSet
 *  android.util.Base64
 *  android.util.Xml
 *  org.xmlpull.v1.XmlPullParser
 *  org.xmlpull.v1.XmlPullParserException
 */
package android.support.v4.content.a;

import android.content.res.Resources;
import android.content.res.TypedArray;
import android.support.a.a;
import android.util.AttributeSet;
import android.util.Base64;
import android.util.Xml;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;

public class a {
    public static a a(XmlPullParser xmlPullParser, Resources resources) {
        int n2;
        while ((n2 = xmlPullParser.next()) != 2 && n2 != 1) {
        }
        if (n2 == 2) {
            return a.b(xmlPullParser, resources);
        }
        throw new XmlPullParserException("No start tag found");
    }

    public static List<List<byte[]>> a(Resources resources, int n2) {
        ArrayList<List<byte[]>> arrayList = null;
        ArrayList<List<byte[]>> arrayList2 = null;
        if (n2 != 0) {
            TypedArray typedArray = resources.obtainTypedArray(n2);
            arrayList = arrayList2;
            if (typedArray.length() > 0) {
                arrayList2 = new ArrayList<List<byte[]>>();
                boolean bl2 = typedArray.getResourceId(0, 0) != 0;
                if (bl2) {
                    n2 = 0;
                    do {
                        arrayList = arrayList2;
                        if (n2 < typedArray.length()) {
                            arrayList2.add(a.a(resources.getStringArray(typedArray.getResourceId(n2, 0))));
                            ++n2;
                            continue;
                        }
                        break;
                    } while (true);
                } else {
                    arrayList2.add(a.a(resources.getStringArray(n2)));
                    arrayList = arrayList2;
                }
            }
            typedArray.recycle();
        }
        if (arrayList != null) {
            return arrayList;
        }
        return Collections.emptyList();
    }

    private static List<byte[]> a(String[] arrstring) {
        ArrayList<byte[]> arrayList = new ArrayList<byte[]>();
        int n2 = arrstring.length;
        for (int i2 = 0; i2 < n2; ++i2) {
            arrayList.add(Base64.decode((String)arrstring[i2], (int)0));
        }
        return arrayList;
    }

    private static void a(XmlPullParser xmlPullParser) {
        int n2 = 1;
        block4 : while (n2 > 0) {
            switch (xmlPullParser.next()) {
                default: {
                    continue block4;
                }
                case 3: {
                    --n2;
                    continue block4;
                }
                case 2: 
            }
            ++n2;
        }
    }

    private static a b(XmlPullParser xmlPullParser, Resources resources) {
        xmlPullParser.require(2, null, "font-family");
        if (xmlPullParser.getName().equals("font-family")) {
            return a.c(xmlPullParser, resources);
        }
        a.a(xmlPullParser);
        return null;
    }

    private static a c(XmlPullParser xmlPullParser, Resources resources) {
        Object object = resources.obtainAttributes(Xml.asAttributeSet((XmlPullParser)xmlPullParser), a.b.FontFamily);
        String string2 = object.getString(a.b.FontFamily_fontProviderAuthority);
        String string3 = object.getString(a.b.FontFamily_fontProviderPackage);
        String string4 = object.getString(a.b.FontFamily_fontProviderQuery);
        int n2 = object.getResourceId(a.b.FontFamily_fontProviderCerts, 0);
        int n3 = object.getInteger(a.b.FontFamily_fontProviderFetchStrategy, 1);
        int n4 = object.getInteger(a.b.FontFamily_fontProviderFetchTimeout, 500);
        object.recycle();
        if (string2 != null && string3 != null && string4 != null) {
            while (xmlPullParser.next() != 3) {
                a.a(xmlPullParser);
            }
            return new d(new android.support.v4.f.a(string2, string3, string4, a.a(resources, n2)), n3, n4);
        }
        object = new ArrayList();
        while (xmlPullParser.next() != 3) {
            if (xmlPullParser.getEventType() != 2) continue;
            if (xmlPullParser.getName().equals("font")) {
                object.add(a.d(xmlPullParser, resources));
                continue;
            }
            a.a(xmlPullParser);
        }
        if (object.isEmpty()) {
            return null;
        }
        return new b(object.toArray(new c[object.size()]));
    }

    private static c d(XmlPullParser xmlPullParser, Resources resources) {
        int n2 = (resources = resources.obtainAttributes(Xml.asAttributeSet((XmlPullParser)xmlPullParser), a.b.FontFamilyFont)).hasValue(a.b.FontFamilyFont_fontWeight) ? a.b.FontFamilyFont_fontWeight : a.b.FontFamilyFont_android_fontWeight;
        int n3 = resources.getInt(n2, 400);
        n2 = resources.hasValue(a.b.FontFamilyFont_fontStyle) ? a.b.FontFamilyFont_fontStyle : a.b.FontFamilyFont_android_fontStyle;
        n2 = resources.getInt(n2, 0);
        boolean bl2 = true;
        if (1 != n2) {
            bl2 = false;
        }
        n2 = resources.hasValue(a.b.FontFamilyFont_font) ? a.b.FontFamilyFont_font : a.b.FontFamilyFont_android_font;
        int n4 = resources.getResourceId(n2, 0);
        String string2 = resources.getString(n2);
        resources.recycle();
        while (xmlPullParser.next() != 3) {
            a.a(xmlPullParser);
        }
        return new c(string2, n3, bl2, n4);
    }

    public static interface a {
    }

    public static final class b
    implements a {
        private final c[] a;

        public b(c[] arrc) {
            this.a = arrc;
        }

        public c[] a() {
            return this.a;
        }
    }

    public static final class c {
        private final String a;
        private int b;
        private boolean c;
        private int d;

        public c(String string2, int n2, boolean bl2, int n3) {
            this.a = string2;
            this.b = n2;
            this.c = bl2;
            this.d = n3;
        }

        public String a() {
            return this.a;
        }

        public int b() {
            return this.b;
        }

        public boolean c() {
            return this.c;
        }

        public int d() {
            return this.d;
        }
    }

    public static final class d
    implements a {
        private final android.support.v4.f.a a;
        private final int b;
        private final int c;

        public d(android.support.v4.f.a a2, int n2, int n3) {
            this.a = a2;
            this.c = n2;
            this.b = n3;
        }

        public android.support.v4.f.a a() {
            return this.a;
        }

        public int b() {
            return this.c;
        }

        public int c() {
            return this.b;
        }
    }

}

