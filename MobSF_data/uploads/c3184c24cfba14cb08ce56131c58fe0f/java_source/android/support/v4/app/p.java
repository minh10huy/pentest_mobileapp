/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.animation.Animator
 *  android.animation.Animator$AnimatorListener
 *  android.animation.AnimatorInflater
 *  android.animation.AnimatorListenerAdapter
 *  android.animation.AnimatorSet
 *  android.animation.PropertyValuesHolder
 *  android.animation.ValueAnimator
 *  android.content.Context
 *  android.content.res.Configuration
 *  android.content.res.Resources
 *  android.content.res.Resources$NotFoundException
 *  android.content.res.TypedArray
 *  android.graphics.Paint
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Bundle
 *  android.os.Handler
 *  android.os.Looper
 *  android.os.Parcelable
 *  android.util.AttributeSet
 *  android.util.Log
 *  android.util.SparseArray
 *  android.view.LayoutInflater
 *  android.view.LayoutInflater$Factory2
 *  android.view.Menu
 *  android.view.MenuInflater
 *  android.view.MenuItem
 *  android.view.View
 *  android.view.ViewGroup
 *  android.view.animation.AccelerateInterpolator
 *  android.view.animation.AlphaAnimation
 *  android.view.animation.Animation
 *  android.view.animation.Animation$AnimationListener
 *  android.view.animation.AnimationSet
 *  android.view.animation.AnimationUtils
 *  android.view.animation.DecelerateInterpolator
 *  android.view.animation.Interpolator
 *  android.view.animation.ScaleAnimation
 *  android.view.animation.Transformation
 */
package android.support.v4.app;

import android.animation.Animator;
import android.animation.AnimatorInflater;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.PropertyValuesHolder;
import android.animation.ValueAnimator;
import android.content.Context;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.graphics.Paint;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.Parcelable;
import android.support.v4.app.ae;
import android.support.v4.app.j;
import android.support.v4.app.l;
import android.support.v4.app.n;
import android.support.v4.app.o;
import android.support.v4.app.q;
import android.support.v4.app.r;
import android.support.v4.app.s;
import android.support.v4.app.u;
import android.support.v4.app.v;
import android.util.AttributeSet;
import android.util.Log;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.AccelerateInterpolator;
import android.view.animation.AlphaAnimation;
import android.view.animation.Animation;
import android.view.animation.AnimationSet;
import android.view.animation.AnimationUtils;
import android.view.animation.DecelerateInterpolator;
import android.view.animation.Interpolator;
import android.view.animation.ScaleAnimation;
import android.view.animation.Transformation;
import java.io.FileDescriptor;
import java.io.PrintWriter;
import java.io.Serializable;
import java.io.Writer;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.CopyOnWriteArrayList;

final class p
extends o
implements LayoutInflater.Factory2 {
    static final Interpolator F = new DecelerateInterpolator(2.5f);
    static final Interpolator G = new DecelerateInterpolator(1.5f);
    static final Interpolator H = new AccelerateInterpolator(2.5f);
    static final Interpolator I = new AccelerateInterpolator(1.5f);
    static boolean a = false;
    static Field q;
    Bundle A = null;
    SparseArray<Parcelable> B = null;
    ArrayList<i> C;
    q D;
    Runnable E = new Runnable(){

        @Override
        public void run() {
            p.this.g();
        }
    };
    private final CopyOnWriteArrayList<android.support.v4.g.j<o.a, Boolean>> J = new CopyOnWriteArrayList();
    ArrayList<g> b;
    boolean c;
    int d = 0;
    final ArrayList<j> e = new ArrayList();
    SparseArray<j> f;
    ArrayList<android.support.v4.app.d> g;
    ArrayList<j> h;
    ArrayList<android.support.v4.app.d> i;
    ArrayList<Integer> j;
    ArrayList<o.b> k;
    int l = 0;
    n m;
    l n;
    j o;
    j p;
    boolean r;
    boolean s;
    boolean t;
    boolean u;
    String v;
    boolean w;
    ArrayList<android.support.v4.app.d> x;
    ArrayList<Boolean> y;
    ArrayList<j> z;

    p() {
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private void A() {
        synchronized (this) {
            ArrayList<i> arrayList = this.C;
            boolean bl2 = false;
            boolean bl3 = arrayList != null && !this.C.isEmpty();
            boolean bl4 = bl2;
            if (this.b != null) {
                bl4 = bl2;
                if (this.b.size() == 1) {
                    bl4 = true;
                }
            }
            if (bl3 || bl4) {
                this.m.h().removeCallbacks(this.E);
                this.m.h().post(this.E);
            }
            return;
        }
    }

    private void B() {
        this.c = false;
        this.y.clear();
        this.x.clear();
    }

    private void C() {
        if (this.C != null) {
            while (!this.C.isEmpty()) {
                this.C.remove(0).d();
            }
        }
    }

    private void D() {
        Object object = this.f;
        int n2 = object == null ? 0 : this.f.size();
        for (int i2 = 0; i2 < n2; ++i2) {
            object = (j)this.f.valueAt(i2);
            if (object == null) continue;
            if (object.ab() != null) {
                int n3 = object.ad();
                View view = object.ab();
                Animation animation = view.getAnimation();
                if (animation != null) {
                    animation.cancel();
                    view.clearAnimation();
                }
                object.a((View)null);
                this.a((j)object, n3, 0, 0, false);
                continue;
            }
            if (object.ac() == null) continue;
            object.ac().end();
        }
    }

    private void E() {
        if (this.f != null) {
            for (int i2 = this.f.size() - 1; i2 >= 0; --i2) {
                if (this.f.valueAt(i2) != null) continue;
                this.f.delete(this.f.keyAt(i2));
            }
        }
    }

    private int a(ArrayList<android.support.v4.app.d> arrayList, ArrayList<Boolean> arrayList2, int n2, int n3, android.support.v4.g.b<j> b2) {
        int n4 = n3;
        for (int i2 = n3 - 1; i2 >= n2; --i2) {
            android.support.v4.app.d d2 = arrayList.get(i2);
            boolean bl2 = arrayList2.get(i2);
            boolean bl3 = d2.g() && !d2.a(arrayList, i2 + 1, n3);
            int n5 = n4;
            if (bl3) {
                if (this.C == null) {
                    this.C = new ArrayList();
                }
                i i3 = new i(d2, bl2);
                this.C.add(i3);
                d2.a(i3);
                if (bl2) {
                    d2.f();
                } else {
                    d2.b(false);
                }
                n5 = n4 - 1;
                if (i2 != n5) {
                    arrayList.remove(i2);
                    arrayList.add(n5, d2);
                }
                this.b(b2);
            }
            n4 = n5;
        }
        return n4;
    }

    static c a(Context context, float f2, float f3) {
        context = new AlphaAnimation(f2, f3);
        context.setInterpolator(G);
        context.setDuration(220L);
        return new c((Animation)context);
    }

    static c a(Context context, float f2, float f3, float f4, float f5) {
        context = new AnimationSet(false);
        ScaleAnimation scaleAnimation = new ScaleAnimation(f2, f3, f2, f3, 1, 0.5f, 1, 0.5f);
        scaleAnimation.setInterpolator(F);
        scaleAnimation.setDuration(220L);
        context.addAnimation((Animation)scaleAnimation);
        scaleAnimation = new AlphaAnimation(f4, f5);
        scaleAnimation.setInterpolator(G);
        scaleAnimation.setDuration(220L);
        context.addAnimation((Animation)scaleAnimation);
        return new c((Animation)context);
    }

    private static Animation.AnimationListener a(Animation object) {
        void var1_3;
        try {
            if (q == null) {
                q = Animation.class.getDeclaredField("mListener");
                q.setAccessible(true);
            }
            object = (Animation.AnimationListener)q.get(object);
            return object;
        }
        catch (IllegalAccessException illegalAccessException) {
            object = "Cannot access Animation's mListener field";
        }
        catch (NoSuchFieldException noSuchFieldException) {
            object = "No field with the name mListener is found in Animation class";
        }
        Log.e((String)"FragmentManager", (String)object, (Throwable)var1_3);
        return null;
    }

    private void a(android.support.v4.app.d d2, boolean bl2, boolean bl3, boolean bl4) {
        if (bl2) {
            d2.b(bl4);
        } else {
            d2.f();
        }
        Object object = new ArrayList<android.support.v4.app.d>(1);
        ArrayList<Boolean> arrayList = new ArrayList<Boolean>(1);
        object.add(d2);
        arrayList.add(bl2);
        if (bl3) {
            v.a(this, object, arrayList, 0, 1, true);
        }
        if (bl4) {
            this.a(this.l, true);
        }
        if (this.f != null) {
            int n2 = this.f.size();
            for (int i2 = 0; i2 < n2; ++i2) {
                object = (j)this.f.valueAt(i2);
                if (object == null || object.S == null || !object.Y || !d2.b(object.I)) continue;
                if (object.aa > 0.0f) {
                    object.S.setAlpha(object.aa);
                }
                if (bl4) {
                    object.aa = 0.0f;
                    continue;
                }
                object.aa = -1.0f;
                object.Y = false;
            }
        }
    }

    private void a(final j j2, c c2, int n2) {
        final View view = j2.S;
        final ViewGroup viewGroup = j2.R;
        viewGroup.startViewTransition(view);
        j2.b(n2);
        if (c2.a != null) {
            e e2 = new e(c2.a, viewGroup, view);
            j2.a(j2.S);
            e2.setAnimationListener((Animation.AnimationListener)new b(p.a((Animation)e2)){

                @Override
                public void onAnimationEnd(Animation animation) {
                    super.onAnimationEnd(animation);
                    viewGroup.post(new Runnable(){

                        @Override
                        public void run() {
                            if (j2.ab() != null) {
                                j2.a((View)null);
                                p.this.a(j2, j2.ad(), 0, 0, false);
                            }
                        }
                    });
                }

            });
            p.b(view, c2);
            j2.S.startAnimation((Animation)e2);
            return;
        }
        Animator animator2 = c2.b;
        j2.a(c2.b);
        animator2.addListener((Animator.AnimatorListener)new AnimatorListenerAdapter(){

            public void onAnimationEnd(Animator animator2) {
                viewGroup.endViewTransition(view);
                animator2 = j2.ac();
                j2.a((Animator)null);
                if (animator2 != null && viewGroup.indexOfChild(view) < 0) {
                    p.this.a(j2, j2.ad(), 0, 0, false);
                }
            }
        });
        animator2.setTarget((Object)j2.S);
        p.b(j2.S, c2);
        animator2.start();
    }

    private static void a(q iterator) {
        if (iterator == null) {
            return;
        }
        List<j> list = iterator.a();
        if (list != null) {
            list = list.iterator();
            while (list.hasNext()) {
                ((j)list.next()).N = true;
            }
        }
        if ((iterator = iterator.b()) != null) {
            iterator = iterator.iterator();
            while (iterator.hasNext()) {
                p.a((q)iterator.next());
            }
        }
    }

    private void a(android.support.v4.g.b<j> b2) {
        int n2 = b2.size();
        for (int i2 = 0; i2 < n2; ++i2) {
            j j2 = b2.b(i2);
            if (j2.u) continue;
            View view = j2.w();
            j2.aa = view.getAlpha();
            view.setAlpha(0.0f);
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private void a(RuntimeException var1_1) {
        Log.e((String)"FragmentManager", (String)var1_1.getMessage());
        Log.e((String)"FragmentManager", (String)"Activity state:");
        var2_2 = new PrintWriter(new android.support.v4.g.e("FragmentManager"));
        if (this.m == null) ** GOTO lbl8
        try {
            this.m.a("  ", null, var2_2, new String[0]);
            throw var1_1;
lbl8: // 1 sources:
            this.a("  ", null, var2_2, new String[0]);
            throw var1_1;
        }
        catch (Exception var2_3) {
            Log.e((String)"FragmentManager", (String)"Failed dumping state", (Throwable)var2_3);
            throw var1_1;
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    private void a(ArrayList<android.support.v4.app.d> var1_1, ArrayList<Boolean> var2_2) {
        var3_3 = this.C == null ? 0 : this.C.size();
        var5_4 = 0;
        var4_5 = var3_3;
        var3_3 = var5_4;
        while (var3_3 < var4_5) {
            block6 : {
                block5 : {
                    var7_7 = this.C.get(var3_3);
                    if (var1_1 != null && !i.a(var7_7) && (var5_4 = var1_1.indexOf(i.b(var7_7))) != -1 && var2_2.get(var5_4).booleanValue()) ** GOTO lbl-1000
                    if (var7_7.c()) break block5;
                    var6_6 = var3_3;
                    var5_4 = var4_5;
                    if (var1_1 == null) break block6;
                    var6_6 = var3_3;
                    var5_4 = var4_5;
                    if (!i.b(var7_7).a(var1_1, 0, var1_1.size())) break block6;
                }
                this.C.remove(var3_3);
                --var3_3;
                --var4_5;
                ** if (var1_1 == null || i.a((i)var7_7) || (var5_4 = var1_1.indexOf((Object)i.b((i)var7_7))) == -1 || !var2_2.get((int)var5_4).booleanValue()) goto lbl-1000
lbl-1000: // 2 sources:
                {
                    var7_7.e();
                    var6_6 = var3_3;
                    var5_4 = var4_5;
                    ** GOTO lbl28
                }
lbl-1000: // 1 sources:
                {
                    var7_7.d();
                    var5_4 = var4_5;
                    var6_6 = var3_3;
                }
            }
            var3_3 = var6_6 + 1;
            var4_5 = var5_4;
        }
    }

    private void a(ArrayList<android.support.v4.app.d> arrayList, ArrayList<Boolean> arrayList2, int n2, int n3) {
        int n4;
        int n5 = n2;
        boolean bl2 = arrayList.get((int)n5).t;
        if (this.z == null) {
            this.z = new ArrayList();
        } else {
            this.z.clear();
        }
        this.z.addAll(this.e);
        Object object = this.x();
        boolean bl3 = false;
        for (n4 = n5; n4 < n3; ++n4) {
            android.support.v4.app.d d2 = arrayList.get(n4);
            object = arrayList2.get(n4) == false ? d2.a(this.z, (j)object) : d2.b(this.z, (j)object);
            if (!bl3 && !d2.i) {
                bl3 = false;
                continue;
            }
            bl3 = true;
        }
        this.z.clear();
        if (!bl2) {
            v.a(this, arrayList, arrayList2, n2, n3, false);
        }
        p.b(arrayList, arrayList2, n2, n3);
        if (bl2) {
            object = new android.support.v4.g.b();
            this.b((android.support.v4.g.b<j>)object);
            n4 = this.a(arrayList, arrayList2, n2, n3, (android.support.v4.g.b<j>)object);
            this.a((android.support.v4.g.b<j>)object);
        } else {
            n4 = n3;
        }
        int n6 = n5;
        if (n4 != n5) {
            n6 = n5;
            if (bl2) {
                v.a(this, arrayList, arrayList2, n2, n4, true);
                this.a(this.l, true);
                n6 = n5;
            }
        }
        while (n6 < n3) {
            object = arrayList.get(n6);
            if (arrayList2.get(n6).booleanValue() && object.m >= 0) {
                this.c(object.m);
                object.m = -1;
            }
            object.b();
            ++n6;
        }
        if (bl3) {
            this.i();
        }
    }

    static boolean a(Animator object) {
        block4 : {
            block3 : {
                if (object == null) {
                    return false;
                }
                if (!(object instanceof ValueAnimator)) break block3;
                object = ((ValueAnimator)object).getValues();
                for (int i2 = 0; i2 < ((PropertyValuesHolder[])object).length; ++i2) {
                    if (!"alpha".equals(object[i2].getPropertyName())) continue;
                    return true;
                }
                break block4;
            }
            if (!(object instanceof AnimatorSet)) break block4;
            object = ((AnimatorSet)object).getChildAnimations();
            for (int i3 = 0; i3 < object.size(); ++i3) {
                if (!p.a((Animator)object.get(i3))) continue;
                return true;
            }
        }
        return false;
    }

    static boolean a(c object) {
        if (object.a instanceof AlphaAnimation) {
            return true;
        }
        if (object.a instanceof AnimationSet) {
            object = ((AnimationSet)object.a).getAnimations();
            for (int i2 = 0; i2 < object.size(); ++i2) {
                if (!(object.get(i2) instanceof AlphaAnimation)) continue;
                return true;
            }
            return false;
        }
        return p.a(object.b);
    }

    static boolean a(View view, c c2) {
        boolean bl2;
        boolean bl3 = bl2 = false;
        if (view != null) {
            if (c2 == null) {
                return false;
            }
            bl3 = bl2;
            if (Build.VERSION.SDK_INT >= 19) {
                bl3 = bl2;
                if (view.getLayerType() == 0) {
                    bl3 = bl2;
                    if (android.support.v4.view.s.o(view)) {
                        bl3 = bl2;
                        if (p.a(c2)) {
                            bl3 = true;
                        }
                    }
                }
            }
        }
        return bl3;
    }

    private boolean a(String string2, int n2, int n3) {
        boolean bl2;
        o o2;
        this.g();
        this.c(true);
        if (this.p != null && n2 < 0 && string2 == null && (o2 = this.p.s()) != null && o2.c()) {
            return true;
        }
        bl2 = this.a(this.x, this.y, string2, n2, n3);
        if (bl2) {
            this.c = true;
            try {
                this.b(this.x, this.y);
            }
            finally {
                this.B();
            }
        }
        this.h();
        this.E();
        return bl2;
    }

    public static int b(int n2, boolean bl2) {
        if (n2 != 4097) {
            if (n2 != 4099) {
                if (n2 != 8194) {
                    return -1;
                }
                if (bl2) {
                    return 3;
                }
                return 4;
            }
            if (bl2) {
                return 5;
            }
            return 6;
        }
        if (bl2) {
            return 1;
        }
        return 2;
    }

    private void b(android.support.v4.g.b<j> b2) {
        if (this.l < 1) {
            return;
        }
        int n2 = Math.min(this.l, 4);
        int n3 = this.e.size();
        for (int i2 = 0; i2 < n3; ++i2) {
            j j2 = this.e.get(i2);
            if (j2.k >= n2) continue;
            this.a(j2, n2, j2.W(), j2.X(), false);
            if (j2.S == null || j2.K || !j2.Y) continue;
            b2.add(j2);
        }
    }

    private static void b(View view, c c2) {
        if (view != null) {
            if (c2 == null) {
                return;
            }
            if (p.a(view, c2)) {
                if (c2.b != null) {
                    c2.b.addListener((Animator.AnimatorListener)new d(view));
                    return;
                }
                Animation.AnimationListener animationListener = p.a(c2.a);
                view.setLayerType(2, null);
                c2.a.setAnimationListener((Animation.AnimationListener)new a(view, animationListener));
            }
        }
    }

    private void b(ArrayList<android.support.v4.app.d> arrayList, ArrayList<Boolean> arrayList2) {
        if (arrayList != null) {
            if (arrayList.isEmpty()) {
                return;
            }
            if (arrayList2 != null && arrayList.size() == arrayList2.size()) {
                this.a(arrayList, arrayList2);
                int n2 = arrayList.size();
                int n3 = 0;
                int n4 = 0;
                while (n3 < n2) {
                    int n5 = n3;
                    int n6 = n4;
                    if (!arrayList.get((int)n3).t) {
                        if (n4 != n3) {
                            this.a(arrayList, arrayList2, n4, n3);
                        }
                        n6 = n4 = n3 + 1;
                        if (arrayList2.get(n3).booleanValue()) {
                            do {
                                n6 = n4;
                                if (n4 >= n2) break;
                                n6 = n4;
                                if (!arrayList2.get(n4).booleanValue()) break;
                                n6 = n4++;
                            } while (!arrayList.get((int)n4).t);
                        }
                        this.a(arrayList, arrayList2, n3, n6);
                        n5 = n6 - 1;
                    }
                    n3 = n5 + 1;
                    n4 = n6;
                }
                if (n4 != n2) {
                    this.a(arrayList, arrayList2, n4, n2);
                }
                return;
            }
            throw new IllegalStateException("Internal error with the back stack records");
        }
    }

    private static void b(ArrayList<android.support.v4.app.d> arrayList, ArrayList<Boolean> arrayList2, int n2, int n3) {
        while (n2 < n3) {
            android.support.v4.app.d d2 = arrayList.get(n2);
            boolean bl2 = arrayList2.get(n2);
            boolean bl3 = true;
            if (bl2) {
                d2.a(-1);
                if (n2 != n3 - 1) {
                    bl3 = false;
                }
                d2.b(bl3);
            } else {
                d2.a(1);
                d2.f();
            }
            ++n2;
        }
    }

    private void c(boolean bl2) {
        if (!this.c) {
            if (this.m != null) {
                if (Looper.myLooper() == this.m.h().getLooper()) {
                    if (!bl2) {
                        this.z();
                    }
                    if (this.x == null) {
                        this.x = new ArrayList();
                        this.y = new ArrayList();
                    }
                    this.c = true;
                    try {
                        this.a((ArrayList<android.support.v4.app.d>)null, (ArrayList<Boolean>)null);
                        return;
                    }
                    finally {
                        this.c = false;
                    }
                }
                throw new IllegalStateException("Must be called from main thread of fragment host");
            }
            throw new IllegalStateException("Fragment host has been destroyed");
        }
        throw new IllegalStateException("FragmentManager is already executing transactions");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private boolean c(ArrayList<android.support.v4.app.d> arrayList, ArrayList<Boolean> arrayList2) {
        synchronized (this) {
            ArrayList<g> arrayList3 = this.b;
            int n2 = 0;
            if (arrayList3 == null) return false;
            if (this.b.size() == 0) {
                return false;
            }
            int n3 = this.b.size();
            boolean bl2 = false;
            do {
                if (n2 >= n3) {
                    this.b.clear();
                    this.m.h().removeCallbacks(this.E);
                    return bl2;
                }
                bl2 |= this.b.get(n2).a(arrayList, arrayList2);
                ++n2;
            } while (true);
        }
    }

    public static int d(int n2) {
        int n3 = 8194;
        if (n2 != 4097) {
            if (n2 != 4099) {
                if (n2 != 8194) {
                    return 0;
                }
                return 4097;
            }
            n3 = 4099;
        }
        return n3;
    }

    private void e(int n2) {
        try {
            this.c = true;
            this.a(n2, false);
            this.g();
            return;
        }
        finally {
            this.c = false;
        }
    }

    private j q(j j2) {
        ViewGroup viewGroup = j2.R;
        View view = j2.S;
        if (viewGroup != null) {
            if (view == null) {
                return null;
            }
            for (int i2 = this.e.indexOf((Object)j2) - 1; i2 >= 0; --i2) {
                j2 = this.e.get(i2);
                if (j2.R != viewGroup || j2.S == null) continue;
                return j2;
            }
        }
        return null;
    }

    private void z() {
        if (!this.e()) {
            if (this.v == null) {
                return;
            }
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Can not perform this action inside of ");
            stringBuilder.append(this.v);
            throw new IllegalStateException(stringBuilder.toString());
        }
        throw new IllegalStateException("Can not perform this action after onSaveInstanceState");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public int a(android.support.v4.app.d d2) {
        synchronized (this) {
            if (this.j != null && this.j.size() > 0) {
                int n2 = this.j.remove(this.j.size() - 1);
                if (a) {
                    StringBuilder stringBuilder = new StringBuilder();
                    stringBuilder.append("Adding back stack index ");
                    stringBuilder.append(n2);
                    stringBuilder.append(" with ");
                    stringBuilder.append(d2);
                    Log.v((String)"FragmentManager", (String)stringBuilder.toString());
                }
                this.i.set(n2, d2);
                return n2;
            }
            if (this.i == null) {
                this.i = new ArrayList();
            }
            int n3 = this.i.size();
            if (a) {
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("Setting back stack index ");
                stringBuilder.append(n3);
                stringBuilder.append(" to ");
                stringBuilder.append(d2);
                Log.v((String)"FragmentManager", (String)stringBuilder.toString());
            }
            this.i.add(d2);
            return n3;
        }
    }

    @Override
    public j.d a(j j2) {
        Object object;
        if (j2.o < 0) {
            object = new StringBuilder();
            object.append("Fragment ");
            object.append(j2);
            object.append(" is not currently in the FragmentManager");
            this.a(new IllegalStateException(object.toString()));
        }
        int n2 = j2.k;
        Object var4_4 = null;
        object = var4_4;
        if (n2 > 0) {
            j2 = this.o(j2);
            object = var4_4;
            if (j2 != null) {
                object = new j.d((Bundle)j2);
            }
        }
        return object;
    }

    @Override
    public j a(int n2) {
        j j2;
        int n3;
        for (n3 = this.e.size() - 1; n3 >= 0; --n3) {
            j2 = this.e.get(n3);
            if (j2 == null || j2.H != n2) continue;
            return j2;
        }
        if (this.f != null) {
            for (n3 = this.f.size() - 1; n3 >= 0; --n3) {
                j2 = (j)this.f.valueAt(n3);
                if (j2 == null || j2.H != n2) continue;
                return j2;
            }
        }
        return null;
    }

    @Override
    public j a(Bundle object, String string2) {
        int n2 = object.getInt(string2, -1);
        if (n2 == -1) {
            return null;
        }
        object = (j)this.f.get(n2);
        if (object == null) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Fragment no longer exists for key ");
            stringBuilder.append(string2);
            stringBuilder.append(": index ");
            stringBuilder.append(n2);
            this.a(new IllegalStateException(stringBuilder.toString()));
        }
        return object;
    }

    @Override
    public j a(String string2) {
        j j2;
        int n2;
        if (string2 != null) {
            for (n2 = this.e.size() - 1; n2 >= 0; --n2) {
                j2 = this.e.get(n2);
                if (j2 == null || !string2.equals(j2.J)) continue;
                return j2;
            }
        }
        if (this.f != null && string2 != null) {
            for (n2 = this.f.size() - 1; n2 >= 0; --n2) {
                j2 = (j)this.f.valueAt(n2);
                if (j2 == null || !string2.equals(j2.J)) continue;
                return j2;
            }
        }
        return null;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    c a(j object, int n2, boolean bl2, int n3) {
        block21 : {
            boolean bl3;
            int n4;
            block22 : {
                boolean bl4;
                n4 = object.W();
                Animation animation = object.a(n2, bl2, n4);
                if (animation != null) {
                    return new c(animation);
                }
                if ((object = object.b(n2, bl2, n4)) != null) {
                    return new c((Animator)object);
                }
                if (n4 == 0) break block21;
                bl3 = "anim".equals(this.m.g().getResources().getResourceTypeName(n4));
                boolean bl5 = bl4 = false;
                if (!bl3) break block22;
                try {
                    object = AnimationUtils.loadAnimation((Context)this.m.g(), (int)n4);
                    if (object != null) {
                        return new c((Animation)object);
                    }
                    bl5 = true;
                }
                catch (Resources.NotFoundException notFoundException) {
                    throw notFoundException;
                }
                catch (RuntimeException runtimeException) {
                    bl5 = bl4;
                }
                if (bl5) break block21;
            }
            try {
                object = AnimatorInflater.loadAnimator((Context)this.m.g(), (int)n4);
                if (object != null) {
                    return new c((Animator)object);
                }
            }
            catch (RuntimeException runtimeException) {
                if (bl3) {
                    throw runtimeException;
                }
                Animation animation = AnimationUtils.loadAnimation((Context)this.m.g(), (int)n4);
                if (animation == null) break block21;
                return new c(animation);
            }
        }
        if (n2 == 0) {
            return null;
        }
        if ((n2 = p.b(n2, bl2)) < 0) {
            return null;
        }
        switch (n2) {
            default: {
                n2 = n3;
                if (n3 != 0) break;
                n2 = n3;
                if (!this.m.d()) break;
                n2 = this.m.e();
                break;
            }
            case 6: {
                return p.a(this.m.g(), 1.0f, 0.0f);
            }
            case 5: {
                return p.a(this.m.g(), 0.0f, 1.0f);
            }
            case 4: {
                return p.a(this.m.g(), 1.0f, 1.075f, 1.0f, 0.0f);
            }
            case 3: {
                return p.a(this.m.g(), 0.975f, 1.0f, 0.0f, 1.0f);
            }
            case 2: {
                return p.a(this.m.g(), 1.0f, 0.975f, 1.0f, 0.0f);
            }
            case 1: {
                return p.a(this.m.g(), 1.125f, 1.0f, 0.0f, 1.0f);
            }
        }
        if (n2 != 0) return null;
        return null;
    }

    @Override
    public u a() {
        return new android.support.v4.app.d(this);
    }

    @Override
    public void a(int n2, int n3) {
        if (n2 >= 0) {
            this.a(new h(null, n2, n3), false);
            return;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Bad id: ");
        stringBuilder.append(n2);
        throw new IllegalArgumentException(stringBuilder.toString());
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public void a(int n2, android.support.v4.app.d d2) {
        synchronized (this) {
            int n3;
            if (this.i == null) {
                this.i = new ArrayList();
            }
            if (n2 < n3) {
                if (a) {
                    StringBuilder stringBuilder = new StringBuilder();
                    stringBuilder.append("Setting back stack index ");
                    stringBuilder.append(n2);
                    stringBuilder.append(" to ");
                    stringBuilder.append(d2);
                    Log.v((String)"FragmentManager", (String)stringBuilder.toString());
                }
                this.i.set(n2, d2);
            } else {
                StringBuilder stringBuilder;
                for (int i2 = n3 = this.i.size(); i2 < n2; ++i2) {
                    this.i.add(null);
                    if (this.j == null) {
                        this.j = new ArrayList();
                    }
                    if (a) {
                        stringBuilder = new StringBuilder();
                        stringBuilder.append("Adding available back stack index ");
                        stringBuilder.append(i2);
                        Log.v((String)"FragmentManager", (String)stringBuilder.toString());
                    }
                    this.j.add(i2);
                }
                if (a) {
                    stringBuilder = new StringBuilder();
                    stringBuilder.append("Adding back stack index ");
                    stringBuilder.append(n2);
                    stringBuilder.append(" with ");
                    stringBuilder.append(d2);
                    Log.v((String)"FragmentManager", (String)stringBuilder.toString());
                }
                this.i.add(d2);
            }
            return;
        }
    }

    void a(int n2, boolean bl2) {
        if (this.m == null && n2 != 0) {
            throw new IllegalStateException("No activity");
        }
        if (!bl2 && n2 == this.l) {
            return;
        }
        this.l = n2;
        if (this.f != null) {
            int n3 = this.e.size();
            for (n2 = 0; n2 < n3; ++n2) {
                this.f(this.e.get(n2));
            }
            n3 = this.f.size();
            for (n2 = 0; n2 < n3; ++n2) {
                j j2 = (j)this.f.valueAt(n2);
                if (j2 == null || !j2.v && !j2.L || j2.Y) continue;
                this.f(j2);
            }
            this.f();
            if (this.r && this.m != null && this.l == 5) {
                this.m.c();
                this.r = false;
            }
        }
    }

    public void a(Configuration configuration) {
        for (int i2 = 0; i2 < this.e.size(); ++i2) {
            j j2 = this.e.get(i2);
            if (j2 == null) continue;
            j2.a(configuration);
        }
    }

    @Override
    public void a(Bundle bundle, String string2, j j2) {
        if (j2.o < 0) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Fragment ");
            stringBuilder.append(j2);
            stringBuilder.append(" is not currently in the FragmentManager");
            this.a(new IllegalStateException(stringBuilder.toString()));
        }
        bundle.putInt(string2, j2.o);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    void a(Parcelable object, q object2) {
        Object object3;
        Object object4;
        int n2;
        Object object5;
        int n3;
        Object object6;
        if (object == null) {
            return;
        }
        r r2 = (r)object;
        if (r2.a == null) {
            return;
        }
        if (object2 == null) {
            object = object5 = null;
        } else {
            object6 = object2.a();
            object3 = object2.b();
            object4 = object2.c();
            n2 = object6 != null ? object6.size() : 0;
            n3 = 0;
            do {
                int n4;
                object5 = object3;
                object = object4;
                if (n3 >= n2) break;
                object = object6.get(n3);
                if (a) {
                    object5 = new StringBuilder();
                    object5.append("restoreAllState: re-attaching retained ");
                    object5.append(object);
                    Log.v((String)"FragmentManager", (String)object5.toString());
                }
                for (n4 = 0; n4 < r2.a.length && r2.a[n4].b != object.o; ++n4) {
                }
                if (n4 == r2.a.length) {
                    object5 = new StringBuilder();
                    object5.append("Could not find active fragment with index ");
                    object5.append(object.o);
                    this.a(new IllegalStateException(object5.toString()));
                }
                object5 = r2.a[n4];
                object5.l = object;
                object.m = null;
                object.A = 0;
                object.x = false;
                object.u = false;
                object.r = null;
                if (object5.k != null) {
                    object5.k.setClassLoader(this.m.g().getClassLoader());
                    object.m = object5.k.getSparseParcelableArray("android:view_state");
                    object.l = object5.k;
                }
                ++n3;
            } while (true);
        }
        this.f = new SparseArray(r2.a.length);
        for (n2 = 0; n2 < r2.a.length; ++n2) {
            object6 = r2.a[n2];
            if (object6 == null) continue;
            object3 = object5 != null && n2 < object5.size() ? (q)object5.get(n2) : null;
            object4 = object != null && n2 < object.size() ? (android.arch.lifecycle.p)object.get(n2) : null;
            object3 = object6.a(this.m, this.n, this.o, (q)object3, (android.arch.lifecycle.p)object4);
            if (a) {
                object4 = new StringBuilder();
                object4.append("restoreAllState: active #");
                object4.append(n2);
                object4.append(": ");
                object4.append(object3);
                Log.v((String)"FragmentManager", (String)object4.toString());
            }
            this.f.put(object3.o, object3);
            object6.l = null;
        }
        if (object2 != null) {
            object = object2.a();
            n2 = object != null ? object.size() : 0;
            for (n3 = 0; n3 < n2; ++n3) {
                object2 = (j)object.get(n3);
                if (object2.s < 0) continue;
                object2.r = (j)this.f.get(object2.s);
                if (object2.r != null) continue;
                object5 = new StringBuilder();
                object5.append("Re-attaching retained fragment ");
                object5.append(object2);
                object5.append(" target no longer exists: ");
                object5.append(object2.s);
                Log.w((String)"FragmentManager", (String)object5.toString());
            }
        }
        this.e.clear();
        if (r2.b != null) {
            for (n2 = 0; n2 < r2.b.length; ++n2) {
                object = (j)this.f.get(r2.b[n2]);
                if (object == null) {
                    object2 = new StringBuilder();
                    object2.append("No instantiated fragment for index #");
                    object2.append(r2.b[n2]);
                    this.a(new IllegalStateException(object2.toString()));
                }
                object.u = true;
                if (a) {
                    object2 = new StringBuilder();
                    object2.append("restoreAllState: added #");
                    object2.append(n2);
                    object2.append(": ");
                    object2.append(object);
                    Log.v((String)"FragmentManager", (String)object2.toString());
                }
                if (this.e.contains(object)) {
                    throw new IllegalStateException("Already added!");
                }
                object2 = this.e;
                synchronized (object2) {
                    this.e.add((j)object);
                    continue;
                }
            }
        }
        if (r2.c != null) {
            this.g = new ArrayList(r2.c.length);
            for (n2 = 0; n2 < r2.c.length; ++n2) {
                object = r2.c[n2].a(this);
                if (a) {
                    object2 = new StringBuilder();
                    object2.append("restoreAllState: back stack #");
                    object2.append(n2);
                    object2.append(" (index ");
                    object2.append(object.m);
                    object2.append("): ");
                    object2.append(object);
                    Log.v((String)"FragmentManager", (String)object2.toString());
                    object2 = new PrintWriter(new android.support.v4.g.e("FragmentManager"));
                    object.a("  ", (PrintWriter)object2, false);
                    object2.close();
                }
                this.g.add((android.support.v4.app.d)object);
                if (object.m < 0) continue;
                this.a(object.m, (android.support.v4.app.d)object);
            }
        } else {
            this.g = null;
        }
        if (r2.d >= 0) {
            this.p = (j)this.f.get(r2.d);
        }
        this.d = r2.e;
    }

    /*
     * Exception decompiling
     */
    void a(j var1_1, int var2_2, int var3_3, int var4_4, boolean var5_5) {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // org.benf.cfr.reader.util.CannotPerformDecode: reachable test BLOCK was exited and re-entered.
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.Misc.getFarthestReachableInRange(Misc.java:143)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.examineSwitchContiguity(SwitchReplacer.java:385)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.replaceRawSwitches(SwitchReplacer.java:65)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:416)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }

    void a(j j2, Context context, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).a(j2, context, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).a((o)this, j2, context);
        }
    }

    void a(j j2, Bundle bundle, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).a(j2, bundle, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).a((o)this, j2, bundle);
        }
    }

    void a(j j2, View view, Bundle bundle, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).a(j2, view, bundle, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).a(this, j2, view, bundle);
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public void a(j j2, boolean bl2) {
        Serializable serializable;
        if (a) {
            serializable = new StringBuilder();
            serializable.append("add: ");
            serializable.append(j2);
            Log.v((String)"FragmentManager", (String)serializable.toString());
        }
        this.g(j2);
        if (!j2.L) {
            if (this.e.contains(j2)) {
                serializable = new StringBuilder();
                serializable.append("Fragment already added: ");
                serializable.append(j2);
                throw new IllegalStateException(serializable.toString());
            }
            serializable = this.e;
            synchronized (serializable) {
                this.e.add(j2);
            }
            j2.u = true;
            j2.v = false;
            if (j2.S == null) {
                j2.Z = false;
            }
            if (j2.O && j2.P) {
                this.r = true;
            }
            if (bl2) {
                this.c(j2);
                return;
            }
        }
    }

    public void a(n n2, l l2, j j2) {
        if (this.m == null) {
            this.m = n2;
            this.n = l2;
            this.o = j2;
            return;
        }
        throw new IllegalStateException("Already attached");
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public void a(g g2, boolean bl2) {
        if (!bl2) {
            this.z();
        }
        synchronized (this) {
            if (!this.u && this.m != null) {
                if (this.b == null) {
                    this.b = new ArrayList();
                }
                this.b.add(g2);
                this.A();
                return;
            }
            if (bl2) {
                return;
            }
            throw new IllegalStateException("Activity has been destroyed");
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    @Override
    public void a(String string2, FileDescriptor object, PrintWriter printWriter, String[] arrstring) {
        int n2;
        int n3;
        CharSequence charSequence = new StringBuilder();
        charSequence.append(string2);
        charSequence.append("    ");
        charSequence = charSequence.toString();
        Object object2 = this.f;
        int n4 = 0;
        if (object2 != null && (n3 = this.f.size()) > 0) {
            printWriter.print(string2);
            printWriter.print("Active Fragments in ");
            printWriter.print(Integer.toHexString(System.identityHashCode(this)));
            printWriter.println(":");
            for (n2 = 0; n2 < n3; ++n2) {
                object2 = (j)this.f.valueAt(n2);
                printWriter.print(string2);
                printWriter.print("  #");
                printWriter.print(n2);
                printWriter.print(": ");
                printWriter.println(object2);
                if (object2 == null) continue;
                object2.a((String)charSequence, (FileDescriptor)object, printWriter, arrstring);
            }
        }
        if ((n3 = this.e.size()) > 0) {
            printWriter.print(string2);
            printWriter.println("Added Fragments:");
            for (n2 = 0; n2 < n3; ++n2) {
                object2 = this.e.get(n2);
                printWriter.print(string2);
                printWriter.print("  #");
                printWriter.print(n2);
                printWriter.print(": ");
                printWriter.println(object2.toString());
            }
        }
        if (this.h != null && (n3 = this.h.size()) > 0) {
            printWriter.print(string2);
            printWriter.println("Fragments Created Menus:");
            for (n2 = 0; n2 < n3; ++n2) {
                object2 = this.h.get(n2);
                printWriter.print(string2);
                printWriter.print("  #");
                printWriter.print(n2);
                printWriter.print(": ");
                printWriter.println(object2.toString());
            }
        }
        if (this.g != null && (n3 = this.g.size()) > 0) {
            printWriter.print(string2);
            printWriter.println("Back Stack:");
            for (n2 = 0; n2 < n3; ++n2) {
                object2 = this.g.get(n2);
                printWriter.print(string2);
                printWriter.print("  #");
                printWriter.print(n2);
                printWriter.print(": ");
                printWriter.println(object2.toString());
                object2.a((String)charSequence, (FileDescriptor)object, printWriter, arrstring);
            }
        }
        // MONITORENTER : this
        if (this.i != null && (n3 = this.i.size()) > 0) {
            printWriter.print(string2);
            printWriter.println("Back Stack Indices:");
            for (n2 = 0; n2 < n3; ++n2) {
                object = this.i.get(n2);
                printWriter.print(string2);
                printWriter.print("  #");
                printWriter.print(n2);
                printWriter.print(": ");
                printWriter.println(object);
            }
        }
        if (this.j != null && this.j.size() > 0) {
            printWriter.print(string2);
            printWriter.print("mAvailBackStackIndices: ");
            printWriter.println(Arrays.toString(this.j.toArray()));
        }
        // MONITOREXIT : this
        if (this.b != null && (n3 = this.b.size()) > 0) {
            printWriter.print(string2);
            printWriter.println("Pending Actions:");
            for (n2 = n4; n2 < n3; ++n2) {
                object = this.b.get(n2);
                printWriter.print(string2);
                printWriter.print("  #");
                printWriter.print(n2);
                printWriter.print(": ");
                printWriter.println(object);
            }
        }
        printWriter.print(string2);
        printWriter.println("FragmentManager misc state:");
        printWriter.print(string2);
        printWriter.print("  mHost=");
        printWriter.println(this.m);
        printWriter.print(string2);
        printWriter.print("  mContainer=");
        printWriter.println(this.n);
        if (this.o != null) {
            printWriter.print(string2);
            printWriter.print("  mParent=");
            printWriter.println(this.o);
        }
        printWriter.print(string2);
        printWriter.print("  mCurState=");
        printWriter.print(this.l);
        printWriter.print(" mStateSaved=");
        printWriter.print(this.s);
        printWriter.print(" mStopped=");
        printWriter.print(this.t);
        printWriter.print(" mDestroyed=");
        printWriter.println(this.u);
        if (this.r) {
            printWriter.print(string2);
            printWriter.print("  mNeedMenuInvalidate=");
            printWriter.println(this.r);
        }
        if (this.v == null) return;
        printWriter.print(string2);
        printWriter.print("  mNoTransactionsBecause=");
        printWriter.println(this.v);
    }

    public void a(boolean bl2) {
        for (int i2 = this.e.size() - 1; i2 >= 0; --i2) {
            j j2 = this.e.get(i2);
            if (j2 == null) continue;
            j2.i(bl2);
        }
    }

    public boolean a(Menu menu2) {
        int n2 = this.l;
        if (n2 < 1) {
            return false;
        }
        boolean bl2 = false;
        for (int i2 = 0; i2 < this.e.size(); ++i2) {
            j j2 = this.e.get(i2);
            boolean bl3 = bl2;
            if (j2 != null) {
                bl3 = bl2;
                if (j2.c(menu2)) {
                    bl3 = true;
                }
            }
            bl2 = bl3;
        }
        return bl2;
    }

    public boolean a(Menu object, MenuInflater menuInflater) {
        int n2 = this.l;
        int n3 = 0;
        if (n2 < 1) {
            return false;
        }
        ArrayList<j> arrayList = null;
        boolean bl2 = false;
        for (n2 = 0; n2 < this.e.size(); ++n2) {
            j j2 = this.e.get(n2);
            ArrayList<j> arrayList2 = arrayList;
            boolean bl3 = bl2;
            if (j2 != null) {
                arrayList2 = arrayList;
                bl3 = bl2;
                if (j2.b((Menu)object, menuInflater)) {
                    arrayList2 = arrayList;
                    if (arrayList == null) {
                        arrayList2 = new ArrayList<j>();
                    }
                    arrayList2.add(j2);
                    bl3 = true;
                }
            }
            arrayList = arrayList2;
            bl2 = bl3;
        }
        if (this.h != null) {
            for (n2 = n3; n2 < this.h.size(); ++n2) {
                object = this.h.get(n2);
                if (arrayList != null && arrayList.contains(object)) continue;
                object.B();
            }
        }
        this.h = arrayList;
        return bl2;
    }

    public boolean a(MenuItem menuItem) {
        if (this.l < 1) {
            return false;
        }
        for (int i2 = 0; i2 < this.e.size(); ++i2) {
            j j2 = this.e.get(i2);
            if (j2 == null || !j2.c(menuItem)) continue;
            return true;
        }
        return false;
    }

    boolean a(ArrayList<android.support.v4.app.d> arrayList, ArrayList<Boolean> arrayList2, String string2, int n2, int n3) {
        int n4;
        if (this.g == null) {
            return false;
        }
        if (string2 == null && n2 < 0 && (n3 & 1) == 0) {
            n2 = this.g.size() - 1;
            if (n2 < 0) {
                return false;
            }
            arrayList.add(this.g.remove(n2));
            arrayList2.add(true);
            return true;
        }
        if (string2 == null && n2 < 0) {
            n4 = -1;
        } else {
            android.support.v4.app.d d2;
            int n5;
            for (n5 = this.g.size() - 1; n5 >= 0; --n5) {
                d2 = this.g.get(n5);
                if (string2 != null && string2.equals(d2.h()) || n2 >= 0 && n2 == d2.m) break;
            }
            if (n5 < 0) {
                return false;
            }
            n4 = n5;
            if ((n3 & 1) != 0) {
                do {
                    n4 = n3 = n5 - 1;
                    if (n3 < 0) break;
                    d2 = this.g.get(n3);
                    if (string2 != null) {
                        n5 = n3;
                        if (string2.equals(d2.h())) continue;
                    }
                    n4 = n3;
                    if (n2 < 0) break;
                    n4 = n3;
                    if (n2 != d2.m) break;
                    n5 = n3;
                } while (true);
            }
        }
        if (n4 == this.g.size() - 1) {
            return false;
        }
        for (n2 = this.g.size() - 1; n2 > n4; --n2) {
            arrayList.add(this.g.remove(n2));
            arrayList2.add(true);
        }
        return true;
    }

    public j b(String string2) {
        if (this.f != null && string2 != null) {
            for (int i2 = this.f.size() - 1; i2 >= 0; --i2) {
                j j2 = (j)this.f.valueAt(i2);
                if (j2 == null || (j2 = j2.a(string2)) == null) continue;
                return j2;
            }
        }
        return null;
    }

    @Override
    public void b() {
        this.a(new h(null, -1, 0), false);
    }

    void b(android.support.v4.app.d d2) {
        if (this.g == null) {
            this.g = new ArrayList();
        }
        this.g.add(d2);
    }

    public void b(j j2) {
        if (j2.U) {
            if (this.c) {
                this.w = true;
                return;
            }
            j2.U = false;
            this.a(j2, this.l, 0, 0, false);
        }
    }

    void b(j j2, Context context, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).b(j2, context, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).b((o)this, j2, context);
        }
    }

    void b(j j2, Bundle bundle, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).b(j2, bundle, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).b((o)this, j2, bundle);
        }
    }

    void b(j j2, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).b(j2, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).a(this, j2);
        }
    }

    public void b(g g2, boolean bl2) {
        if (bl2 && (this.m == null || this.u)) {
            return;
        }
        this.c(bl2);
        if (g2.a(this.x, this.y)) {
            this.c = true;
            try {
                this.b(this.x, this.y);
            }
            finally {
                this.B();
            }
        }
        this.h();
        this.E();
    }

    public void b(Menu menu2) {
        if (this.l < 1) {
            return;
        }
        for (int i2 = 0; i2 < this.e.size(); ++i2) {
            j j2 = this.e.get(i2);
            if (j2 == null) continue;
            j2.d(menu2);
        }
    }

    public void b(boolean bl2) {
        for (int i2 = this.e.size() - 1; i2 >= 0; --i2) {
            j j2 = this.e.get(i2);
            if (j2 == null) continue;
            j2.j(bl2);
        }
    }

    boolean b(int n2) {
        if (this.l >= n2) {
            return true;
        }
        return false;
    }

    public boolean b(MenuItem menuItem) {
        if (this.l < 1) {
            return false;
        }
        for (int i2 = 0; i2 < this.e.size(); ++i2) {
            j j2 = this.e.get(i2);
            if (j2 == null || !j2.d(menuItem)) continue;
            return true;
        }
        return false;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public void c(int n2) {
        synchronized (this) {
            this.i.set(n2, null);
            if (this.j == null) {
                this.j = new ArrayList();
            }
            if (a) {
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("Freeing back stack index ");
                stringBuilder.append(n2);
                Log.v((String)"FragmentManager", (String)stringBuilder.toString());
            }
            this.j.add(n2);
            return;
        }
    }

    void c(j j2) {
        this.a(j2, this.l, 0, 0, false);
    }

    void c(j j2, Bundle bundle, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).c(j2, bundle, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).c(this, j2, bundle);
        }
    }

    void c(j j2, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).c(j2, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).b(this, j2);
        }
    }

    @Override
    public boolean c() {
        this.z();
        return this.a(null, -1, 0);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public List<j> d() {
        if (this.e.isEmpty()) {
            return Collections.EMPTY_LIST;
        }
        ArrayList<j> arrayList = this.e;
        synchronized (arrayList) {
            return (List)this.e.clone();
        }
    }

    void d(j j2) {
        if (j2.w && !j2.z) {
            j2.S = j2.b(j2.h(j2.l), null, j2.l);
            if (j2.S != null) {
                j2.T = j2.S;
                j2.S.setSaveFromParentEnabled(false);
                if (j2.K) {
                    j2.S.setVisibility(8);
                }
                j2.a(j2.S, j2.l);
                this.a(j2, j2.S, j2.l, false);
                return;
            }
            j2.T = null;
        }
    }

    void d(j j2, Bundle bundle, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).d(j2, bundle, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).d(this, j2, bundle);
        }
    }

    void d(j j2, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).d(j2, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).c(this, j2);
        }
    }

    void e(final j j2) {
        if (j2.S != null) {
            c c2 = this.a(j2, j2.X(), j2.K ^ true, j2.Y());
            if (c2 != null && c2.b != null) {
                c2.b.setTarget((Object)j2.S);
                if (j2.K) {
                    if (j2.af()) {
                        j2.k(false);
                    } else {
                        final ViewGroup viewGroup = j2.R;
                        final View view = j2.S;
                        viewGroup.startViewTransition(view);
                        c2.b.addListener((Animator.AnimatorListener)new AnimatorListenerAdapter(){

                            public void onAnimationEnd(Animator animator2) {
                                viewGroup.endViewTransition(view);
                                animator2.removeListener((Animator.AnimatorListener)this);
                                if (j2.S != null) {
                                    j2.S.setVisibility(8);
                                }
                            }
                        });
                    }
                } else {
                    j2.S.setVisibility(0);
                }
                p.b(j2.S, c2);
                c2.b.start();
            } else {
                if (c2 != null) {
                    p.b(j2.S, c2);
                    j2.S.startAnimation(c2.a);
                    c2.a.start();
                }
                int n2 = j2.K && !j2.af() ? 8 : 0;
                j2.S.setVisibility(n2);
                if (j2.af()) {
                    j2.k(false);
                }
            }
        }
        if (j2.u && j2.O && j2.P) {
            this.r = true;
        }
        j2.Z = false;
        j2.d(j2.K);
    }

    void e(j j2, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).e(j2, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).d(this, j2);
        }
    }

    @Override
    public boolean e() {
        if (!this.s && !this.t) {
            return false;
        }
        return true;
    }

    void f() {
        if (this.f == null) {
            return;
        }
        for (int i2 = 0; i2 < this.f.size(); ++i2) {
            j j2 = (j)this.f.valueAt(i2);
            if (j2 == null) continue;
            this.b(j2);
        }
    }

    void f(j j2) {
        int n2;
        if (j2 == null) {
            return;
        }
        int n3 = n2 = this.l;
        if (j2.v) {
            n3 = j2.i() ? Math.min(n2, 1) : Math.min(n2, 0);
        }
        this.a(j2, n3, j2.X(), j2.Y(), false);
        if (j2.S != null) {
            Object object = this.q(j2);
            if (object != null) {
                object = object.S;
                ViewGroup viewGroup = j2.R;
                n3 = viewGroup.indexOfChild((View)object);
                n2 = viewGroup.indexOfChild(j2.S);
                if (n2 < n3) {
                    viewGroup.removeViewAt(n2);
                    viewGroup.addView(j2.S, n3);
                }
            }
            if (j2.Y && j2.R != null) {
                if (j2.aa > 0.0f) {
                    j2.S.setAlpha(j2.aa);
                }
                j2.aa = 0.0f;
                j2.Y = false;
                object = this.a(j2, j2.X(), true, j2.Y());
                if (object != null) {
                    p.b(j2.S, (c)object);
                    if (object.a != null) {
                        j2.S.startAnimation(object.a);
                    } else {
                        object.b.setTarget((Object)j2.S);
                        object.b.start();
                    }
                }
            }
        }
        if (j2.Z) {
            this.e(j2);
        }
    }

    void f(j j2, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).f(j2, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).e(this, j2);
        }
    }

    void g(j j2) {
        if (j2.o >= 0) {
            return;
        }
        int n2 = this.d;
        this.d = n2 + 1;
        j2.a(n2, this.o);
        if (this.f == null) {
            this.f = new SparseArray();
        }
        this.f.put(j2.o, (Object)j2);
        if (a) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Allocated fragment index ");
            stringBuilder.append(j2);
            Log.v((String)"FragmentManager", (String)stringBuilder.toString());
        }
    }

    void g(j j2, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).g(j2, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).f(this, j2);
        }
    }

    public boolean g() {
        this.c(true);
        boolean bl2 = false;
        while (this.c(this.x, this.y)) {
            this.c = true;
            try {
                this.b(this.x, this.y);
                bl2 = true;
            }
            finally {
                this.B();
            }
        }
        this.h();
        this.E();
        return bl2;
    }

    void h() {
        if (this.w) {
            this.w = false;
            this.f();
        }
    }

    void h(j j2) {
        if (j2.o < 0) {
            return;
        }
        if (a) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Freeing fragment index ");
            stringBuilder.append(j2);
            Log.v((String)"FragmentManager", (String)stringBuilder.toString());
        }
        this.f.put(j2.o, null);
        j2.A();
    }

    void h(j j2, boolean bl2) {
        Object object;
        if (this.o != null && (object = this.o.q()) instanceof p) {
            ((p)object).h(j2, true);
        }
        for (android.support.v4.g.j j3 : this.J) {
            if (bl2 && !((Boolean)j3.b).booleanValue()) continue;
            ((o.a)j3.a).g(this, j2);
        }
    }

    void i() {
        if (this.k != null) {
            for (int i2 = 0; i2 < this.k.size(); ++i2) {
                this.k.get(i2).a();
            }
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    public void i(j j2) {
        Serializable serializable;
        if (a) {
            serializable = new StringBuilder();
            serializable.append("remove: ");
            serializable.append(j2);
            serializable.append(" nesting=");
            serializable.append(j2.A);
            Log.v((String)"FragmentManager", (String)serializable.toString());
        }
        boolean bl2 = j2.i();
        if (j2.L) {
            if (!(bl2 ^ true)) return;
        }
        serializable = this.e;
        // MONITORENTER : serializable
        this.e.remove(j2);
        // MONITOREXIT : serializable
        if (j2.O && j2.P) {
            this.r = true;
        }
        j2.u = false;
        j2.v = true;
    }

    q j() {
        p.a(this.D);
        return this.D;
    }

    public void j(j j2) {
        if (a) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("hide: ");
            stringBuilder.append(j2);
            Log.v((String)"FragmentManager", (String)stringBuilder.toString());
        }
        if (!j2.K) {
            j2.K = true;
            j2.Z = true ^ j2.Z;
        }
    }

    void k() {
        Object object;
        Object object2;
        Object object3;
        if (this.f != null) {
            Object object4;
            Object object5;
            Object object6 = object5 = (object4 = null);
            int n2 = 0;
            do {
                object = object4;
                object3 = object5;
                object2 = object6;
                if (n2 < this.f.size()) {
                    j j2 = (j)this.f.valueAt(n2);
                    object3 = object4;
                    object = object5;
                    Object object7 = object6;
                    if (j2 != null) {
                        int n3;
                        object2 = object4;
                        if (j2.M) {
                            object3 = object4;
                            if (object4 == null) {
                                object3 = new ArrayList();
                            }
                            object3.add(j2);
                            n3 = j2.r != null ? j2.r.o : -1;
                            j2.s = n3;
                            object2 = object3;
                            if (a) {
                                object4 = new StringBuilder();
                                object4.append("retainNonConfig: keeping retained ");
                                object4.append(j2);
                                Log.v((String)"FragmentManager", (String)object4.toString());
                                object2 = object3;
                            }
                        }
                        if (j2.D != null) {
                            j2.D.k();
                            object3 = j2.D.D;
                        } else {
                            object3 = j2.E;
                        }
                        object4 = object5;
                        if (object5 == null) {
                            object4 = object5;
                            if (object3 != null) {
                                object5 = new ArrayList(this.f.size());
                                n3 = 0;
                                do {
                                    object4 = object5;
                                    if (n3 >= n2) break;
                                    object5.add(null);
                                    ++n3;
                                } while (true);
                            }
                        }
                        if (object4 != null) {
                            object4.add(object3);
                        }
                        object5 = object6;
                        if (object6 == null) {
                            object5 = object6;
                            if (j2.F != null) {
                                object6 = new ArrayList(this.f.size());
                                n3 = 0;
                                do {
                                    object5 = object6;
                                    if (n3 >= n2) break;
                                    object6.add(null);
                                    ++n3;
                                } while (true);
                            }
                        }
                        object3 = object2;
                        object = object4;
                        object7 = object5;
                        if (object5 != null) {
                            object5.add(j2.F);
                            object7 = object5;
                            object = object4;
                            object3 = object2;
                        }
                    }
                    ++n2;
                    object4 = object3;
                    object5 = object;
                    object6 = object7;
                    continue;
                }
                break;
            } while (true);
        } else {
            object = null;
            q q2 = object;
            object2 = q2;
            object3 = q2;
        }
        if (object == null && object3 == null && object2 == null) {
            this.D = null;
            return;
        }
        this.D = new q((List<j>)object, (List<q>)object3, (List<android.arch.lifecycle.p>)object2);
    }

    public void k(j j2) {
        if (a) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("show: ");
            stringBuilder.append(j2);
            Log.v((String)"FragmentManager", (String)stringBuilder.toString());
        }
        if (j2.K) {
            j2.K = false;
            j2.Z ^= true;
        }
    }

    Parcelable l() {
        this.C();
        this.D();
        this.g();
        this.s = true;
        android.support.v4.app.e[] arre = null;
        this.D = null;
        if (this.f != null) {
            Object object;
            Object object2;
            int n2;
            if (this.f.size() <= 0) {
                return null;
            }
            int n3 = this.f.size();
            s[] arrs = new s[n3];
            int n4 = 0;
            int n5 = 0;
            for (n2 = 0; n2 < n3; ++n2) {
                StringBuilder stringBuilder;
                object = (int[])this.f.valueAt(n2);
                if (object == null) continue;
                if (object.o < 0) {
                    object2 = new StringBuilder();
                    object2.append("Failure saving state: active ");
                    object2.append(object);
                    object2.append(" has cleared index: ");
                    object2.append(object.o);
                    this.a(new IllegalStateException(object2.toString()));
                }
                arrs[n2] = object2 = new s((j)object);
                if (object.k > 0 && object2.k == null) {
                    object2.k = this.o((j)object);
                    if (object.r != null) {
                        if (object.r.o < 0) {
                            stringBuilder = new StringBuilder();
                            stringBuilder.append("Failure saving state: ");
                            stringBuilder.append(object);
                            stringBuilder.append(" has target not in fragment manager: ");
                            stringBuilder.append(object.r);
                            this.a(new IllegalStateException(stringBuilder.toString()));
                        }
                        if (object2.k == null) {
                            object2.k = new Bundle();
                        }
                        this.a(object2.k, "android:target_state", object.r);
                        if (object.t != 0) {
                            object2.k.putInt("android:target_req_state", object.t);
                        }
                    }
                } else {
                    object2.k = object.l;
                }
                if (a) {
                    stringBuilder = new StringBuilder();
                    stringBuilder.append("Saved state of ");
                    stringBuilder.append(object);
                    stringBuilder.append(": ");
                    stringBuilder.append((Object)object2.k);
                    Log.v((String)"FragmentManager", (String)stringBuilder.toString());
                }
                n5 = 1;
            }
            if (n5 == 0) {
                if (a) {
                    Log.v((String)"FragmentManager", (String)"saveAllState: no fragments!");
                }
                return null;
            }
            n5 = this.e.size();
            if (n5 > 0) {
                object2 = new int[n5];
                n2 = 0;
                do {
                    object = object2;
                    if (n2 < n5) {
                        object2[n2] = this.e.get((int)n2).o;
                        if (object2[n2] < 0) {
                            object = new StringBuilder();
                            object.append("Failure saving state: active ");
                            object.append(this.e.get(n2));
                            object.append(" has cleared index: ");
                            object.append((int)object2[n2]);
                            this.a(new IllegalStateException(object.toString()));
                        }
                        if (a) {
                            object = new StringBuilder();
                            object.append("saveAllState: adding fragment #");
                            object.append(n2);
                            object.append(": ");
                            object.append(this.e.get(n2));
                            Log.v((String)"FragmentManager", (String)object.toString());
                        }
                        ++n2;
                        continue;
                    }
                    break;
                } while (true);
            } else {
                object = null;
            }
            object2 = arre;
            if (this.g != null) {
                n5 = this.g.size();
                object2 = arre;
                if (n5 > 0) {
                    arre = new android.support.v4.app.e[n5];
                    n2 = n4;
                    do {
                        object2 = arre;
                        if (n2 >= n5) break;
                        arre[n2] = new android.support.v4.app.e(this.g.get(n2));
                        if (a) {
                            object2 = new StringBuilder();
                            object2.append("saveAllState: adding back stack #");
                            object2.append(n2);
                            object2.append(": ");
                            object2.append(this.g.get(n2));
                            Log.v((String)"FragmentManager", (String)object2.toString());
                        }
                        ++n2;
                    } while (true);
                }
            }
            arre = new android.support.v4.app.e[]();
            arre.a = arrs;
            arre.b = object;
            arre.c = object2;
            if (this.p != null) {
                arre.d = this.p.o;
            }
            arre.e = this.d;
            this.k();
            return arre;
        }
        return null;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    public void l(j j2) {
        Serializable serializable;
        if (a) {
            serializable = new StringBuilder();
            serializable.append("detach: ");
            serializable.append(j2);
            Log.v((String)"FragmentManager", (String)serializable.toString());
        }
        if (j2.L) return;
        j2.L = true;
        if (!j2.u) return;
        if (a) {
            serializable = new StringBuilder();
            serializable.append("remove from detach: ");
            serializable.append(j2);
            Log.v((String)"FragmentManager", (String)serializable.toString());
        }
        serializable = this.e;
        // MONITORENTER : serializable
        this.e.remove(j2);
        // MONITOREXIT : serializable
        if (j2.O && j2.P) {
            this.r = true;
        }
        j2.u = false;
    }

    public void m() {
        this.D = null;
        this.s = false;
        this.t = false;
        int n2 = this.e.size();
        for (int i2 = 0; i2 < n2; ++i2) {
            j j2 = this.e.get(i2);
            if (j2 == null) continue;
            j2.O();
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public void m(j j2) {
        Serializable serializable;
        if (a) {
            serializable = new StringBuilder();
            serializable.append("attach: ");
            serializable.append(j2);
            Log.v((String)"FragmentManager", (String)serializable.toString());
        }
        if (j2.L) {
            j2.L = false;
            if (!j2.u) {
                if (this.e.contains(j2)) {
                    serializable = new StringBuilder();
                    serializable.append("Fragment already added: ");
                    serializable.append(j2);
                    throw new IllegalStateException(serializable.toString());
                }
                if (a) {
                    serializable = new StringBuilder();
                    serializable.append("add from attach: ");
                    serializable.append(j2);
                    Log.v((String)"FragmentManager", (String)serializable.toString());
                }
                serializable = this.e;
                synchronized (serializable) {
                    this.e.add(j2);
                }
                j2.u = true;
                if (j2.O && j2.P) {
                    this.r = true;
                    return;
                }
            }
        }
    }

    public void n() {
        this.s = false;
        this.t = false;
        this.e(1);
    }

    void n(j j2) {
        if (j2.T == null) {
            return;
        }
        if (this.B == null) {
            this.B = new SparseArray();
        } else {
            this.B.clear();
        }
        j2.T.saveHierarchyState(this.B);
        if (this.B.size() > 0) {
            j2.m = this.B;
            this.B = null;
        }
    }

    Bundle o(j j2) {
        Bundle bundle;
        if (this.A == null) {
            this.A = new Bundle();
        }
        j2.n(this.A);
        this.d(j2, this.A, false);
        if (!this.A.isEmpty()) {
            bundle = this.A;
            this.A = null;
        } else {
            bundle = null;
        }
        if (j2.S != null) {
            this.n(j2);
        }
        Bundle bundle2 = bundle;
        if (j2.m != null) {
            bundle2 = bundle;
            if (bundle == null) {
                bundle2 = new Bundle();
            }
            bundle2.putSparseParcelableArray("android:view_state", j2.m);
        }
        bundle = bundle2;
        if (!j2.V) {
            bundle = bundle2;
            if (bundle2 == null) {
                bundle = new Bundle();
            }
            bundle.putBoolean("android:user_visible_hint", j2.V);
        }
        return bundle;
    }

    public void o() {
        this.s = false;
        this.t = false;
        this.e(2);
    }

    public View onCreateView(View object, String object2, Context context, AttributeSet attributeSet) {
        int n2;
        String string2;
        int n3;
        String string3;
        block21 : {
            block20 : {
                block19 : {
                    if (!"fragment".equals(object2)) {
                        return null;
                    }
                    object2 = attributeSet.getAttributeValue(null, "class");
                    TypedArray typedArray = context.obtainStyledAttributes(attributeSet, f.a);
                    n2 = 0;
                    string3 = object2;
                    if (object2 == null) {
                        string3 = typedArray.getString(0);
                    }
                    n3 = typedArray.getResourceId(1, -1);
                    string2 = typedArray.getString(2);
                    typedArray.recycle();
                    if (!j.a(this.m.g(), string3)) {
                        return null;
                    }
                    if (object != null) {
                        n2 = object.getId();
                    }
                    if (n2 == -1 && n3 == -1 && string2 == null) {
                        object = new StringBuilder();
                        object.append(attributeSet.getPositionDescription());
                        object.append(": Must specify unique android:id, android:tag, or have a parent with an id for ");
                        object.append(string3);
                        throw new IllegalArgumentException(object.toString());
                    }
                    object2 = n3 != -1 ? this.a(n3) : null;
                    object = object2;
                    if (object2 == null) {
                        object = object2;
                        if (string2 != null) {
                            object = this.a(string2);
                        }
                    }
                    object2 = object;
                    if (object == null) {
                        object2 = object;
                        if (n2 != -1) {
                            object2 = this.a(n2);
                        }
                    }
                    if (a) {
                        object = new StringBuilder();
                        object.append("onCreateView: id=0x");
                        object.append(Integer.toHexString(n3));
                        object.append(" fname=");
                        object.append(string3);
                        object.append(" existing=");
                        object.append(object2);
                        Log.v((String)"FragmentManager", (String)object.toString());
                    }
                    if (object2 != null) break block19;
                    object = this.n.a(context, string3, null);
                    object.w = true;
                    int n4 = n3 != 0 ? n3 : n2;
                    object.H = n4;
                    object.I = n2;
                    object.J = string2;
                    object.x = true;
                    object.B = this;
                    object.C = this.m;
                    object.a(this.m.g(), attributeSet, object.l);
                    this.a((j)object, true);
                    break block20;
                }
                if (object2.x) break block21;
                object2.x = true;
                object2.C = this.m;
                if (!object2.N) {
                    object2.a(this.m.g(), attributeSet, object2.l);
                }
                object = object2;
            }
            if (this.l < 1 && object.w) {
                this.a((j)object, 1, 0, 0, false);
            } else {
                this.c((j)object);
            }
            if (object.S != null) {
                if (n3 != 0) {
                    object.S.setId(n3);
                }
                if (object.S.getTag() == null) {
                    object.S.setTag((Object)string2);
                }
                return object.S;
            }
            object = new StringBuilder();
            object.append("Fragment ");
            object.append(string3);
            object.append(" did not create a view.");
            throw new IllegalStateException(object.toString());
        }
        object = new StringBuilder();
        object.append(attributeSet.getPositionDescription());
        object.append(": Duplicate id 0x");
        object.append(Integer.toHexString(n3));
        object.append(", tag ");
        object.append(string2);
        object.append(", or parent id 0x");
        object.append(Integer.toHexString(n2));
        object.append(" with another fragment for ");
        object.append(string3);
        throw new IllegalArgumentException(object.toString());
    }

    public View onCreateView(String string2, Context context, AttributeSet attributeSet) {
        return this.onCreateView(null, string2, context, attributeSet);
    }

    public void p() {
        this.s = false;
        this.t = false;
        this.e(4);
    }

    public void p(j j2) {
        if (j2 != null && (this.f.get(j2.o) != j2 || j2.C != null && j2.q() != this)) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Fragment ");
            stringBuilder.append(j2);
            stringBuilder.append(" is not an active fragment of FragmentManager ");
            stringBuilder.append(this);
            throw new IllegalArgumentException(stringBuilder.toString());
        }
        this.p = j2;
    }

    public void q() {
        this.s = false;
        this.t = false;
        this.e(5);
    }

    public void r() {
        this.e(4);
    }

    public void s() {
        this.t = true;
        this.e(3);
    }

    public void t() {
        this.e(2);
    }

    /*
     * Enabled aggressive block sorting
     */
    public String toString() {
        StringBuilder stringBuilder = new StringBuilder(128);
        stringBuilder.append("FragmentManager{");
        stringBuilder.append(Integer.toHexString(System.identityHashCode(this)));
        stringBuilder.append(" in ");
        Object object = this.o != null ? this.o : this.m;
        android.support.v4.g.d.a(object, stringBuilder);
        stringBuilder.append("}}");
        return stringBuilder.toString();
    }

    public void u() {
        this.e(1);
    }

    public void v() {
        this.u = true;
        this.g();
        this.e(0);
        this.m = null;
        this.n = null;
        this.o = null;
    }

    public void w() {
        for (int i2 = 0; i2 < this.e.size(); ++i2) {
            j j2 = this.e.get(i2);
            if (j2 == null) continue;
            j2.P();
        }
    }

    public j x() {
        return this.p;
    }

    LayoutInflater.Factory2 y() {
        return this;
    }

    private static class a
    extends b {
        View a;

        a(View view, Animation.AnimationListener animationListener) {
            super(animationListener);
            this.a = view;
        }

        @Override
        public void onAnimationEnd(Animation animation) {
            if (!android.support.v4.view.s.x(this.a) && Build.VERSION.SDK_INT < 24) {
                this.a.setLayerType(0, null);
            } else {
                this.a.post(new Runnable(){

                    @Override
                    public void run() {
                        a.this.a.setLayerType(0, null);
                    }
                });
            }
            super.onAnimationEnd(animation);
        }

    }

    private static class b
    implements Animation.AnimationListener {
        private final Animation.AnimationListener a;

        private b(Animation.AnimationListener animationListener) {
            this.a = animationListener;
        }

        public void onAnimationEnd(Animation animation) {
            if (this.a != null) {
                this.a.onAnimationEnd(animation);
            }
        }

        public void onAnimationRepeat(Animation animation) {
            if (this.a != null) {
                this.a.onAnimationRepeat(animation);
            }
        }

        public void onAnimationStart(Animation animation) {
            if (this.a != null) {
                this.a.onAnimationStart(animation);
            }
        }
    }

    private static class c {
        public final Animation a;
        public final Animator b;

        private c(Animator animator2) {
            this.a = null;
            this.b = animator2;
            if (animator2 != null) {
                return;
            }
            throw new IllegalStateException("Animator cannot be null");
        }

        private c(Animation animation) {
            this.a = animation;
            this.b = null;
            if (animation != null) {
                return;
            }
            throw new IllegalStateException("Animation cannot be null");
        }
    }

    private static class d
    extends AnimatorListenerAdapter {
        View a;

        d(View view) {
            this.a = view;
        }

        public void onAnimationEnd(Animator animator2) {
            this.a.setLayerType(0, null);
            animator2.removeListener((Animator.AnimatorListener)this);
        }

        public void onAnimationStart(Animator animator2) {
            this.a.setLayerType(2, null);
        }
    }

    private static class e
    extends AnimationSet
    implements Runnable {
        private final ViewGroup a;
        private final View b;
        private boolean c;
        private boolean d;

        e(Animation animation, ViewGroup viewGroup, View view) {
            super(false);
            this.a = viewGroup;
            this.b = view;
            this.addAnimation(animation);
        }

        public boolean getTransformation(long l2, Transformation transformation) {
            if (this.c) {
                return this.d ^ true;
            }
            if (!super.getTransformation(l2, transformation)) {
                this.c = true;
                ae.a((View)this.a, this);
            }
            return true;
        }

        public boolean getTransformation(long l2, Transformation transformation, float f2) {
            if (this.c) {
                return this.d ^ true;
            }
            if (!super.getTransformation(l2, transformation, f2)) {
                this.c = true;
                ae.a((View)this.a, this);
            }
            return true;
        }

        @Override
        public void run() {
            this.a.endViewTransition(this.b);
            this.d = true;
        }
    }

    static class f {
        public static final int[] a = new int[]{16842755, 16842960, 16842961};
    }

    static interface g {
        public boolean a(ArrayList<android.support.v4.app.d> var1, ArrayList<Boolean> var2);
    }

    private class h
    implements g {
        final String a;
        final int b;
        final int c;

        h(String string2, int n2, int n3) {
            this.a = string2;
            this.b = n2;
            this.c = n3;
        }

        @Override
        public boolean a(ArrayList<android.support.v4.app.d> arrayList, ArrayList<Boolean> arrayList2) {
            o o2;
            if (p.this.p != null && this.b < 0 && this.a == null && (o2 = p.this.p.s()) != null && o2.c()) {
                return false;
            }
            return p.this.a(arrayList, arrayList2, this.a, this.b, this.c);
        }
    }

    static class i
    implements j.c {
        private final boolean a;
        private final android.support.v4.app.d b;
        private int c;

        i(android.support.v4.app.d d2, boolean bl2) {
            this.a = bl2;
            this.b = d2;
        }

        static /* synthetic */ boolean a(i i2) {
            return i2.a;
        }

        static /* synthetic */ android.support.v4.app.d b(i i2) {
            return i2.b;
        }

        @Override
        public void a() {
            --this.c;
            if (this.c != 0) {
                return;
            }
            this.b.a.A();
        }

        @Override
        public void b() {
            ++this.c;
        }

        public boolean c() {
            if (this.c == 0) {
                return true;
            }
            return false;
        }

        public void d() {
            int n2 = this.c;
            n2 = n2 > 0 ? 1 : 0;
            p p2 = this.b.a;
            int n3 = p2.e.size();
            for (int i2 = 0; i2 < n3; ++i2) {
                j j2 = p2.e.get(i2);
                j2.a((j.c)null);
                if (n2 == 0 || !j2.ae()) continue;
                j2.K();
            }
            this.b.a.a(this.b, this.a, (boolean)(n2 ^ 1), true);
        }

        public void e() {
            this.b.a.a(this.b, this.a, false, false);
        }
    }

}

