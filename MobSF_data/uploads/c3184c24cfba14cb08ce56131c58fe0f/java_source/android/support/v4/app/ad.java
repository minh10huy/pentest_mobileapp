/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.Notification
 *  android.app.Notification$Builder
 *  android.app.PendingIntent
 *  android.os.Bundle
 *  android.os.Parcelable
 *  android.util.Log
 *  android.util.SparseArray
 */
package android.support.v4.app;

import android.app.Notification;
import android.app.PendingIntent;
import android.os.Bundle;
import android.os.Parcelable;
import android.support.v4.app.ab;
import android.support.v4.app.af;
import android.util.Log;
import android.util.SparseArray;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

class ad {
    private static final Object a = new Object();
    private static Field b;
    private static boolean c;
    private static final Object d;

    static {
        d = new Object();
    }

    public static Bundle a(Notification.Builder builder, ab.a a2) {
        builder.addAction(a2.a(), a2.b(), a2.c());
        builder = new Bundle(a2.d());
        if (a2.f() != null) {
            builder.putParcelableArray("android.support.remoteInputs", (Parcelable[])ad.a(a2.f()));
        }
        if (a2.g() != null) {
            builder.putParcelableArray("android.support.dataRemoteInputs", (Parcelable[])ad.a(a2.g()));
        }
        builder.putBoolean("android.support.allowGeneratedReplies", a2.e());
        return builder;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static Bundle a(Notification notification) {
        Object object = a;
        synchronized (object) {
            void var0_1;
            if (c) {
                return null;
            }
            try {
                Field field;
                if (b == null) {
                    field = Notification.class.getDeclaredField("extras");
                    if (!Bundle.class.isAssignableFrom(field.getType())) {
                        Log.e((String)"NotificationCompat", (String)"Notification.extras field is not of type Bundle");
                        c = true;
                        return null;
                    }
                    field.setAccessible(true);
                    b = field;
                }
                Bundle bundle = (Bundle)b.get((Object)notification);
                field = bundle;
                if (bundle == null) {
                    field = new Bundle();
                    b.set((Object)notification, field);
                }
                return field;
            }
            catch (NoSuchFieldException noSuchFieldException) {
            }
            catch (IllegalAccessException illegalAccessException) {}
            Log.e((String)"NotificationCompat", (String)"Unable to access notification extras", (Throwable)var0_1);
            c = true;
            return null;
        }
    }

    private static Bundle a(af object) {
        Bundle bundle = new Bundle();
        bundle.putString("resultKey", object.a());
        bundle.putCharSequence("label", object.b());
        bundle.putCharSequenceArray("choices", object.c());
        bundle.putBoolean("allowFreeFormInput", object.e());
        bundle.putBundle("extras", object.f());
        Object object2 = object.d();
        if (object2 != null && !object2.isEmpty()) {
            object = new ArrayList(object2.size());
            object2 = object2.iterator();
            while (object2.hasNext()) {
                object.add((String)object2.next());
            }
            bundle.putStringArrayList("allowedDataTypes", (ArrayList)object);
        }
        return bundle;
    }

    public static SparseArray<Bundle> a(List<Bundle> list) {
        int n2 = list.size();
        SparseArray sparseArray = null;
        for (int i2 = 0; i2 < n2; ++i2) {
            Bundle bundle = list.get(i2);
            SparseArray sparseArray2 = sparseArray;
            if (bundle != null) {
                sparseArray2 = sparseArray;
                if (sparseArray == null) {
                    sparseArray2 = new SparseArray();
                }
                sparseArray2.put(i2, (Object)bundle);
            }
            sparseArray = sparseArray2;
        }
        return sparseArray;
    }

    private static Bundle[] a(af[] arraf) {
        if (arraf == null) {
            return null;
        }
        Bundle[] arrbundle = new Bundle[arraf.length];
        for (int i2 = 0; i2 < arraf.length; ++i2) {
            arrbundle[i2] = ad.a(arraf[i2]);
        }
        return arrbundle;
    }
}

