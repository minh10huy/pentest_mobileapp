/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.PendingIntent
 *  android.content.ComponentName
 *  android.content.Context
 *  android.content.Intent
 *  android.content.res.Resources
 *  android.graphics.Bitmap
 *  android.graphics.Bitmap$Config
 *  android.media.AudioManager
 *  android.media.MediaMetadataEditor
 *  android.media.Rating
 *  android.media.RemoteControlClient
 *  android.media.RemoteControlClient$MetadataEditor
 *  android.media.RemoteControlClient$OnMetadataUpdateListener
 *  android.media.RemoteControlClient$OnPlaybackPositionUpdateListener
 *  android.net.Uri
 *  android.os.BadParcelableException
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Bundle
 *  android.os.Handler
 *  android.os.IBinder
 *  android.os.IInterface
 *  android.os.Looper
 *  android.os.Message
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  android.os.RemoteCallbackList
 *  android.os.RemoteException
 *  android.os.ResultReceiver
 *  android.os.SystemClock
 *  android.text.TextUtils
 *  android.util.DisplayMetrics
 *  android.util.Log
 *  android.util.TypedValue
 *  android.view.KeyEvent
 *  android.view.ViewConfiguration
 */
package android.support.v4.media.session;

import android.app.PendingIntent;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.media.AudioManager;
import android.media.MediaMetadataEditor;
import android.media.Rating;
import android.media.RemoteControlClient;
import android.net.Uri;
import android.os.BadParcelableException;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.IInterface;
import android.os.Looper;
import android.os.Message;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.RemoteCallbackList;
import android.os.RemoteException;
import android.os.ResultReceiver;
import android.os.SystemClock;
import android.support.v4.app.h;
import android.support.v4.media.MediaDescriptionCompat;
import android.support.v4.media.MediaMetadataCompat;
import android.support.v4.media.RatingCompat;
import android.support.v4.media.g;
import android.support.v4.media.session.MediaControllerCompat;
import android.support.v4.media.session.ParcelableVolumeInfo;
import android.support.v4.media.session.PlaybackStateCompat;
import android.support.v4.media.session.b;
import android.support.v4.media.session.e;
import android.support.v4.media.session.f;
import android.support.v4.media.session.g;
import android.text.TextUtils;
import android.util.DisplayMetrics;
import android.util.Log;
import android.util.TypedValue;
import android.view.KeyEvent;
import android.view.ViewConfiguration;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class MediaSessionCompat {
    static int a;
    private final b b;
    private final MediaControllerCompat c;
    private final ArrayList<g> d = new ArrayList();

    /*
     * Enabled aggressive block sorting
     */
    public MediaSessionCompat(Context context, String object, ComponentName componentName, PendingIntent pendingIntent) {
        if (context == null) {
            throw new IllegalArgumentException("context must not be null");
        }
        if (TextUtils.isEmpty((CharSequence)object)) {
            throw new IllegalArgumentException("tag must not be null or empty");
        }
        ComponentName componentName2 = componentName;
        if (componentName == null) {
            componentName2 = componentName = android.support.v4.media.session.c.a(context);
            if (componentName == null) {
                Log.w((String)"MediaSessionCompat", (String)"Couldn't find a unique registered media button receiver in the given context.");
                componentName2 = componentName;
            }
        }
        componentName = pendingIntent;
        if (componentName2 != null) {
            componentName = pendingIntent;
            if (pendingIntent == null) {
                componentName = new Intent("android.intent.action.MEDIA_BUTTON");
                componentName.setComponent(componentName2);
                componentName = PendingIntent.getBroadcast((Context)context, (int)0, (Intent)componentName, (int)0);
            }
        }
        if (Build.VERSION.SDK_INT >= 21) {
            this.b = new e(context, (String)object);
            this.a(new a(){});
            this.b.b((PendingIntent)componentName);
        } else {
            object = Build.VERSION.SDK_INT >= 19 ? new d(context, (String)object, componentName2, (PendingIntent)componentName) : (Build.VERSION.SDK_INT >= 18 ? new c(context, (String)object, componentName2, (PendingIntent)componentName) : new f(context, (String)object, componentName2, (PendingIntent)componentName));
            this.b = object;
        }
        this.c = new MediaControllerCompat(context, this);
        if (a == 0) {
            a = (int)TypedValue.applyDimension((int)1, (float)320.0f, (DisplayMetrics)context.getResources().getDisplayMetrics());
        }
    }

    private static PlaybackStateCompat b(PlaybackStateCompat playbackStateCompat, MediaMetadataCompat mediaMetadataCompat) {
        PlaybackStateCompat playbackStateCompat2;
        block8 : {
            long l2;
            long l3;
            block9 : {
                playbackStateCompat2 = playbackStateCompat;
                if (playbackStateCompat == null) break block8;
                l2 = playbackStateCompat.b();
                l3 = -1L;
                if (l2 == -1L) {
                    return playbackStateCompat;
                }
                if (playbackStateCompat.a() == 3 || playbackStateCompat.a() == 4) break block9;
                playbackStateCompat2 = playbackStateCompat;
                if (playbackStateCompat.a() != 5) break block8;
            }
            l2 = playbackStateCompat.e();
            playbackStateCompat2 = playbackStateCompat;
            if (l2 > 0L) {
                long l4 = SystemClock.elapsedRealtime();
                long l5 = (long)(playbackStateCompat.c() * (float)(l4 - l2)) + playbackStateCompat.b();
                l2 = l3;
                if (mediaMetadataCompat != null) {
                    l2 = l3;
                    if (mediaMetadataCompat.a("android.media.metadata.DURATION")) {
                        l2 = mediaMetadataCompat.b("android.media.metadata.DURATION");
                    }
                }
                if (l2 < 0L || l5 <= l2) {
                    l2 = l5 < 0L ? 0L : l5;
                }
                playbackStateCompat2 = new PlaybackStateCompat.a(playbackStateCompat).a(playbackStateCompat.a(), l2, playbackStateCompat.c(), l4).a();
            }
        }
        return playbackStateCompat2;
    }

    public void a(int n2) {
        this.b.a(n2);
    }

    public void a(PendingIntent pendingIntent) {
        this.b.a(pendingIntent);
    }

    public void a(MediaMetadataCompat mediaMetadataCompat) {
        this.b.a(mediaMetadataCompat);
    }

    public void a(android.support.v4.media.g g2) {
        if (g2 != null) {
            this.b.a(g2);
            return;
        }
        throw new IllegalArgumentException("volumeProvider may not be null!");
    }

    public void a(a a2) {
        this.a(a2, null);
    }

    public void a(a a2, Handler handler) {
        b b2 = this.b;
        if (handler == null) {
            handler = new Handler();
        }
        b2.a(a2, handler);
    }

    public void a(g g2) {
        if (g2 != null) {
            this.d.add(g2);
            return;
        }
        throw new IllegalArgumentException("Listener may not be null");
    }

    public void a(PlaybackStateCompat playbackStateCompat) {
        this.b.a(playbackStateCompat);
    }

    public void a(boolean bl2) {
        this.b.a(bl2);
        Iterator<g> iterator = this.d.iterator();
        while (iterator.hasNext()) {
            iterator.next().a();
        }
    }

    public boolean a() {
        return this.b.a();
    }

    public void b() {
        this.b.b();
    }

    public void b(int n2) {
        this.b.b(n2);
    }

    public void b(g g2) {
        if (g2 != null) {
            this.d.remove(g2);
            return;
        }
        throw new IllegalArgumentException("Listener may not be null");
    }

    public Token c() {
        return this.b.c();
    }

    public MediaControllerCompat d() {
        return this.c;
    }

    public Object e() {
        return this.b.e();
    }

    public static final class QueueItem
    implements Parcelable {
        public static final Parcelable.Creator<QueueItem> CREATOR = new Parcelable.Creator<QueueItem>(){

            public QueueItem a(Parcel parcel) {
                return new QueueItem(parcel);
            }

            public QueueItem[] a(int n2) {
                return new QueueItem[n2];
            }

            public /* synthetic */ Object createFromParcel(Parcel parcel) {
                return this.a(parcel);
            }

            public /* synthetic */ Object[] newArray(int n2) {
                return this.a(n2);
            }
        };
        private final MediaDescriptionCompat a;
        private final long b;
        private Object c;

        QueueItem(Parcel parcel) {
            this.a = (MediaDescriptionCompat)MediaDescriptionCompat.CREATOR.createFromParcel(parcel);
            this.b = parcel.readLong();
        }

        private QueueItem(Object object, MediaDescriptionCompat mediaDescriptionCompat, long l2) {
            if (mediaDescriptionCompat != null) {
                if (l2 != -1L) {
                    this.a = mediaDescriptionCompat;
                    this.b = l2;
                    this.c = object;
                    return;
                }
                throw new IllegalArgumentException("Id cannot be QueueItem.UNKNOWN_ID");
            }
            throw new IllegalArgumentException("Description cannot be null.");
        }

        public static QueueItem a(Object object) {
            if (object != null && Build.VERSION.SDK_INT >= 21) {
                return new QueueItem(object, MediaDescriptionCompat.a(e.c.a(object)), e.c.b(object));
            }
            return null;
        }

        public static List<QueueItem> a(List<?> object) {
            if (object != null && Build.VERSION.SDK_INT >= 21) {
                ArrayList<QueueItem> arrayList = new ArrayList<QueueItem>();
                object = object.iterator();
                while (object.hasNext()) {
                    arrayList.add(QueueItem.a(object.next()));
                }
                return arrayList;
            }
            return null;
        }

        public MediaDescriptionCompat a() {
            return this.a;
        }

        public int describeContents() {
            return 0;
        }

        public String toString() {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("MediaSession.QueueItem {Description=");
            stringBuilder.append(this.a);
            stringBuilder.append(", Id=");
            stringBuilder.append(this.b);
            stringBuilder.append(" }");
            return stringBuilder.toString();
        }

        public void writeToParcel(Parcel parcel, int n2) {
            this.a.writeToParcel(parcel, n2);
            parcel.writeLong(this.b);
        }

    }

    static final class ResultReceiverWrapper
    implements Parcelable {
        public static final Parcelable.Creator<ResultReceiverWrapper> CREATOR = new Parcelable.Creator<ResultReceiverWrapper>(){

            public ResultReceiverWrapper a(Parcel parcel) {
                return new ResultReceiverWrapper(parcel);
            }

            public ResultReceiverWrapper[] a(int n2) {
                return new ResultReceiverWrapper[n2];
            }

            public /* synthetic */ Object createFromParcel(Parcel parcel) {
                return this.a(parcel);
            }

            public /* synthetic */ Object[] newArray(int n2) {
                return this.a(n2);
            }
        };
        private ResultReceiver a;

        ResultReceiverWrapper(Parcel parcel) {
            this.a = (ResultReceiver)ResultReceiver.CREATOR.createFromParcel(parcel);
        }

        public int describeContents() {
            return 0;
        }

        public void writeToParcel(Parcel parcel, int n2) {
            this.a.writeToParcel(parcel, n2);
        }

    }

    public static final class Token
    implements Parcelable {
        public static final Parcelable.Creator<Token> CREATOR = new Parcelable.Creator<Token>(){

            public Token a(Parcel object) {
                object = Build.VERSION.SDK_INT >= 21 ? object.readParcelable(null) : object.readStrongBinder();
                return new Token(object);
            }

            public Token[] a(int n2) {
                return new Token[n2];
            }

            public /* synthetic */ Object createFromParcel(Parcel parcel) {
                return this.a(parcel);
            }

            public /* synthetic */ Object[] newArray(int n2) {
                return this.a(n2);
            }
        };
        private final Object a;
        private final android.support.v4.media.session.b b;

        Token(Object object) {
            this(object, null);
        }

        Token(Object object, android.support.v4.media.session.b b2) {
            this.a = object;
            this.b = b2;
        }

        public static Token a(Object object) {
            return Token.a(object, null);
        }

        public static Token a(Object object, android.support.v4.media.session.b b2) {
            if (object != null && Build.VERSION.SDK_INT >= 21) {
                return new Token(android.support.v4.media.session.e.a(object), b2);
            }
            return null;
        }

        public Object a() {
            return this.a;
        }

        public android.support.v4.media.session.b b() {
            return this.b;
        }

        public int describeContents() {
            return 0;
        }

        public boolean equals(Object object) {
            if (this == object) {
                return true;
            }
            if (!(object instanceof Token)) {
                return false;
            }
            object = (Token)object;
            if (this.a == null) {
                if (object.a == null) {
                    return true;
                }
                return false;
            }
            if (object.a == null) {
                return false;
            }
            return this.a.equals(object.a);
        }

        public int hashCode() {
            if (this.a == null) {
                return 0;
            }
            return this.a.hashCode();
        }

        public void writeToParcel(Parcel parcel, int n2) {
            if (Build.VERSION.SDK_INT >= 21) {
                parcel.writeParcelable((Parcelable)this.a, n2);
                return;
            }
            parcel.writeStrongBinder((IBinder)this.a);
        }

    }

    public static abstract class android.support.v4.media.session.MediaSessionCompat$a {
        private WeakReference<android.support.v4.media.session.MediaSessionCompat$b> a;
        final Object b;
        private a c;
        private boolean d;

        /*
         * Enabled aggressive block sorting
         */
        public android.support.v4.media.session.MediaSessionCompat$a() {
            Object object = null;
            this.c = null;
            if (Build.VERSION.SDK_INT >= 24) {
                object = android.support.v4.media.session.g.a(new d());
            } else if (Build.VERSION.SDK_INT >= 23) {
                object = android.support.v4.media.session.f.a(new c());
            } else if (Build.VERSION.SDK_INT >= 21) {
                object = android.support.v4.media.session.e.a(new b());
            }
            this.b = object;
        }

        private void a(android.support.v4.media.session.MediaSessionCompat$b b2, Handler handler) {
            this.a = new WeakReference<android.support.v4.media.session.MediaSessionCompat$b>(b2);
            if (this.c != null) {
                this.c.removeCallbacksAndMessages(null);
            }
            this.c = new a(handler.getLooper());
        }

        private void i() {
            if (!this.d) {
                return;
            }
            boolean bl2 = false;
            this.d = false;
            this.c.removeMessages(1);
            Object object = this.a.get();
            if (object == null) {
                return;
            }
            long l2 = (object = object.d()) == null ? 0L : object.d();
            boolean bl3 = object != null && object.a() == 3;
            boolean bl4 = (516L & l2) != 0L;
            if ((l2 & 514L) != 0L) {
                bl2 = true;
            }
            if (bl3 && bl2) {
                this.c();
                return;
            }
            if (!bl3 && bl4) {
                this.b();
            }
        }

        public void a() {
        }

        public void a(int n2) {
        }

        public void a(long l2) {
        }

        public void a(Uri uri, Bundle bundle) {
        }

        public void a(MediaDescriptionCompat mediaDescriptionCompat) {
        }

        public void a(MediaDescriptionCompat mediaDescriptionCompat, int n2) {
        }

        public void a(RatingCompat ratingCompat) {
        }

        public void a(RatingCompat ratingCompat, Bundle bundle) {
        }

        public void a(String string2, Bundle bundle) {
        }

        public void a(String string2, Bundle bundle, ResultReceiver resultReceiver) {
        }

        public void a(boolean bl2) {
        }

        public boolean a(Intent object) {
            android.support.v4.media.session.MediaSessionCompat$b b2 = this.a.get();
            if (b2 != null) {
                if (this.c == null) {
                    return false;
                }
                if ((object = (KeyEvent)object.getParcelableExtra("android.intent.extra.KEY_EVENT")) != null) {
                    if (object.getAction() != 0) {
                        return false;
                    }
                    int n2 = object.getKeyCode();
                    if (n2 != 79 && n2 != 85) {
                        this.i();
                        return false;
                    }
                    if (object.getRepeatCount() > 0) {
                        this.i();
                        return true;
                    }
                    if (this.d) {
                        this.c.removeMessages(1);
                        this.d = false;
                        object = b2.d();
                        long l2 = object == null ? 0L : object.d();
                        if ((l2 & 32L) != 0L) {
                            this.d();
                            return true;
                        }
                    } else {
                        this.d = true;
                        this.c.sendEmptyMessageDelayed(1, (long)ViewConfiguration.getDoubleTapTimeout());
                    }
                    return true;
                }
            }
            return false;
        }

        public void b() {
        }

        public void b(int n2) {
        }

        public void b(long l2) {
        }

        public void b(Uri uri, Bundle bundle) {
        }

        public void b(MediaDescriptionCompat mediaDescriptionCompat) {
        }

        public void b(String string2, Bundle bundle) {
        }

        public void c() {
        }

        public void c(String string2, Bundle bundle) {
        }

        public void d() {
        }

        public void d(String string2, Bundle bundle) {
        }

        public void e() {
        }

        public void e(String string2, Bundle bundle) {
        }

        public void f() {
        }

        public void g() {
        }

        public void h() {
        }

        private class a
        extends Handler {
            a(Looper looper) {
                super(looper);
            }

            public void handleMessage(Message message) {
                if (message.what == 1) {
                    a.this.i();
                }
            }
        }

        private class b
        implements e.a {
            b() {
            }

            @Override
            public void a() {
                a.this.b();
            }

            @Override
            public void a(long l2) {
                a.this.a(l2);
            }

            @Override
            public void a(Object object) {
                a.this.a(RatingCompat.a(object));
            }

            @Override
            public void a(String string2, Bundle bundle) {
                a.this.c(string2, bundle);
            }

            /*
             * Enabled aggressive block sorting
             * Enabled unnecessary exception pruning
             * Enabled aggressive exception aggregation
             */
            @Override
            public void a(String object, Bundle object2, ResultReceiver object3) {
                try {
                    boolean bl2 = object.equals("android.support.v4.media.session.command.GET_EXTRA_BINDER");
                    Object var7_6 = null;
                    Object var6_7 = null;
                    if (bl2) {
                        object = (e)a.this.a.get();
                        if (object == null) return;
                        object2 = new Bundle();
                        object = (object = object.c().b()) == null ? var6_7 : object.asBinder();
                        h.a(object2, "android.support.v4.media.session.EXTRA_BINDER", (IBinder)object);
                        object3.send(0, object2);
                        return;
                    }
                    if (object.equals("android.support.v4.media.session.command.ADD_QUEUE_ITEM")) {
                        object2.setClassLoader(MediaDescriptionCompat.class.getClassLoader());
                        a.this.a((MediaDescriptionCompat)object2.getParcelable("android.support.v4.media.session.command.ARGUMENT_MEDIA_DESCRIPTION"));
                        return;
                    }
                    if (object.equals("android.support.v4.media.session.command.ADD_QUEUE_ITEM_AT")) {
                        object2.setClassLoader(MediaDescriptionCompat.class.getClassLoader());
                        a.this.a((MediaDescriptionCompat)object2.getParcelable("android.support.v4.media.session.command.ARGUMENT_MEDIA_DESCRIPTION"), object2.getInt("android.support.v4.media.session.command.ARGUMENT_INDEX"));
                        return;
                    }
                    if (object.equals("android.support.v4.media.session.command.REMOVE_QUEUE_ITEM")) {
                        object2.setClassLoader(MediaDescriptionCompat.class.getClassLoader());
                        object = a.this;
                        object2 = (MediaDescriptionCompat)object2.getParcelable("android.support.v4.media.session.command.ARGUMENT_MEDIA_DESCRIPTION");
                    } else {
                        if (!object.equals("android.support.v4.media.session.command.REMOVE_QUEUE_ITEM_AT")) {
                            a.this.a((String)object, (Bundle)object2, (ResultReceiver)object3);
                            return;
                        }
                        object3 = (e)a.this.a.get();
                        if (object3 == null) return;
                        if (((e)object3).j == null) return;
                        int n2 = object2.getInt("android.support.v4.media.session.command.ARGUMENT_INDEX", -1);
                        object = var7_6;
                        if (n2 >= 0) {
                            object = var7_6;
                            if (n2 < ((e)object3).j.size()) {
                                object = (QueueItem)((e)object3).j.get(n2);
                            }
                        }
                        if (object == null) return;
                        object2 = a.this;
                        object3 = object.a();
                        object = object2;
                        object2 = object3;
                    }
                    object.b((MediaDescriptionCompat)object2);
                    return;
                }
                catch (BadParcelableException badParcelableException) {}
                Log.e((String)"MediaSessionCompat", (String)"Could not unparcel the extra data.");
            }

            @Override
            public boolean a(Intent intent) {
                return a.this.a(intent);
            }

            @Override
            public void b() {
                a.this.c();
            }

            @Override
            public void b(long l2) {
                a.this.b(l2);
            }

            @Override
            public void b(String string2, Bundle bundle) {
                a.this.d(string2, bundle);
            }

            @Override
            public void c() {
                a.this.d();
            }

            @Override
            public void c(String object, Bundle bundle) {
                if (object.equals("android.support.v4.media.session.action.PLAY_FROM_URI")) {
                    object = (Uri)bundle.getParcelable("android.support.v4.media.session.action.ARGUMENT_URI");
                    bundle = (Bundle)bundle.getParcelable("android.support.v4.media.session.action.ARGUMENT_EXTRAS");
                    a.this.b((Uri)object, bundle);
                    return;
                }
                if (object.equals("android.support.v4.media.session.action.PREPARE")) {
                    a.this.a();
                    return;
                }
                if (object.equals("android.support.v4.media.session.action.PREPARE_FROM_MEDIA_ID")) {
                    object = bundle.getString("android.support.v4.media.session.action.ARGUMENT_MEDIA_ID");
                    bundle = bundle.getBundle("android.support.v4.media.session.action.ARGUMENT_EXTRAS");
                    a.this.a((String)object, bundle);
                    return;
                }
                if (object.equals("android.support.v4.media.session.action.PREPARE_FROM_SEARCH")) {
                    object = bundle.getString("android.support.v4.media.session.action.ARGUMENT_QUERY");
                    bundle = bundle.getBundle("android.support.v4.media.session.action.ARGUMENT_EXTRAS");
                    a.this.b((String)object, bundle);
                    return;
                }
                if (object.equals("android.support.v4.media.session.action.PREPARE_FROM_URI")) {
                    object = (Uri)bundle.getParcelable("android.support.v4.media.session.action.ARGUMENT_URI");
                    bundle = bundle.getBundle("android.support.v4.media.session.action.ARGUMENT_EXTRAS");
                    a.this.a((Uri)object, bundle);
                    return;
                }
                if (object.equals("android.support.v4.media.session.action.SET_CAPTIONING_ENABLED")) {
                    boolean bl2 = bundle.getBoolean("android.support.v4.media.session.action.ARGUMENT_CAPTIONING_ENABLED");
                    a.this.a(bl2);
                    return;
                }
                if (object.equals("android.support.v4.media.session.action.SET_REPEAT_MODE")) {
                    int n2 = bundle.getInt("android.support.v4.media.session.action.ARGUMENT_REPEAT_MODE");
                    a.this.a(n2);
                    return;
                }
                if (object.equals("android.support.v4.media.session.action.SET_SHUFFLE_MODE")) {
                    int n3 = bundle.getInt("android.support.v4.media.session.action.ARGUMENT_SHUFFLE_MODE");
                    a.this.b(n3);
                    return;
                }
                if (object.equals("android.support.v4.media.session.action.SET_RATING")) {
                    bundle.setClassLoader(RatingCompat.class.getClassLoader());
                    object = (RatingCompat)bundle.getParcelable("android.support.v4.media.session.action.ARGUMENT_RATING");
                    bundle = bundle.getBundle("android.support.v4.media.session.action.ARGUMENT_EXTRAS");
                    a.this.a((RatingCompat)object, bundle);
                    return;
                }
                a.this.e((String)object, bundle);
            }

            @Override
            public void d() {
                a.this.e();
            }

            @Override
            public void e() {
                a.this.f();
            }

            @Override
            public void f() {
                a.this.g();
            }

            @Override
            public void g() {
                a.this.h();
            }
        }

        private class c
        extends b
        implements f.a {
            c() {
            }

            @Override
            public void a(Uri uri, Bundle bundle) {
                a.this.b(uri, bundle);
            }
        }

        private class d
        extends c
        implements g.a {
            d() {
            }

            @Override
            public void b(Uri uri, Bundle bundle) {
                a.this.a(uri, bundle);
            }

            @Override
            public void d(String string2, Bundle bundle) {
                a.this.a(string2, bundle);
            }

            @Override
            public void e(String string2, Bundle bundle) {
                a.this.b(string2, bundle);
            }

            @Override
            public void h() {
                a.this.a();
            }
        }

    }

    static interface b {
        public void a(int var1);

        public void a(PendingIntent var1);

        public void a(MediaMetadataCompat var1);

        public void a(android.support.v4.media.g var1);

        public void a(a var1, Handler var2);

        public void a(PlaybackStateCompat var1);

        public void a(boolean var1);

        public boolean a();

        public void b();

        public void b(int var1);

        public void b(PendingIntent var1);

        public Token c();

        public PlaybackStateCompat d();

        public Object e();
    }

    static class c
    extends f {
        private static boolean x = true;

        c(Context context, String string2, ComponentName componentName, PendingIntent pendingIntent) {
            super(context, string2, componentName, pendingIntent);
        }

        @Override
        int a(long l2) {
            int n2;
            int n3 = n2 = super.a(l2);
            if ((l2 & 256L) != 0L) {
                n3 = n2 | 256;
            }
            return n3;
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        void a(PendingIntent pendingIntent, ComponentName componentName) {
            block4 : {
                if (x) {
                    try {
                        this.c.registerMediaButtonEventReceiver(pendingIntent);
                        break block4;
                    }
                    catch (NullPointerException nullPointerException) {}
                    Log.w((String)"MediaSessionCompat", (String)"Unable to register media button event receiver with PendingIntent, falling back to ComponentName.");
                    x = false;
                }
            }
            if (!x) {
                super.a(pendingIntent, componentName);
            }
        }

        @Override
        public void a(a object, Handler handler) {
            super.a((a)object, handler);
            if (object == null) {
                this.d.setPlaybackPositionUpdateListener(null);
                return;
            }
            object = new RemoteControlClient.OnPlaybackPositionUpdateListener(){

                public void onPlaybackPositionUpdate(long l2) {
                    c.this.a(18, l2);
                }
            };
            this.d.setPlaybackPositionUpdateListener((RemoteControlClient.OnPlaybackPositionUpdateListener)object);
        }

        @Override
        void b(PendingIntent pendingIntent, ComponentName componentName) {
            if (x) {
                this.c.unregisterMediaButtonEventReceiver(pendingIntent);
                return;
            }
            super.b(pendingIntent, componentName);
        }

        @Override
        void b(PlaybackStateCompat playbackStateCompat) {
            long l2 = playbackStateCompat.b();
            float f2 = playbackStateCompat.c();
            long l3 = playbackStateCompat.e();
            long l4 = SystemClock.elapsedRealtime();
            long l5 = l2;
            if (playbackStateCompat.a() == 3) {
                long l6 = 0L;
                l5 = l2;
                if (l2 > 0L) {
                    l5 = l6;
                    if (l3 > 0L) {
                        l5 = l6 = l4 - l3;
                        if (f2 > 0.0f) {
                            l5 = l6;
                            if (f2 != 1.0f) {
                                l5 = (long)((float)l6 * f2);
                            }
                        }
                    }
                    l5 = l2 + l5;
                }
            }
            this.d.setPlaybackState(this.d(playbackStateCompat.a()), l5, f2);
        }

    }

    static class d
    extends c {
        d(Context context, String string2, ComponentName componentName, PendingIntent pendingIntent) {
            super(context, string2, componentName, pendingIntent);
        }

        @Override
        int a(long l2) {
            int n2;
            int n3 = n2 = super.a(l2);
            if ((l2 & 128L) != 0L) {
                n3 = n2 | 512;
            }
            return n3;
        }

        @Override
        RemoteControlClient.MetadataEditor a(Bundle bundle) {
            RemoteControlClient.MetadataEditor metadataEditor = super.a(bundle);
            long l2 = this.l == null ? 0L : this.l.d();
            if ((l2 & 128L) != 0L) {
                metadataEditor.addEditableKey(268435457);
            }
            if (bundle == null) {
                return metadataEditor;
            }
            if (bundle.containsKey("android.media.metadata.YEAR")) {
                metadataEditor.putLong(8, bundle.getLong("android.media.metadata.YEAR"));
            }
            if (bundle.containsKey("android.media.metadata.RATING")) {
                metadataEditor.putObject(101, (Object)bundle.getParcelable("android.media.metadata.RATING"));
            }
            if (bundle.containsKey("android.media.metadata.USER_RATING")) {
                metadataEditor.putObject(268435457, (Object)bundle.getParcelable("android.media.metadata.USER_RATING"));
            }
            return metadataEditor;
        }

        @Override
        public void a(a object, Handler handler) {
            super.a((a)object, handler);
            if (object == null) {
                this.d.setMetadataUpdateListener(null);
                return;
            }
            object = new RemoteControlClient.OnMetadataUpdateListener(){

                public void onMetadataUpdate(int n2, Object object) {
                    if (n2 == 268435457 && object instanceof Rating) {
                        d.this.a(19, RatingCompat.a(object));
                    }
                }
            };
            this.d.setMetadataUpdateListener((RemoteControlClient.OnMetadataUpdateListener)object);
        }

    }

    static class e
    implements b {
        int a;
        boolean b;
        int c;
        int d;
        private final Object e;
        private final Token f;
        private boolean g = false;
        private final RemoteCallbackList<android.support.v4.media.session.a> h = new RemoteCallbackList();
        private PlaybackStateCompat i;
        private List<QueueItem> j;
        private MediaMetadataCompat k;

        public e(Context context, String string2) {
            this.e = android.support.v4.media.session.e.a(context, string2);
            this.f = new Token((Object)android.support.v4.media.session.e.d(this.e), new a());
        }

        @Override
        public void a(int n2) {
            android.support.v4.media.session.e.a(this.e, n2);
        }

        @Override
        public void a(PendingIntent pendingIntent) {
            android.support.v4.media.session.e.a(this.e, pendingIntent);
        }

        @Override
        public void a(MediaMetadataCompat object) {
            this.k = object;
            Object object2 = this.e;
            object = object == null ? null : object.b();
            android.support.v4.media.session.e.c(object2, object);
        }

        @Override
        public void a(android.support.v4.media.g g2) {
            android.support.v4.media.session.e.a(this.e, g2.d());
        }

        @Override
        public void a(android.support.v4.media.session.MediaSessionCompat$a a2, Handler handler) {
            Object object = this.e;
            Object object2 = a2 == null ? null : a2.b;
            android.support.v4.media.session.e.a(object, object2, handler);
            if (a2 != null) {
                a2.a(this, handler);
            }
        }

        /*
         * Loose catch block
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         * Lifted jumps to return sites
         */
        @Override
        public void a(PlaybackStateCompat object) {
            this.i = object;
            int n2 = this.h.beginBroadcast() - 1;
            do {
                Object object2;
                if (n2 >= 0) {
                    object2 = (android.support.v4.media.session.a)this.h.getBroadcastItem(n2);
                    object2.a((PlaybackStateCompat)object);
                } else {
                    this.h.finishBroadcast();
                    object2 = this.e;
                    object = object == null ? null : object.f();
                    android.support.v4.media.session.e.b(object2, object);
                    return;
                    catch (RemoteException remoteException) {}
                }
                --n2;
            } while (true);
        }

        @Override
        public void a(boolean bl2) {
            android.support.v4.media.session.e.a(this.e, bl2);
        }

        @Override
        public boolean a() {
            return android.support.v4.media.session.e.b(this.e);
        }

        @Override
        public void b() {
            this.g = true;
            android.support.v4.media.session.e.c(this.e);
        }

        @Override
        public void b(int n2) {
            android.support.v4.media.session.e.b(this.e, n2);
        }

        @Override
        public void b(PendingIntent pendingIntent) {
            android.support.v4.media.session.e.b(this.e, pendingIntent);
        }

        @Override
        public Token c() {
            return this.f;
        }

        @Override
        public PlaybackStateCompat d() {
            return this.i;
        }

        @Override
        public Object e() {
            return null;
        }

        class a
        extends b.a {
            a() {
            }

            @Override
            public void a(int n2) {
                throw new AssertionError();
            }

            @Override
            public void a(int n2, int n3, String string2) {
                throw new AssertionError();
            }

            @Override
            public void a(long l2) {
                throw new AssertionError();
            }

            @Override
            public void a(Uri uri, Bundle bundle) {
                throw new AssertionError();
            }

            @Override
            public void a(MediaDescriptionCompat mediaDescriptionCompat) {
                throw new AssertionError();
            }

            @Override
            public void a(MediaDescriptionCompat mediaDescriptionCompat, int n2) {
                throw new AssertionError();
            }

            @Override
            public void a(RatingCompat ratingCompat) {
                throw new AssertionError();
            }

            @Override
            public void a(RatingCompat ratingCompat, Bundle bundle) {
                throw new AssertionError();
            }

            @Override
            public void a(android.support.v4.media.session.a a2) {
                if (!e.this.g) {
                    e.this.h.register((IInterface)a2);
                }
            }

            @Override
            public void a(String string2, Bundle bundle) {
                throw new AssertionError();
            }

            @Override
            public void a(String string2, Bundle bundle, ResultReceiverWrapper resultReceiverWrapper) {
                throw new AssertionError();
            }

            @Override
            public void a(boolean bl2) {
                throw new AssertionError();
            }

            @Override
            public boolean a() {
                throw new AssertionError();
            }

            @Override
            public boolean a(KeyEvent keyEvent) {
                throw new AssertionError();
            }

            @Override
            public String b() {
                throw new AssertionError();
            }

            @Override
            public void b(int n2) {
                throw new AssertionError();
            }

            @Override
            public void b(int n2, int n3, String string2) {
                throw new AssertionError();
            }

            @Override
            public void b(long l2) {
                throw new AssertionError();
            }

            @Override
            public void b(Uri uri, Bundle bundle) {
                throw new AssertionError();
            }

            @Override
            public void b(MediaDescriptionCompat mediaDescriptionCompat) {
                throw new AssertionError();
            }

            @Override
            public void b(android.support.v4.media.session.a a2) {
                e.this.h.unregister((IInterface)a2);
            }

            @Override
            public void b(String string2, Bundle bundle) {
                throw new AssertionError();
            }

            @Override
            public void b(boolean bl2) {
            }

            @Override
            public String c() {
                throw new AssertionError();
            }

            @Override
            public void c(int n2) {
                throw new AssertionError();
            }

            @Override
            public void c(String string2, Bundle bundle) {
                throw new AssertionError();
            }

            @Override
            public PendingIntent d() {
                throw new AssertionError();
            }

            @Override
            public void d(String string2, Bundle bundle) {
                throw new AssertionError();
            }

            @Override
            public long e() {
                throw new AssertionError();
            }

            @Override
            public void e(String string2, Bundle bundle) {
                throw new AssertionError();
            }

            @Override
            public ParcelableVolumeInfo f() {
                throw new AssertionError();
            }

            @Override
            public MediaMetadataCompat g() {
                throw new AssertionError();
            }

            @Override
            public PlaybackStateCompat h() {
                return MediaSessionCompat.b(e.this.i, e.this.k);
            }

            @Override
            public List<QueueItem> i() {
                return null;
            }

            @Override
            public CharSequence j() {
                throw new AssertionError();
            }

            @Override
            public Bundle k() {
                throw new AssertionError();
            }

            @Override
            public int l() {
                return e.this.a;
            }

            @Override
            public boolean m() {
                return e.this.b;
            }

            @Override
            public int n() {
                return e.this.c;
            }

            @Override
            public boolean o() {
                return false;
            }

            @Override
            public int p() {
                return e.this.d;
            }

            @Override
            public void q() {
                throw new AssertionError();
            }

            @Override
            public void r() {
                throw new AssertionError();
            }

            @Override
            public void s() {
                throw new AssertionError();
            }

            @Override
            public void t() {
                throw new AssertionError();
            }

            @Override
            public void u() {
                throw new AssertionError();
            }

            @Override
            public void v() {
                throw new AssertionError();
            }

            @Override
            public void w() {
                throw new AssertionError();
            }

            @Override
            public void x() {
                throw new AssertionError();
            }
        }

    }

    static class f
    implements android.support.v4.media.session.MediaSessionCompat$b {
        private final b A;
        private final Token B;
        private c C;
        private boolean D = false;
        private boolean E = false;
        private g.a F = new g.a(){

            @Override
            public void a(android.support.v4.media.g object) {
                if (f.this.w != object) {
                    return;
                }
                object = new ParcelableVolumeInfo(f.this.u, f.this.v, object.b(), object.c(), object.a());
                f.this.a((ParcelableVolumeInfo)object);
            }
        };
        final String a;
        final String b;
        final AudioManager c;
        final RemoteControlClient d;
        final Object e = new Object();
        final RemoteCallbackList<android.support.v4.media.session.a> f = new RemoteCallbackList();
        boolean g = false;
        boolean h = false;
        volatile android.support.v4.media.session.MediaSessionCompat$a i;
        int j;
        MediaMetadataCompat k;
        PlaybackStateCompat l;
        PendingIntent m;
        List<QueueItem> n;
        CharSequence o;
        int p;
        boolean q;
        int r;
        int s;
        Bundle t;
        int u;
        int v;
        android.support.v4.media.g w;
        private final Context x;
        private final ComponentName y;
        private final PendingIntent z;

        public f(Context context, String string2, ComponentName componentName, PendingIntent pendingIntent) {
            if (componentName != null) {
                this.x = context;
                this.a = context.getPackageName();
                this.c = (AudioManager)context.getSystemService("audio");
                this.b = string2;
                this.y = componentName;
                this.z = pendingIntent;
                this.A = new b();
                this.B = new Token(this.A);
                this.p = 0;
                this.u = 1;
                this.v = 3;
                this.d = new RemoteControlClient(pendingIntent);
                return;
            }
            throw new IllegalArgumentException("MediaButtonReceiver component may not be null.");
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        private void b(MediaMetadataCompat mediaMetadataCompat) {
            int n2 = this.f.beginBroadcast() - 1;
            do {
                if (n2 < 0) {
                    this.f.finishBroadcast();
                    return;
                }
                android.support.v4.media.session.a a2 = (android.support.v4.media.session.a)this.f.getBroadcastItem(n2);
                try {
                    a2.a(mediaMetadataCompat);
                }
                catch (RemoteException remoteException) {}
                --n2;
            } while (true);
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        private void c(PlaybackStateCompat playbackStateCompat) {
            int n2 = this.f.beginBroadcast() - 1;
            do {
                if (n2 < 0) {
                    this.f.finishBroadcast();
                    return;
                }
                android.support.v4.media.session.a a2 = (android.support.v4.media.session.a)this.f.getBroadcastItem(n2);
                try {
                    a2.a(playbackStateCompat);
                }
                catch (RemoteException remoteException) {}
                --n2;
            } while (true);
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        private void g() {
            int n2 = this.f.beginBroadcast() - 1;
            do {
                if (n2 < 0) {
                    this.f.finishBroadcast();
                    this.f.kill();
                    return;
                }
                android.support.v4.media.session.a a2 = (android.support.v4.media.session.a)this.f.getBroadcastItem(n2);
                try {
                    a2.a();
                }
                catch (RemoteException remoteException) {}
                --n2;
            } while (true);
        }

        int a(long l2) {
            int n2 = (1L & l2) != 0L ? 32 : 0;
            int n3 = n2;
            if ((2L & l2) != 0L) {
                n3 = n2 | 16;
            }
            n2 = n3;
            if ((4L & l2) != 0L) {
                n2 = n3 | 4;
            }
            n3 = n2;
            if ((8L & l2) != 0L) {
                n3 = n2 | 2;
            }
            n2 = n3;
            if ((16L & l2) != 0L) {
                n2 = n3 | 1;
            }
            n3 = n2;
            if ((32L & l2) != 0L) {
                n3 = n2 | 128;
            }
            n2 = n3;
            if ((64L & l2) != 0L) {
                n2 = n3 | 64;
            }
            n3 = n2;
            if ((l2 & 512L) != 0L) {
                n3 = n2 | 8;
            }
            return n3;
        }

        /*
         * Enabled aggressive block sorting
         */
        RemoteControlClient.MetadataEditor a(Bundle bundle) {
            RemoteControlClient.MetadataEditor metadataEditor;
            block20 : {
                Bitmap bitmap;
                block18 : {
                    Bitmap bitmap2;
                    block19 : {
                        block17 : {
                            metadataEditor = this.d.editMetadata(true);
                            if (bundle == null) {
                                return metadataEditor;
                            }
                            if (!bundle.containsKey("android.media.metadata.ART")) break block17;
                            bitmap = bitmap2 = (Bitmap)bundle.getParcelable("android.media.metadata.ART");
                            if (bitmap2 == null) break block18;
                            break block19;
                        }
                        if (!bundle.containsKey("android.media.metadata.ALBUM_ART")) break block20;
                        bitmap = bitmap2 = (Bitmap)bundle.getParcelable("android.media.metadata.ALBUM_ART");
                        if (bitmap2 == null) break block18;
                    }
                    bitmap = bitmap2.copy(bitmap2.getConfig(), false);
                }
                metadataEditor.putBitmap(100, bitmap);
            }
            if (bundle.containsKey("android.media.metadata.ALBUM")) {
                metadataEditor.putString(1, bundle.getString("android.media.metadata.ALBUM"));
            }
            if (bundle.containsKey("android.media.metadata.ALBUM_ARTIST")) {
                metadataEditor.putString(13, bundle.getString("android.media.metadata.ALBUM_ARTIST"));
            }
            if (bundle.containsKey("android.media.metadata.ARTIST")) {
                metadataEditor.putString(2, bundle.getString("android.media.metadata.ARTIST"));
            }
            if (bundle.containsKey("android.media.metadata.AUTHOR")) {
                metadataEditor.putString(3, bundle.getString("android.media.metadata.AUTHOR"));
            }
            if (bundle.containsKey("android.media.metadata.COMPILATION")) {
                metadataEditor.putString(15, bundle.getString("android.media.metadata.COMPILATION"));
            }
            if (bundle.containsKey("android.media.metadata.COMPOSER")) {
                metadataEditor.putString(4, bundle.getString("android.media.metadata.COMPOSER"));
            }
            if (bundle.containsKey("android.media.metadata.DATE")) {
                metadataEditor.putString(5, bundle.getString("android.media.metadata.DATE"));
            }
            if (bundle.containsKey("android.media.metadata.DISC_NUMBER")) {
                metadataEditor.putLong(14, bundle.getLong("android.media.metadata.DISC_NUMBER"));
            }
            if (bundle.containsKey("android.media.metadata.DURATION")) {
                metadataEditor.putLong(9, bundle.getLong("android.media.metadata.DURATION"));
            }
            if (bundle.containsKey("android.media.metadata.GENRE")) {
                metadataEditor.putString(6, bundle.getString("android.media.metadata.GENRE"));
            }
            if (bundle.containsKey("android.media.metadata.TITLE")) {
                metadataEditor.putString(7, bundle.getString("android.media.metadata.TITLE"));
            }
            if (bundle.containsKey("android.media.metadata.TRACK_NUMBER")) {
                metadataEditor.putLong(0, bundle.getLong("android.media.metadata.TRACK_NUMBER"));
            }
            if (bundle.containsKey("android.media.metadata.WRITER")) {
                metadataEditor.putString(11, bundle.getString("android.media.metadata.WRITER"));
            }
            return metadataEditor;
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        public void a(int n2) {
            Object object = this.e;
            synchronized (object) {
                this.j = n2;
            }
            this.f();
        }

        void a(int n2, int n3) {
            this.a(n2, null, n3);
        }

        void a(int n2, Object object) {
            this.a(n2, object, null);
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        void a(int n2, Object object, int n3) {
            Object object2 = this.e;
            synchronized (object2) {
                if (this.C != null) {
                    this.C.a(n2, object, n3);
                }
                return;
            }
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        void a(int n2, Object object, Bundle bundle) {
            Object object2 = this.e;
            synchronized (object2) {
                if (this.C != null) {
                    this.C.a(n2, object, bundle);
                }
                return;
            }
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        public void a(PendingIntent pendingIntent) {
            Object object = this.e;
            synchronized (object) {
                this.m = pendingIntent;
                return;
            }
        }

        void a(PendingIntent pendingIntent, ComponentName componentName) {
            this.c.registerMediaButtonEventReceiver(componentName);
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        public void a(MediaMetadataCompat object) {
            MediaMetadataCompat mediaMetadataCompat = object;
            if (object != null) {
                mediaMetadataCompat = new MediaMetadataCompat.a((MediaMetadataCompat)object, MediaSessionCompat.a).a();
            }
            object = this.e;
            synchronized (object) {
                this.k = mediaMetadataCompat;
            }
            this.b(mediaMetadataCompat);
            if (!this.h) {
                return;
            }
            object = mediaMetadataCompat == null ? null : mediaMetadataCompat.a();
            this.a((Bundle)object).apply();
        }

        @Override
        public void a(android.support.v4.media.g g2) {
            if (g2 != null) {
                if (this.w != null) {
                    this.w.a(null);
                }
                this.u = 2;
                this.w = g2;
                this.a(new ParcelableVolumeInfo(this.u, this.v, this.w.b(), this.w.c(), this.w.a()));
                g2.a(this.F);
                return;
            }
            throw new IllegalArgumentException("volumeProvider may not be null");
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        public void a(android.support.v4.media.session.MediaSessionCompat$a a2, Handler object) {
            this.i = a2;
            if (a2 == null) {
                return;
            }
            a2 = object;
            if (object == null) {
                a2 = new Handler();
            }
            object = this.e;
            synchronized (object) {
                if (this.C != null) {
                    this.C.removeCallbacksAndMessages(null);
                }
                this.C = new c(a2.getLooper());
                this.i.a(this, (Handler)a2);
                return;
            }
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        void a(ParcelableVolumeInfo parcelableVolumeInfo) {
            int n2 = this.f.beginBroadcast() - 1;
            do {
                if (n2 < 0) {
                    this.f.finishBroadcast();
                    return;
                }
                android.support.v4.media.session.a a2 = (android.support.v4.media.session.a)this.f.getBroadcastItem(n2);
                try {
                    a2.a(parcelableVolumeInfo);
                }
                catch (RemoteException remoteException) {}
                --n2;
            } while (true);
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        public void a(PlaybackStateCompat playbackStateCompat) {
            Object object = this.e;
            synchronized (object) {
                this.l = playbackStateCompat;
            }
            this.c(playbackStateCompat);
            if (!this.h) {
                return;
            }
            if (playbackStateCompat == null) {
                this.d.setPlaybackState(0);
                this.d.setTransportControlFlags(0);
                return;
            }
            this.b(playbackStateCompat);
            this.d.setTransportControlFlags(this.a(playbackStateCompat.d()));
        }

        @Override
        public void a(boolean bl2) {
            if (bl2 == this.h) {
                return;
            }
            this.h = bl2;
            if (this.f()) {
                this.a(this.k);
                this.a(this.l);
            }
        }

        @Override
        public boolean a() {
            return this.h;
        }

        @Override
        public void b() {
            this.h = false;
            this.g = true;
            this.f();
            this.g();
        }

        @Override
        public void b(int n2) {
            if (this.w != null) {
                this.w.a(null);
            }
            this.u = 1;
            this.a(new ParcelableVolumeInfo(this.u, this.v, 2, this.c.getStreamMaxVolume(this.v), this.c.getStreamVolume(this.v)));
        }

        void b(int n2, int n3) {
            if (this.u == 2) {
                if (this.w != null) {
                    this.w.c(n2);
                    return;
                }
            } else {
                this.c.adjustStreamVolume(this.v, n2, n3);
            }
        }

        @Override
        public void b(PendingIntent pendingIntent) {
        }

        void b(PendingIntent pendingIntent, ComponentName componentName) {
            this.c.unregisterMediaButtonEventReceiver(componentName);
        }

        void b(PlaybackStateCompat playbackStateCompat) {
            this.d.setPlaybackState(this.d(playbackStateCompat.a()));
        }

        @Override
        public Token c() {
            return this.B;
        }

        void c(int n2) {
            this.a(n2, null);
        }

        void c(int n2, int n3) {
            if (this.u == 2) {
                if (this.w != null) {
                    this.w.b(n2);
                    return;
                }
            } else {
                this.c.setStreamVolume(this.v, n2, n3);
            }
        }

        int d(int n2) {
            switch (n2) {
                default: {
                    return -1;
                }
                case 10: 
                case 11: {
                    return 6;
                }
                case 9: {
                    return 7;
                }
                case 7: {
                    return 9;
                }
                case 6: 
                case 8: {
                    return 8;
                }
                case 5: {
                    return 5;
                }
                case 4: {
                    return 4;
                }
                case 3: {
                    return 3;
                }
                case 2: {
                    return 2;
                }
                case 1: {
                    return 1;
                }
                case 0: 
            }
            return 0;
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @Override
        public PlaybackStateCompat d() {
            Object object = this.e;
            synchronized (object) {
                return this.l;
            }
        }

        @Override
        public Object e() {
            return null;
        }

        boolean f() {
            block9 : {
                block10 : {
                    block8 : {
                        if (!this.h) break block8;
                        if (!this.D && (this.j & 1) != 0) {
                            this.a(this.z, this.y);
                            this.D = true;
                        } else if (this.D && (this.j & 1) == 0) {
                            this.b(this.z, this.y);
                            this.D = false;
                        }
                        if (!this.E && (this.j & 2) != 0) {
                            this.c.registerRemoteControlClient(this.d);
                            this.E = true;
                            return true;
                        }
                        if (!this.E || (this.j & 2) != 0) break block9;
                        break block10;
                    }
                    if (this.D) {
                        this.b(this.z, this.y);
                        this.D = false;
                    }
                    if (!this.E) break block9;
                }
                this.d.setPlaybackState(0);
                this.c.unregisterRemoteControlClient(this.d);
                this.E = false;
            }
            return false;
        }

        private static final class a {
            public final String a;
            public final Bundle b;
            public final ResultReceiver c;

            public a(String string2, Bundle bundle, ResultReceiver resultReceiver) {
                this.a = string2;
                this.b = bundle;
                this.c = resultReceiver;
            }
        }

        class b
        extends b.a {
            b() {
            }

            @Override
            public void a(int n2) {
                f.this.a(28, n2);
            }

            @Override
            public void a(int n2, int n3, String string2) {
                f.this.b(n2, n3);
            }

            @Override
            public void a(long l2) {
                f.this.a(11, l2);
            }

            @Override
            public void a(Uri uri, Bundle bundle) {
                f.this.a(6, (Object)uri, bundle);
            }

            @Override
            public void a(MediaDescriptionCompat mediaDescriptionCompat) {
                f.this.a(25, mediaDescriptionCompat);
            }

            @Override
            public void a(MediaDescriptionCompat mediaDescriptionCompat, int n2) {
                f.this.a(26, (Object)mediaDescriptionCompat, n2);
            }

            @Override
            public void a(RatingCompat ratingCompat) {
                f.this.a(19, ratingCompat);
            }

            @Override
            public void a(RatingCompat ratingCompat, Bundle bundle) {
                f.this.a(31, (Object)ratingCompat, bundle);
            }

            /*
             * Enabled aggressive block sorting
             * Enabled unnecessary exception pruning
             * Enabled aggressive exception aggregation
             */
            @Override
            public void a(android.support.v4.media.session.a a2) {
                if (!f.this.g) {
                    f.this.f.register((IInterface)a2);
                    return;
                }
                try {
                    a2.a();
                    return;
                }
                catch (Exception exception) {
                    return;
                }
            }

            @Override
            public void a(String string2, Bundle bundle) {
                f.this.a(4, (Object)string2, bundle);
            }

            @Override
            public void a(String string2, Bundle bundle, ResultReceiverWrapper resultReceiverWrapper) {
                f.this.a(1, new a(string2, bundle, resultReceiverWrapper.a));
            }

            @Override
            public void a(boolean bl2) {
                f.this.a(29, bl2);
            }

            @Override
            public boolean a() {
                if ((f.this.j & 2) != 0) {
                    return true;
                }
                return false;
            }

            @Override
            public boolean a(KeyEvent keyEvent) {
                int n2 = f.this.j;
                boolean bl2 = true;
                if ((n2 & 1) == 0) {
                    bl2 = false;
                }
                if (bl2) {
                    f.this.a(21, (Object)keyEvent);
                }
                return bl2;
            }

            @Override
            public String b() {
                return f.this.a;
            }

            @Override
            public void b(int n2) {
                f.this.a(23, n2);
            }

            @Override
            public void b(int n2, int n3, String string2) {
                f.this.c(n2, n3);
            }

            @Override
            public void b(long l2) {
                f.this.a(18, l2);
            }

            @Override
            public void b(Uri uri, Bundle bundle) {
                f.this.a(10, (Object)uri, bundle);
            }

            @Override
            public void b(MediaDescriptionCompat mediaDescriptionCompat) {
                f.this.a(27, mediaDescriptionCompat);
            }

            @Override
            public void b(android.support.v4.media.session.a a2) {
                f.this.f.unregister((IInterface)a2);
            }

            @Override
            public void b(String string2, Bundle bundle) {
                f.this.a(5, (Object)string2, bundle);
            }

            @Override
            public void b(boolean bl2) {
            }

            @Override
            public String c() {
                return f.this.b;
            }

            @Override
            public void c(int n2) {
                f.this.a(30, n2);
            }

            @Override
            public void c(String string2, Bundle bundle) {
                f.this.a(8, (Object)string2, bundle);
            }

            /*
             * Enabled aggressive block sorting
             * Enabled unnecessary exception pruning
             * Enabled aggressive exception aggregation
             */
            @Override
            public PendingIntent d() {
                Object object = f.this.e;
                synchronized (object) {
                    return f.this.m;
                }
            }

            @Override
            public void d(String string2, Bundle bundle) {
                f.this.a(9, (Object)string2, bundle);
            }

            /*
             * Enabled aggressive block sorting
             * Enabled unnecessary exception pruning
             * Enabled aggressive exception aggregation
             */
            @Override
            public long e() {
                Object object = f.this.e;
                synchronized (object) {
                    return f.this.j;
                }
            }

            @Override
            public void e(String string2, Bundle bundle) {
                f.this.a(20, (Object)string2, bundle);
            }

            /*
             * Enabled aggressive block sorting
             * Enabled unnecessary exception pruning
             * Enabled aggressive exception aggregation
             */
            @Override
            public ParcelableVolumeInfo f() {
                Object object = f.this.e;
                synchronized (object) {
                    int n2;
                    int n3;
                    int n4;
                    int n5 = f.this.u;
                    int n6 = f.this.v;
                    android.support.v4.media.g g2 = f.this.w;
                    if (n5 == 2) {
                        n2 = g2.b();
                        n4 = g2.c();
                        n3 = g2.a();
                    } else {
                        n4 = f.this.c.getStreamMaxVolume(n6);
                        n3 = f.this.c.getStreamVolume(n6);
                        n2 = 2;
                    }
                    return new ParcelableVolumeInfo(n5, n6, n2, n4, n3);
                }
            }

            @Override
            public MediaMetadataCompat g() {
                return f.this.k;
            }

            /*
             * Enabled aggressive block sorting
             * Enabled unnecessary exception pruning
             * Enabled aggressive exception aggregation
             */
            @Override
            public PlaybackStateCompat h() {
                Object object = f.this.e;
                synchronized (object) {
                    PlaybackStateCompat playbackStateCompat = f.this.l;
                    MediaMetadataCompat mediaMetadataCompat = f.this.k;
                    return MediaSessionCompat.b(playbackStateCompat, mediaMetadataCompat);
                }
            }

            /*
             * Enabled aggressive block sorting
             * Enabled unnecessary exception pruning
             * Enabled aggressive exception aggregation
             */
            @Override
            public List<QueueItem> i() {
                Object object = f.this.e;
                synchronized (object) {
                    return f.this.n;
                }
            }

            @Override
            public CharSequence j() {
                return f.this.o;
            }

            /*
             * Enabled aggressive block sorting
             * Enabled unnecessary exception pruning
             * Enabled aggressive exception aggregation
             */
            @Override
            public Bundle k() {
                Object object = f.this.e;
                synchronized (object) {
                    return f.this.t;
                }
            }

            @Override
            public int l() {
                return f.this.p;
            }

            @Override
            public boolean m() {
                return f.this.q;
            }

            @Override
            public int n() {
                return f.this.r;
            }

            @Override
            public boolean o() {
                return false;
            }

            @Override
            public int p() {
                return f.this.s;
            }

            @Override
            public void q() {
                f.this.c(3);
            }

            @Override
            public void r() {
                f.this.c(7);
            }

            @Override
            public void s() {
                f.this.c(12);
            }

            @Override
            public void t() {
                f.this.c(13);
            }

            @Override
            public void u() {
                f.this.c(14);
            }

            @Override
            public void v() {
                f.this.c(15);
            }

            @Override
            public void w() {
                f.this.c(16);
            }

            @Override
            public void x() {
                f.this.c(17);
            }
        }

        class c
        extends Handler {
            public c(Looper looper) {
                super(looper);
            }

            /*
             * Enabled aggressive block sorting
             * Lifted jumps to return sites
             */
            private void a(KeyEvent keyEvent, android.support.v4.media.session.MediaSessionCompat$a a2) {
                if (keyEvent == null) return;
                if (keyEvent.getAction() != 0) {
                    return;
                }
                long l2 = f.this.l == null ? 0L : f.this.l.d();
                int n2 = keyEvent.getKeyCode();
                if (n2 != 79) {
                    switch (n2) {
                        default: {
                            switch (n2) {
                                default: {
                                    return;
                                }
                                case 127: {
                                    if ((l2 & 2L) == 0L) return;
                                    a2.c();
                                    return;
                                }
                                case 126: 
                            }
                            if ((l2 & 4L) == 0L) return;
                            a2.b();
                            return;
                        }
                        case 90: {
                            if ((l2 & 64L) == 0L) return;
                            a2.f();
                            return;
                        }
                        case 89: {
                            if ((l2 & 8L) == 0L) return;
                            a2.g();
                            return;
                        }
                        case 88: {
                            if ((l2 & 16L) == 0L) return;
                            a2.e();
                            return;
                        }
                        case 87: {
                            if ((l2 & 32L) == 0L) return;
                            a2.d();
                            return;
                        }
                        case 86: {
                            if ((l2 & 1L) == 0L) return;
                            a2.h();
                            return;
                        }
                        case 85: 
                    }
                }
                Log.w((String)"MediaSessionCompat", (String)"KEYCODE_MEDIA_PLAY_PAUSE and KEYCODE_HEADSETHOOK are handled already");
            }

            public void a(int n2, Object object, int n3) {
                this.obtainMessage(n2, n3, 0, object).sendToTarget();
            }

            public void a(int n2, Object object, Bundle bundle) {
                object = this.obtainMessage(n2, object);
                object.setData(bundle);
                object.sendToTarget();
            }

            /*
             * Unable to fully structure code
             * Enabled aggressive block sorting
             * Lifted jumps to return sites
             */
            public void handleMessage(Message var1_1) {
                var2_2 = f.this.i;
                if (var2_2 == null) {
                    return;
                }
                switch (var1_1.what) {
                    default: {
                        return;
                    }
                    case 31: {
                        var2_2.a((RatingCompat)var1_1.obj, var1_1.getData());
                        return;
                    }
                    case 30: {
                        var2_2.b(var1_1.arg1);
                        return;
                    }
                    case 29: {
                        var2_2.a((Boolean)var1_1.obj);
                        return;
                    }
                    case 28: {
                        if (f.this.n == null) return;
                        if (var1_1.arg1 < 0) return;
                        if (var1_1.arg1 >= f.this.n.size()) return;
                        var1_1 = f.this.n.get(var1_1.arg1);
                        if (var1_1 == null) return;
                        var1_1 = var1_1.a();
                        ** GOTO lbl26
                    }
                    case 27: {
                        var1_1 = (MediaDescriptionCompat)var1_1.obj;
lbl26: // 2 sources:
                        var2_2.b((MediaDescriptionCompat)var1_1);
                        return;
                    }
                    case 26: {
                        var2_2.a((MediaDescriptionCompat)var1_1.obj, var1_1.arg1);
                        return;
                    }
                    case 25: {
                        var2_2.a((MediaDescriptionCompat)var1_1.obj);
                        return;
                    }
                    case 23: {
                        var2_2.a(var1_1.arg1);
                        return;
                    }
                    case 22: {
                        f.this.c(var1_1.arg1, 0);
                        return;
                    }
                    case 21: {
                        var1_1 = (KeyEvent)var1_1.obj;
                        var3_3 = new Intent("android.intent.action.MEDIA_BUTTON");
                        var3_3.putExtra("android.intent.extra.KEY_EVENT", (Parcelable)var1_1);
                        if (var2_2.a(var3_3) != false) return;
                        this.a((KeyEvent)var1_1, var2_2);
                        return;
                    }
                    case 20: {
                        var2_2.e((String)var1_1.obj, var1_1.getData());
                        return;
                    }
                    case 19: {
                        var2_2.a((RatingCompat)var1_1.obj);
                        return;
                    }
                    case 18: {
                        var2_2.b((Long)var1_1.obj);
                        return;
                    }
                    case 17: {
                        var2_2.g();
                        return;
                    }
                    case 16: {
                        var2_2.f();
                        return;
                    }
                    case 15: {
                        var2_2.e();
                        return;
                    }
                    case 14: {
                        var2_2.d();
                        return;
                    }
                    case 13: {
                        var2_2.h();
                        return;
                    }
                    case 12: {
                        var2_2.c();
                        return;
                    }
                    case 11: {
                        var2_2.a((Long)var1_1.obj);
                        return;
                    }
                    case 10: {
                        var2_2.b((Uri)var1_1.obj, var1_1.getData());
                        return;
                    }
                    case 9: {
                        var2_2.d((String)var1_1.obj, var1_1.getData());
                        return;
                    }
                    case 8: {
                        var2_2.c((String)var1_1.obj, var1_1.getData());
                        return;
                    }
                    case 7: {
                        var2_2.b();
                        return;
                    }
                    case 6: {
                        var2_2.a((Uri)var1_1.obj, var1_1.getData());
                        return;
                    }
                    case 5: {
                        var2_2.b((String)var1_1.obj, var1_1.getData());
                        return;
                    }
                    case 4: {
                        var2_2.a((String)var1_1.obj, var1_1.getData());
                        return;
                    }
                    case 3: {
                        var2_2.a();
                        return;
                    }
                    case 2: {
                        f.this.b(var1_1.arg1, 0);
                        return;
                    }
                    case 1: 
                }
                var1_1 = (a)var1_1.obj;
                var2_2.a(var1_1.a, var1_1.b, var1_1.c);
            }
        }

    }

    public static interface g {
        public void a();
    }

}

