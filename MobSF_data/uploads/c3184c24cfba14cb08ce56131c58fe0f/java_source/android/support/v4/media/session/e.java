/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.PendingIntent
 *  android.content.Context
 *  android.content.Intent
 *  android.media.AudioAttributes
 *  android.media.AudioAttributes$Builder
 *  android.media.MediaDescription
 *  android.media.MediaMetadata
 *  android.media.Rating
 *  android.media.VolumeProvider
 *  android.media.session.MediaSession
 *  android.media.session.MediaSession$Callback
 *  android.media.session.MediaSession$QueueItem
 *  android.media.session.MediaSession$Token
 *  android.media.session.PlaybackState
 *  android.os.Bundle
 *  android.os.Handler
 *  android.os.Parcelable
 *  android.os.ResultReceiver
 */
package android.support.v4.media.session;

import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.media.AudioAttributes;
import android.media.MediaDescription;
import android.media.MediaMetadata;
import android.media.Rating;
import android.media.VolumeProvider;
import android.media.session.MediaSession;
import android.media.session.PlaybackState;
import android.os.Bundle;
import android.os.Handler;
import android.os.Parcelable;
import android.os.ResultReceiver;

class e {
    public static Object a(Context context, String string2) {
        return new MediaSession(context, string2);
    }

    public static Object a(a a2) {
        return new b<a>(a2);
    }

    public static Object a(Object object) {
        if (object instanceof MediaSession.Token) {
            return object;
        }
        throw new IllegalArgumentException("token is not a valid MediaSession.Token object");
    }

    public static void a(Object object, int n2) {
        ((MediaSession)object).setFlags(n2);
    }

    public static void a(Object object, PendingIntent pendingIntent) {
        ((MediaSession)object).setSessionActivity(pendingIntent);
    }

    public static void a(Object object, Object object2) {
        ((MediaSession)object).setPlaybackToRemote((VolumeProvider)object2);
    }

    public static void a(Object object, Object object2, Handler handler) {
        ((MediaSession)object).setCallback((MediaSession.Callback)object2, handler);
    }

    public static void a(Object object, boolean bl2) {
        ((MediaSession)object).setActive(bl2);
    }

    public static void b(Object object, int n2) {
        AudioAttributes.Builder builder = new AudioAttributes.Builder();
        builder.setLegacyStreamType(n2);
        ((MediaSession)object).setPlaybackToLocal(builder.build());
    }

    public static void b(Object object, PendingIntent pendingIntent) {
        ((MediaSession)object).setMediaButtonReceiver(pendingIntent);
    }

    public static void b(Object object, Object object2) {
        ((MediaSession)object).setPlaybackState((PlaybackState)object2);
    }

    public static boolean b(Object object) {
        return ((MediaSession)object).isActive();
    }

    public static void c(Object object) {
        ((MediaSession)object).release();
    }

    public static void c(Object object, Object object2) {
        ((MediaSession)object).setMetadata((MediaMetadata)object2);
    }

    public static Parcelable d(Object object) {
        return ((MediaSession)object).getSessionToken();
    }

    static interface a {
        public void a();

        public void a(long var1);

        public void a(Object var1);

        public void a(String var1, Bundle var2);

        public void a(String var1, Bundle var2, ResultReceiver var3);

        public boolean a(Intent var1);

        public void b();

        public void b(long var1);

        public void b(String var1, Bundle var2);

        public void c();

        public void c(String var1, Bundle var2);

        public void d();

        public void e();

        public void f();

        public void g();
    }

    static class b<T extends a>
    extends MediaSession.Callback {
        protected final T a;

        public b(T t2) {
            this.a = t2;
        }

        public void onCommand(String string2, Bundle bundle, ResultReceiver resultReceiver) {
            this.a.a(string2, bundle, resultReceiver);
        }

        public void onCustomAction(String string2, Bundle bundle) {
            this.a.c(string2, bundle);
        }

        public void onFastForward() {
            this.a.e();
        }

        public boolean onMediaButtonEvent(Intent intent) {
            if (!this.a.a(intent) && !super.onMediaButtonEvent(intent)) {
                return false;
            }
            return true;
        }

        public void onPause() {
            this.a.b();
        }

        public void onPlay() {
            this.a.a();
        }

        public void onPlayFromMediaId(String string2, Bundle bundle) {
            this.a.a(string2, bundle);
        }

        public void onPlayFromSearch(String string2, Bundle bundle) {
            this.a.b(string2, bundle);
        }

        public void onRewind() {
            this.a.f();
        }

        public void onSeekTo(long l2) {
            this.a.b(l2);
        }

        public void onSetRating(Rating rating) {
            this.a.a((Object)rating);
        }

        public void onSkipToNext() {
            this.a.c();
        }

        public void onSkipToPrevious() {
            this.a.d();
        }

        public void onSkipToQueueItem(long l2) {
            this.a.a(l2);
        }

        public void onStop() {
            this.a.g();
        }
    }

    static class c {
        public static Object a(Object object) {
            return ((MediaSession.QueueItem)object).getDescription();
        }

        public static long b(Object object) {
            return ((MediaSession.QueueItem)object).getQueueId();
        }
    }

}

