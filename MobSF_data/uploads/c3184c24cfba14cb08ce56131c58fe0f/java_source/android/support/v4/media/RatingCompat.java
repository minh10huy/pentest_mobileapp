/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.media.Rating
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  android.util.Log
 */
package android.support.v4.media;

import android.media.Rating;
import android.os.Build;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.Log;

public final class RatingCompat
implements Parcelable {
    public static final Parcelable.Creator<RatingCompat> CREATOR = new Parcelable.Creator<RatingCompat>(){

        public RatingCompat a(Parcel parcel) {
            return new RatingCompat(parcel.readInt(), parcel.readFloat());
        }

        public RatingCompat[] a(int n2) {
            return new RatingCompat[n2];
        }

        public /* synthetic */ Object createFromParcel(Parcel parcel) {
            return this.a(parcel);
        }

        public /* synthetic */ Object[] newArray(int n2) {
            return this.a(n2);
        }
    };
    private final int a;
    private final float b;
    private Object c;

    RatingCompat(int n2, float f2) {
        this.a = n2;
        this.b = f2;
    }

    public static RatingCompat a(float f2) {
        if (f2 >= 0.0f && f2 <= 100.0f) {
            return new RatingCompat(6, f2);
        }
        Log.e((String)"Rating", (String)"Invalid percentage-based rating value");
        return null;
    }

    public static RatingCompat a(int n2) {
        switch (n2) {
            default: {
                return null;
            }
            case 1: 
            case 2: 
            case 3: 
            case 4: 
            case 5: 
            case 6: 
        }
        return new RatingCompat(n2, -1.0f);
    }

    public static RatingCompat a(int n2, float f2) {
        float f3;
        switch (n2) {
            default: {
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("Invalid rating style (");
                stringBuilder.append(n2);
                stringBuilder.append(") for a star rating");
                Log.e((String)"Rating", (String)stringBuilder.toString());
                return null;
            }
            case 5: {
                f3 = 5.0f;
                break;
            }
            case 4: {
                f3 = 4.0f;
                break;
            }
            case 3: {
                f3 = 3.0f;
            }
        }
        if (f2 >= 0.0f && f2 <= f3) {
            return new RatingCompat(n2, f2);
        }
        Log.e((String)"Rating", (String)"Trying to set out of range star-based rating");
        return null;
    }

    public static RatingCompat a(Object object) {
        Rating rating;
        Object object2 = rating = null;
        if (object != null) {
            object2 = rating;
            if (Build.VERSION.SDK_INT >= 19) {
                object2 = (Rating)object;
                int n2 = object2.getRatingStyle();
                if (object2.isRated()) {
                    switch (n2) {
                        default: {
                            return null;
                        }
                        case 6: {
                            object2 = RatingCompat.a(object2.getPercentRating());
                            break;
                        }
                        case 3: 
                        case 4: 
                        case 5: {
                            object2 = RatingCompat.a(n2, object2.getStarRating());
                            break;
                        }
                        case 2: {
                            object2 = RatingCompat.b(object2.isThumbUp());
                            break;
                        }
                        case 1: {
                            object2 = RatingCompat.a(object2.hasHeart());
                            break;
                        }
                    }
                } else {
                    object2 = RatingCompat.a(n2);
                }
                object2.c = object;
            }
        }
        return object2;
    }

    public static RatingCompat a(boolean bl2) {
        float f2 = bl2 ? 1.0f : 0.0f;
        return new RatingCompat(1, f2);
    }

    public static RatingCompat b(boolean bl2) {
        float f2 = bl2 ? 1.0f : 0.0f;
        return new RatingCompat(2, f2);
    }

    public int describeContents() {
        return this.a;
    }

    public String toString() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Rating:style=");
        stringBuilder.append(this.a);
        stringBuilder.append(" rating=");
        String string2 = this.b < 0.0f ? "unrated" : String.valueOf(this.b);
        stringBuilder.append(string2);
        return stringBuilder.toString();
    }

    public void writeToParcel(Parcel parcel, int n2) {
        parcel.writeInt(this.a);
        parcel.writeFloat(this.b);
    }

}

