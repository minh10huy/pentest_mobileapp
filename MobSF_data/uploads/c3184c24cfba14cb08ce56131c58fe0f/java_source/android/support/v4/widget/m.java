/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.graphics.drawable.Drawable
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.util.Log
 *  android.widget.TextView
 */
package android.support.v4.widget;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.util.Log;
import android.widget.TextView;
import java.lang.reflect.Field;

public final class m {
    static final g a;

    /*
     * Enabled aggressive block sorting
     */
    static {
        void var0_1;
        if (android.support.v4.e.a.a()) {
            f f2 = new f();
        } else if (Build.VERSION.SDK_INT >= 26) {
            e e2 = new e();
        } else if (Build.VERSION.SDK_INT >= 23) {
            d d2 = new d();
        } else if (Build.VERSION.SDK_INT >= 18) {
            c c2 = new c();
        } else if (Build.VERSION.SDK_INT >= 17) {
            b b2 = new b();
        } else if (Build.VERSION.SDK_INT >= 16) {
            a a2 = new a();
        } else {
            g g2 = new g();
        }
        a = var0_1;
    }

    public static int a(TextView textView) {
        return a.a(textView);
    }

    public static void a(TextView textView, int n2) {
        a.a(textView, n2);
    }

    public static void a(TextView textView, Drawable drawable2, Drawable drawable3, Drawable drawable4, Drawable drawable5) {
        a.a(textView, drawable2, drawable3, drawable4, drawable5);
    }

    static class a
    extends g {
        a() {
        }

        @Override
        public int a(TextView textView) {
            return textView.getMaxLines();
        }
    }

    static class b
    extends a {
        b() {
        }

        @Override
        public void a(TextView textView, Drawable drawable2, Drawable drawable3, Drawable drawable4, Drawable drawable5) {
            int n2 = textView.getLayoutDirection();
            boolean bl2 = true;
            if (n2 != 1) {
                bl2 = false;
            }
            Drawable drawable6 = bl2 ? drawable4 : drawable2;
            if (!bl2) {
                drawable2 = drawable4;
            }
            textView.setCompoundDrawables(drawable6, drawable3, drawable2, drawable5);
        }
    }

    static class c
    extends b {
        c() {
        }

        @Override
        public void a(TextView textView, Drawable drawable2, Drawable drawable3, Drawable drawable4, Drawable drawable5) {
            textView.setCompoundDrawablesRelative(drawable2, drawable3, drawable4, drawable5);
        }
    }

    static class d
    extends c {
        d() {
        }

        @Override
        public void a(TextView textView, int n2) {
            textView.setTextAppearance(n2);
        }
    }

    static class e
    extends d {
        e() {
        }
    }

    static class f
    extends e {
        f() {
        }
    }

    static class g {
        private static Field a;
        private static boolean b;
        private static Field c;
        private static boolean d;

        g() {
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        private static int a(Field field, TextView textView) {
            try {
                return field.getInt((Object)textView);
            }
            catch (IllegalAccessException illegalAccessException) {}
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Could not retrieve value of ");
            stringBuilder.append(field.getName());
            stringBuilder.append(" field.");
            Log.d((String)"TextViewCompatBase", (String)stringBuilder.toString());
            return -1;
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        private static Field a(String string2) {
            Field field;
            try {
                field = TextView.class.getDeclaredField(string2);
            }
            catch (NoSuchFieldException noSuchFieldException) {}
            try {
                field.setAccessible(true);
                return field;
            }
            catch (NoSuchFieldException noSuchFieldException) {}
            field = null;
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Could not retrieve ");
            stringBuilder.append(string2);
            stringBuilder.append(" field.");
            Log.e((String)"TextViewCompatBase", (String)stringBuilder.toString());
            return field;
        }

        public int a(TextView textView) {
            if (!d) {
                c = g.a("mMaxMode");
                d = true;
            }
            if (c != null && g.a(c, textView) == 1) {
                if (!b) {
                    a = g.a("mMaximum");
                    b = true;
                }
                if (a != null) {
                    return g.a(a, textView);
                }
            }
            return -1;
        }

        public void a(TextView textView, int n2) {
            textView.setTextAppearance(textView.getContext(), n2);
        }

        public void a(TextView textView, Drawable drawable2, Drawable drawable3, Drawable drawable4, Drawable drawable5) {
            textView.setCompoundDrawables(drawable2, drawable3, drawable4, drawable5);
        }
    }

}

