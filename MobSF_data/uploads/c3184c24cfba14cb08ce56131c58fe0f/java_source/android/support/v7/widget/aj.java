/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.animation.Animator
 *  android.animation.Animator$AnimatorListener
 *  android.animation.AnimatorListenerAdapter
 *  android.animation.ValueAnimator
 *  android.animation.ValueAnimator$AnimatorUpdateListener
 *  android.graphics.Canvas
 *  android.graphics.drawable.Drawable
 *  android.graphics.drawable.StateListDrawable
 *  android.view.MotionEvent
 *  android.view.View
 */
package android.support.v7.widget;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.ValueAnimator;
import android.graphics.Canvas;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.StateListDrawable;
import android.support.v4.view.s;
import android.support.v7.widget.RecyclerView;
import android.view.MotionEvent;
import android.view.View;

class aj
extends RecyclerView.h
implements RecyclerView.m {
    private static final int[] g = new int[]{16842919};
    private static final int[] h = new int[0];
    private final int[] A = new int[2];
    private final ValueAnimator B = ValueAnimator.ofFloat((float[])new float[]{0.0f, 1.0f});
    private int C = 0;
    private final Runnable D = new Runnable(){

        @Override
        public void run() {
            aj.this.a(500);
        }
    };
    private final RecyclerView.n E = new RecyclerView.n(){

        @Override
        public void a(RecyclerView recyclerView, int n2, int n3) {
            aj.this.a(recyclerView.computeHorizontalScrollOffset(), recyclerView.computeVerticalScrollOffset());
        }
    };
    int a;
    int b;
    float c;
    int d;
    int e;
    float f;
    private final int i;
    private final int j;
    private final StateListDrawable k;
    private final Drawable l;
    private final int m;
    private final int n;
    private final StateListDrawable o;
    private final Drawable p;
    private final int q;
    private final int r;
    private int s = 0;
    private int t = 0;
    private RecyclerView u;
    private boolean v = false;
    private boolean w = false;
    private int x = 0;
    private int y = 0;
    private final int[] z = new int[2];

    aj(RecyclerView recyclerView, StateListDrawable stateListDrawable, Drawable drawable2, StateListDrawable stateListDrawable2, Drawable drawable3, int n2, int n3, int n4) {
        this.k = stateListDrawable;
        this.l = drawable2;
        this.o = stateListDrawable2;
        this.p = drawable3;
        this.m = Math.max(n2, stateListDrawable.getIntrinsicWidth());
        this.n = Math.max(n2, drawable2.getIntrinsicWidth());
        this.q = Math.max(n2, stateListDrawable2.getIntrinsicWidth());
        this.r = Math.max(n2, drawable3.getIntrinsicWidth());
        this.i = n3;
        this.j = n4;
        this.k.setAlpha(255);
        this.l.setAlpha(255);
        this.B.addListener((Animator.AnimatorListener)new a());
        this.B.addUpdateListener((ValueAnimator.AnimatorUpdateListener)new b());
        this.a(recyclerView);
    }

    private int a(float f2, float f3, int[] arrn, int n2, int n3, int n4) {
        int n5 = arrn[1] - arrn[0];
        if (n5 == 0) {
            return 0;
        }
        n4 = (int)((f2 = (f3 - f2) / (float)n5) * (float)n2);
        if ((n3 += n4) < (n2 -= n4) && n3 >= 0) {
            return n4;
        }
        return 0;
    }

    private void a(float f2) {
        int[] arrn = this.g();
        f2 = Math.max((float)arrn[0], Math.min((float)arrn[1], f2));
        if (Math.abs((float)this.b - f2) < 2.0f) {
            return;
        }
        int n2 = this.a(this.c, f2, arrn, this.u.computeVerticalScrollRange(), this.u.computeVerticalScrollOffset(), this.t);
        if (n2 != 0) {
            this.u.scrollBy(0, n2);
        }
        this.c = f2;
    }

    /*
     * Enabled aggressive block sorting
     */
    private void a(Canvas canvas) {
        int n2 = this.s - this.m;
        int n3 = this.b - this.a / 2;
        this.k.setBounds(0, 0, this.m, this.a);
        this.l.setBounds(0, 0, this.n, this.t);
        if (this.e()) {
            this.l.draw(canvas);
            canvas.translate((float)this.m, (float)n3);
            canvas.scale(-1.0f, 1.0f);
            this.k.draw(canvas);
            canvas.scale(1.0f, 1.0f);
            n2 = this.m;
        } else {
            canvas.translate((float)n2, 0.0f);
            this.l.draw(canvas);
            canvas.translate(0.0f, (float)n3);
            this.k.draw(canvas);
        }
        canvas.translate((float)(- n2), (float)(- n3));
    }

    private void b() {
        this.u.a(this);
        this.u.a(this);
        this.u.a(this.E);
    }

    private void b(float f2) {
        int[] arrn = this.h();
        f2 = Math.max((float)arrn[0], Math.min((float)arrn[1], f2));
        if (Math.abs((float)this.e - f2) < 2.0f) {
            return;
        }
        int n2 = this.a(this.f, f2, arrn, this.u.computeHorizontalScrollRange(), this.u.computeHorizontalScrollOffset(), this.s);
        if (n2 != 0) {
            this.u.scrollBy(n2, 0);
        }
        this.f = f2;
    }

    /*
     * Enabled aggressive block sorting
     */
    private void b(int n2) {
        block8 : {
            int n3;
            block7 : {
                block6 : {
                    if (n2 == 2 && this.x != 2) {
                        this.k.setState(g);
                        this.f();
                    }
                    if (n2 == 0) {
                        this.d();
                    } else {
                        this.a();
                    }
                    if (this.x != 2 || n2 == 2) break block6;
                    this.k.setState(h);
                    n3 = 1200;
                    break block7;
                }
                if (n2 != 1) break block8;
                n3 = 1500;
            }
            this.c(n3);
        }
        this.x = n2;
    }

    private void b(Canvas canvas) {
        int n2 = this.t - this.q;
        int n3 = this.e - this.d / 2;
        this.o.setBounds(0, 0, this.d, this.q);
        this.p.setBounds(0, 0, this.s, this.r);
        canvas.translate(0.0f, (float)n2);
        this.p.draw(canvas);
        canvas.translate((float)n3, 0.0f);
        this.o.draw(canvas);
        canvas.translate((float)(- n3), (float)(- n2));
    }

    private void c() {
        this.u.b(this);
        this.u.b(this);
        this.u.b(this.E);
        this.f();
    }

    private void c(int n2) {
        this.f();
        this.u.postDelayed(this.D, (long)n2);
    }

    private void d() {
        this.u.invalidate();
    }

    private boolean e() {
        if (s.e((View)this.u) == 1) {
            return true;
        }
        return false;
    }

    private void f() {
        this.u.removeCallbacks(this.D);
    }

    private int[] g() {
        this.z[0] = this.j;
        this.z[1] = this.t - this.j;
        return this.z;
    }

    private int[] h() {
        this.A[0] = this.j;
        this.A[1] = this.s - this.j;
        return this.A;
    }

    public void a() {
        int n2 = this.C;
        if (n2 != 0) {
            if (n2 != 3) {
                return;
            }
            this.B.cancel();
        }
        this.C = 1;
        this.B.setFloatValues(new float[]{((Float)this.B.getAnimatedValue()).floatValue(), 1.0f});
        this.B.setDuration(500L);
        this.B.setStartDelay(0L);
        this.B.start();
    }

    void a(int n2) {
        switch (this.C) {
            default: {
                return;
            }
            case 1: {
                this.B.cancel();
            }
            case 2: 
        }
        this.C = 3;
        this.B.setFloatValues(new float[]{((Float)this.B.getAnimatedValue()).floatValue(), 0.0f});
        this.B.setDuration((long)n2);
        this.B.start();
    }

    void a(int n2, int n3) {
        float f2;
        float f3;
        int n4;
        int n5 = this.u.computeVerticalScrollRange();
        boolean bl2 = n5 - (n4 = this.t) > 0 && this.t >= this.i;
        this.v = bl2;
        int n6 = this.u.computeHorizontalScrollRange();
        int n7 = this.s;
        bl2 = n6 - n7 > 0 && this.s >= this.i;
        this.w = bl2;
        if (!this.v && !this.w) {
            if (this.x != 0) {
                this.b(0);
            }
            return;
        }
        if (this.v) {
            f2 = n3;
            f3 = n4;
            this.b = (int)(f3 * (f2 + f3 / 2.0f) / (float)n5);
            this.a = Math.min(n4, n4 * n4 / n5);
        }
        if (this.w) {
            f2 = n2;
            f3 = n7;
            this.e = (int)(f3 * (f2 + f3 / 2.0f) / (float)n6);
            this.d = Math.min(n7, n7 * n7 / n6);
        }
        if (this.x == 0 || this.x == 1) {
            this.b(1);
        }
    }

    @Override
    public void a(Canvas canvas, RecyclerView recyclerView, RecyclerView.u u2) {
        if (this.s == this.u.getWidth() && this.t == this.u.getHeight()) {
            if (this.C != 0) {
                if (this.v) {
                    this.a(canvas);
                }
                if (this.w) {
                    this.b(canvas);
                }
            }
            return;
        }
        this.s = this.u.getWidth();
        this.t = this.u.getHeight();
        this.b(0);
    }

    public void a(RecyclerView recyclerView) {
        if (this.u == recyclerView) {
            return;
        }
        if (this.u != null) {
            this.c();
        }
        this.u = recyclerView;
        if (this.u != null) {
            this.b();
        }
    }

    @Override
    public void a(boolean bl2) {
    }

    boolean a(float f2, float f3) {
        if ((this.e() ? f2 <= (float)(this.m / 2) : f2 >= (float)(this.s - this.m)) && f3 >= (float)(this.b - this.a / 2) && f3 <= (float)(this.b + this.a / 2)) {
            return true;
        }
        return false;
    }

    @Override
    public boolean a(RecyclerView recyclerView, MotionEvent motionEvent) {
        boolean bl2;
        block7 : {
            block9 : {
                boolean bl3;
                block6 : {
                    boolean bl4;
                    boolean bl5;
                    block8 : {
                        int n2 = this.x;
                        bl3 = false;
                        if (n2 != 1) break block6;
                        bl5 = this.a(motionEvent.getX(), motionEvent.getY());
                        bl4 = this.b(motionEvent.getX(), motionEvent.getY());
                        bl2 = bl3;
                        if (motionEvent.getAction() != 0) break block7;
                        if (bl5) break block8;
                        bl2 = bl3;
                        if (!bl4) break block7;
                    }
                    if (bl4) {
                        this.y = 1;
                        this.f = (int)motionEvent.getX();
                    } else if (bl5) {
                        this.y = 2;
                        this.c = (int)motionEvent.getY();
                    }
                    this.b(2);
                    break block9;
                }
                bl2 = bl3;
                if (this.x != 2) break block7;
            }
            bl2 = true;
        }
        return bl2;
    }

    @Override
    public void b(RecyclerView recyclerView, MotionEvent motionEvent) {
        if (this.x == 0) {
            return;
        }
        if (motionEvent.getAction() == 0) {
            boolean bl2 = this.a(motionEvent.getX(), motionEvent.getY());
            boolean bl3 = this.b(motionEvent.getX(), motionEvent.getY());
            if (bl2 || bl3) {
                if (bl3) {
                    this.y = 1;
                    this.f = (int)motionEvent.getX();
                } else if (bl2) {
                    this.y = 2;
                    this.c = (int)motionEvent.getY();
                }
                this.b(2);
                return;
            }
        } else {
            if (motionEvent.getAction() == 1 && this.x == 2) {
                this.c = 0.0f;
                this.f = 0.0f;
                this.b(1);
                this.y = 0;
                return;
            }
            if (motionEvent.getAction() == 2 && this.x == 2) {
                this.a();
                if (this.y == 1) {
                    this.b(motionEvent.getX());
                }
                if (this.y == 2) {
                    this.a(motionEvent.getY());
                }
            }
        }
    }

    boolean b(float f2, float f3) {
        if (f3 >= (float)(this.t - this.q) && f2 >= (float)(this.e - this.d / 2) && f2 <= (float)(this.e + this.d / 2)) {
            return true;
        }
        return false;
    }

    private class a
    extends AnimatorListenerAdapter {
        private boolean b = false;

        private a() {
        }

        public void onAnimationCancel(Animator animator2) {
            this.b = true;
        }

        public void onAnimationEnd(Animator animator2) {
            if (this.b) {
                this.b = false;
                return;
            }
            if (((Float)aj.this.B.getAnimatedValue()).floatValue() == 0.0f) {
                aj.this.C = 0;
                aj.this.b(0);
                return;
            }
            aj.this.C = 2;
            aj.this.d();
        }
    }

    private class b
    implements ValueAnimator.AnimatorUpdateListener {
        private b() {
        }

        public void onAnimationUpdate(ValueAnimator valueAnimator) {
            int n2 = (int)(((Float)valueAnimator.getAnimatedValue()).floatValue() * 255.0f);
            aj.this.k.setAlpha(n2);
            aj.this.l.setAlpha(n2);
            aj.this.d();
        }
    }

}

