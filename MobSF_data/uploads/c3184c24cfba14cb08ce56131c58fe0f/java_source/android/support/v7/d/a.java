/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.IntentFilter
 *  android.content.IntentSender
 *  android.net.Uri
 *  android.os.Bundle
 *  android.os.Parcelable
 *  android.text.TextUtils
 */
package android.support.v7.d;

import android.content.IntentFilter;
import android.content.IntentSender;
import android.net.Uri;
import android.os.Bundle;
import android.os.Parcelable;
import android.text.TextUtils;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

public final class a {
    final Bundle a;
    List<IntentFilter> b;

    a(Bundle bundle, List<IntentFilter> list) {
        this.a = bundle;
        this.b = list;
    }

    public static a a(Bundle bundle) {
        a a2 = null;
        if (bundle != null) {
            a2 = new a(bundle, null);
        }
        return a2;
    }

    public String a() {
        return this.a.getString("id");
    }

    public List<String> b() {
        return this.a.getStringArrayList("groupMemberIds");
    }

    public String c() {
        return this.a.getString("name");
    }

    public String d() {
        return this.a.getString("status");
    }

    public Uri e() {
        String string2 = this.a.getString("iconUri");
        if (string2 == null) {
            return null;
        }
        return Uri.parse((String)string2);
    }

    public boolean f() {
        return this.a.getBoolean("enabled", true);
    }

    @Deprecated
    public boolean g() {
        return this.a.getBoolean("connecting", false);
    }

    public int h() {
        return this.a.getInt("connectionState", 0);
    }

    public boolean i() {
        return this.a.getBoolean("canDisconnect", false);
    }

    public IntentSender j() {
        return (IntentSender)this.a.getParcelable("settingsIntent");
    }

    public List<IntentFilter> k() {
        this.l();
        return this.b;
    }

    void l() {
        if (this.b == null) {
            this.b = this.a.getParcelableArrayList("controlFilters");
            if (this.b == null) {
                this.b = Collections.emptyList();
            }
        }
    }

    public int m() {
        return this.a.getInt("playbackType", 1);
    }

    public int n() {
        return this.a.getInt("playbackStream", -1);
    }

    public int o() {
        return this.a.getInt("deviceType");
    }

    public int p() {
        return this.a.getInt("volume");
    }

    public int q() {
        return this.a.getInt("volumeMax");
    }

    public int r() {
        return this.a.getInt("volumeHandling", 0);
    }

    public int s() {
        return this.a.getInt("presentationDisplayId", -1);
    }

    public Bundle t() {
        return this.a.getBundle("extras");
    }

    public String toString() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("MediaRouteDescriptor{ ");
        stringBuilder.append("id=");
        stringBuilder.append(this.a());
        stringBuilder.append(", groupMemberIds=");
        stringBuilder.append(this.b());
        stringBuilder.append(", name=");
        stringBuilder.append(this.c());
        stringBuilder.append(", description=");
        stringBuilder.append(this.d());
        stringBuilder.append(", iconUri=");
        stringBuilder.append((Object)this.e());
        stringBuilder.append(", isEnabled=");
        stringBuilder.append(this.f());
        stringBuilder.append(", isConnecting=");
        stringBuilder.append(this.g());
        stringBuilder.append(", connectionState=");
        stringBuilder.append(this.h());
        stringBuilder.append(", controlFilters=");
        stringBuilder.append(Arrays.toString(this.k().toArray()));
        stringBuilder.append(", playbackType=");
        stringBuilder.append(this.m());
        stringBuilder.append(", playbackStream=");
        stringBuilder.append(this.n());
        stringBuilder.append(", deviceType=");
        stringBuilder.append(this.o());
        stringBuilder.append(", volume=");
        stringBuilder.append(this.p());
        stringBuilder.append(", volumeMax=");
        stringBuilder.append(this.q());
        stringBuilder.append(", volumeHandling=");
        stringBuilder.append(this.r());
        stringBuilder.append(", presentationDisplayId=");
        stringBuilder.append(this.s());
        stringBuilder.append(", extras=");
        stringBuilder.append((Object)this.t());
        stringBuilder.append(", isValid=");
        stringBuilder.append(this.w());
        stringBuilder.append(", minClientVersion=");
        stringBuilder.append(this.u());
        stringBuilder.append(", maxClientVersion=");
        stringBuilder.append(this.v());
        stringBuilder.append(" }");
        return stringBuilder.toString();
    }

    public int u() {
        return this.a.getInt("minClientVersion", 1);
    }

    public int v() {
        return this.a.getInt("maxClientVersion", Integer.MAX_VALUE);
    }

    public boolean w() {
        this.l();
        if (!(TextUtils.isEmpty((CharSequence)this.a()) || TextUtils.isEmpty((CharSequence)this.c()) || this.b.contains(null))) {
            return true;
        }
        return false;
    }

    public Bundle x() {
        return this.a;
    }

    public static final class a {
        private final Bundle a;
        private ArrayList<String> b;
        private ArrayList<IntentFilter> c;

        public a(a a2) {
            if (a2 != null) {
                this.a = new Bundle(a2.a);
                a2.l();
                if (!a2.b.isEmpty()) {
                    this.c = new ArrayList<IntentFilter>(a2.b);
                }
                return;
            }
            throw new IllegalArgumentException("descriptor must not be null");
        }

        public a(String string2, String string3) {
            this.a = new Bundle();
            this.a(string2);
            this.b(string3);
        }

        public a a(int n2) {
            this.a.putInt("playbackType", n2);
            return this;
        }

        public a a(IntentFilter intentFilter) {
            if (intentFilter != null) {
                if (this.c == null) {
                    this.c = new ArrayList();
                }
                if (!this.c.contains((Object)intentFilter)) {
                    this.c.add(intentFilter);
                }
                return this;
            }
            throw new IllegalArgumentException("filter must not be null");
        }

        public a a(String string2) {
            this.a.putString("id", string2);
            return this;
        }

        public a a(Collection<IntentFilter> object) {
            if (object != null) {
                if (!object.isEmpty()) {
                    object = object.iterator();
                    while (object.hasNext()) {
                        this.a((IntentFilter)object.next());
                    }
                }
                return this;
            }
            throw new IllegalArgumentException("filters must not be null");
        }

        public a a(boolean bl2) {
            this.a.putBoolean("enabled", bl2);
            return this;
        }

        public a a() {
            if (this.c != null) {
                this.a.putParcelableArrayList("controlFilters", this.c);
            }
            if (this.b != null) {
                this.a.putStringArrayList("groupMemberIds", this.b);
            }
            return new a(this.a, this.c);
        }

        public a b(int n2) {
            this.a.putInt("playbackStream", n2);
            return this;
        }

        public a b(String string2) {
            this.a.putString("name", string2);
            return this;
        }

        @Deprecated
        public a b(boolean bl2) {
            this.a.putBoolean("connecting", bl2);
            return this;
        }

        public a c(int n2) {
            this.a.putInt("deviceType", n2);
            return this;
        }

        public a c(String string2) {
            this.a.putString("status", string2);
            return this;
        }

        public a d(int n2) {
            this.a.putInt("volume", n2);
            return this;
        }

        public a e(int n2) {
            this.a.putInt("volumeMax", n2);
            return this;
        }

        public a f(int n2) {
            this.a.putInt("volumeHandling", n2);
            return this;
        }

        public a g(int n2) {
            this.a.putInt("presentationDisplayId", n2);
            return this;
        }
    }

}

