/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.Activity
 *  android.content.Context
 *  android.content.res.Resources
 *  android.content.res.Resources$NotFoundException
 *  android.graphics.drawable.Drawable
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Bundle
 *  android.view.KeyEvent
 *  android.view.Menu
 *  android.view.MenuInflater
 *  android.view.View
 *  android.view.Window
 *  android.view.Window$Callback
 */
package android.support.v7.app;

import android.app.Activity;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.os.Bundle;
import android.support.v7.app.d;
import android.support.v7.app.e;
import android.support.v7.view.b;
import android.support.v7.view.g;
import android.support.v7.view.i;
import android.support.v7.view.menu.h;
import android.support.v7.widget.bg;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.View;
import android.view.Window;

abstract class f
extends e {
    private static boolean m;
    private static final boolean n;
    private static final int[] o;
    final Context a;
    final Window b;
    final Window.Callback c;
    final Window.Callback d;
    final d e;
    android.support.v7.app.a f;
    MenuInflater g;
    boolean h;
    boolean i;
    boolean j;
    boolean k;
    boolean l;
    private CharSequence p;
    private boolean q;
    private boolean r;

    static {
        boolean bl2 = Build.VERSION.SDK_INT < 21;
        n = bl2;
        if (n && !m) {
            Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler(Thread.getDefaultUncaughtExceptionHandler()){
                final /* synthetic */ Thread.UncaughtExceptionHandler a;
                {
                    this.a = uncaughtExceptionHandler;
                }

                private boolean a(Throwable object) {
                    boolean bl2;
                    block2 : {
                        block3 : {
                            boolean bl3;
                            boolean bl4 = object instanceof Resources.NotFoundException;
                            bl2 = bl3 = false;
                            if (!bl4) break block2;
                            object = object.getMessage();
                            bl2 = bl3;
                            if (object == null) break block2;
                            if (object.contains("drawable")) break block3;
                            bl2 = bl3;
                            if (!object.contains("Drawable")) break block2;
                        }
                        bl2 = true;
                    }
                    return bl2;
                }

                @Override
                public void uncaughtException(Thread thread, Throwable throwable) {
                    if (this.a(throwable)) {
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append(throwable.getMessage());
                        stringBuilder.append(". If the resource you are trying to use is a vector resource, you may be referencing it in an unsupported way. See AppCompatDelegate.setCompatVectorFromResourcesEnabled() for more info.");
                        stringBuilder = new Resources.NotFoundException(stringBuilder.toString());
                        stringBuilder.initCause(throwable.getCause());
                        stringBuilder.setStackTrace(throwable.getStackTrace());
                        this.a.uncaughtException(thread, (Throwable)((Object)stringBuilder));
                        return;
                    }
                    this.a.uncaughtException(thread, throwable);
                }
            });
            m = true;
        }
        o = new int[]{16842836};
    }

    f(Context object, Window window, d d2) {
        this.a = object;
        this.b = window;
        this.e = d2;
        this.c = this.b.getCallback();
        if (!(this.c instanceof a)) {
            this.d = this.a(this.c);
            this.b.setCallback(this.d);
            object = bg.a((Context)object, null, o);
            window = object.b(0);
            if (window != null) {
                this.b.setBackgroundDrawable((Drawable)window);
            }
            object.a();
            return;
        }
        throw new IllegalStateException("AppCompat has already installed itself into the Window");
    }

    @Override
    public android.support.v7.app.a a() {
        this.l();
        return this.f;
    }

    abstract b a(b.a var1);

    Window.Callback a(Window.Callback callback) {
        return new a(callback);
    }

    abstract void a(int var1, Menu var2);

    @Override
    public final void a(CharSequence charSequence) {
        this.p = charSequence;
        this.b(charSequence);
    }

    abstract boolean a(int var1, KeyEvent var2);

    abstract boolean a(KeyEvent var1);

    @Override
    public MenuInflater b() {
        if (this.g == null) {
            this.l();
            Context context = this.f != null ? this.f.b() : this.a;
            this.g = new g(context);
        }
        return this.g;
    }

    abstract void b(CharSequence var1);

    abstract boolean b(int var1, Menu var2);

    @Override
    public void c() {
        this.q = true;
    }

    @Override
    public void c(Bundle bundle) {
    }

    @Override
    public void d() {
        this.q = false;
    }

    @Override
    public void g() {
        this.r = true;
    }

    @Override
    public boolean i() {
        return false;
    }

    abstract void l();

    final android.support.v7.app.a m() {
        return this.f;
    }

    final Context n() {
        android.support.v7.app.a a2 = this.a();
        a2 = a2 != null ? a2.b() : null;
        android.support.v7.app.a a3 = a2;
        if (a2 == null) {
            a3 = this.a;
        }
        return a3;
    }

    public boolean o() {
        return false;
    }

    final boolean p() {
        return this.r;
    }

    final Window.Callback q() {
        return this.b.getCallback();
    }

    final CharSequence r() {
        if (this.c instanceof Activity) {
            return ((Activity)this.c).getTitle();
        }
        return this.p;
    }

    class a
    extends i {
        a(Window.Callback callback) {
            super(callback);
        }

        @Override
        public boolean dispatchKeyEvent(KeyEvent keyEvent) {
            if (!f.this.a(keyEvent) && !super.dispatchKeyEvent(keyEvent)) {
                return false;
            }
            return true;
        }

        @Override
        public boolean dispatchKeyShortcutEvent(KeyEvent keyEvent) {
            if (!super.dispatchKeyShortcutEvent(keyEvent) && !f.this.a(keyEvent.getKeyCode(), keyEvent)) {
                return false;
            }
            return true;
        }

        @Override
        public void onContentChanged() {
        }

        @Override
        public boolean onCreatePanelMenu(int n2, Menu menu2) {
            if (n2 == 0 && !(menu2 instanceof h)) {
                return false;
            }
            return super.onCreatePanelMenu(n2, menu2);
        }

        @Override
        public boolean onMenuOpened(int n2, Menu menu2) {
            super.onMenuOpened(n2, menu2);
            f.this.b(n2, menu2);
            return true;
        }

        @Override
        public void onPanelClosed(int n2, Menu menu2) {
            super.onPanelClosed(n2, menu2);
            f.this.a(n2, menu2);
        }

        @Override
        public boolean onPreparePanel(int n2, View view, Menu menu2) {
            h h2 = menu2 instanceof h ? (h)menu2 : null;
            if (n2 == 0 && h2 == null) {
                return false;
            }
            if (h2 != null) {
                h2.c(true);
            }
            boolean bl2 = super.onPreparePanel(n2, view, menu2);
            if (h2 != null) {
                h2.c(false);
            }
            return bl2;
        }
    }

}

