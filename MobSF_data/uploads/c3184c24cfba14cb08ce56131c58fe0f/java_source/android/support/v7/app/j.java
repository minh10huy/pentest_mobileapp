/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.Activity
 *  android.app.Dialog
 *  android.content.Context
 *  android.content.res.Configuration
 *  android.content.res.Resources
 *  android.content.res.Resources$Theme
 *  android.content.res.TypedArray
 *  android.graphics.Rect
 *  android.graphics.drawable.Drawable
 *  android.media.AudioManager
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.Bundle
 *  android.text.TextUtils
 *  android.util.AndroidRuntimeException
 *  android.util.AttributeSet
 *  android.util.DisplayMetrics
 *  android.util.Log
 *  android.util.TypedValue
 *  android.view.KeyCharacterMap
 *  android.view.KeyEvent
 *  android.view.LayoutInflater
 *  android.view.LayoutInflater$Factory
 *  android.view.LayoutInflater$Factory2
 *  android.view.Menu
 *  android.view.MenuInflater
 *  android.view.MenuItem
 *  android.view.MotionEvent
 *  android.view.View
 *  android.view.ViewConfiguration
 *  android.view.ViewGroup
 *  android.view.ViewGroup$LayoutParams
 *  android.view.ViewGroup$MarginLayoutParams
 *  android.view.ViewParent
 *  android.view.Window
 *  android.view.Window$Callback
 *  android.view.WindowManager
 *  android.view.WindowManager$LayoutParams
 *  android.widget.FrameLayout
 *  android.widget.ListAdapter
 *  android.widget.PopupWindow
 *  android.widget.TextView
 *  org.xmlpull.v1.XmlPullParser
 */
package android.support.v7.app;

import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.media.AudioManager;
import android.os.Build;
import android.os.Bundle;
import android.support.v4.app.z;
import android.support.v4.view.aa;
import android.support.v4.view.o;
import android.support.v4.view.s;
import android.support.v4.view.w;
import android.support.v4.view.x;
import android.support.v4.view.y;
import android.support.v4.widget.k;
import android.support.v7.a.a;
import android.support.v7.app.AppCompatViewInflater;
import android.support.v7.app.f;
import android.support.v7.app.n;
import android.support.v7.app.q;
import android.support.v7.view.b;
import android.support.v7.view.menu.h;
import android.support.v7.view.menu.o;
import android.support.v7.view.menu.p;
import android.support.v7.widget.ActionBarContextView;
import android.support.v7.widget.ContentFrameLayout;
import android.support.v7.widget.Toolbar;
import android.support.v7.widget.ViewStubCompat;
import android.support.v7.widget.ae;
import android.support.v7.widget.ak;
import android.support.v7.widget.bl;
import android.support.v7.widget.bo;
import android.support.v7.widget.m;
import android.text.TextUtils;
import android.util.AndroidRuntimeException;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.util.Log;
import android.util.TypedValue;
import android.view.KeyCharacterMap;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewConfiguration;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.view.Window;
import android.view.WindowManager;
import android.widget.FrameLayout;
import android.widget.ListAdapter;
import android.widget.PopupWindow;
import android.widget.TextView;
import java.lang.reflect.Constructor;
import org.xmlpull.v1.XmlPullParser;

class j
extends f
implements h.a,
LayoutInflater.Factory2 {
    private static final boolean t;
    private View A;
    private boolean B;
    private boolean C;
    private boolean D;
    private d[] E;
    private d F;
    private boolean G;
    private final Runnable H = new Runnable(){

        @Override
        public void run() {
            if ((j.this.s & 1) != 0) {
                j.this.f(0);
            }
            if ((j.this.s & 4096) != 0) {
                j.this.f(108);
            }
            j.this.r = false;
            j.this.s = 0;
        }
    };
    private boolean I;
    private Rect J;
    private Rect K;
    private AppCompatViewInflater L;
    android.support.v7.view.b m;
    ActionBarContextView n;
    PopupWindow o;
    Runnable p;
    w q = null;
    boolean r;
    int s;
    private ae u;
    private a v;
    private e w;
    private boolean x;
    private ViewGroup y;
    private TextView z;

    static {
        boolean bl2 = Build.VERSION.SDK_INT < 21;
        t = bl2;
    }

    j(Context context, Window window, android.support.v7.app.d d2) {
        super(context, window, d2);
    }

    private void a(d d2, KeyEvent keyEvent) {
        block18 : {
            int n2;
            WindowManager windowManager;
            block21 : {
                block20 : {
                    Window.Callback callback;
                    block19 : {
                        if (d2.o) break block18;
                        if (this.p()) {
                            return;
                        }
                        if (d2.a == 0) {
                            n2 = (this.a.getResources().getConfiguration().screenLayout & 15) == 4 ? 1 : 0;
                            if (n2 != 0) {
                                return;
                            }
                        }
                        if ((callback = this.q()) != null && !callback.onMenuOpened(d2.a, (Menu)d2.j)) {
                            this.a(d2, true);
                            return;
                        }
                        windowManager = (WindowManager)this.a.getSystemService("window");
                        if (windowManager == null) {
                            return;
                        }
                        if (!this.b(d2, keyEvent)) {
                            return;
                        }
                        if (d2.g == null || d2.q) break block19;
                        if (d2.i == null || (keyEvent = d2.i.getLayoutParams()) == null || keyEvent.width != -1) break block20;
                        n2 = -1;
                        break block21;
                    }
                    if (d2.g == null) {
                        if (!this.a(d2) || d2.g == null) {
                            return;
                        }
                    } else if (d2.q && d2.g.getChildCount() > 0) {
                        d2.g.removeAllViews();
                    }
                    if (!this.c(d2)) break block18;
                    if (!d2.a()) {
                        return;
                    }
                    callback = d2.h.getLayoutParams();
                    keyEvent = callback;
                    if (callback == null) {
                        keyEvent = new ViewGroup.LayoutParams(-2, -2);
                    }
                    n2 = d2.b;
                    d2.g.setBackgroundResource(n2);
                    callback = d2.h.getParent();
                    if (callback != null && callback instanceof ViewGroup) {
                        ((ViewGroup)callback).removeView(d2.h);
                    }
                    d2.g.addView(d2.h, (ViewGroup.LayoutParams)keyEvent);
                    if (!d2.h.hasFocus()) {
                        d2.h.requestFocus();
                    }
                }
                n2 = -2;
            }
            d2.n = false;
            keyEvent = new WindowManager.LayoutParams(n2, -2, d2.d, d2.e, 1002, 8519680, -3);
            keyEvent.gravity = d2.c;
            keyEvent.windowAnimations = d2.f;
            windowManager.addView((View)d2.g, (ViewGroup.LayoutParams)keyEvent);
            d2.o = true;
        }
    }

    private void a(h object, boolean bl2) {
        if (this.u != null && this.u.e() && (!ViewConfiguration.get((Context)this.a).hasPermanentMenuKey() || this.u.g())) {
            object = this.q();
            if (this.u.f() && bl2) {
                this.u.i();
                if (!this.p()) {
                    object.onPanelClosed(108, (Menu)this.a((int)0, (boolean)true).j);
                    return;
                }
            } else if (object != null && !this.p()) {
                if (this.r && (this.s & 1) != 0) {
                    this.b.getDecorView().removeCallbacks(this.H);
                    this.H.run();
                }
                d d2 = this.a(0, true);
                if (d2.j != null && !d2.r && object.onPreparePanel(0, d2.i, (Menu)d2.j)) {
                    object.onMenuOpened(108, (Menu)d2.j);
                    this.u.h();
                }
            }
            return;
        }
        object = this.a(0, true);
        object.q = true;
        this.a((d)object, false);
        this.a((d)object, null);
    }

    private boolean a(d d2) {
        d2.a(this.n());
        d2.g = new c(d2.l);
        d2.c = 81;
        return true;
    }

    private boolean a(d d2, int n2, KeyEvent keyEvent, int n3) {
        boolean bl2;
        block7 : {
            boolean bl3;
            block6 : {
                bl2 = keyEvent.isSystem();
                bl3 = false;
                if (bl2) {
                    return false;
                }
                if (d2.m) break block6;
                bl2 = bl3;
                if (!this.b(d2, keyEvent)) break block7;
            }
            bl2 = bl3;
            if (d2.j != null) {
                bl2 = d2.j.performShortcut(n2, keyEvent, n3);
            }
        }
        if (bl2 && (n3 & 1) == 0 && this.u == null) {
            this.a(d2, true);
        }
        return bl2;
    }

    private boolean a(ViewParent viewParent) {
        if (viewParent == null) {
            return false;
        }
        View view = this.b.getDecorView();
        do {
            if (viewParent == null) {
                return true;
            }
            if (viewParent == view || !(viewParent instanceof View)) break;
            if (s.x((View)viewParent)) {
                return false;
            }
            viewParent = viewParent.getParent();
        } while (true);
        return false;
    }

    private boolean b(d d2) {
        Object object;
        block10 : {
            Context context;
            block9 : {
                context = this.a;
                if (d2.a == 0) break block9;
                object = context;
                if (d2.a != 108) break block10;
            }
            object = context;
            if (this.u != null) {
                TypedValue typedValue = new TypedValue();
                Resources.Theme theme = context.getTheme();
                theme.resolveAttribute(a.a.actionBarTheme, typedValue, true);
                object = null;
                if (typedValue.resourceId != 0) {
                    object = context.getResources().newTheme();
                    object.setTo(theme);
                    object.applyStyle(typedValue.resourceId, true);
                    object.resolveAttribute(a.a.actionBarWidgetTheme, typedValue, true);
                } else {
                    theme.resolveAttribute(a.a.actionBarWidgetTheme, typedValue, true);
                }
                Object object2 = object;
                if (typedValue.resourceId != 0) {
                    object2 = object;
                    if (object == null) {
                        object2 = context.getResources().newTheme();
                        object2.setTo(theme);
                    }
                    object2.applyStyle(typedValue.resourceId, true);
                }
                object = context;
                if (object2 != null) {
                    object = new android.support.v7.view.d(context, 0);
                    object.getTheme().setTo((Resources.Theme)object2);
                }
            }
        }
        object = new h((Context)object);
        object.a(this);
        d2.a((h)object);
        return true;
    }

    private boolean b(d d2, KeyEvent keyEvent) {
        Window.Callback callback;
        if (this.p()) {
            return false;
        }
        if (d2.m) {
            return true;
        }
        if (this.F != null && this.F != d2) {
            this.a(this.F, false);
        }
        if ((callback = this.q()) != null) {
            d2.i = callback.onCreatePanelView(d2.a);
        }
        int n2 = d2.a != 0 && d2.a != 108 ? 0 : 1;
        if (n2 != 0 && this.u != null) {
            this.u.j();
        }
        if (!(d2.i != null || n2 != 0 && this.m() instanceof n)) {
            if (d2.j == null || d2.r) {
                if (!(d2.j != null || this.b(d2) && d2.j != null)) {
                    return false;
                }
                if (n2 != 0 && this.u != null) {
                    if (this.v == null) {
                        this.v = new a();
                    }
                    this.u.a(d2.j, this.v);
                }
                d2.j.g();
                if (!callback.onCreatePanelMenu(d2.a, (Menu)d2.j)) {
                    d2.a((h)null);
                    if (n2 != 0 && this.u != null) {
                        this.u.a(null, this.v);
                    }
                    return false;
                }
                d2.r = false;
            }
            d2.j.g();
            if (d2.s != null) {
                d2.j.b(d2.s);
                d2.s = null;
            }
            if (!callback.onPreparePanel(0, d2.i, (Menu)d2.j)) {
                if (n2 != 0 && this.u != null) {
                    this.u.a(null, this.v);
                }
                d2.j.h();
                return false;
            }
            n2 = keyEvent != null ? keyEvent.getDeviceId() : -1;
            boolean bl2 = KeyCharacterMap.load((int)n2).getKeyboardType() != 1;
            d2.p = bl2;
            d2.j.setQwertyMode(d2.p);
            d2.j.h();
        }
        d2.m = true;
        d2.n = false;
        this.F = d2;
        return true;
    }

    private boolean c(d d2) {
        if (d2.i != null) {
            d2.h = d2.i;
            return true;
        }
        if (d2.j == null) {
            return false;
        }
        if (this.w == null) {
            this.w = new e();
        }
        d2.h = (View)d2.a(this.w);
        if (d2.h != null) {
            return true;
        }
        return false;
    }

    private void d(int n2) {
        this.s = 1 << n2 | this.s;
        if (!this.r) {
            s.a(this.b.getDecorView(), this.H);
            this.r = true;
        }
    }

    private boolean d(int n2, KeyEvent keyEvent) {
        if (keyEvent.getRepeatCount() == 0) {
            d d2 = this.a(n2, true);
            if (!d2.o) {
                return this.b(d2, keyEvent);
            }
        }
        return false;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private boolean e(int n2, KeyEvent keyEvent) {
        boolean bl2;
        if (this.m != null) {
            return false;
        }
        d d2 = this.a(n2, true);
        if (n2 == 0 && this.u != null && this.u.e() && !ViewConfiguration.get((Context)this.a).hasPermanentMenuKey()) {
            if (!this.u.f()) {
                if (this.p()) return false;
                if (!this.b(d2, keyEvent)) return false;
                bl2 = this.u.h();
            } else {
                bl2 = this.u.i();
            }
        } else if (!d2.o && !d2.n) {
            if (!d2.m) return false;
            if (d2.r) {
                d2.m = false;
                bl2 = this.b(d2, keyEvent);
            } else {
                bl2 = true;
            }
            if (!bl2) return false;
            this.a(d2, keyEvent);
            bl2 = true;
        } else {
            bl2 = d2.o;
            this.a(d2, true);
        }
        if (!bl2) return bl2;
        keyEvent = (AudioManager)this.a.getSystemService("audio");
        if (keyEvent != null) {
            keyEvent.playSoundEffect(0);
            return bl2;
        }
        Log.w((String)"AppCompatDelegate", (String)"Couldn't get audio manager");
        return bl2;
    }

    private int h(int n2) {
        if (n2 == 8) {
            Log.i((String)"AppCompatDelegate", (String)"You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR id when requesting this feature.");
            return 108;
        }
        int n3 = n2;
        if (n2 == 9) {
            Log.i((String)"AppCompatDelegate", (String)"You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY id when requesting this feature.");
            n3 = 109;
        }
        return n3;
    }

    private void w() {
        if (!this.x) {
            this.y = this.x();
            Object object = this.r();
            if (!TextUtils.isEmpty((CharSequence)object)) {
                this.b((CharSequence)object);
            }
            this.y();
            this.a(this.y);
            this.x = true;
            object = this.a(0, false);
            if (!(this.p() || object != null && object.j != null)) {
                this.d(108);
            }
        }
    }

    /*
     * Enabled aggressive block sorting
     */
    private ViewGroup x() {
        ContentFrameLayout contentFrameLayout;
        void var2_12;
        TypedArray typedArray = this.a.obtainStyledAttributes(a.j.AppCompatTheme);
        if (!typedArray.hasValue(a.j.AppCompatTheme_windowActionBar)) {
            typedArray.recycle();
            throw new IllegalStateException("You need to use a Theme.AppCompat theme (or descendant) with this activity.");
        }
        if (typedArray.getBoolean(a.j.AppCompatTheme_windowNoTitle, false)) {
            this.c(1);
        } else if (typedArray.getBoolean(a.j.AppCompatTheme_windowActionBar, false)) {
            this.c(108);
        }
        if (typedArray.getBoolean(a.j.AppCompatTheme_windowActionBarOverlay, false)) {
            this.c(109);
        }
        if (typedArray.getBoolean(a.j.AppCompatTheme_windowActionModeOverlay, false)) {
            this.c(10);
        }
        this.k = typedArray.getBoolean(a.j.AppCompatTheme_android_windowIsFloating, false);
        typedArray.recycle();
        this.b.getDecorView();
        LayoutInflater layoutInflater = LayoutInflater.from((Context)this.a);
        if (!this.l) {
            if (this.k) {
                ViewGroup viewGroup = (ViewGroup)layoutInflater.inflate(a.g.abc_dialog_title_material, null);
                this.i = false;
                this.h = false;
            } else if (this.h) {
                void var2_7;
                TypedValue typedValue = new TypedValue();
                this.a.getTheme().resolveAttribute(a.a.actionBarTheme, typedValue, true);
                if (typedValue.resourceId != 0) {
                    android.support.v7.view.d d2 = new android.support.v7.view.d(this.a, typedValue.resourceId);
                } else {
                    Context context = this.a;
                }
                contentFrameLayout = (ViewGroup)LayoutInflater.from((Context)var2_7).inflate(a.g.abc_screen_toolbar, null);
                this.u = (ae)contentFrameLayout.findViewById(a.f.decor_content_parent);
                this.u.setWindowCallback(this.q());
                if (this.i) {
                    this.u.a(109);
                }
                if (this.B) {
                    this.u.a(2);
                }
                ContentFrameLayout contentFrameLayout2 = contentFrameLayout;
                if (this.C) {
                    this.u.a(5);
                    ContentFrameLayout contentFrameLayout3 = contentFrameLayout;
                }
            } else {
                Object var2_10 = null;
            }
        } else {
            int n2 = this.j ? a.g.abc_screen_simple_overlay_action_mode : a.g.abc_screen_simple;
            ViewGroup viewGroup = (ViewGroup)layoutInflater.inflate(n2, null);
            if (Build.VERSION.SDK_INT >= 21) {
                s.a((View)viewGroup, new o(){

                    @Override
                    public aa a(View view, aa aa2) {
                        int n2 = aa2.b();
                        int n3 = j.this.g(n2);
                        aa aa3 = aa2;
                        if (n2 != n3) {
                            aa3 = aa2.a(aa2.a(), n3, aa2.c(), aa2.d());
                        }
                        return s.a(view, aa3);
                    }
                });
            } else {
                ((ak)viewGroup).setOnFitSystemWindowsListener(new ak.a(){

                    @Override
                    public void a(Rect rect) {
                        rect.top = j.this.g(rect.top);
                    }
                });
            }
        }
        if (var2_12 == null) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("AppCompat does not support the current theme features: { windowActionBar: ");
            stringBuilder.append(this.h);
            stringBuilder.append(", windowActionBarOverlay: ");
            stringBuilder.append(this.i);
            stringBuilder.append(", android:windowIsFloating: ");
            stringBuilder.append(this.k);
            stringBuilder.append(", windowActionModeOverlay: ");
            stringBuilder.append(this.j);
            stringBuilder.append(", windowNoTitle: ");
            stringBuilder.append(this.l);
            stringBuilder.append(" }");
            throw new IllegalArgumentException(stringBuilder.toString());
        }
        if (this.u == null) {
            this.z = (TextView)var2_12.findViewById(a.f.title);
        }
        bo.b((View)var2_12);
        contentFrameLayout = (ContentFrameLayout)var2_12.findViewById(a.f.action_bar_activity_content);
        ViewGroup viewGroup = (ViewGroup)this.b.findViewById(16908290);
        if (viewGroup != null) {
            while (viewGroup.getChildCount() > 0) {
                View view = viewGroup.getChildAt(0);
                viewGroup.removeViewAt(0);
                contentFrameLayout.addView(view);
            }
            viewGroup.setId(-1);
            contentFrameLayout.setId(16908290);
            if (viewGroup instanceof FrameLayout) {
                ((FrameLayout)viewGroup).setForeground(null);
            }
        }
        this.b.setContentView((View)var2_12);
        contentFrameLayout.setAttachListener(new ContentFrameLayout.a(){

            @Override
            public void a() {
            }

            @Override
            public void b() {
                j.this.v();
            }
        });
        return var2_12;
    }

    private void y() {
        ContentFrameLayout contentFrameLayout = (ContentFrameLayout)this.y.findViewById(16908290);
        View view = this.b.getDecorView();
        contentFrameLayout.a(view.getPaddingLeft(), view.getPaddingTop(), view.getPaddingRight(), view.getPaddingBottom());
        view = this.a.obtainStyledAttributes(a.j.AppCompatTheme);
        view.getValue(a.j.AppCompatTheme_windowMinWidthMajor, contentFrameLayout.getMinWidthMajor());
        view.getValue(a.j.AppCompatTheme_windowMinWidthMinor, contentFrameLayout.getMinWidthMinor());
        if (view.hasValue(a.j.AppCompatTheme_windowFixedWidthMajor)) {
            view.getValue(a.j.AppCompatTheme_windowFixedWidthMajor, contentFrameLayout.getFixedWidthMajor());
        }
        if (view.hasValue(a.j.AppCompatTheme_windowFixedWidthMinor)) {
            view.getValue(a.j.AppCompatTheme_windowFixedWidthMinor, contentFrameLayout.getFixedWidthMinor());
        }
        if (view.hasValue(a.j.AppCompatTheme_windowFixedHeightMajor)) {
            view.getValue(a.j.AppCompatTheme_windowFixedHeightMajor, contentFrameLayout.getFixedHeightMajor());
        }
        if (view.hasValue(a.j.AppCompatTheme_windowFixedHeightMinor)) {
            view.getValue(a.j.AppCompatTheme_windowFixedHeightMinor, contentFrameLayout.getFixedHeightMinor());
        }
        view.recycle();
        contentFrameLayout.requestLayout();
    }

    private void z() {
        if (!this.x) {
            return;
        }
        throw new AndroidRuntimeException("Window feature must be requested before adding content");
    }

    protected d a(int n2, boolean bl2) {
        Object object;
        d[] arrd;
        block6 : {
            block5 : {
                object = this.E;
                if (object == null) break block5;
                arrd = object;
                if (((d[])object).length > n2) break block6;
            }
            arrd = new d[n2 + 1];
            if (object != null) {
                System.arraycopy(object, 0, arrd, 0, ((d[])object).length);
            }
            this.E = arrd;
        }
        d d2 = arrd[n2];
        object = d2;
        if (d2 == null) {
            arrd[n2] = object = new d(n2);
        }
        return object;
    }

    d a(Menu menu2) {
        d[] arrd = this.E;
        int n2 = arrd != null ? arrd.length : 0;
        for (int i2 = 0; i2 < n2; ++i2) {
            d d2 = arrd[i2];
            if (d2 == null || d2.j != menu2) continue;
            return d2;
        }
        return null;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    android.support.v7.view.b a(b.a object) {
        void var1_5;
        Object object2;
        block22 : {
            this.t();
            if (this.m != null) {
                this.m.c();
            }
            object2 = object;
            if (!(object instanceof b)) {
                object2 = new b((b.a)object);
            }
            if (this.e != null && !this.p()) {
                try {
                    android.support.v7.view.b b2 = this.e.a((b.a)object2);
                    break block22;
                }
                catch (AbstractMethodError abstractMethodError) {}
            }
            Object var1_4 = null;
        }
        if (var1_5 != null) {
            this.m = var1_5;
        } else {
            ActionBarContextView actionBarContextView = this.n;
            boolean bl2 = true;
            if (actionBarContextView == null) {
                if (this.k) {
                    void var1_10;
                    TypedValue typedValue = new TypedValue();
                    Resources.Theme theme = this.a.getTheme();
                    theme.resolveAttribute(a.a.actionBarTheme, typedValue, true);
                    if (typedValue.resourceId != 0) {
                        Resources.Theme theme2 = this.a.getResources().newTheme();
                        theme2.setTo(theme);
                        theme2.applyStyle(typedValue.resourceId, true);
                        android.support.v7.view.d d2 = new android.support.v7.view.d(this.a, 0);
                        d2.getTheme().setTo(theme2);
                    } else {
                        Context context = this.a;
                    }
                    this.n = new ActionBarContextView((Context)var1_10);
                    this.o = new PopupWindow((Context)var1_10, null, a.a.actionModePopupWindowStyle);
                    k.a(this.o, 2);
                    this.o.setContentView((View)this.n);
                    this.o.setWidth(-1);
                    var1_10.getTheme().resolveAttribute(a.a.actionBarSize, typedValue, true);
                    int n2 = TypedValue.complexToDimensionPixelSize((int)typedValue.data, (DisplayMetrics)var1_10.getResources().getDisplayMetrics());
                    this.n.setContentHeight(n2);
                    this.o.setHeight(-2);
                    this.p = new Runnable(){

                        @Override
                        public void run() {
                            j.this.o.showAtLocation((View)j.this.n, 55, 0, 0);
                            j.this.t();
                            if (j.this.s()) {
                                j.this.n.setAlpha(0.0f);
                                j.this.q = s.j((View)j.this.n).a(1.0f);
                                j.this.q.a(new y(){

                                    @Override
                                    public void a(View view) {
                                        j.this.n.setVisibility(0);
                                    }

                                    @Override
                                    public void b(View view) {
                                        j.this.n.setAlpha(1.0f);
                                        j.this.q.a((x)null);
                                        j.this.q = null;
                                    }
                                });
                                return;
                            }
                            j.this.n.setAlpha(1.0f);
                            j.this.n.setVisibility(0);
                        }

                    };
                } else {
                    ViewStubCompat viewStubCompat = (ViewStubCompat)this.y.findViewById(a.f.action_mode_bar_stub);
                    if (viewStubCompat != null) {
                        viewStubCompat.setLayoutInflater(LayoutInflater.from((Context)this.n()));
                        this.n = (ActionBarContextView)viewStubCompat.a();
                    }
                }
            }
            if (this.n != null) {
                this.t();
                this.n.c();
                Context context = this.n.getContext();
                ActionBarContextView actionBarContextView2 = this.n;
                if (this.o != null) {
                    bl2 = false;
                }
                android.support.v7.view.e e2 = new android.support.v7.view.e(context, actionBarContextView2, (b.a)object2, bl2);
                if (object2.a((android.support.v7.view.b)e2, e2.b())) {
                    e2.d();
                    this.n.a(e2);
                    this.m = e2;
                    if (this.s()) {
                        this.n.setAlpha(0.0f);
                        this.q = s.j((View)this.n).a(1.0f);
                        this.q.a(new y(){

                            @Override
                            public void a(View view) {
                                j.this.n.setVisibility(0);
                                j.this.n.sendAccessibilityEvent(32);
                                if (j.this.n.getParent() instanceof View) {
                                    s.m((View)j.this.n.getParent());
                                }
                            }

                            @Override
                            public void b(View view) {
                                j.this.n.setAlpha(1.0f);
                                j.this.q.a((x)null);
                                j.this.q = null;
                            }
                        });
                    } else {
                        this.n.setAlpha(1.0f);
                        this.n.setVisibility(0);
                        this.n.sendAccessibilityEvent(32);
                        if (this.n.getParent() instanceof View) {
                            s.m((View)this.n.getParent());
                        }
                    }
                    if (this.o != null) {
                        this.b.getDecorView().post(this.p);
                    }
                } else {
                    this.m = null;
                }
            }
        }
        if (this.m != null && this.e != null) {
            this.e.a(this.m);
        }
        return this.m;
    }

    @Override
    public <T extends View> T a(int n2) {
        this.w();
        return (T)this.b.findViewById(n2);
    }

    View a(View view, String string2, Context context, AttributeSet attributeSet) {
        if (this.c instanceof LayoutInflater.Factory && (view = ((LayoutInflater.Factory)this.c).onCreateView(string2, context, attributeSet)) != null) {
            return view;
        }
        return null;
    }

    void a(int n2, d d2, Menu menu2) {
        d d3 = d2;
        Menu menu3 = menu2;
        if (menu2 == null) {
            d d4 = d2;
            if (d2 == null) {
                d4 = d2;
                if (n2 >= 0) {
                    d4 = d2;
                    if (n2 < this.E.length) {
                        d4 = this.E[n2];
                    }
                }
            }
            d3 = d4;
            menu3 = menu2;
            if (d4 != null) {
                menu3 = d4.j;
                d3 = d4;
            }
        }
        if (d3 != null && !d3.o) {
            return;
        }
        if (!this.p()) {
            this.c.onPanelClosed(n2, menu3);
        }
    }

    @Override
    void a(int n2, Menu object) {
        if (n2 == 108) {
            object = this.a();
            if (object != null) {
                object.g(false);
                return;
            }
        } else if (n2 == 0) {
            object = this.a(n2, true);
            if (object.o) {
                this.a((d)object, false);
            }
        }
    }

    @Override
    public void a(Configuration configuration) {
        android.support.v7.app.a a2;
        if (this.h && this.x && (a2 = this.a()) != null) {
            a2.a(configuration);
        }
        m.a().a(this.a);
        this.i();
    }

    @Override
    public void a(Bundle object) {
        if (this.c instanceof Activity && z.b((Activity)this.c) != null) {
            object = this.m();
            if (object == null) {
                this.I = true;
                return;
            }
            object.e(true);
        }
    }

    void a(d d2, boolean bl2) {
        if (bl2 && d2.a == 0 && this.u != null && this.u.f()) {
            this.b(d2.j);
            return;
        }
        WindowManager windowManager = (WindowManager)this.a.getSystemService("window");
        if (windowManager != null && d2.o && d2.g != null) {
            windowManager.removeView((View)d2.g);
            if (bl2) {
                this.a(d2.a, d2, null);
            }
        }
        d2.m = false;
        d2.n = false;
        d2.o = false;
        d2.h = null;
        d2.q = true;
        if (this.F == d2) {
            this.F = null;
        }
    }

    @Override
    public void a(h h2) {
        this.a(h2, true);
    }

    /*
     * Enabled aggressive block sorting
     */
    @Override
    public void a(Toolbar object) {
        if (!(this.c instanceof Activity)) {
            return;
        }
        android.support.v7.app.a a2 = this.a();
        if (a2 instanceof q) {
            throw new IllegalStateException("This Activity already has an action bar supplied by the window decor. Do not request Window.FEATURE_SUPPORT_ACTION_BAR and set windowActionBar to false in your theme to use a Toolbar instead.");
        }
        this.g = null;
        if (a2 != null) {
            a2.g();
        }
        if (object != null) {
            this.f = object = new n((Toolbar)((Object)object), ((Activity)this.c).getTitle(), this.d);
            a2 = this.b;
            object = object.h();
        } else {
            this.f = null;
            a2 = this.b;
            object = this.d;
        }
        a2.setCallback((Window.Callback)object);
        this.f();
    }

    @Override
    public void a(View view) {
        this.w();
        ViewGroup viewGroup = (ViewGroup)this.y.findViewById(16908290);
        viewGroup.removeAllViews();
        viewGroup.addView(view);
        this.c.onContentChanged();
    }

    @Override
    public void a(View view, ViewGroup.LayoutParams layoutParams) {
        this.w();
        ViewGroup viewGroup = (ViewGroup)this.y.findViewById(16908290);
        viewGroup.removeAllViews();
        viewGroup.addView(view, layoutParams);
        this.c.onContentChanged();
    }

    void a(ViewGroup viewGroup) {
    }

    @Override
    boolean a(int n2, KeyEvent keyEvent) {
        Object object = this.a();
        if (object != null && object.a(n2, keyEvent)) {
            return true;
        }
        if (this.F != null && this.a(this.F, keyEvent.getKeyCode(), keyEvent, 1)) {
            if (this.F != null) {
                this.F.n = true;
            }
            return true;
        }
        if (this.F == null) {
            object = this.a(0, true);
            this.b((d)object, keyEvent);
            boolean bl2 = this.a((d)object, keyEvent.getKeyCode(), keyEvent, 1);
            object.m = false;
            if (bl2) {
                return true;
            }
        }
        return false;
    }

    @Override
    public boolean a(h object, MenuItem menuItem) {
        Window.Callback callback = this.q();
        if (callback != null && !this.p() && (object = this.a((Menu)object.p())) != null) {
            return callback.onMenuItemSelected(object.a, menuItem);
        }
        return false;
    }

    @Override
    boolean a(KeyEvent keyEvent) {
        int n2 = keyEvent.getKeyCode();
        boolean bl2 = true;
        if (n2 == 82 && this.c.dispatchKeyEvent(keyEvent)) {
            return true;
        }
        n2 = keyEvent.getKeyCode();
        if (keyEvent.getAction() != 0) {
            bl2 = false;
        }
        if (bl2) {
            return this.c(n2, keyEvent);
        }
        return this.b(n2, keyEvent);
    }

    public android.support.v7.view.b b(b.a a2) {
        if (a2 != null) {
            if (this.m != null) {
                this.m.c();
            }
            a2 = new b(a2);
            android.support.v7.app.a a3 = this.a();
            if (a3 != null) {
                this.m = a3.a(a2);
                if (this.m != null && this.e != null) {
                    this.e.a(this.m);
                }
            }
            if (this.m == null) {
                this.m = this.a(a2);
            }
            return this.m;
        }
        throw new IllegalArgumentException("ActionMode callback can not be null.");
    }

    public View b(View view, String string2, Context context, AttributeSet attributeSet) {
        boolean bl2;
        block9 : {
            Object object = this.L;
            bl2 = false;
            if (object == null) {
                block10 : {
                    object = this.a.obtainStyledAttributes(a.j.AppCompatTheme).getString(a.j.AppCompatTheme_viewInflaterClass);
                    if (object != null && !AppCompatViewInflater.class.getName().equals(object)) {
                        try {
                            this.L = (AppCompatViewInflater)Class.forName((String)object).getDeclaredConstructor(new Class[0]).newInstance(new Object[0]);
                            break block9;
                        }
                        catch (Throwable throwable) {
                            StringBuilder stringBuilder = new StringBuilder();
                            stringBuilder.append("Failed to instantiate custom view inflater ");
                            stringBuilder.append((String)object);
                            stringBuilder.append(". Falling back to default.");
                            Log.i((String)"AppCompatDelegate", (String)stringBuilder.toString(), (Throwable)throwable);
                            object = new AppCompatViewInflater();
                            break block10;
                        }
                    }
                    object = new AppCompatViewInflater();
                }
                this.L = object;
            }
        }
        if (t) {
            if (attributeSet instanceof XmlPullParser) {
                if (((XmlPullParser)attributeSet).getDepth() > 1) {
                    bl2 = true;
                }
            } else {
                bl2 = this.a((ViewParent)view);
            }
        } else {
            bl2 = false;
        }
        return this.L.a(view, string2, context, attributeSet, bl2, t, true, bl.a());
    }

    @Override
    public void b(int n2) {
        this.w();
        ViewGroup viewGroup = (ViewGroup)this.y.findViewById(16908290);
        viewGroup.removeAllViews();
        LayoutInflater.from((Context)this.a).inflate(n2, viewGroup);
        this.c.onContentChanged();
    }

    @Override
    public void b(Bundle bundle) {
        this.w();
    }

    void b(h h2) {
        if (this.D) {
            return;
        }
        this.D = true;
        this.u.k();
        Window.Callback callback = this.q();
        if (callback != null && !this.p()) {
            callback.onPanelClosed(108, (Menu)h2);
        }
        this.D = false;
    }

    @Override
    public void b(View view, ViewGroup.LayoutParams layoutParams) {
        this.w();
        ((ViewGroup)this.y.findViewById(16908290)).addView(view, layoutParams);
        this.c.onContentChanged();
    }

    @Override
    void b(CharSequence charSequence) {
        if (this.u != null) {
            this.u.setWindowTitle(charSequence);
            return;
        }
        if (this.m() != null) {
            this.m().a(charSequence);
            return;
        }
        if (this.z != null) {
            this.z.setText(charSequence);
        }
    }

    boolean b(int n2, KeyEvent object) {
        if (n2 != 4) {
            if (n2 != 82) {
                return false;
            }
            this.e(0, (KeyEvent)object);
            return true;
        }
        boolean bl2 = this.G;
        this.G = false;
        object = this.a(0, false);
        if (object != null && object.o) {
            if (!bl2) {
                this.a((d)object, true);
            }
            return true;
        }
        if (this.u()) {
            return true;
        }
        return false;
    }

    @Override
    boolean b(int n2, Menu object) {
        if (n2 == 108) {
            object = this.a();
            if (object != null) {
                object.g(true);
            }
            return true;
        }
        return false;
    }

    @Override
    public boolean c(int n2) {
        n2 = this.h(n2);
        if (this.l && n2 == 108) {
            return false;
        }
        if (this.h && n2 == 1) {
            this.h = false;
        }
        switch (n2) {
            default: {
                return this.b.requestFeature(n2);
            }
            case 109: {
                this.z();
                this.i = true;
                return true;
            }
            case 108: {
                this.z();
                this.h = true;
                return true;
            }
            case 10: {
                this.z();
                this.j = true;
                return true;
            }
            case 5: {
                this.z();
                this.C = true;
                return true;
            }
            case 2: {
                this.z();
                this.B = true;
                return true;
            }
            case 1: 
        }
        this.z();
        this.l = true;
        return true;
    }

    boolean c(int n2, KeyEvent keyEvent) {
        boolean bl2 = true;
        if (n2 != 4) {
            if (n2 != 82) {
                return false;
            }
            this.d(0, keyEvent);
            return true;
        }
        if ((keyEvent.getFlags() & 128) == 0) {
            bl2 = false;
        }
        this.G = bl2;
        return false;
    }

    @Override
    public void d() {
        android.support.v7.app.a a2 = this.a();
        if (a2 != null) {
            a2.f(false);
        }
    }

    @Override
    public void e() {
        android.support.v7.app.a a2 = this.a();
        if (a2 != null) {
            a2.f(true);
        }
    }

    void e(int n2) {
        this.a(this.a(n2, true), true);
    }

    @Override
    public void f() {
        android.support.v7.app.a a2 = this.a();
        if (a2 != null && a2.e()) {
            return;
        }
        this.d(0);
    }

    void f(int n2) {
        d d2 = this.a(n2, true);
        if (d2.j != null) {
            Bundle bundle = new Bundle();
            d2.j.a(bundle);
            if (bundle.size() > 0) {
                d2.s = bundle;
            }
            d2.j.g();
            d2.j.clear();
        }
        d2.r = true;
        d2.q = true;
        if ((n2 == 108 || n2 == 0) && this.u != null && (d2 = this.a(0, false)) != null) {
            d2.m = false;
            this.b(d2, null);
        }
    }

    int g(int n2) {
        int n3;
        int n4;
        ActionBarContextView actionBarContextView = this.n;
        int n5 = 0;
        if (actionBarContextView != null && this.n.getLayoutParams() instanceof ViewGroup.MarginLayoutParams) {
            int n6;
            int n7;
            actionBarContextView = (ViewGroup.MarginLayoutParams)this.n.getLayoutParams();
            boolean bl2 = this.n.isShown();
            int n8 = 1;
            if (bl2) {
                if (this.J == null) {
                    this.J = new Rect();
                    this.K = new Rect();
                }
                Rect rect = this.J;
                Rect rect2 = this.K;
                rect.set(0, n2, 0, 0);
                bo.a((View)this.y, rect, rect2);
                n3 = rect2.top == 0 ? n2 : 0;
                if (actionBarContextView.topMargin != n3) {
                    actionBarContextView.topMargin = n2;
                    if (this.A == null) {
                        this.A = new View(this.a);
                        this.A.setBackgroundColor(this.a.getResources().getColor(a.c.abc_input_method_navigation_guard));
                        this.y.addView(this.A, -1, new ViewGroup.LayoutParams(-1, n2));
                    } else {
                        rect = this.A.getLayoutParams();
                        if (rect.height != n2) {
                            rect.height = n2;
                            this.A.setLayoutParams((ViewGroup.LayoutParams)rect);
                        }
                    }
                    n4 = 1;
                } else {
                    n4 = 0;
                }
                if (this.A == null) {
                    n8 = 0;
                }
                n6 = n4;
                n3 = n8;
                n7 = n2;
                if (!this.j) {
                    n6 = n4;
                    n3 = n8;
                    n7 = n2;
                    if (n8 != 0) {
                        n7 = 0;
                        n6 = n4;
                        n3 = n8;
                    }
                }
            } else {
                if (actionBarContextView.topMargin != 0) {
                    actionBarContextView.topMargin = 0;
                    n4 = 1;
                } else {
                    n4 = 0;
                }
                n3 = 0;
                n7 = n2;
                n6 = n4;
            }
            n4 = n3;
            n2 = n7;
            if (n6 != 0) {
                this.n.setLayoutParams((ViewGroup.LayoutParams)actionBarContextView);
                n4 = n3;
                n2 = n7;
            }
        } else {
            n4 = 0;
        }
        if (this.A != null) {
            actionBarContextView = this.A;
            n3 = n4 != 0 ? n5 : 8;
            actionBarContextView.setVisibility(n3);
        }
        return n2;
    }

    @Override
    public void g() {
        if (this.r) {
            this.b.getDecorView().removeCallbacks(this.H);
        }
        super.g();
        if (this.f != null) {
            this.f.g();
        }
    }

    @Override
    public void h() {
        LayoutInflater layoutInflater = LayoutInflater.from((Context)this.a);
        if (layoutInflater.getFactory() == null) {
            android.support.v4.view.e.b(layoutInflater, this);
            return;
        }
        if (!(layoutInflater.getFactory2() instanceof j)) {
            Log.i((String)"AppCompatDelegate", (String)"The Activity's LayoutInflater already has a Factory installed so we can not install AppCompat's");
        }
    }

    /*
     * Enabled aggressive block sorting
     */
    @Override
    public void l() {
        block5 : {
            block8 : {
                q q2;
                block7 : {
                    block6 : {
                        this.w();
                        if (!this.h) break block5;
                        if (this.f != null) {
                            return;
                        }
                        if (!(this.c instanceof Activity)) break block6;
                        q2 = new q((Activity)this.c, this.i);
                        break block7;
                    }
                    if (!(this.c instanceof Dialog)) break block8;
                    q2 = new q((Dialog)this.c);
                }
                this.f = q2;
            }
            if (this.f != null) {
                this.f.e(this.I);
            }
        }
    }

    public final View onCreateView(View view, String string2, Context context, AttributeSet attributeSet) {
        View view2 = this.a(view, string2, context, attributeSet);
        if (view2 != null) {
            return view2;
        }
        return this.b(view, string2, context, attributeSet);
    }

    public View onCreateView(String string2, Context context, AttributeSet attributeSet) {
        return this.onCreateView(null, string2, context, attributeSet);
    }

    final boolean s() {
        if (this.x && this.y != null && s.u((View)this.y)) {
            return true;
        }
        return false;
    }

    void t() {
        if (this.q != null) {
            this.q.b();
        }
    }

    boolean u() {
        if (this.m != null) {
            this.m.c();
            return true;
        }
        android.support.v7.app.a a2 = this.a();
        if (a2 != null && a2.f()) {
            return true;
        }
        return false;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    void v() {
        if (this.u != null) {
            this.u.k();
        }
        if (this.o != null) {
            this.b.getDecorView().removeCallbacks(this.p);
            if (this.o.isShowing()) {
                try {
                    this.o.dismiss();
                }
                catch (IllegalArgumentException illegalArgumentException) {}
            }
            this.o = null;
        }
        this.t();
        d d2 = this.a(0, false);
        if (d2 != null && d2.j != null) {
            d2.j.close();
        }
    }

    private final class a
    implements o.a {
        a() {
        }

        @Override
        public void a(h h2, boolean bl2) {
            j.this.b(h2);
        }

        @Override
        public boolean a(h h2) {
            Window.Callback callback = j.this.q();
            if (callback != null) {
                callback.onMenuOpened(108, (Menu)h2);
            }
            return true;
        }
    }

    class b
    implements b.a {
        private b.a b;

        public b(b.a a2) {
            this.b = a2;
        }

        @Override
        public void a(android.support.v7.view.b b2) {
            this.b.a(b2);
            if (j.this.o != null) {
                j.this.b.getDecorView().removeCallbacks(j.this.p);
            }
            if (j.this.n != null) {
                j.this.t();
                j.this.q = s.j((View)j.this.n).a(0.0f);
                j.this.q.a(new y(){

                    @Override
                    public void b(View view) {
                        j.this.n.setVisibility(8);
                        if (j.this.o != null) {
                            j.this.o.dismiss();
                        } else if (j.this.n.getParent() instanceof View) {
                            s.m((View)j.this.n.getParent());
                        }
                        j.this.n.removeAllViews();
                        j.this.q.a((x)null);
                        j.this.q = null;
                    }
                });
            }
            if (j.this.e != null) {
                j.this.e.b(j.this.m);
            }
            j.this.m = null;
        }

        @Override
        public boolean a(android.support.v7.view.b b2, Menu menu2) {
            return this.b.a(b2, menu2);
        }

        @Override
        public boolean a(android.support.v7.view.b b2, MenuItem menuItem) {
            return this.b.a(b2, menuItem);
        }

        @Override
        public boolean b(android.support.v7.view.b b2, Menu menu2) {
            return this.b.b(b2, menu2);
        }

    }

    private class c
    extends ContentFrameLayout {
        public c(Context context) {
            super(context);
        }

        private boolean a(int n2, int n3) {
            if (n2 >= -5 && n3 >= -5 && n2 <= this.getWidth() + 5 && n3 <= this.getHeight() + 5) {
                return false;
            }
            return true;
        }

        public boolean dispatchKeyEvent(KeyEvent keyEvent) {
            if (!j.this.a(keyEvent) && !super.dispatchKeyEvent(keyEvent)) {
                return false;
            }
            return true;
        }

        public boolean onInterceptTouchEvent(MotionEvent motionEvent) {
            if (motionEvent.getAction() == 0 && this.a((int)motionEvent.getX(), (int)motionEvent.getY())) {
                j.this.e(0);
                return true;
            }
            return super.onInterceptTouchEvent(motionEvent);
        }

        public void setBackgroundResource(int n2) {
            this.setBackgroundDrawable(android.support.v7.b.a.b.b(this.getContext(), n2));
        }
    }

    protected static final class d {
        int a;
        int b;
        int c;
        int d;
        int e;
        int f;
        ViewGroup g;
        View h;
        View i;
        h j;
        android.support.v7.view.menu.f k;
        Context l;
        boolean m;
        boolean n;
        boolean o;
        public boolean p;
        boolean q;
        boolean r;
        Bundle s;

        d(int n2) {
            this.a = n2;
            this.q = false;
        }

        p a(o.a a2) {
            if (this.j == null) {
                return null;
            }
            if (this.k == null) {
                this.k = new android.support.v7.view.menu.f(this.l, a.g.abc_list_menu_item_layout);
                this.k.a(a2);
                this.j.a(this.k);
            }
            return this.k.a(this.g);
        }

        /*
         * Enabled aggressive block sorting
         */
        void a(Context object) {
            TypedValue typedValue = new TypedValue();
            Resources.Theme theme = object.getResources().newTheme();
            theme.setTo(object.getTheme());
            theme.resolveAttribute(a.a.actionBarPopupTheme, typedValue, true);
            if (typedValue.resourceId != 0) {
                theme.applyStyle(typedValue.resourceId, true);
            }
            theme.resolveAttribute(a.a.panelMenuListTheme, typedValue, true);
            int n2 = typedValue.resourceId != 0 ? typedValue.resourceId : a.i.Theme_AppCompat_CompactMenu;
            theme.applyStyle(n2, true);
            android.support.v7.view.d d2 = new android.support.v7.view.d((Context)object, 0);
            d2.getTheme().setTo(theme);
            this.l = d2;
            TypedArray typedArray = d2.obtainStyledAttributes(a.j.AppCompatTheme);
            this.b = typedArray.getResourceId(a.j.AppCompatTheme_panelBackground, 0);
            this.f = typedArray.getResourceId(a.j.AppCompatTheme_android_windowAnimationStyle, 0);
            typedArray.recycle();
        }

        void a(h h2) {
            if (h2 == this.j) {
                return;
            }
            if (this.j != null) {
                this.j.b(this.k);
            }
            this.j = h2;
            if (h2 != null && this.k != null) {
                h2.a(this.k);
            }
        }

        public boolean a() {
            View view = this.h;
            boolean bl2 = false;
            if (view == null) {
                return false;
            }
            if (this.i != null) {
                return true;
            }
            if (this.k.a().getCount() > 0) {
                bl2 = true;
            }
            return bl2;
        }
    }

    private final class e
    implements o.a {
        e() {
        }

        @Override
        public void a(h object, boolean bl2) {
            h h2 = object.p();
            boolean bl3 = h2 != object;
            j j2 = j.this;
            if (bl3) {
                object = h2;
            }
            if ((object = j2.a((Menu)object)) != null) {
                if (bl3) {
                    j.this.a(object.a, (d)object, h2);
                    j.this.a((d)object, true);
                    return;
                }
                j.this.a((d)object, bl2);
            }
        }

        @Override
        public boolean a(h h2) {
            Window.Callback callback;
            if (h2 == null && j.this.h && (callback = j.this.q()) != null && !j.this.p()) {
                callback.onMenuOpened(108, (Menu)h2);
            }
            return true;
        }
    }

}

