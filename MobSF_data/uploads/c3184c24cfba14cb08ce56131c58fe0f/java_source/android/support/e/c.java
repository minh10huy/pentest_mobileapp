/*
 * Decompiled with CFR 0_132.
 */
package android.support.e;

import java.io.File;
import java.io.RandomAccessFile;
import java.util.zip.CRC32;
import java.util.zip.ZipException;

final class c {
    static long a(File object) {
        object = new RandomAccessFile((File)object, "r");
        try {
            long l2 = c.a((RandomAccessFile)object, c.a((RandomAccessFile)object));
            return l2;
        }
        finally {
            object.close();
        }
    }

    static long a(RandomAccessFile randomAccessFile, a arrby) {
        CRC32 cRC32 = new CRC32();
        long l2 = arrby.b;
        randomAccessFile.seek(arrby.a);
        int n2 = (int)Math.min(16384L, l2);
        arrby = new byte[16384];
        while ((n2 = randomAccessFile.read(arrby, 0, n2)) != -1) {
            cRC32.update(arrby, 0, n2);
            if ((l2 -= (long)n2) == 0L) break;
            n2 = (int)Math.min(16384L, l2);
        }
        return cRC32.getValue();
    }

    static a a(RandomAccessFile randomAccessFile) {
        long l2 = randomAccessFile.length() - 22L;
        long l3 = 0L;
        if (l2 >= 0L) {
            long l4 = l2 - 65536L;
            if (l4 >= 0L) {
                l3 = l4;
            }
            int n2 = Integer.reverseBytes(101010256);
            do {
                randomAccessFile.seek(l2);
                if (randomAccessFile.readInt() != n2) continue;
                randomAccessFile.skipBytes(2);
                randomAccessFile.skipBytes(2);
                randomAccessFile.skipBytes(2);
                randomAccessFile.skipBytes(2);
                a a2 = new a();
                a2.b = (long)Integer.reverseBytes(randomAccessFile.readInt()) & 0xFFFFFFFFL;
                a2.a = (long)Integer.reverseBytes(randomAccessFile.readInt()) & 0xFFFFFFFFL;
                return a2;
            } while (--l2 >= l3);
            throw new ZipException("End Of Central Directory signature not found");
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("File too short to be a zip file: ");
        stringBuilder.append(randomAccessFile.length());
        throw new ZipException(stringBuilder.toString());
    }

    static class a {
        long a;
        long b;

        a() {
        }
    }

}

