/*
 * Decompiled with CFR 0_132.
 */
package android.support.constraint.a.a;

import android.support.constraint.a.a.c;
import android.support.constraint.a.a.d;
import android.support.constraint.a.a.e;
import android.support.constraint.a.a.f;
import android.support.constraint.a.a.h;
import android.support.constraint.a.a.k;
import android.support.constraint.a.a.m;
import android.support.constraint.a.a.n;
import android.support.constraint.a.a.p;
import android.support.constraint.a.a.q;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class g
extends q {
    private boolean aA = false;
    private p aB;
    private int aC = 7;
    private boolean aD = false;
    private boolean aE = false;
    protected android.support.constraint.a.e ai = new android.support.constraint.a.e();
    int aj;
    int ak;
    int al;
    int am;
    int an = 0;
    int ao = 0;
    d[] ap = new d[4];
    d[] aq = new d[4];
    public List<h> ar = new ArrayList<h>();
    public boolean as = false;
    public boolean at = false;
    public boolean au = false;
    public int av = 0;
    public int aw = 0;
    public boolean ax = false;
    int ay = 0;

    private void V() {
        this.an = 0;
        this.ao = 0;
    }

    private void d(f f2) {
        if (this.an + 1 >= this.aq.length) {
            this.aq = Arrays.copyOf(this.aq, this.aq.length * 2);
        }
        this.aq[this.an] = new d(f2, 0, this.M());
        ++this.an;
    }

    private void e(f f2) {
        if (this.ao + 1 >= this.ap.length) {
            this.ap = Arrays.copyOf(this.ap, this.ap.length * 2);
        }
        this.ap[this.ao] = new d(f2, 1, this.M());
        ++this.ao;
    }

    public int J() {
        return this.aC;
    }

    public boolean K() {
        return this.aD;
    }

    public boolean L() {
        return this.aE;
    }

    public boolean M() {
        return this.aA;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public void N() {
        n3 = this.I;
        n4 = this.J;
        n5 = Math.max(0, this.p());
        n6 = Math.max(0, this.r());
        this.aD = false;
        this.aE = false;
        if (this.D != null) {
            if (this.aB == null) {
                this.aB = new p(this);
            }
            this.aB.a(this);
            this.h(this.aj);
            this.i(this.ak);
            this.E();
            this.a(this.ai.g());
        } else {
            this.I = 0;
            this.J = 0;
        }
        if (this.aC != 0) {
            if (!this.u(8)) {
                this.Q();
            }
            if (!this.u(32)) {
                this.R();
            }
            this.ai.c = true;
        } else {
            this.ai.c = false;
        }
        a2 = this.C[1];
        a3 = this.C[0];
        this.V();
        if (this.ar.size() == 0) {
            this.ar.clear();
            this.ar.add(0, new h(this.az));
        }
        n7 = this.ar.size();
        arrayList = this.az;
        bl2 = this.F() == f.a.b || this.G() == f.a.b;
        n8 = 0;
        i2 = 0;
        block7 : do {
            block47 : {
                block46 : {
                    if (i2 >= n7 || this.ax) break block46;
                    if (this.ar.get((int)i2).d) ** GOTO lbl94
                    if (this.u(32)) {
                        object = this.F() == f.a.a && this.G() == f.a.a ? this.ar.get(i2).a() : this.ar.get((int)i2).a;
                        this.az = (ArrayList)object;
                    }
                    this.V();
                    n9 = this.az.size();
                    for (n2 = 0; n2 < n9; ++n2) {
                        object = (f)this.az.get(n2);
                        if (!(object instanceof q)) continue;
                        ((q)object).N();
                    }
                    break block47;
                }
                this.az = arrayList;
                if (this.D != null) {
                    n7 = Math.max(this.P, this.p());
                    n2 = Math.max(this.Q, this.r());
                    this.aB.b(this);
                    this.j(n7 + this.aj + this.al);
                    this.k(n2 + this.ak + this.am);
                } else {
                    this.I = n3;
                    this.J = n4;
                }
                if (n8 != 0) {
                    this.C[0] = a3;
                    this.C[1] = a2;
                }
                this.a(this.ai.g());
                if (this != this.T()) return;
                this.D();
                return;
            }
            n2 = n8;
            n10 = 0;
            bl3 = true;
            n8 = n7;
            n7 = n2;
            n2 = n10;
            do {
                block48 : {
                    block44 : {
                        block45 : {
                            block43 : {
                                if (bl3) {
                                    n10 = n2 + 1;
                                    n2 = n7;
                                    try {
                                        this.ai.b();
                                        n2 = n7;
                                        this.V();
                                        n2 = n7;
                                        this.b(this.ai);
                                        break block43;
                                    }
                                    catch (Exception exception) {
                                        n7 = n2;
                                        break block44;
                                    }
                                }
                                this.ar.get(i2).b();
                                n2 = n7;
                                n7 = n8;
                                n8 = n2;
lbl94: // 2 sources:
                                ++i2;
                                continue block7;
                            }
                            for (n11 = 0; n11 < n9; ++n11) {
                                n2 = n7;
                                object = (f)this.az.get(n11);
                                object.b(this.ai);
                                continue;
                            }
                            n2 = n7;
                            try {
                                bl4 = this.d(this.ai);
                                if (!bl4) break block45;
                            }
                            catch (Exception exception) {}
                            try {
                                this.ai.f();
                            }
                            catch (Exception exception) {
                                bl3 = bl4;
                                n7 = n2;
                                break block44;
                            }
                        }
                        n7 = n2;
                        bl3 = bl4;
                        break block48;
                    }
                    object.printStackTrace();
                    printStream = System.out;
                    stringBuilder = new StringBuilder();
                    stringBuilder.append("EXCEPTION : ");
                    stringBuilder.append(object);
                    printStream.println(stringBuilder.toString());
                }
                if (bl3) {
                    this.a(this.ai, k.a);
                } else {
                    this.c(this.ai);
                    for (n2 = 0; n2 < n9; ++n2) {
                        object = (f)this.az.get(n2);
                        if (object.C[0] == f.a.c && object.p() < object.q()) {
                            k.a[2] = true;
                            break;
                        }
                        if (object.C[1] != f.a.c || object.r() >= object.s()) continue;
                        k.a[2] = true;
                        break;
                    }
                }
                if (bl2 && n10 < 8 && k.a[2]) {
                    n12 = 0;
                    n13 = 0;
                    n11 = 0;
                    n2 = n10;
                    for (n10 = n12; n10 < n9; ++n10) {
                        object = (f)this.az.get(n10);
                        n13 = Math.max(n13, object.I + object.p());
                        n11 = Math.max(n11, object.J + object.r());
                    }
                    n13 = Math.max(this.P, n13);
                    n10 = Math.max(this.Q, n11);
                    if (a3 == f.a.b && this.p() < n13) {
                        this.j(n13);
                        this.C[0] = f.a.b;
                        bl3 = true;
                        n7 = 1;
                    } else {
                        bl3 = false;
                    }
                    if (a2 == f.a.b && this.r() < n10) {
                        this.k(n10);
                        this.C[1] = f.a.b;
                        bl3 = true;
                        n7 = 1;
                    }
                } else {
                    n2 = n10;
                    bl3 = false;
                }
                n10 = Math.max(this.P, this.p());
                if (n10 > this.p()) {
                    this.j(n10);
                    this.C[0] = f.a.a;
                    bl3 = true;
                    n7 = 1;
                }
                if ((n10 = Math.max(this.Q, this.r())) > this.r()) {
                    this.k(n10);
                    this.C[1] = f.a.a;
                    bl3 = true;
                    n7 = 1;
                }
                bl5 = bl3;
                n11 = n7;
                if (n7 == 0) {
                    bl4 = bl3;
                    n10 = n7;
                    if (this.C[0] == f.a.b) {
                        bl4 = bl3;
                        n10 = n7;
                        if (n5 > 0) {
                            bl4 = bl3;
                            n10 = n7;
                            if (this.p() > n5) {
                                this.aD = true;
                                this.C[0] = f.a.a;
                                this.j(n5);
                                bl4 = true;
                                n10 = 1;
                            }
                        }
                    }
                    bl5 = bl4;
                    n11 = n10;
                    if (this.C[1] == f.a.b) {
                        bl5 = bl4;
                        n11 = n10;
                        if (n6 > 0) {
                            bl5 = bl4;
                            n11 = n10;
                            if (this.r() > n6) {
                                this.aE = true;
                                this.C[1] = f.a.a;
                                this.k(n6);
                                bl3 = true;
                                n7 = 1;
                                continue;
                            }
                        }
                    }
                }
                bl3 = bl5;
                n7 = n11;
            } while (true);
            break;
        } while (true);
    }

    public void O() {
        this.Q();
        this.b(this.aC);
    }

    public void P() {
        m m2 = this.a(e.c.b).a();
        m m3 = this.a(e.c.c).a();
        m2.a(null, 0.0f);
        m3.a(null, 0.0f);
    }

    public void Q() {
        int n2 = this.az.size();
        this.b();
        for (int i2 = 0; i2 < n2; ++i2) {
            ((f)this.az.get(i2)).b();
        }
    }

    public void R() {
        if (!this.u(8)) {
            this.b(this.aC);
        }
        this.P();
    }

    public boolean S() {
        return false;
    }

    public void a(int n2) {
        this.aC = n2;
    }

    void a(f f2, int n2) {
        if (n2 == 0) {
            this.d(f2);
            return;
        }
        if (n2 == 1) {
            this.e(f2);
        }
    }

    public void a(android.support.constraint.a.e e2, boolean[] arrbl) {
        arrbl[2] = false;
        this.c(e2);
        int n2 = this.az.size();
        for (int i2 = 0; i2 < n2; ++i2) {
            f f2 = (f)this.az.get(i2);
            f2.c(e2);
            if (f2.C[0] == f.a.c && f2.p() < f2.q()) {
                arrbl[2] = true;
            }
            if (f2.C[1] != f.a.c || f2.r() >= f2.s()) continue;
            arrbl[2] = true;
        }
    }

    public void a(boolean bl2) {
        this.aA = bl2;
    }

    @Override
    public void b(int n2) {
        super.b(n2);
        int n3 = this.az.size();
        for (int i2 = 0; i2 < n3; ++i2) {
            ((f)this.az.get(i2)).b(n2);
        }
    }

    public boolean d(android.support.constraint.a.e e2) {
        this.a(e2);
        int n2 = this.az.size();
        for (int i2 = 0; i2 < n2; ++i2) {
            f f2 = (f)this.az.get(i2);
            if (f2 instanceof g) {
                f.a a2 = f2.C[0];
                f.a a3 = f2.C[1];
                if (a2 == f.a.b) {
                    f2.a(f.a.a);
                }
                if (a3 == f.a.b) {
                    f2.b(f.a.a);
                }
                f2.a(e2);
                if (a2 == f.a.b) {
                    f2.a(a2);
                }
                if (a3 != f.a.b) continue;
                f2.b(a3);
                continue;
            }
            k.a(this, e2, f2);
            f2.a(e2);
        }
        if (this.an > 0) {
            c.a(this, e2, 0);
        }
        if (this.ao > 0) {
            c.a(this, e2, 1);
        }
        return true;
    }

    @Override
    public void f() {
        this.ai.b();
        this.aj = 0;
        this.al = 0;
        this.ak = 0;
        this.am = 0;
        this.ar.clear();
        this.ax = false;
        super.f();
    }

    public void f(int n2, int n3) {
        if (this.C[0] != f.a.b && this.c != null) {
            this.c.a(n2);
        }
        if (this.C[1] != f.a.b && this.d != null) {
            this.d.a(n3);
        }
    }

    public boolean u(int n2) {
        if ((this.aC & n2) == n2) {
            return true;
        }
        return false;
    }
}

