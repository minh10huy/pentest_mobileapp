/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.content.Context
 *  android.content.res.Resources
 *  android.content.res.Resources$NotFoundException
 *  android.content.res.TypedArray
 *  android.graphics.Canvas
 *  android.graphics.Paint
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.util.AttributeSet
 *  android.util.Log
 *  android.util.SparseArray
 *  android.util.SparseIntArray
 *  android.view.View
 *  android.view.View$MeasureSpec
 *  android.view.ViewGroup
 *  android.view.ViewGroup$LayoutParams
 *  android.view.ViewGroup$MarginLayoutParams
 *  android.view.ViewParent
 */
package android.support.constraint;

import android.annotation.TargetApi;
import android.content.Context;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.os.Build;
import android.support.constraint.a.a.e;
import android.support.constraint.a.a.f;
import android.support.constraint.a.a.g;
import android.support.constraint.a.a.h;
import android.support.constraint.a.a.i;
import android.support.constraint.a.a.m;
import android.support.constraint.a.a.n;
import android.support.constraint.b;
import android.support.constraint.c;
import android.support.constraint.g;
import android.util.AttributeSet;
import android.util.Log;
import android.util.SparseArray;
import android.util.SparseIntArray;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class ConstraintLayout
extends ViewGroup {
    SparseArray<View> a = new SparseArray();
    g b = new g();
    int c = -1;
    int d = -1;
    int e = 0;
    int f = 0;
    private ArrayList<b> g = new ArrayList(4);
    private final ArrayList<f> h = new ArrayList(100);
    private int i = 0;
    private int j = 0;
    private int k = Integer.MAX_VALUE;
    private int l = Integer.MAX_VALUE;
    private boolean m = true;
    private int n = 7;
    private c o = null;
    private int p = -1;
    private HashMap<String, Integer> q = new HashMap();
    private int r = -1;
    private int s = -1;
    private android.support.constraint.a.f t;

    public ConstraintLayout(Context context) {
        super(context);
        this.b(null);
    }

    public ConstraintLayout(Context context, AttributeSet attributeSet) {
        super(context, attributeSet);
        this.b(attributeSet);
    }

    public ConstraintLayout(Context context, AttributeSet attributeSet, int n2) {
        super(context, attributeSet, n2);
        this.b(attributeSet);
    }

    private void a(int n2, int n3) {
        int n4 = this.getPaddingTop() + this.getPaddingBottom();
        int n5 = this.getPaddingLeft() + this.getPaddingRight();
        int n6 = this.getChildCount();
        for (int i2 = 0; i2 < n6; ++i2) {
            int n7;
            boolean bl2;
            int n8;
            View view = this.getChildAt(i2);
            if (view.getVisibility() == 8) continue;
            a a2 = (a)view.getLayoutParams();
            f f2 = a2.al;
            if (a2.Y || a2.Z) continue;
            f2.e(view.getVisibility());
            int n9 = a2.width;
            int n10 = a2.height;
            int n11 = !a2.V && !a2.W && (a2.V || a2.I != 1) && a2.width != -1 && (a2.W || a2.J != 1 && a2.height != -1) ? 0 : 1;
            if (n11 != 0) {
                if (n9 == 0) {
                    n8 = ConstraintLayout.getChildMeasureSpec((int)n2, (int)n5, (int)-2);
                    n11 = 1;
                } else if (n9 == -1) {
                    n8 = ConstraintLayout.getChildMeasureSpec((int)n2, (int)n5, (int)-1);
                    n11 = 0;
                } else {
                    n11 = n9 == -2 ? 1 : 0;
                    n8 = ConstraintLayout.getChildMeasureSpec((int)n2, (int)n5, (int)n9);
                }
                if (n10 == 0) {
                    n7 = ConstraintLayout.getChildMeasureSpec((int)n3, (int)n4, (int)-2);
                    bl2 = true;
                } else if (n10 == -1) {
                    n7 = ConstraintLayout.getChildMeasureSpec((int)n3, (int)n4, (int)-1);
                    bl2 = false;
                } else {
                    bl2 = n10 == -2;
                    n7 = ConstraintLayout.getChildMeasureSpec((int)n3, (int)n4, (int)n10);
                }
                view.measure(n8, n7);
                if (this.t != null) {
                    android.support.constraint.a.f f3 = this.t;
                    ++f3.a;
                }
                boolean bl3 = n9 == -2;
                f2.b(bl3);
                bl3 = n10 == -2;
                f2.c(bl3);
                n8 = view.getMeasuredWidth();
                n7 = view.getMeasuredHeight();
            } else {
                n11 = 0;
                bl2 = false;
                n7 = n10;
                n8 = n9;
            }
            f2.j(n8);
            f2.k(n7);
            if (n11 != 0) {
                f2.n(n8);
            }
            if (bl2) {
                f2.o(n7);
            }
            if (!a2.X || (n11 = view.getBaseline()) == -1) continue;
            f2.q(n11);
        }
    }

    private final f b(int n2) {
        View view;
        if (n2 == 0) {
            return this.b;
        }
        View view2 = view = (View)this.a.get(n2);
        if (view == null) {
            view2 = view = this.findViewById(n2);
            if (view != null) {
                view2 = view;
                if (view != this) {
                    view2 = view;
                    if (view.getParent() == this) {
                        this.onViewAdded(view);
                        view2 = view;
                    }
                }
            }
        }
        if (view2 == this) {
            return this.b;
        }
        if (view2 == null) {
            return null;
        }
        return ((a)view2.getLayoutParams()).al;
    }

    private void b() {
        boolean bl2;
        int n2 = this.getChildCount();
        boolean bl3 = false;
        int n3 = 0;
        do {
            bl2 = bl3;
            if (n3 >= n2) break;
            if (this.getChildAt(n3).isLayoutRequested()) {
                bl2 = true;
                break;
            }
            ++n3;
        } while (true);
        if (bl2) {
            this.h.clear();
            this.c();
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    private void b(int var1_1, int var2_2) {
        var3_3 = this.getPaddingTop() + this.getPaddingBottom();
        var15_4 = this.getPaddingLeft() + this.getPaddingRight();
        var10_5 = this.getChildCount();
        var4_6 = 0;
        do {
            var16_12 = 1L;
            if (var4_6 >= var10_5) break;
            var21_14 = this.getChildAt(var4_6);
            if (var21_14.getVisibility() != 8) {
                var22_15 = (a)var21_14.getLayoutParams();
                var23_16 = var22_15.al;
                if (!var22_15.Y && !var22_15.Z) {
                    var23_16.e(var21_14.getVisibility());
                    var7_9 = var22_15.width;
                    var8_10 = var22_15.height;
                    if (var7_9 != 0 && var8_10 != 0) {
                        var5_7 = var7_9 == -2 ? 1 : 0;
                        var9_11 = ConstraintLayout.getChildMeasureSpec((int)var1_1, (int)var15_4, (int)var7_9);
                        var6_8 = var8_10 == -2 ? 1 : 0;
                        var21_14.measure(var9_11, ConstraintLayout.getChildMeasureSpec((int)var2_2, (int)var3_3, (int)var8_10));
                        if (this.t != null) {
                            var24_17 = this.t;
                            ++var24_17.a;
                        }
                        var20_13 = var7_9 == -2;
                        var23_16.b(var20_13);
                        var20_13 = var8_10 == -2;
                        var23_16.c(var20_13);
                        var7_9 = var21_14.getMeasuredWidth();
                        var8_10 = var21_14.getMeasuredHeight();
                        var23_16.j(var7_9);
                        var23_16.k(var8_10);
                        if (var5_7 != 0) {
                            var23_16.n(var7_9);
                        }
                        if (var6_8 != 0) {
                            var23_16.o(var8_10);
                        }
                        if (var22_15.X && (var5_7 = var21_14.getBaseline()) != -1) {
                            var23_16.q(var5_7);
                        }
                        if (var22_15.V && var22_15.W) {
                            var23_16.i().a(var7_9);
                            var23_16.j().a(var8_10);
                        }
                    } else {
                        var23_16.i().e();
                        var23_16.j().e();
                    }
                }
            }
            ++var4_6;
        } while (true);
        this.b.P();
        var11_18 = 0;
        while (var11_18 < var10_5) {
            block27 : {
                block34 : {
                    block32 : {
                        block33 : {
                            block31 : {
                                block29 : {
                                    block30 : {
                                        block28 : {
                                            var21_14 = this.getChildAt(var11_18);
                                            if (var21_14.getVisibility() == 8) break block27;
                                            var22_15 = (a)var21_14.getLayoutParams();
                                            var23_16 = var22_15.al;
                                            if (var22_15.Y || var22_15.Z) break block27;
                                            var23_16.e(var21_14.getVisibility());
                                            var8_10 = var22_15.width;
                                            var9_11 = var22_15.height;
                                            if (var8_10 != 0 && var9_11 != 0) break block27;
                                            var24_17 = var23_16.a(e.c.b).a();
                                            var25_23 = var23_16.a(e.c.d).a();
                                            var5_7 = var23_16.a(e.c.b).g() != null && var23_16.a(e.c.d).g() != null ? 1 : 0;
                                            var26_24 = var23_16.a(e.c.c).a();
                                            var27_25 = var23_16.a(e.c.e).a();
                                            var14_21 = var23_16.a(e.c.c).g() != null && var23_16.a(e.c.e).g() != null;
                                            if (var8_10 != 0 || var9_11 != 0 || var5_7 == 0 || !var14_21) break block28;
                                            var16_12 = 1L;
                                            break block27;
                                        }
                                        var7_9 = this.b.F() != f.a.b ? 1 : 0;
                                        var4_6 = this.b.G() != f.a.b ? 1 : 0;
                                        if (var7_9 == 0) {
                                            var23_16.i().e();
                                            if (var4_6 == 0) {
                                                var23_16.j().e();
                                            }
                                        }
                                        if (var8_10 != 0) break block29;
                                        if (var7_9 == 0 || !var23_16.d() || var5_7 == 0 || !var24_17.g() || !var25_23.g()) break block30;
                                        var8_10 = (int)(var25_23.d() - var24_17.d());
                                        var23_16.i().a(var8_10);
                                        var6_8 = ConstraintLayout.getChildMeasureSpec((int)var1_1, (int)var15_4, (int)var8_10);
                                        ** GOTO lbl89
                                    }
                                    var6_8 = ConstraintLayout.getChildMeasureSpec((int)var1_1, (int)var15_4, (int)-2);
                                    var12_19 = 0;
                                    var5_7 = 1;
                                    var13_20 = var8_10;
                                    break block31;
                                }
                                if (var8_10 == -1) {
                                    var6_8 = ConstraintLayout.getChildMeasureSpec((int)var1_1, (int)var15_4, (int)-1);
lbl89: // 2 sources:
                                    var5_7 = 0;
                                    var12_19 = var7_9;
                                    var13_20 = var8_10;
                                } else {
                                    var5_7 = var8_10 == -2 ? 1 : 0;
                                    var6_8 = ConstraintLayout.getChildMeasureSpec((int)var1_1, (int)var15_4, (int)var8_10);
                                    var13_20 = var8_10;
                                    var12_19 = var7_9;
                                }
                            }
                            if (var9_11 != 0) break block32;
                            if (var4_6 == 0 || !var23_16.e() || !var14_21 || !var26_24.g() || !var27_25.g()) break block33;
                            var9_11 = (int)(var27_25.d() - var26_24.d());
                            var23_16.j().a(var9_11);
                            var8_10 = ConstraintLayout.getChildMeasureSpec((int)var2_2, (int)var3_3, (int)var9_11);
                            ** GOTO lbl113
                        }
                        var8_10 = ConstraintLayout.getChildMeasureSpec((int)var2_2, (int)var3_3, (int)-2);
                        var4_6 = 0;
                        var7_9 = 1;
                        break block34;
                    }
                    var8_10 = var3_3;
                    if (var9_11 == -1) {
                        var8_10 = ConstraintLayout.getChildMeasureSpec((int)var2_2, (int)var8_10, (int)-1);
lbl113: // 2 sources:
                        var7_9 = 0;
                    } else {
                        var7_9 = var9_11 == -2 ? 1 : 0;
                        var8_10 = ConstraintLayout.getChildMeasureSpec((int)var2_2, (int)var8_10, (int)var9_11);
                    }
                }
                var21_14.measure(var6_8, var8_10);
                if (this.t != null) {
                    var24_17 = this.t;
                    ++var24_17.a;
                }
                var18_22 = 1L;
                var20_13 = var13_20 == -2;
                var23_16.b(var20_13);
                var20_13 = var9_11 == -2;
                var23_16.c(var20_13);
                var6_8 = var21_14.getMeasuredWidth();
                var8_10 = var21_14.getMeasuredHeight();
                var23_16.j(var6_8);
                var23_16.k(var8_10);
                if (var5_7 != 0) {
                    var23_16.n(var6_8);
                }
                if (var7_9 != 0) {
                    var23_16.o(var8_10);
                }
                if (var12_19 != 0) {
                    var23_16.i().a(var6_8);
                } else {
                    var23_16.i().c();
                }
                if (var4_6 != 0) {
                    var23_16.j().a(var8_10);
                } else {
                    var23_16.j().c();
                }
                if (var22_15.X) {
                    var4_6 = var21_14.getBaseline();
                    var16_12 = var18_22;
                    if (var4_6 != -1) {
                        var23_16.q(var4_6);
                        var16_12 = var18_22;
                    }
                } else {
                    var16_12 = var18_22;
                }
            }
            ++var11_18;
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private void b(AttributeSet attributeSet) {
        this.b.a((Object)this);
        this.a.put(this.getId(), (Object)this);
        this.o = null;
        if (attributeSet == null) ** GOTO lbl34
        attributeSet = this.getContext().obtainStyledAttributes(attributeSet, g.b.ConstraintLayout_Layout);
        n2 = attributeSet.getIndexCount();
        n3 = 0;
        do {
            if (n3 < n2) {
                n4 = attributeSet.getIndex(n3);
                if (n4 == g.b.ConstraintLayout_Layout_android_minWidth) {
                    this.i = attributeSet.getDimensionPixelOffset(n4, this.i);
                } else if (n4 == g.b.ConstraintLayout_Layout_android_minHeight) {
                    this.j = attributeSet.getDimensionPixelOffset(n4, this.j);
                } else if (n4 == g.b.ConstraintLayout_Layout_android_maxWidth) {
                    this.k = attributeSet.getDimensionPixelOffset(n4, this.k);
                } else if (n4 == g.b.ConstraintLayout_Layout_android_maxHeight) {
                    this.l = attributeSet.getDimensionPixelOffset(n4, this.l);
                } else if (n4 == g.b.ConstraintLayout_Layout_layout_optimizationLevel) {
                    this.n = attributeSet.getInt(n4, this.n);
                } else if (n4 == g.b.ConstraintLayout_Layout_constraintSet) {
                    n4 = attributeSet.getResourceId(n4, 0);
                    this.o = new c();
                    this.o.a(this.getContext(), n4);
                    break block16;
                }
            } else {
                block16 : {
                    attributeSet.recycle();
lbl34: // 2 sources:
                    this.b.a(this.n);
                    return;
                    catch (Resources.NotFoundException notFoundException) {}
                    this.o = null;
                }
                this.p = n4;
            }
            ++n3;
        } while (true);
    }

    private void c() {
        RuntimeException runtimeException;
        super("d2j fail translate: java.lang.RuntimeException: can not merge Z and I\n\tat com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.copyTypes(TypeTransformer.java:311)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.fixTypes(TypeTransformer.java:226)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:207)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\n");
        throw runtimeException;
    }

    /*
     * Enabled aggressive block sorting
     */
    private void c(int n2, int n3) {
        f.a a2;
        f.a a3;
        block7 : {
            block4 : {
                block6 : {
                    block5 : {
                        int n4;
                        int n5;
                        int n6;
                        block3 : {
                            block0 : {
                                block2 : {
                                    block1 : {
                                        int n7 = View.MeasureSpec.getMode((int)n2);
                                        n2 = View.MeasureSpec.getSize((int)n2);
                                        n6 = View.MeasureSpec.getMode((int)n3);
                                        n3 = View.MeasureSpec.getSize((int)n3);
                                        n5 = this.getPaddingTop();
                                        n4 = this.getPaddingBottom();
                                        int n8 = this.getPaddingLeft();
                                        int n9 = this.getPaddingRight();
                                        a2 = f.a.a;
                                        a3 = f.a.a;
                                        this.getLayoutParams();
                                        if (n7 == Integer.MIN_VALUE) break block0;
                                        if (n7 == 0) break block1;
                                        if (n7 != 1073741824) break block2;
                                        n2 = Math.min(this.k, n2) - (n8 + n9);
                                        break block3;
                                    }
                                    a2 = f.a.b;
                                }
                                n2 = 0;
                                break block3;
                            }
                            a2 = f.a.b;
                        }
                        if (n6 == Integer.MIN_VALUE) break block4;
                        if (n6 == 0) break block5;
                        if (n6 != 1073741824) break block6;
                        n3 = Math.min(this.l, n3) - (n5 + n4);
                        break block7;
                    }
                    a3 = f.a.b;
                }
                n3 = 0;
                break block7;
            }
            a3 = f.a.b;
        }
        this.b.l(0);
        this.b.m(0);
        this.b.a(a2);
        this.b.j(n2);
        this.b.b(a3);
        this.b.k(n3);
        this.b.l(this.i - this.getPaddingLeft() - this.getPaddingRight());
        this.b.m(this.j - this.getPaddingTop() - this.getPaddingBottom());
    }

    private void d() {
        int n2;
        int n3 = this.getChildCount();
        int n4 = 0;
        for (n2 = 0; n2 < n3; ++n2) {
            View view = this.getChildAt(n2);
            if (!(view instanceof android.support.constraint.f)) continue;
            ((android.support.constraint.f)view).b(this);
        }
        n3 = this.g.size();
        if (n3 > 0) {
            for (n2 = n4; n2 < n3; ++n2) {
                this.g.get(n2).c(this);
            }
        }
    }

    protected a a() {
        return new a(-2, -2);
    }

    public a a(AttributeSet attributeSet) {
        return new a(this.getContext(), attributeSet);
    }

    public final f a(View view) {
        if (view == this) {
            return this.b;
        }
        if (view == null) {
            return null;
        }
        return ((a)view.getLayoutParams()).al;
    }

    public View a(int n2) {
        return (View)this.a.get(n2);
    }

    public Object a(int n2, Object object) {
        if (n2 == 0 && object instanceof String) {
            object = (String)object;
            if (this.q != null && this.q.containsKey(object)) {
                return this.q.get(object);
            }
        }
        return null;
    }

    public void a(int n2, Object object, Object object2) {
        if (n2 == 0 && object instanceof String && object2 instanceof Integer) {
            if (this.q == null) {
                this.q = new HashMap();
            }
            String string2 = (String)object;
            n2 = string2.indexOf("/");
            object = string2;
            if (n2 != -1) {
                object = string2.substring(n2 + 1);
            }
            n2 = (Integer)object2;
            this.q.put((String)object, n2);
        }
    }

    protected void a(String object) {
        this.b.N();
        if (this.t != null) {
            object = this.t;
            ++object.c;
        }
    }

    public void addView(View view, int n2, ViewGroup.LayoutParams layoutParams) {
        super.addView(view, n2, layoutParams);
        if (Build.VERSION.SDK_INT < 14) {
            this.onViewAdded(view);
        }
    }

    protected boolean checkLayoutParams(ViewGroup.LayoutParams layoutParams) {
        return layoutParams instanceof a;
    }

    public void dispatchDraw(Canvas canvas) {
        super.dispatchDraw(canvas);
        if (this.isInEditMode()) {
            int n2 = this.getChildCount();
            float f2 = this.getWidth();
            float f3 = this.getHeight();
            for (int i2 = 0; i2 < n2; ++i2) {
                Paint paint = this.getChildAt(i2);
                if (paint.getVisibility() == 8 || (paint = paint.getTag()) == null || !(paint instanceof String) || ((String[])(paint = ((String)paint).split(","))).length != 4) continue;
                int n3 = Integer.parseInt(paint[0]);
                int n4 = Integer.parseInt(paint[1]);
                int n5 = Integer.parseInt(paint[2]);
                int n6 = Integer.parseInt(paint[3]);
                n3 = (int)((float)n3 / 1080.0f * f2);
                n4 = (int)((float)n4 / 1920.0f * f3);
                n5 = (int)((float)n5 / 1080.0f * f2);
                n6 = (int)((float)n6 / 1920.0f * f3);
                paint = new Paint();
                paint.setColor(-65536);
                float f4 = n3;
                float f5 = n4;
                float f6 = n3 + n5;
                canvas.drawLine(f4, f5, f6, f5, paint);
                float f7 = n4 + n6;
                canvas.drawLine(f6, f5, f6, f7, paint);
                canvas.drawLine(f6, f7, f4, f7, paint);
                canvas.drawLine(f4, f7, f4, f5, paint);
                paint.setColor(-16711936);
                canvas.drawLine(f4, f5, f6, f7, paint);
                canvas.drawLine(f4, f7, f6, f5, paint);
            }
        }
    }

    protected /* synthetic */ ViewGroup.LayoutParams generateDefaultLayoutParams() {
        return this.a();
    }

    public /* synthetic */ ViewGroup.LayoutParams generateLayoutParams(AttributeSet attributeSet) {
        return this.a(attributeSet);
    }

    protected ViewGroup.LayoutParams generateLayoutParams(ViewGroup.LayoutParams layoutParams) {
        return new a(layoutParams);
    }

    public int getMaxHeight() {
        return this.l;
    }

    public int getMaxWidth() {
        return this.k;
    }

    public int getMinHeight() {
        return this.j;
    }

    public int getMinWidth() {
        return this.i;
    }

    public int getOptimizationLevel() {
        return this.b.J();
    }

    protected void onLayout(boolean bl2, int n2, int n3, int n4, int n5) {
        n4 = this.getChildCount();
        bl2 = this.isInEditMode();
        n3 = 0;
        for (n2 = 0; n2 < n4; ++n2) {
            View view = this.getChildAt(n2);
            a a2 = (a)view.getLayoutParams();
            f f2 = a2.al;
            if (view.getVisibility() == 8 && !a2.Y && !a2.Z && !bl2 || a2.aa) continue;
            n5 = f2.t();
            int n6 = f2.u();
            int n7 = f2.p() + n5;
            int n8 = f2.r() + n6;
            view.layout(n5, n6, n7, n8);
            if (!(view instanceof android.support.constraint.f) || (view = ((android.support.constraint.f)view).getContent()) == null) continue;
            view.setVisibility(0);
            view.layout(n5, n6, n7, n8);
        }
        n4 = this.g.size();
        if (n4 > 0) {
            for (n2 = n3; n2 < n4; ++n2) {
                this.g.get(n2).b(this);
            }
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    protected void onMeasure(int var1_1, int var2_2) {
        block47 : {
            block48 : {
                block49 : {
                    block46 : {
                        System.currentTimeMillis();
                        var6_3 = View.MeasureSpec.getMode((int)var1_1);
                        var7_4 = View.MeasureSpec.getSize((int)var1_1);
                        var9_5 = View.MeasureSpec.getMode((int)var2_2);
                        var10_6 = View.MeasureSpec.getSize((int)var2_2);
                        var4_7 = this.getPaddingLeft();
                        var5_8 = this.getPaddingTop();
                        this.b.h(var4_7);
                        this.b.i(var5_8);
                        this.b.c(this.k);
                        this.b.d(this.l);
                        if (Build.VERSION.SDK_INT >= 17) {
                            var20_9 = this.b;
                            var19_10 = this.getLayoutDirection() == 1;
                            var20_9.a(var19_10);
                        }
                        this.c(var1_1, var2_2);
                        var13_11 = this.b.p();
                        var12_12 = this.b.r();
                        if (this.m) {
                            this.m = false;
                            this.b();
                            var3_13 = 1;
                        } else {
                            var3_13 = 0;
                        }
                        var8_14 = (this.n & 8) == 8;
                        if (var8_14) {
                            this.b.O();
                            this.b.f(var13_11, var12_12);
                            this.b(var1_1, var2_2);
                        } else {
                            this.a(var1_1, var2_2);
                        }
                        this.d();
                        if (this.getChildCount() > 0 && var3_13 != 0) {
                            android.support.constraint.a.a.a.a(this.b);
                        }
                        if (this.b.as) {
                            if (this.b.at && var6_3 == Integer.MIN_VALUE) {
                                if (this.b.av < var7_4) {
                                    this.b.j(this.b.av);
                                }
                                this.b.a(f.a.a);
                            }
                            if (this.b.au && var9_5 == Integer.MIN_VALUE) {
                                if (this.b.aw < var10_6) {
                                    this.b.k(this.b.aw);
                                }
                                this.b.b(f.a.a);
                            }
                        }
                        if ((this.n & 32) == 32) {
                            var3_13 = this.b.p();
                            var11_15 = this.b.r();
                            if (this.r != var3_13 && var6_3 == 1073741824) {
                                android.support.constraint.a.a.a.a(this.b.ar, 0, var3_13);
                            }
                            if (this.s != var11_15 && var9_5 == 1073741824) {
                                android.support.constraint.a.a.a.a(this.b.ar, 1, var11_15);
                            }
                            if (this.b.at && this.b.av > var7_4) {
                                android.support.constraint.a.a.a.a(this.b.ar, 0, var7_4);
                            }
                            if (this.b.au && this.b.aw > var10_6) {
                                android.support.constraint.a.a.a.a(this.b.ar, 1, var10_6);
                            }
                        }
                        if (this.getChildCount() > 0) {
                            this.a("First pass");
                        }
                        var11_15 = this.h.size();
                        var16_16 = var5_8 + this.getPaddingBottom();
                        var17_17 = var4_7 + this.getPaddingRight();
                        if (var11_15 > 0) break block46;
                        var3_13 = 0;
                        break block47;
                    }
                    var9_5 = this.b.F() == f.a.b ? 1 : 0;
                    var10_6 = this.b.G() == f.a.b ? 1 : 0;
                    var5_8 = Math.max(this.b.p(), this.i);
                    var4_7 = Math.max(this.b.r(), this.j);
                    var6_3 = 0;
                    var3_13 = 0;
                    for (var14_18 = 0; var14_18 < var11_15; ++var14_18) {
                        var20_9 = this.h.get(var14_18);
                        var21_21 = (View)var20_9.B();
                        if (var21_21 == null) ** GOTO lbl-1000
                        var22_22 = (a)var21_21.getLayoutParams();
                        if (var22_22.Z || var22_22.Y) ** GOTO lbl-1000
                        var15_19 = var21_21.getVisibility();
                        var7_4 = var6_3;
                        if (!(var15_19 == 8 || var8_14 && var20_9.i().g() && var20_9.j().g())) {
                            var6_3 = var22_22.width == -2 && var22_22.V != false ? ConstraintLayout.getChildMeasureSpec((int)var1_1, (int)var17_17, (int)var22_22.width) : View.MeasureSpec.makeMeasureSpec((int)var20_9.p(), (int)1073741824);
                            var15_19 = var22_22.height == -2 && var22_22.W != false ? ConstraintLayout.getChildMeasureSpec((int)var2_2, (int)var16_16, (int)var22_22.height) : View.MeasureSpec.makeMeasureSpec((int)var20_9.r(), (int)1073741824);
                            var21_21.measure(var6_3, var15_19);
                            if (this.t != null) {
                                var23_23 = this.t;
                                ++var23_23.b;
                            }
                            var18_20 = var21_21.getMeasuredWidth();
                            var15_19 = var21_21.getMeasuredHeight();
                            var6_3 = var5_8;
                            if (var18_20 != var20_9.p()) {
                                var20_9.j(var18_20);
                                if (var8_14) {
                                    var20_9.i().a(var18_20);
                                }
                                var6_3 = var5_8;
                                if (var9_5 != 0) {
                                    var6_3 = var5_8;
                                    if (var20_9.x() > var5_8) {
                                        var6_3 = Math.max(var5_8, var20_9.x() + var20_9.a(e.c.d).e());
                                    }
                                }
                                var7_4 = 1;
                            }
                            var5_8 = var4_7;
                            if (var15_19 != var20_9.r()) {
                                var20_9.k(var15_19);
                                if (var8_14) {
                                    var20_9.j().a(var15_19);
                                }
                                var5_8 = var4_7;
                                if (var10_6 != 0) {
                                    var5_8 = var4_7;
                                    if (var20_9.y() > var4_7) {
                                        var5_8 = Math.max(var4_7, var20_9.y() + var20_9.a(e.c.e).e());
                                    }
                                }
                                var7_4 = 1;
                            }
                            var4_7 = var7_4;
                            if (var22_22.X) {
                                var15_19 = var21_21.getBaseline();
                                var4_7 = var7_4;
                                if (var15_19 != -1) {
                                    var4_7 = var7_4;
                                    if (var15_19 != var20_9.A()) {
                                        var20_9.q(var15_19);
                                        var4_7 = 1;
                                    }
                                }
                            }
                            if (Build.VERSION.SDK_INT >= 11) {
                                var3_13 = ConstraintLayout.combineMeasuredStates((int)var3_13, (int)var21_21.getMeasuredState());
                                var7_4 = var5_8;
                                var5_8 = var6_3;
                                var6_3 = var4_7;
                            } else {
                                var7_4 = var5_8;
                                var5_8 = var6_3;
                                var6_3 = var4_7;
                            }
                        } else lbl-1000: // 3 sources:
                        {
                            var7_4 = var4_7;
                        }
                        var4_7 = var7_4;
                    }
                    var7_4 = var3_13;
                    if (var6_3 == 0) break block48;
                    this.b.j(var13_11);
                    this.b.k(var12_12);
                    if (var8_14) {
                        this.b.P();
                    }
                    this.a("2nd pass");
                    if (this.b.p() < var5_8) {
                        this.b.j(var5_8);
                        var3_13 = 1;
                    } else {
                        var3_13 = 0;
                    }
                    if (this.b.r() >= var4_7) break block49;
                    this.b.k(var4_7);
                    var3_13 = 1;
                    if (var3_13 == 0) break block48;
                }
                this.a("3rd pass");
            }
            var4_7 = 0;
            do {
                var3_13 = var7_4;
                if (var4_7 >= var11_15) break;
                var20_9 = this.h.get(var4_7);
                var21_21 = (View)var20_9.B();
                if (var21_21 != null && (var21_21.getMeasuredWidth() != var20_9.p() || var21_21.getMeasuredHeight() != var20_9.r()) && var20_9.l() != 8) {
                    var21_21.measure(View.MeasureSpec.makeMeasureSpec((int)var20_9.p(), (int)1073741824), View.MeasureSpec.makeMeasureSpec((int)var20_9.r(), (int)1073741824));
                    if (this.t != null) {
                        var20_9 = this.t;
                        ++var20_9.b;
                    }
                }
                ++var4_7;
            } while (true);
        }
        var4_7 = this.b.p() + var17_17;
        var5_8 = this.b.r() + var16_16;
        if (Build.VERSION.SDK_INT < 11) {
            this.setMeasuredDimension(var4_7, var5_8);
            this.r = var4_7;
            this.s = var5_8;
            return;
        }
        var1_1 = ConstraintLayout.resolveSizeAndState((int)var4_7, (int)var1_1, (int)var3_13);
        var3_13 = ConstraintLayout.resolveSizeAndState((int)var5_8, (int)var2_2, (int)(var3_13 << 16));
        var2_2 = Math.min(this.k, var1_1 & 16777215);
        var3_13 = Math.min(this.l, var3_13 & 16777215);
        var1_1 = var2_2;
        if (this.b.K()) {
            var1_1 = var2_2 | 16777216;
        }
        var2_2 = var3_13;
        if (this.b.L()) {
            var2_2 = var3_13 | 16777216;
        }
        this.setMeasuredDimension(var1_1, var2_2);
        this.r = var1_1;
        this.s = var2_2;
    }

    public void onViewAdded(View view) {
        if (Build.VERSION.SDK_INT >= 14) {
            super.onViewAdded(view);
        }
        Object object = this.a(view);
        if (view instanceof android.support.constraint.e && !(object instanceof i)) {
            object = (a)view.getLayoutParams();
            object.al = new i();
            object.Y = true;
            ((i)object.al).a(object.S);
        }
        if (view instanceof b) {
            object = (b)view;
            object.a();
            ((a)view.getLayoutParams()).Z = true;
            if (!this.g.contains(object)) {
                this.g.add((b)((Object)object));
            }
        }
        this.a.put(view.getId(), (Object)view);
        this.m = true;
    }

    public void onViewRemoved(View view) {
        if (Build.VERSION.SDK_INT >= 14) {
            super.onViewRemoved(view);
        }
        this.a.remove(view.getId());
        f f2 = this.a(view);
        this.b.c(f2);
        this.g.remove((Object)view);
        this.h.remove(f2);
        this.m = true;
    }

    public void removeView(View view) {
        super.removeView(view);
        if (Build.VERSION.SDK_INT < 14) {
            this.onViewRemoved(view);
        }
    }

    public void requestLayout() {
        super.requestLayout();
        this.m = true;
        this.r = -1;
        this.s = -1;
        this.c = -1;
        this.d = -1;
        this.e = 0;
        this.f = 0;
    }

    public void setConstraintSet(c c2) {
        this.o = c2;
    }

    public void setId(int n2) {
        this.a.remove(this.getId());
        super.setId(n2);
        this.a.put(this.getId(), (Object)this);
    }

    public void setMaxHeight(int n2) {
        if (n2 == this.l) {
            return;
        }
        this.l = n2;
        this.requestLayout();
    }

    public void setMaxWidth(int n2) {
        if (n2 == this.k) {
            return;
        }
        this.k = n2;
        this.requestLayout();
    }

    public void setMinHeight(int n2) {
        if (n2 == this.j) {
            return;
        }
        this.j = n2;
        this.requestLayout();
    }

    public void setMinWidth(int n2) {
        if (n2 == this.i) {
            return;
        }
        this.i = n2;
        this.requestLayout();
    }

    public void setOptimizationLevel(int n2) {
        this.b.a(n2);
    }

    public boolean shouldDelayChildPressedState() {
        return false;
    }

    public static class android.support.constraint.ConstraintLayout$a
    extends ViewGroup.MarginLayoutParams {
        public float A;
        public String B;
        float C;
        int D;
        public float E;
        public float F;
        public int G;
        public int H;
        public int I;
        public int J;
        public int K;
        public int L;
        public int M;
        public int N;
        public float O;
        public float P;
        public int Q;
        public int R;
        public int S;
        public boolean T;
        public boolean U;
        boolean V;
        boolean W;
        boolean X;
        boolean Y;
        boolean Z;
        public int a;
        boolean aa;
        int ab;
        int ac;
        int ad;
        int ae;
        int af;
        int ag;
        float ah;
        int ai;
        int aj;
        float ak;
        f al;
        public boolean am;
        public int b;
        public float c;
        public int d;
        public int e;
        public int f;
        public int g;
        public int h;
        public int i;
        public int j;
        public int k;
        public int l;
        public int m;
        public int n;
        public float o;
        public int p;
        public int q;
        public int r;
        public int s;
        public int t;
        public int u;
        public int v;
        public int w;
        public int x;
        public int y;
        public float z;

        public android.support.constraint.ConstraintLayout$a(int n2, int n3) {
            super(n2, n3);
            this.a = -1;
            this.b = -1;
            this.c = -1.0f;
            this.d = -1;
            this.e = -1;
            this.f = -1;
            this.g = -1;
            this.h = -1;
            this.i = -1;
            this.j = -1;
            this.k = -1;
            this.l = -1;
            this.m = -1;
            this.n = 0;
            this.o = 0.0f;
            this.p = -1;
            this.q = -1;
            this.r = -1;
            this.s = -1;
            this.t = -1;
            this.u = -1;
            this.v = -1;
            this.w = -1;
            this.x = -1;
            this.y = -1;
            this.z = 0.5f;
            this.A = 0.5f;
            this.B = null;
            this.C = 0.0f;
            this.D = 1;
            this.E = -1.0f;
            this.F = -1.0f;
            this.G = 0;
            this.H = 0;
            this.I = 0;
            this.J = 0;
            this.K = 0;
            this.L = 0;
            this.M = 0;
            this.N = 0;
            this.O = 1.0f;
            this.P = 1.0f;
            this.Q = -1;
            this.R = -1;
            this.S = -1;
            this.T = false;
            this.U = false;
            this.V = true;
            this.W = true;
            this.X = false;
            this.Y = false;
            this.Z = false;
            this.aa = false;
            this.ab = -1;
            this.ac = -1;
            this.ad = -1;
            this.ae = -1;
            this.af = -1;
            this.ag = -1;
            this.ah = 0.5f;
            this.al = new f();
            this.am = false;
        }

        /*
         * Unable to fully structure code
         * Enabled aggressive exception aggregation
         */
        public android.support.constraint.ConstraintLayout$a(Context var1_1, AttributeSet var2_7) {
            block74 : {
                super((Context)var1_1, var2_7);
                this.a = -1;
                this.b = -1;
                this.c = -1.0f;
                this.d = -1;
                this.e = -1;
                this.f = -1;
                this.g = -1;
                this.h = -1;
                this.i = -1;
                this.j = -1;
                this.k = -1;
                this.l = -1;
                this.m = -1;
                this.n = 0;
                this.o = 0.0f;
                this.p = -1;
                this.q = -1;
                this.r = -1;
                this.s = -1;
                this.t = -1;
                this.u = -1;
                this.v = -1;
                this.w = -1;
                this.x = -1;
                this.y = -1;
                this.z = 0.5f;
                this.A = 0.5f;
                this.B = null;
                this.C = 0.0f;
                this.D = 1;
                this.E = -1.0f;
                this.F = -1.0f;
                this.G = 0;
                this.H = 0;
                this.I = 0;
                this.J = 0;
                this.K = 0;
                this.L = 0;
                this.M = 0;
                this.N = 0;
                this.O = 1.0f;
                this.P = 1.0f;
                this.Q = -1;
                this.R = -1;
                this.S = -1;
                this.T = false;
                this.U = false;
                this.V = true;
                this.W = true;
                this.X = false;
                this.Y = false;
                this.Z = false;
                this.aa = false;
                this.ab = -1;
                this.ac = -1;
                this.ad = -1;
                this.ae = -1;
                this.af = -1;
                this.ag = -1;
                this.ah = 0.5f;
                this.al = new f();
                this.am = false;
                var2_7 = var1_1.obtainStyledAttributes(var2_7, g.b.ConstraintLayout_Layout);
                var7_8 = var2_7.getIndexCount();
                var5_9 = 0;
lbl67: // 2 sources:
                if (var5_9 >= var7_8) break block74;
                var6_12 = var2_7.getIndex(var5_9);
                block7 : switch (a.a.get(var6_12)) {
                    default: {
                        break;
                    }
                    case 50: {
                        this.R = var2_7.getDimensionPixelOffset(var6_12, this.R);
                        break;
                    }
                    case 49: {
                        this.Q = var2_7.getDimensionPixelOffset(var6_12, this.Q);
                        break;
                    }
                    case 48: {
                        this.H = var2_7.getInt(var6_12, 0);
                        break;
                    }
                    case 47: {
                        this.G = var2_7.getInt(var6_12, 0);
                        break;
                    }
                    case 46: {
                        this.F = var2_7.getFloat(var6_12, this.F);
                        break;
                    }
                    case 45: {
                        this.E = var2_7.getFloat(var6_12, this.E);
                        break;
                    }
                    case 44: {
                        this.B = var2_7.getString(var6_12);
                        this.C = Float.NaN;
                        this.D = -1;
                        if (this.B == null) break;
                        var8_13 = this.B.length();
                        var6_12 = this.B.indexOf(44);
                        if (var6_12 > 0 && var6_12 < var8_13 - 1) {
                            var1_1 = this.B.substring(0, var6_12);
                            if (var1_1.equalsIgnoreCase("W")) {
                                this.D = 0;
                            } else if (var1_1.equalsIgnoreCase("H")) {
                                this.D = 1;
                            }
                            ++var6_12;
                        } else {
                            var6_12 = 0;
                        }
                        var9_14 = this.B.indexOf(58);
                        if (var9_14 < 0 || var9_14 >= var8_13 - 1) ** GOTO lbl124
                        var1_1 = this.B.substring(var6_12, var9_14);
                        var10_15 = this.B.substring(var9_14 + 1);
                        if (var1_1.length() <= 0 || var10_15.length() <= 0) break;
                        var3_10 = Float.parseFloat((String)var1_1);
                        var4_11 = Float.parseFloat(var10_15);
                        if (var3_10 <= 0.0f || var4_11 <= 0.0f) break;
                        if (this.D == 1) {
                            var3_10 = Math.abs(var4_11 / var3_10);
lbl119: // 3 sources:
                            do {
                                this.C = var3_10;
                                break block7;
                                break;
                            } while (true);
                        }
                        var3_10 = Math.abs(var3_10 / var4_11);
                        ** GOTO lbl119
lbl124: // 1 sources:
                        var1_1 = this.B.substring(var6_12);
                        if (var1_1.length() <= 0) break;
                        var3_10 = Float.parseFloat((String)var1_1);
                        ** continue;
                    }
                    case 38: {
                        this.P = Math.max(0.0f, var2_7.getFloat(var6_12, this.P));
                        break;
                    }
                    case 37: {
                        this.N = var2_7.getDimensionPixelSize(var6_12, this.N);
                        break;
                    }
lbl136: // 1 sources:
                    if (var2_7.getInt(var6_12, this.N) != -2) break;
                    this.N = -2;
                    break;
                    case 36: {
                        this.L = var2_7.getDimensionPixelSize(var6_12, this.L);
                        break;
                    }
lbl143: // 1 sources:
                    if (var2_7.getInt(var6_12, this.L) != -2) break;
                    this.L = -2;
                    break;
                    case 35: {
                        this.O = Math.max(0.0f, var2_7.getFloat(var6_12, this.O));
                        break;
                    }
                    case 34: {
                        this.M = var2_7.getDimensionPixelSize(var6_12, this.M);
                        break;
                    }
lbl153: // 1 sources:
                    if (var2_7.getInt(var6_12, this.M) != -2) break;
                    this.M = -2;
                    break;
                    case 33: {
                        this.K = var2_7.getDimensionPixelSize(var6_12, this.K);
                        break;
                    }
lbl160: // 1 sources:
                    if (var2_7.getInt(var6_12, this.K) != -2) break;
                    this.K = -2;
                    break;
                    case 32: {
                        this.J = var2_7.getInt(var6_12, 0);
                        if (this.J != 1) break;
                        var1_1 = "layout_constraintHeight_default=\"wrap\" is deprecated.\nUse layout_height=\"WRAP_CONTENT\" and layout_constrainedHeight=\"true\" instead.";
                        ** GOTO lbl172
                    }
                    case 31: {
                        this.I = var2_7.getInt(var6_12, 0);
                        if (this.I != 1) break;
                        var1_1 = "layout_constraintWidth_default=\"wrap\" is deprecated.\nUse layout_width=\"WRAP_CONTENT\" and layout_constrainedWidth=\"true\" instead.";
lbl172: // 2 sources:
                        Log.e((String)"ConstraintLayout", (String)var1_1);
                        break;
                    }
                    case 30: {
                        this.A = var2_7.getFloat(var6_12, this.A);
                        break;
                    }
                    case 29: {
                        this.z = var2_7.getFloat(var6_12, this.z);
                        break;
                    }
                    case 28: {
                        this.U = var2_7.getBoolean(var6_12, this.U);
                        break;
                    }
                    case 27: {
                        this.T = var2_7.getBoolean(var6_12, this.T);
                        break;
                    }
                    case 26: {
                        this.y = var2_7.getDimensionPixelSize(var6_12, this.y);
                        break;
                    }
                    case 25: {
                        this.x = var2_7.getDimensionPixelSize(var6_12, this.x);
                        break;
                    }
                    case 24: {
                        this.w = var2_7.getDimensionPixelSize(var6_12, this.w);
                        break;
                    }
                    case 23: {
                        this.v = var2_7.getDimensionPixelSize(var6_12, this.v);
                        break;
                    }
                    case 22: {
                        this.u = var2_7.getDimensionPixelSize(var6_12, this.u);
                        break;
                    }
                    case 21: {
                        this.t = var2_7.getDimensionPixelSize(var6_12, this.t);
                        break;
                    }
                    case 20: {
                        this.s = var2_7.getResourceId(var6_12, this.s);
                        if (this.s != -1) break;
                        this.s = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 19: {
                        this.r = var2_7.getResourceId(var6_12, this.r);
                        if (this.r != -1) break;
                        this.r = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 18: {
                        this.q = var2_7.getResourceId(var6_12, this.q);
                        if (this.q != -1) break;
                        this.q = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 17: {
                        this.p = var2_7.getResourceId(var6_12, this.p);
                        if (this.p != -1) break;
                        this.p = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 16: {
                        this.l = var2_7.getResourceId(var6_12, this.l);
                        if (this.l != -1) break;
                        this.l = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 15: {
                        this.k = var2_7.getResourceId(var6_12, this.k);
                        if (this.k != -1) break;
                        this.k = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 14: {
                        this.j = var2_7.getResourceId(var6_12, this.j);
                        if (this.j != -1) break;
                        this.j = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 13: {
                        this.i = var2_7.getResourceId(var6_12, this.i);
                        if (this.i != -1) break;
                        this.i = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 12: {
                        this.h = var2_7.getResourceId(var6_12, this.h);
                        if (this.h != -1) break;
                        this.h = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 11: {
                        this.g = var2_7.getResourceId(var6_12, this.g);
                        if (this.g != -1) break;
                        this.g = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 10: {
                        this.f = var2_7.getResourceId(var6_12, this.f);
                        if (this.f != -1) break;
                        this.f = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 9: {
                        this.e = var2_7.getResourceId(var6_12, this.e);
                        if (this.e != -1) break;
                        this.e = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 8: {
                        this.d = var2_7.getResourceId(var6_12, this.d);
                        if (this.d != -1) break;
                        this.d = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 7: {
                        this.c = var2_7.getFloat(var6_12, this.c);
                        break;
                    }
                    case 6: {
                        this.b = var2_7.getDimensionPixelOffset(var6_12, this.b);
                        break;
                    }
                    case 5: {
                        this.a = var2_7.getDimensionPixelOffset(var6_12, this.a);
                        break;
                    }
                    case 4: {
                        this.o = var2_7.getFloat(var6_12, this.o) % 360.0f;
                        if (this.o >= 0.0f) break;
                        this.o = (360.0f - this.o) % 360.0f;
                        break;
                    }
                    case 3: {
                        this.n = var2_7.getDimensionPixelSize(var6_12, this.n);
                        break;
                    }
                    case 2: {
                        this.m = var2_7.getResourceId(var6_12, this.m);
                        if (this.m != -1) break;
                        this.m = var2_7.getInt(var6_12, -1);
                        break;
                    }
                    case 1: {
                        this.S = var2_7.getInt(var6_12, this.S);
                    }
                    case 0: 
                    case 39: 
                    case 40: 
                    case 41: 
                    case 42: 
                }
lbl294: // 75 sources:
                do {
                    ++var5_9;
                    ** GOTO lbl67
                    break;
                } while (true);
            }
            var2_7.recycle();
            this.a();
            return;
            catch (NumberFormatException var1_6) {
                ** continue;
            }
            catch (Exception var1_2) {
                ** GOTO lbl136
            }
            catch (Exception var1_3) {
                ** GOTO lbl143
            }
            catch (Exception var1_4) {
                ** GOTO lbl153
            }
            catch (Exception var1_5) {
                ** GOTO lbl160
            }
        }

        public android.support.constraint.ConstraintLayout$a(ViewGroup.LayoutParams layoutParams) {
            super(layoutParams);
            this.a = -1;
            this.b = -1;
            this.c = -1.0f;
            this.d = -1;
            this.e = -1;
            this.f = -1;
            this.g = -1;
            this.h = -1;
            this.i = -1;
            this.j = -1;
            this.k = -1;
            this.l = -1;
            this.m = -1;
            this.n = 0;
            this.o = 0.0f;
            this.p = -1;
            this.q = -1;
            this.r = -1;
            this.s = -1;
            this.t = -1;
            this.u = -1;
            this.v = -1;
            this.w = -1;
            this.x = -1;
            this.y = -1;
            this.z = 0.5f;
            this.A = 0.5f;
            this.B = null;
            this.C = 0.0f;
            this.D = 1;
            this.E = -1.0f;
            this.F = -1.0f;
            this.G = 0;
            this.H = 0;
            this.I = 0;
            this.J = 0;
            this.K = 0;
            this.L = 0;
            this.M = 0;
            this.N = 0;
            this.O = 1.0f;
            this.P = 1.0f;
            this.Q = -1;
            this.R = -1;
            this.S = -1;
            this.T = false;
            this.U = false;
            this.V = true;
            this.W = true;
            this.X = false;
            this.Y = false;
            this.Z = false;
            this.aa = false;
            this.ab = -1;
            this.ac = -1;
            this.ad = -1;
            this.ae = -1;
            this.af = -1;
            this.ag = -1;
            this.ah = 0.5f;
            this.al = new f();
            this.am = false;
        }

        public void a() {
            this.Y = false;
            this.V = true;
            this.W = true;
            if (this.width == -2 && this.T) {
                this.V = false;
                this.I = 1;
            }
            if (this.height == -2 && this.U) {
                this.W = false;
                this.J = 1;
            }
            if (this.width == 0 || this.width == -1) {
                this.V = false;
                if (this.width == 0 && this.I == 1) {
                    this.width = -2;
                    this.T = true;
                }
            }
            if (this.height == 0 || this.height == -1) {
                this.W = false;
                if (this.height == 0 && this.J == 1) {
                    this.height = -2;
                    this.U = true;
                }
            }
            if (this.c != -1.0f || this.a != -1 || this.b != -1) {
                this.Y = true;
                this.V = true;
                this.W = true;
                if (!(this.al instanceof i)) {
                    this.al = new i();
                }
                ((i)this.al).a(this.S);
            }
        }

        /*
         * Enabled aggressive block sorting
         */
        @TargetApi(value=17)
        public void resolveLayoutDirection(int n2) {
            block33 : {
                int n3;
                block38 : {
                    block37 : {
                        block35 : {
                            int n4;
                            block36 : {
                                block34 : {
                                    block29 : {
                                        block25 : {
                                            block32 : {
                                                block31 : {
                                                    block30 : {
                                                        block28 : {
                                                            block27 : {
                                                                int n5;
                                                                block26 : {
                                                                    n3 = this.leftMargin;
                                                                    n4 = this.rightMargin;
                                                                    super.resolveLayoutDirection(n2);
                                                                    this.ad = -1;
                                                                    this.ae = -1;
                                                                    this.ab = -1;
                                                                    this.ac = -1;
                                                                    this.af = -1;
                                                                    this.ag = -1;
                                                                    this.af = this.t;
                                                                    this.ag = this.v;
                                                                    this.ah = this.z;
                                                                    this.ai = this.a;
                                                                    this.aj = this.b;
                                                                    this.ak = this.c;
                                                                    n2 = this.getLayoutDirection();
                                                                    n5 = 0;
                                                                    n2 = 1 == n2 ? 1 : 0;
                                                                    if (n2 == 0) break block25;
                                                                    if (this.p == -1) break block26;
                                                                    this.ad = this.p;
                                                                    break block27;
                                                                }
                                                                n2 = n5;
                                                                if (this.q == -1) break block28;
                                                                this.ae = this.q;
                                                            }
                                                            n2 = 1;
                                                        }
                                                        if (this.r != -1) {
                                                            this.ac = this.r;
                                                            n2 = 1;
                                                        }
                                                        if (this.s != -1) {
                                                            this.ab = this.s;
                                                            n2 = 1;
                                                        }
                                                        if (this.x != -1) {
                                                            this.ag = this.x;
                                                        }
                                                        if (this.y != -1) {
                                                            this.af = this.y;
                                                        }
                                                        if (n2 != 0) {
                                                            this.ah = 1.0f - this.z;
                                                        }
                                                        if (!this.Y || this.S != 1) break block29;
                                                        if (this.c == -1.0f) break block30;
                                                        this.ak = 1.0f - this.c;
                                                        this.ai = -1;
                                                        this.aj = -1;
                                                        break block29;
                                                    }
                                                    if (this.a == -1) break block31;
                                                    this.aj = this.a;
                                                    this.ai = -1;
                                                    break block32;
                                                }
                                                if (this.b == -1) break block29;
                                                this.ai = this.b;
                                                this.aj = -1;
                                            }
                                            this.ak = -1.0f;
                                            break block29;
                                        }
                                        if (this.p != -1) {
                                            this.ac = this.p;
                                        }
                                        if (this.q != -1) {
                                            this.ab = this.q;
                                        }
                                        if (this.r != -1) {
                                            this.ad = this.r;
                                        }
                                        if (this.s != -1) {
                                            this.ae = this.s;
                                        }
                                        if (this.x != -1) {
                                            this.af = this.x;
                                        }
                                        if (this.y != -1) {
                                            this.ag = this.y;
                                        }
                                    }
                                    if (this.r != -1 || this.s != -1 || this.q != -1 || this.p != -1) break block33;
                                    if (this.f == -1) break block34;
                                    this.ad = this.f;
                                    if (this.rightMargin > 0 || n4 <= 0) break block35;
                                    break block36;
                                }
                                if (this.g == -1) break block35;
                                this.ae = this.g;
                                if (this.rightMargin > 0 || n4 <= 0) break block35;
                            }
                            this.rightMargin = n4;
                        }
                        if (this.d == -1) break block37;
                        this.ab = this.d;
                        if (this.leftMargin > 0 || n3 <= 0) break block33;
                        break block38;
                    }
                    if (this.e == -1) break block33;
                    this.ac = this.e;
                    if (this.leftMargin > 0 || n3 <= 0) break block33;
                }
                this.leftMargin = n3;
                return;
            }
        }

        private static class a {
            public static final SparseIntArray a = new SparseIntArray();

            static {
                a.append(g.b.ConstraintLayout_Layout_layout_constraintLeft_toLeftOf, 8);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintLeft_toRightOf, 9);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintRight_toLeftOf, 10);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintRight_toRightOf, 11);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintTop_toTopOf, 12);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintTop_toBottomOf, 13);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintBottom_toTopOf, 14);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintBottom_toBottomOf, 15);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf, 16);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintCircle, 2);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintCircleRadius, 3);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintCircleAngle, 4);
                a.append(g.b.ConstraintLayout_Layout_layout_editor_absoluteX, 49);
                a.append(g.b.ConstraintLayout_Layout_layout_editor_absoluteY, 50);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintGuide_begin, 5);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintGuide_end, 6);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintGuide_percent, 7);
                a.append(g.b.ConstraintLayout_Layout_android_orientation, 1);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintStart_toEndOf, 17);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintStart_toStartOf, 18);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintEnd_toStartOf, 19);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintEnd_toEndOf, 20);
                a.append(g.b.ConstraintLayout_Layout_layout_goneMarginLeft, 21);
                a.append(g.b.ConstraintLayout_Layout_layout_goneMarginTop, 22);
                a.append(g.b.ConstraintLayout_Layout_layout_goneMarginRight, 23);
                a.append(g.b.ConstraintLayout_Layout_layout_goneMarginBottom, 24);
                a.append(g.b.ConstraintLayout_Layout_layout_goneMarginStart, 25);
                a.append(g.b.ConstraintLayout_Layout_layout_goneMarginEnd, 26);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintHorizontal_bias, 29);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintVertical_bias, 30);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintDimensionRatio, 44);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintHorizontal_weight, 45);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintVertical_weight, 46);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle, 47);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintVertical_chainStyle, 48);
                a.append(g.b.ConstraintLayout_Layout_layout_constrainedWidth, 27);
                a.append(g.b.ConstraintLayout_Layout_layout_constrainedHeight, 28);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintWidth_default, 31);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintHeight_default, 32);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintWidth_min, 33);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintWidth_max, 34);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintWidth_percent, 35);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintHeight_min, 36);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintHeight_max, 37);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintHeight_percent, 38);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintLeft_creator, 39);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintTop_creator, 40);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintRight_creator, 41);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintBottom_creator, 42);
                a.append(g.b.ConstraintLayout_Layout_layout_constraintBaseline_creator, 43);
            }
        }

    }

}

