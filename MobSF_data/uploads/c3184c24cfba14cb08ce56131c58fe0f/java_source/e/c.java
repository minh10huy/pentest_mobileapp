/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  javax.annotation.Nullable
 */
package e;

import e.d;
import e.e;
import e.f;
import e.o;
import e.p;
import e.q;
import e.r;
import e.s;
import e.t;
import e.u;
import java.io.EOFException;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.ByteBuffer;
import java.nio.channels.ByteChannel;
import java.nio.charset.Charset;
import javax.annotation.Nullable;

public final class c
implements d,
e,
Cloneable,
ByteChannel {
    private static final byte[] c = new byte[]{48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102};
    @Nullable
    o a;
    long b;

    public int a(byte[] arrby, int n2, int n3) {
        u.a(arrby.length, n2, n3);
        o o2 = this.a;
        if (o2 == null) {
            return -1;
        }
        n3 = Math.min(n3, o2.c - o2.b);
        System.arraycopy(o2.a, o2.b, arrby, n2, n3);
        o2.b += n3;
        this.b -= (long)n3;
        if (o2.b == o2.c) {
            this.a = o2.b();
            p.a(o2);
        }
        return n3;
    }

    @Override
    public long a(byte by2) {
        return this.a(by2, 0L, Long.MAX_VALUE);
    }

    public long a(byte by2, long l2, long l3) {
        long l4 = 0L;
        if (l2 >= 0L && l3 >= l2) {
            long l5;
            long l6 = l3;
            if (l3 > this.b) {
                l6 = this.b;
            }
            if (l2 == l6) {
                return -1L;
            }
            Object object = this.a;
            if (object == null) {
                return -1L;
            }
            l3 = l4;
            byte[] arrby = object;
            if (this.b - l2 < l2) {
                l4 = this.b;
                arrby = object;
                do {
                    l3 = l4;
                    object = arrby;
                    l5 = l2;
                    if (l4 > l2) {
                        arrby = arrby.g;
                        l4 -= (long)(arrby.c - arrby.b);
                        continue;
                    }
                    break;
                } while (true);
            } else {
                do {
                    l4 = (long)(arrby.c - arrby.b) + l3;
                    object = arrby;
                    l5 = l2;
                    if (l4 >= l2) break;
                    arrby = arrby.f;
                    l3 = l4;
                } while (true);
            }
            while (l3 < l6) {
                arrby = object.a;
                int n2 = (int)Math.min((long)object.c, (long)object.b + l6 - l3);
                for (int i2 = (int)((long)object.b + l5 - l3); i2 < n2; ++i2) {
                    if (arrby[i2] != by2) continue;
                    return (long)(i2 - object.b) + l3;
                }
                l5 = (long)(object.c - object.b) + l3;
                object = object.f;
                l3 = l5;
            }
            return -1L;
        }
        throw new IllegalArgumentException(String.format("size=%s fromIndex=%s toIndex=%s", this.b, l2, l3));
    }

    @Override
    public long a(c object, long l2) {
        if (object != null) {
            if (l2 >= 0L) {
                if (this.b == 0L) {
                    return -1L;
                }
                long l3 = l2;
                if (l2 > this.b) {
                    l3 = this.b;
                }
                object.a_(this, l3);
                return l3;
            }
            object = new StringBuilder();
            object.append("byteCount < 0: ");
            object.append(l2);
            throw new IllegalArgumentException(object.toString());
        }
        throw new IllegalArgumentException("sink == null");
    }

    @Override
    public long a(r r2) {
        long l2 = this.b;
        if (l2 > 0L) {
            r2.a_(this, l2);
        }
        return l2;
    }

    @Override
    public long a(s s2) {
        if (s2 != null) {
            long l2;
            long l3 = 0L;
            while ((l2 = s2.a(this, 8192L)) != -1L) {
                l3 += l2;
            }
            return l3;
        }
        throw new IllegalArgumentException("source == null");
    }

    /*
     * Enabled aggressive block sorting
     */
    public c a(int n2) {
        if (n2 >= 128) {
            int n3;
            if (n2 < 2048) {
                n3 = n2 >> 6 | 192;
            } else {
                if (n2 < 65536) {
                    if (n2 >= 55296 && n2 <= 57343) {
                        this.b(63);
                        return this;
                    }
                    n3 = n2 >> 12 | 224;
                } else {
                    if (n2 > 1114111) {
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("Unexpected code point: ");
                        stringBuilder.append(Integer.toHexString(n2));
                        throw new IllegalArgumentException(stringBuilder.toString());
                    }
                    this.b(n2 >> 18 | 240);
                    n3 = n2 >> 12 & 63 | 128;
                }
                this.b(n3);
                n3 = n2 >> 6 & 63 | 128;
            }
            this.b(n3);
            n2 = n2 & 63 | 128;
        }
        this.b(n2);
        return this;
    }

    public c a(c c2, long l2, long l3) {
        if (c2 != null) {
            o o2;
            long l4;
            u.a(this.b, l2, l3);
            if (l3 == 0L) {
                return this;
            }
            c2.b += l3;
            o o3 = this.a;
            do {
                o2 = o3;
                l4 = l2;
                if (l2 < (long)(o3.c - o3.b)) break;
                l2 -= (long)(o3.c - o3.b);
                o3 = o3.f;
            } while (true);
            for (long i2 = l3; i2 > 0L; i2 -= (long)(o3.c - o3.b)) {
                o3 = o2.a();
                o3.b = (int)((long)o3.b + l4);
                o3.c = Math.min(o3.b + (int)i2, o3.c);
                if (c2.a == null) {
                    o3.g = o3;
                    o3.f = o3;
                    c2.a = o3;
                } else {
                    c2.a.g.a(o3);
                }
                o2 = o2.f;
                l4 = 0L;
            }
            return this;
        }
        throw new IllegalArgumentException("out == null");
    }

    public c a(f f2) {
        if (f2 != null) {
            f2.a(this);
            return this;
        }
        throw new IllegalArgumentException("byteString == null");
    }

    public c a(String string2) {
        return this.a(string2, 0, string2.length());
    }

    /*
     * Enabled aggressive block sorting
     */
    public c a(String charSequence, int n2, int n3) {
        if (charSequence == null) {
            throw new IllegalArgumentException("string == null");
        }
        if (n2 < 0) {
            charSequence = new StringBuilder();
            charSequence.append("beginIndex < 0: ");
            charSequence.append(n2);
            throw new IllegalArgumentException(charSequence.toString());
        }
        if (n3 < n2) {
            charSequence = new StringBuilder();
            charSequence.append("endIndex < beginIndex: ");
            charSequence.append(n3);
            charSequence.append(" < ");
            charSequence.append(n2);
            throw new IllegalArgumentException(charSequence.toString());
        }
        if (n3 > charSequence.length()) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("endIndex > string.length: ");
            stringBuilder.append(n3);
            stringBuilder.append(" > ");
            stringBuilder.append(charSequence.length());
            throw new IllegalArgumentException(stringBuilder.toString());
        }
        while (n2 < n3) {
            int n4;
            int n5;
            int n6;
            char c2 = charSequence.charAt(n2);
            if (c2 < '?') {
                o o2 = this.e(1);
                byte[] arrby = o2.a;
                n5 = o2.c - n2;
                n6 = Math.min(n3, 8192 - n5);
                n4 = n2 + 1;
                arrby[n2 + n5] = (byte)c2;
                n2 = n4;
            } else {
                if (c2 < '\u0800') {
                    n4 = c2 >> 6 | 192;
                } else {
                    if (c2 >= '\ud800' && c2 <= '\udfff') {
                        n5 = n2 + 1;
                        n4 = n5 < n3 ? (int)charSequence.charAt(n5) : 0;
                        if (c2 <= '\udbff' && n4 >= 56320 && n4 <= 57343) {
                            n4 = ((c2 & -55297) << 10 | -56321 & n4) + 65536;
                            this.b(n4 >> 18 | 240);
                            this.b(n4 >> 12 & 63 | 128);
                            this.b(n4 >> 6 & 63 | 128);
                            this.b(n4 & 63 | 128);
                            n2 += 2;
                            continue;
                        }
                        this.b(63);
                        n2 = n5;
                        continue;
                    }
                    this.b(c2 >> 12 | 224);
                    n4 = c2 >> 6 & 63 | 128;
                }
                this.b(n4);
                this.b(c2 & 63 | 128);
                ++n2;
                continue;
            }
            while (n2 < n6 && (n4 = (int)charSequence.charAt(n2)) < 128) {
                arrby[n2 + n5] = (byte)n4;
                ++n2;
            }
            n4 = n5 + n2 - o2.c;
            o2.c += n4;
            this.b += (long)n4;
        }
        return this;
    }

    public c a(String charSequence, int n2, int n3, Charset object) {
        if (charSequence != null) {
            if (n2 >= 0) {
                if (n3 >= n2) {
                    if (n3 <= charSequence.length()) {
                        if (object != null) {
                            if (object.equals(u.a)) {
                                return this.a((String)charSequence, n2, n3);
                            }
                            charSequence = charSequence.substring(n2, n3).getBytes((Charset)object);
                            return this.b((byte[])charSequence, 0, ((CharSequence)charSequence).length);
                        }
                        throw new IllegalArgumentException("charset == null");
                    }
                    object = new StringBuilder();
                    object.append("endIndex > string.length: ");
                    object.append(n3);
                    object.append(" > ");
                    object.append(charSequence.length());
                    throw new IllegalArgumentException(object.toString());
                }
                charSequence = new StringBuilder();
                charSequence.append("endIndex < beginIndex: ");
                charSequence.append(n3);
                charSequence.append(" < ");
                charSequence.append(n2);
                throw new IllegalArgumentException(charSequence.toString());
            }
            charSequence = new StringBuilder();
            charSequence.append("beginIndex < 0: ");
            charSequence.append(n2);
            throw new IllegalAccessError(charSequence.toString());
        }
        throw new IllegalArgumentException("string == null");
    }

    @Override
    public t a() {
        return t.c;
    }

    public String a(long l2, Charset object) {
        u.a(this.b, 0L, l2);
        if (object != null) {
            if (l2 <= Integer.MAX_VALUE) {
                if (l2 == 0L) {
                    return "";
                }
                o o2 = this.a;
                if ((long)o2.b + l2 > (long)o2.c) {
                    return new String(this.g(l2), (Charset)object);
                }
                object = new String(o2.a, o2.b, (int)l2, (Charset)object);
                o2.b = (int)((long)o2.b + l2);
                this.b -= l2;
                if (o2.b == o2.c) {
                    this.a = o2.b();
                    p.a(o2);
                }
                return object;
            }
            object = new StringBuilder();
            object.append("byteCount > Integer.MAX_VALUE: ");
            object.append(l2);
            throw new IllegalArgumentException(object.toString());
        }
        throw new IllegalArgumentException("charset == null");
    }

    @Override
    public void a(long l2) {
        if (this.b >= l2) {
            return;
        }
        throw new EOFException();
    }

    @Override
    public void a(byte[] arrby) {
        int n2;
        for (int i2 = 0; i2 < arrby.length; i2 += n2) {
            n2 = this.a(arrby, i2, arrby.length - i2);
            if (n2 != -1) {
                continue;
            }
            throw new EOFException();
        }
    }

    @Override
    public boolean a(long l2, f f2) {
        return this.a(l2, f2, 0, f2.h());
    }

    public boolean a(long l2, f f2, int n2, int n3) {
        if (l2 >= 0L && n2 >= 0 && n3 >= 0 && this.b - l2 >= (long)n3) {
            if (f2.h() - n2 < n3) {
                return false;
            }
            for (int i2 = 0; i2 < n3; ++i2) {
                if (this.b((long)i2 + l2) == f2.a(n2 + i2)) continue;
                return false;
            }
            return true;
        }
        return false;
    }

    @Override
    public void a_(c c2, long l2) {
        if (c2 != null) {
            if (c2 != this) {
                u.a(c2.b, 0L, l2);
                while (l2 > 0L) {
                    o o2;
                    long l3;
                    if (l2 < (long)(c2.a.c - c2.a.b)) {
                        int n2;
                        o2 = this.a != null ? this.a.g : null;
                        if (o2 != null && o2.e && (l3 = (long)o2.c) + l2 - (long)(n2 = o2.d ? 0 : o2.b) <= 8192L) {
                            c2.a.a(o2, (int)l2);
                            c2.b -= l2;
                            this.b += l2;
                            return;
                        }
                        c2.a = c2.a.a((int)l2);
                    }
                    o2 = c2.a;
                    l3 = o2.c - o2.b;
                    c2.a = o2.b();
                    if (this.a == null) {
                        o o3;
                        o2 = this.a = o2;
                        o o4 = this.a;
                        o4.g = o3 = this.a;
                        o2.f = o3;
                    } else {
                        this.a.g.a(o2).c();
                    }
                    c2.b -= l3;
                    this.b += l3;
                    l2 -= l3;
                }
                return;
            }
            throw new IllegalArgumentException("source == this");
        }
        throw new IllegalArgumentException("source == null");
    }

    public byte b(long l2) {
        long l3;
        u.a(this.b, l2, 1L);
        if (this.b - l2 > l2) {
            o o2 = this.a;
            do {
                long l4;
                if (l2 < (l4 = (long)(o2.c - o2.b))) {
                    return o2.a[o2.b + (int)l2];
                }
                l2 -= l4;
                o2 = o2.f;
            } while (true);
        }
        l2 -= this.b;
        o o3 = this.a;
        do {
            o o4 = o3.g;
            l3 = l2 + (long)(o4.c - o4.b);
            o3 = o4;
            l2 = l3;
        } while (l3 < 0L);
        return o4.a[o4.b + (int)l3];
    }

    public long b() {
        return this.b;
    }

    public c b(int n2) {
        o o2 = this.e(1);
        byte[] arrby = o2.a;
        int n3 = o2.c;
        o2.c = n3 + 1;
        arrby[n3] = (byte)n2;
        ++this.b;
        return this;
    }

    public c b(byte[] arrby) {
        if (arrby != null) {
            return this.b(arrby, 0, arrby.length);
        }
        throw new IllegalArgumentException("source == null");
    }

    public c b(byte[] arrby, int n2, int n3) {
        if (arrby != null) {
            long l2 = arrby.length;
            long l3 = n2;
            long l4 = n3;
            u.a(l2, l3, l4);
            while (n2 < (n3 += n2)) {
                o o2 = this.e(1);
                int n4 = Math.min(n3 - n2, 8192 - o2.c);
                System.arraycopy(arrby, n2, o2.a, o2.c, n4);
                n2 += n4;
                o2.c += n4;
            }
            this.b += l4;
            return this;
        }
        throw new IllegalArgumentException("source == null");
    }

    @Override
    public /* synthetic */ d b(f f2) {
        return this.a(f2);
    }

    @Override
    public /* synthetic */ d b(String string2) {
        return this.a(string2);
    }

    @Override
    public c c() {
        return this;
    }

    public c c(int n2) {
        o o2 = this.e(2);
        byte[] arrby = o2.a;
        int n3 = o2.c;
        int n4 = n3 + 1;
        arrby[n3] = (byte)(n2 >>> 8 & 255);
        arrby[n4] = (byte)(n2 & 255);
        o2.c = n4 + 1;
        this.b += 2L;
        return this;
    }

    @Override
    public /* synthetic */ d c(byte[] arrby) {
        return this.b(arrby);
    }

    @Override
    public /* synthetic */ d c(byte[] arrby, int n2, int n3) {
        return this.b(arrby, n2, n3);
    }

    @Override
    public f c(long l2) {
        return new f(this.g(l2));
    }

    public /* synthetic */ Object clone() {
        return this.u();
    }

    @Override
    public void close() {
    }

    public c d(int n2) {
        o o2 = this.e(4);
        byte[] arrby = o2.a;
        int n3 = o2.c;
        int n4 = n3 + 1;
        arrby[n3] = (byte)(n2 >>> 24 & 255);
        n3 = n4 + 1;
        arrby[n4] = (byte)(n2 >>> 16 & 255);
        n4 = n3 + 1;
        arrby[n3] = (byte)(n2 >>> 8 & 255);
        arrby[n4] = (byte)(n2 & 255);
        o2.c = n4 + 1;
        this.b += 4L;
        return this;
    }

    public OutputStream d() {
        return new OutputStream(){

            @Override
            public void close() {
            }

            @Override
            public void flush() {
            }

            public String toString() {
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append(c.this);
                stringBuilder.append(".outputStream()");
                return stringBuilder.toString();
            }

            @Override
            public void write(int n2) {
                c.this.b((byte)n2);
            }

            @Override
            public void write(byte[] arrby, int n2, int n3) {
                c.this.b(arrby, n2, n3);
            }
        };
    }

    public String d(long l2) {
        return this.a(l2, u.a);
    }

    public c e() {
        return this;
    }

    o e(int n2) {
        block4 : {
            o o2;
            block6 : {
                o o3;
                block5 : {
                    if (n2 < 1 || n2 > 8192) break block4;
                    if (this.a == null) {
                        o o4;
                        o o5 = this.a = p.a();
                        o o6 = this.a;
                        o6.g = o4 = this.a;
                        o5.f = o4;
                        return o4;
                    }
                    o3 = this.a.g;
                    if (o3.c + n2 > 8192) break block5;
                    o2 = o3;
                    if (o3.e) break block6;
                }
                o2 = o3.a(p.a());
            }
            return o2;
        }
        throw new IllegalArgumentException();
    }

    @Override
    public String e(long l2) {
        if (l2 >= 0L) {
            long l3 = Long.MAX_VALUE;
            if (l2 != Long.MAX_VALUE) {
                l3 = l2 + 1L;
            }
            long l4 = this.a((byte)10, 0L, l3);
            if (l4 != -1L) {
                return this.f(l4);
            }
            if (l3 < this.b() && this.b(l3 - 1L) == 13 && this.b(l3) == 10) {
                return this.f(l3);
            }
            c c2 = new c();
            this.a(c2, 0L, Math.min(32L, this.b()));
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("\\n not found: limit=");
            stringBuilder.append(Math.min(this.b(), l2));
            stringBuilder.append(" content=");
            stringBuilder.append(c2.p().f());
            stringBuilder.append('\u2026');
            throw new EOFException(stringBuilder.toString());
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("limit < 0: ");
        stringBuilder.append(l2);
        throw new IllegalArgumentException(stringBuilder.toString());
    }

    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof c)) {
            return false;
        }
        object = (c)object;
        if (this.b != object.b) {
            return false;
        }
        long l2 = this.b;
        if (l2 == 0L) {
            return true;
        }
        o o2 = this.a;
        object = object.a;
        int n2 = o2.b;
        int n3 = object.b;
        for (long i2 = 0L; i2 < this.b; i2 += l2) {
            l2 = Math.min(o2.c - n2, object.c - n3);
            int n4 = 0;
            while ((long)n4 < l2) {
                if (o2.a[n2] != object.a[n3]) {
                    return false;
                }
                ++n4;
                ++n2;
                ++n3;
            }
            if (n2 == o2.c) {
                o2 = o2.f;
                n2 = o2.b;
            }
            if (n3 != object.c) continue;
            object = object.f;
            n3 = object.b;
        }
        return true;
    }

    public f f(int n2) {
        if (n2 == 0) {
            return f.b;
        }
        return new q(this, n2);
    }

    String f(long l2) {
        long l3;
        if (l2 > 0L && this.b(l3 = l2 - 1L) == 13) {
            String string2 = this.d(l3);
            this.h(2L);
            return string2;
        }
        String string3 = this.d(l2);
        this.h(1L);
        return string3;
    }

    @Override
    public boolean f() {
        if (this.b == 0L) {
            return true;
        }
        return false;
    }

    @Override
    public void flush() {
    }

    @Override
    public /* synthetic */ d g(int n2) {
        return this.d(n2);
    }

    @Override
    public InputStream g() {
        return new InputStream(){

            @Override
            public int available() {
                return (int)Math.min(c.this.b, Integer.MAX_VALUE);
            }

            @Override
            public void close() {
            }

            @Override
            public int read() {
                if (c.this.b > 0L) {
                    return c.this.i() & 255;
                }
                return -1;
            }

            @Override
            public int read(byte[] arrby, int n2, int n3) {
                return c.this.a(arrby, n2, n3);
            }

            public String toString() {
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append(c.this);
                stringBuilder.append(".inputStream()");
                return stringBuilder.toString();
            }
        };
    }

    @Override
    public byte[] g(long l2) {
        u.a(this.b, 0L, l2);
        if (l2 <= Integer.MAX_VALUE) {
            byte[] arrby = new byte[(int)l2];
            this.a(arrby);
            return arrby;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("byteCount > Integer.MAX_VALUE: ");
        stringBuilder.append(l2);
        throw new IllegalArgumentException(stringBuilder.toString());
    }

    public long h() {
        long l2 = this.b;
        if (l2 == 0L) {
            return 0L;
        }
        o o2 = this.a.g;
        long l3 = l2;
        if (o2.c < 8192) {
            l3 = l2;
            if (o2.e) {
                l3 = l2 - (long)(o2.c - o2.b);
            }
        }
        return l3;
    }

    @Override
    public /* synthetic */ d h(int n2) {
        return this.c(n2);
    }

    @Override
    public void h(long l2) {
        while (l2 > 0L) {
            if (this.a != null) {
                int n2 = (int)Math.min(l2, (long)(this.a.c - this.a.b));
                long l3 = this.b;
                long l4 = n2;
                this.b = l3 - l4;
                l3 = l2 - l4;
                o o2 = this.a;
                o2.b += n2;
                l2 = l3;
                if (this.a.b != this.a.c) continue;
                o2 = this.a;
                this.a = o2.b();
                p.a(o2);
                l2 = l3;
                continue;
            }
            throw new EOFException();
        }
    }

    public int hashCode() {
        o o2;
        int n2;
        o o3 = this.a;
        if (o3 == null) {
            return 0;
        }
        int n3 = 1;
        do {
            int n4 = o3.c;
            n2 = n3;
            for (int i2 = o3.b; i2 < n4; ++i2) {
                n2 = n2 * 31 + o3.a[i2];
            }
            o3 = o2 = o3.f;
            n3 = n2;
        } while (o2 != this.a);
        return n2;
    }

    @Override
    public byte i() {
        if (this.b != 0L) {
            o o2 = this.a;
            int n2 = o2.b;
            int n3 = o2.c;
            byte[] arrby = o2.a;
            int n4 = n2 + 1;
            byte by2 = arrby[n2];
            --this.b;
            if (n4 == n3) {
                this.a = o2.b();
                p.a(o2);
                return by2;
            }
            o2.b = n4;
            return by2;
        }
        throw new IllegalStateException("size == 0");
    }

    public c i(long l2) {
        long l3 = l2 LCMP 0L;
        if (l3 == false) {
            return this.b(48);
        }
        boolean bl2 = false;
        int n2 = 1;
        long l4 = l2;
        if (l3 < 0) {
            l4 = - l2;
            if (l4 < 0L) {
                return this.a("-9223372036854775808");
            }
            bl2 = true;
        }
        if (l4 < 100000000L) {
            if (l4 < 10000L) {
                if (l4 < 100L) {
                    if (l4 >= 10L) {
                        n2 = 2;
                    }
                } else {
                    n2 = l4 < 1000L ? 3 : 4;
                }
            } else {
                n2 = l4 < 1000000L ? (l4 < 100000L ? 5 : 6) : (l4 < 10000000L ? 7 : 8);
            }
        } else {
            n2 = l4 < 1000000000000L ? (l4 < 10000000000L ? (l4 < 1000000000L ? 9 : 10) : (l4 < 100000000000L ? 11 : 12)) : (l4 < 1000000000000000L ? (l4 < 10000000000000L ? 13 : (l4 < 100000000000000L ? 14 : 15)) : (l4 < 100000000000000000L ? (l4 < 10000000000000000L ? 16 : 17) : (l4 < 1000000000000000000L ? 18 : 19)));
        }
        l3 = n2;
        if (bl2) {
            l3 = n2 + 1;
        }
        o o2 = this.e((int)l3);
        byte[] arrby = o2.a;
        n2 = o2.c + l3;
        while (l4 != 0L) {
            int n3 = (int)(l4 % 10L);
            arrby[--n2] = c[n3];
            l4 /= 10L;
        }
        if (bl2) {
            arrby[n2 - 1] = 45;
        }
        o2.c += l3;
        this.b += (long)l3;
        return this;
    }

    @Override
    public /* synthetic */ d i(int n2) {
        return this.b(n2);
    }

    @Override
    public boolean isOpen() {
        return true;
    }

    public c j(long l2) {
        if (l2 == 0L) {
            return this.b(48);
        }
        int n2 = Long.numberOfTrailingZeros(Long.highestOneBit(l2)) / 4 + 1;
        o o2 = this.e(n2);
        byte[] arrby = o2.a;
        int n3 = o2.c;
        for (int i2 = o2.c + n2 - 1; i2 >= n3; --i2) {
            arrby[i2] = c[(int)(15L & l2)];
            l2 >>>= 4;
        }
        o2.c += n2;
        this.b += (long)n2;
        return this;
    }

    @Override
    public short j() {
        if (this.b >= 2L) {
            o o2 = this.a;
            int n2 = o2.c;
            int n3 = o2.b;
            if (n2 - n3 < 2) {
                return (short)((this.i() & 255) << 8 | this.i() & 255);
            }
            byte[] arrby = o2.a;
            int n4 = n3 + 1;
            n3 = arrby[n3];
            int n5 = n4 + 1;
            n4 = arrby[n4];
            this.b -= 2L;
            if (n5 == n2) {
                this.a = o2.b();
                p.a(o2);
            } else {
                o2.b = n5;
            }
            return (short)((n3 & 255) << 8 | n4 & 255);
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("size < 2: ");
        stringBuilder.append(this.b);
        throw new IllegalStateException(stringBuilder.toString());
    }

    @Override
    public int k() {
        if (this.b >= 4L) {
            o o2 = this.a;
            int n2 = o2.c;
            int n3 = o2.b;
            if (n2 - n3 < 4) {
                return (this.i() & 255) << 24 | (this.i() & 255) << 16 | (this.i() & 255) << 8 | this.i() & 255;
            }
            byte[] arrby = o2.a;
            int n4 = n3 + 1;
            n3 = arrby[n3];
            int n5 = n4 + 1;
            n4 = arrby[n4];
            int n6 = n5 + 1;
            byte by2 = arrby[n5];
            n5 = n6 + 1;
            n3 = (n3 & 255) << 24 | (n4 & 255) << 16 | (by2 & 255) << 8 | arrby[n6] & 255;
            this.b -= 4L;
            if (n5 == n2) {
                this.a = o2.b();
                p.a(o2);
                return n3;
            }
            o2.b = n5;
            return n3;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("size < 4: ");
        stringBuilder.append(this.b);
        throw new IllegalStateException(stringBuilder.toString());
    }

    @Override
    public /* synthetic */ d k(long l2) {
        return this.j(l2);
    }

    @Override
    public /* synthetic */ d l(long l2) {
        return this.i(l2);
    }

    @Override
    public short l() {
        return u.a(this.j());
    }

    @Override
    public int m() {
        return u.a(this.k());
    }

    /*
     * Enabled aggressive block sorting
     */
    @Override
    public long n() {
        int n2;
        long l2;
        int n3;
        Object object;
        Object object2;
        block11 : {
            int n4;
            l2 = this.b;
            long l3 = 0L;
            if (l2 == 0L) {
                throw new IllegalStateException("size == 0");
            }
            n3 = 0;
            long l4 = -7L;
            int n5 = 0;
            int n6 = 0;
            do {
                int n7;
                int n8;
                block10 : {
                    object = this.a;
                    object2 = object.a;
                    n8 = object.b;
                    n7 = object.c;
                    n4 = n3;
                    n2 = n5;
                    l2 = l3;
                    do {
                        n3 = n6;
                        if (n8 >= n7) break block10;
                        n3 = object2[n8];
                        if (n3 >= 48 && n3 <= 57) {
                            n5 = 48 - n3;
                            long l5 = l2 LCMP -922337203685477580L;
                            if (l5 < 0 || l5 == false && (long)n5 < l4) break block11;
                            l2 = l2 * 10L + (long)n5;
                        } else {
                            if (n3 != 45 || n4 != 0) break;
                            --l4;
                            n2 = 1;
                        }
                        ++n8;
                        ++n4;
                    } while (true);
                    if (n4 == 0) {
                        object = new StringBuilder();
                        object.append("Expected leading [0-9] or '-' character but was 0x");
                        object.append(Integer.toHexString(n3));
                        throw new NumberFormatException(object.toString());
                    }
                    n3 = 1;
                }
                if (n8 == n7) {
                    this.a = object.b();
                    p.a((o)object);
                } else {
                    object.b = n8;
                }
                if (n3 != 0) break;
                l3 = l2;
                n5 = n2;
                n6 = n3;
                n3 = n4;
            } while (this.a != null);
            this.b -= (long)n4;
            if (n2 != 0) {
                return l2;
            }
            return - l2;
        }
        object = new c().i(l2).b(n3);
        if (n2 == 0) {
            object.i();
        }
        object2 = new StringBuilder();
        object2.append("Number too large: ");
        object2.append(object.q());
        throw new NumberFormatException(object2.toString());
    }

    /*
     * Enabled aggressive block sorting
     */
    @Override
    public long o() {
        long l2;
        int n2;
        if (this.b == 0L) {
            throw new IllegalStateException("size == 0");
        }
        int n3 = 0;
        long l3 = 0L;
        byte by2 = 0;
        do {
            int n4;
            Object object;
            int n5;
            byte by3;
            block11 : {
                object = this.a;
                Object object2 = object.a;
                n4 = object.b;
                n5 = object.c;
                l2 = l3;
                n2 = n3;
                do {
                    by3 = by2;
                    if (n4 >= n5) break block11;
                    by3 = object2[n4];
                    if (by3 >= 48 && by3 <= 57) {
                        n3 = by3 - 48;
                    } else {
                        if (by3 >= 97 && by3 <= 102) {
                            n3 = by3 - 97;
                        } else {
                            if (by3 < 65 || by3 > 70) break;
                            n3 = by3 - 65;
                        }
                        n3 += 10;
                    }
                    if ((-1152921504606846976L & l2) != 0L) {
                        object = new c().j(l2).b(by3);
                        object2 = new StringBuilder();
                        object2.append("Number too large: ");
                        object2.append(object.q());
                        throw new NumberFormatException(object2.toString());
                    }
                    l2 = l2 << 4 | (long)n3;
                    ++n4;
                    ++n2;
                } while (true);
                if (n2 == 0) {
                    object = new StringBuilder();
                    object.append("Expected leading [0-9a-fA-F] character but was 0x");
                    object.append(Integer.toHexString(by3));
                    throw new NumberFormatException(object.toString());
                }
                by3 = 1;
            }
            if (n4 == n5) {
                this.a = object.b();
                p.a((o)object);
            } else {
                object.b = n4;
            }
            if (by3 != 0) break;
            n3 = n2;
            by2 = by3;
            l3 = l2;
        } while (this.a != null);
        this.b -= (long)n2;
        return l2;
    }

    public f p() {
        return new f(this.s());
    }

    public String q() {
        try {
            String string2 = this.a(this.b, u.a);
            return string2;
        }
        catch (EOFException eOFException) {
            throw new AssertionError(eOFException);
        }
    }

    @Override
    public String r() {
        return this.e(Long.MAX_VALUE);
    }

    @Override
    public int read(ByteBuffer byteBuffer) {
        o o2 = this.a;
        if (o2 == null) {
            return -1;
        }
        int n2 = Math.min(byteBuffer.remaining(), o2.c - o2.b);
        byteBuffer.put(o2.a, o2.b, n2);
        o2.b += n2;
        this.b -= (long)n2;
        if (o2.b == o2.c) {
            this.a = o2.b();
            p.a(o2);
        }
        return n2;
    }

    @Override
    public byte[] s() {
        try {
            byte[] arrby = this.g(this.b);
            return arrby;
        }
        catch (EOFException eOFException) {
            throw new AssertionError(eOFException);
        }
    }

    public void t() {
        try {
            this.h(this.b);
            return;
        }
        catch (EOFException eOFException) {
            throw new AssertionError(eOFException);
        }
    }

    public String toString() {
        return this.v().toString();
    }

    public c u() {
        o o2;
        c c2 = new c();
        if (this.b == 0L) {
            return c2;
        }
        o o3 = c2.a = this.a.a();
        o o4 = c2.a;
        o4.g = o2 = c2.a;
        o3.f = o2;
        o3 = this.a;
        while ((o3 = o3.f) != this.a) {
            c2.a.g.a(o3.a());
        }
        c2.b = this.b;
        return c2;
    }

    public f v() {
        if (this.b <= Integer.MAX_VALUE) {
            return this.f((int)this.b);
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("size > Integer.MAX_VALUE: ");
        stringBuilder.append(this.b);
        throw new IllegalArgumentException(stringBuilder.toString());
    }

    @Override
    public /* synthetic */ d w() {
        return this.e();
    }

    @Override
    public int write(ByteBuffer byteBuffer) {
        if (byteBuffer != null) {
            int n2;
            int n3 = n2 = byteBuffer.remaining();
            while (n3 > 0) {
                o o2 = this.e(1);
                int n4 = Math.min(n3, 8192 - o2.c);
                byteBuffer.get(o2.a, o2.c, n4);
                n3 -= n4;
                o2.c += n4;
            }
            this.b += (long)n2;
            return n2;
        }
        throw new IllegalArgumentException("source == null");
    }

}

