/*
 * Decompiled with CFR 0_132.
 */
package e;

import java.io.UnsupportedEncodingException;

final class b {
    private static final byte[] a = new byte[]{65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47};
    private static final byte[] b = new byte[]{65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95};

    public static String a(byte[] arrby) {
        return b.a(arrby, a);
    }

    private static String a(byte[] object, byte[] arrby) {
        int n2;
        int n3;
        byte[] arrby2 = new byte[(((byte[])object).length + 2) / 3 * 4];
        int n4 = ((byte[])object).length - ((byte[])object).length % 3;
        int n5 = 0;
        for (n2 = 0; n2 < n4; n2 += 3) {
            n3 = n5 + 1;
            arrby2[n5] = arrby[(object[n2] & 255) >> 2];
            n5 = n3 + 1;
            byte by2 = object[n2];
            int n6 = n2 + 1;
            arrby2[n3] = arrby[(by2 & 3) << 4 | (object[n6] & 255) >> 4];
            n3 = n5 + 1;
            by2 = object[n6];
            n6 = n2 + 2;
            arrby2[n5] = arrby[(by2 & 15) << 2 | (object[n6] & 255) >> 6];
            n5 = n3 + 1;
            arrby2[n3] = arrby[object[n6] & 63];
        }
        switch (((byte[])object).length % 3) {
            default: {
                break;
            }
            case 2: {
                n2 = n5 + 1;
                arrby2[n5] = arrby[(object[n4] & 255) >> 2];
                n5 = n2 + 1;
                n3 = object[n4];
                arrby2[n2] = arrby[(n3 & 3) << 4 | (object[++n4] & 255) >> 4];
                arrby2[n5] = arrby[(object[n4] & 15) << 2];
                arrby2[n5 + 1] = 61;
                break;
            }
            case 1: {
                n2 = n5 + 1;
                arrby2[n5] = arrby[(object[n4] & 255) >> 2];
                n5 = n2 + 1;
                arrby2[n2] = arrby[(object[n4] & 3) << 4];
                arrby2[n5] = 61;
                arrby2[n5 + 1] = 61;
            }
        }
        try {
            object = new String(arrby2, "US-ASCII");
            return object;
        }
        catch (UnsupportedEncodingException unsupportedEncodingException) {
            throw new AssertionError(unsupportedEncodingException);
        }
    }

    public static byte[] a(String arrby) {
        int n2;
        int n3;
        int n4;
        for (n4 = arrby.length(); n4 > 0 && ((n3 = arrby.charAt(n4 - 1)) == 61 || n3 == 10 || n3 == 13 || n3 == 32 || n3 == 9); --n4) {
        }
        byte[] arrby2 = new byte[(int)((long)n4 * 6L / 8L)];
        int n5 = 0;
        int n6 = 0;
        int n7 = 0;
        for (n2 = 0; n2 < n4; ++n2) {
            int n8;
            int n9;
            block14 : {
                block9 : {
                    block12 : {
                        block13 : {
                            block15 : {
                                char c2;
                                block11 : {
                                    block10 : {
                                        block8 : {
                                            c2 = arrby.charAt(n2);
                                            if (c2 < 'A' || c2 > 'Z') break block8;
                                            n3 = c2 - 65;
                                            break block9;
                                        }
                                        if (c2 < 'a' || c2 > 'z') break block10;
                                        n3 = c2 - 71;
                                        break block9;
                                    }
                                    if (c2 < '0' || c2 > '9') break block11;
                                    n3 = c2 + 4;
                                    break block9;
                                }
                                if (c2 == '+' || c2 == '-') break block12;
                                if (c2 == '/' || c2 == '_') break block13;
                                n3 = n5;
                                n8 = n6;
                                n9 = n7;
                                if (c2 == '\n') break block14;
                                n3 = n5;
                                n8 = n6;
                                n9 = n7;
                                if (c2 == '\r') break block14;
                                n3 = n5;
                                n8 = n6;
                                n9 = n7;
                                if (c2 == ' ') break block14;
                                if (c2 != '\t') break block15;
                                n3 = n5;
                                n8 = n6;
                                n9 = n7;
                                break block14;
                            }
                            return null;
                        }
                        n3 = 63;
                        break block9;
                    }
                    n3 = 62;
                }
                n6 = n6 << 6 | (byte)n3;
                n3 = ++n5;
                n8 = n6;
                n9 = n7;
                if (n5 % 4 == 0) {
                    n3 = n7 + 1;
                    arrby2[n7] = (byte)(n6 >> 16);
                    n7 = n3 + 1;
                    arrby2[n3] = (byte)(n6 >> 8);
                    arrby2[n7] = (byte)n6;
                    n9 = n7 + 1;
                    n8 = n6;
                    n3 = n5;
                }
            }
            n5 = n3;
            n6 = n8;
            n7 = n9;
        }
        n4 = n5 % 4;
        if (n4 == 1) {
            return null;
        }
        if (n4 == 2) {
            arrby2[n7] = (byte)(n6 << 12 >> 16);
            n3 = n7 + 1;
        } else {
            n3 = n7;
            if (n4 == 3) {
                n4 = n6 << 6;
                n2 = n7 + 1;
                arrby2[n7] = (byte)(n4 >> 16);
                n3 = n2 + 1;
                arrby2[n2] = (byte)(n4 >> 8);
            }
        }
        if (n3 == arrby2.length) {
            return arrby2;
        }
        arrby = new byte[n3];
        System.arraycopy(arrby2, 0, arrby, 0, n3);
        return arrby;
    }
}

