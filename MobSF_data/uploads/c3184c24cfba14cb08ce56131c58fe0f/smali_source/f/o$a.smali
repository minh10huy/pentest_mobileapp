.class final Lf/o$a;
.super Ljava/lang/Object;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lf/o;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x18
    name = "a"
.end annotation

.annotation system Ldalvik/annotation/Signature;
    value = {
        "<T:",
        "Ljava/lang/Object;",
        "R:",
        "Ljava/lang/Object;",
        ">",
        "Ljava/lang/Object;"
    }
.end annotation


# instance fields
.field final a:Lf/n;

.field final b:Ljava/lang/reflect/Method;

.field final c:[Ljava/lang/annotation/Annotation;

.field final d:[[Ljava/lang/annotation/Annotation;

.field final e:[Ljava/lang/reflect/Type;

.field f:Ljava/lang/reflect/Type;

.field g:Z

.field h:Z

.field i:Z

.field j:Z

.field k:Z

.field l:Z

.field m:Ljava/lang/String;

.field n:Z

.field o:Z

.field p:Z

.field q:Ljava/lang/String;

.field r:Ld/s;

.field s:Ld/v;

.field t:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field u:[Lf/j;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "[",
            "Lf/j<",
            "*>;"
        }
    .end annotation
.end field

.field v:Lf/e;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lf/e<",
            "Ld/ad;",
            "TT;>;"
        }
    .end annotation
.end field

.field w:Lf/c;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lf/c<",
            "TT;TR;>;"
        }
    .end annotation
.end field


# direct methods
.method constructor <init>(Lf/n;Ljava/lang/reflect/Method;)V
    .registers 3

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p1, p0, Lf/o$a;->a:Lf/n;

    iput-object p2, p0, Lf/o$a;->b:Ljava/lang/reflect/Method;

    invoke-virtual {p2}, Ljava/lang/reflect/Method;->getAnnotations()[Ljava/lang/annotation/Annotation;

    move-result-object p1

    iput-object p1, p0, Lf/o$a;->c:[Ljava/lang/annotation/Annotation;

    invoke-virtual {p2}, Ljava/lang/reflect/Method;->getGenericParameterTypes()[Ljava/lang/reflect/Type;

    move-result-object p1

    iput-object p1, p0, Lf/o$a;->e:[Ljava/lang/reflect/Type;

    invoke-virtual {p2}, Ljava/lang/reflect/Method;->getParameterAnnotations()[[Ljava/lang/annotation/Annotation;

    move-result-object p1

    iput-object p1, p0, Lf/o$a;->d:[[Ljava/lang/annotation/Annotation;

    return-void
.end method

.method private a([Ljava/lang/String;)Ld/s;
    .registers 10

    new-instance v0, Ld/s$a;

    invoke-direct {v0}, Ld/s$a;-><init>()V

    array-length v1, p1

    const/4 v2, 0x0

    const/4 v3, 0x0

    :goto_8
    if-ge v3, v1, :cond_5a

    aget-object v4, p1, v3

    const/16 v5, 0x3a

    invoke-virtual {v4, v5}, Ljava/lang/String;->indexOf(I)I

    move-result v5

    const/4 v6, -0x1

    const/4 v7, 0x1

    if-eq v5, v6, :cond_4f

    if-eqz v5, :cond_4f

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v6

    sub-int/2addr v6, v7

    if-eq v5, v6, :cond_4f

    invoke-virtual {v4, v2, v5}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v6

    add-int/lit8 v5, v5, 0x1

    invoke-virtual {v4, v5}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v4

    const-string v5, "Content-Type"

    invoke-virtual {v5, v6}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_49

    invoke-static {v4}, Ld/v;->a(Ljava/lang/String;)Ld/v;

    move-result-object v5

    if-eqz v5, :cond_3e

    iput-object v5, p0, Lf/o$a;->s:Ld/v;

    goto :goto_4c

    :cond_3e
    new-array p1, v7, [Ljava/lang/Object;

    aput-object v4, p1, v2

    const-string v0, "Malformed content type: %s"

    invoke-direct {p0, v0, p1}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_49
    invoke-virtual {v0, v6, v4}, Ld/s$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/s$a;

    :goto_4c
    add-int/lit8 v3, v3, 0x1

    goto :goto_8

    :cond_4f
    new-array p1, v7, [Ljava/lang/Object;

    aput-object v4, p1, v2

    const-string v0, "@Headers value must be in the form \"Name: Value\". Found: \"%s\""

    invoke-direct {p0, v0, p1}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_5a
    invoke-virtual {v0}, Ld/s$a;->a()Ld/s;

    move-result-object p1

    return-object p1
.end method

.method private a(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/j;
    .registers 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ljava/lang/reflect/Type;",
            "[",
            "Ljava/lang/annotation/Annotation;",
            ")",
            "Lf/j<",
            "*>;"
        }
    .end annotation

    array-length v0, p3

    const/4 v1, 0x0

    const/4 v2, 0x0

    move-object v3, v2

    const/4 v2, 0x0

    :goto_5
    if-ge v2, v0, :cond_1f

    aget-object v4, p3, v2

    invoke-direct {p0, p1, p2, p3, v4}, Lf/o$a;->a(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lf/j;

    move-result-object v4

    if-nez v4, :cond_10

    goto :goto_13

    :cond_10
    if-nez v3, :cond_16

    move-object v3, v4

    :goto_13
    add-int/lit8 v2, v2, 0x1

    goto :goto_5

    :cond_16
    new-array p2, v1, [Ljava/lang/Object;

    const-string p3, "Multiple Retrofit annotations found, only one allowed."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_1f
    if-eqz v3, :cond_22

    return-object v3

    :cond_22
    new-array p2, v1, [Ljava/lang/Object;

    const-string p3, "No Retrofit annotation found."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1
.end method

.method private a(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lf/j;
    .registers 12
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ljava/lang/reflect/Type;",
            "[",
            "Ljava/lang/annotation/Annotation;",
            "Ljava/lang/annotation/Annotation;",
            ")",
            "Lf/j<",
            "*>;"
        }
    .end annotation

    instance-of v0, p4, Lf/c/x;

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_6e

    iget-boolean p3, p0, Lf/o$a;->l:Z

    if-nez p3, :cond_65

    iget-boolean p3, p0, Lf/o$a;->j:Z

    if-nez p3, :cond_5c

    iget-boolean p3, p0, Lf/o$a;->k:Z

    if-nez p3, :cond_53

    iget-object p3, p0, Lf/o$a;->q:Ljava/lang/String;

    if-nez p3, :cond_46

    iput-boolean v1, p0, Lf/o$a;->l:Z

    const-class p3, Ld/t;

    if-eq p2, p3, :cond_40

    const-class p3, Ljava/lang/String;

    if-eq p2, p3, :cond_40

    const-class p3, Ljava/net/URI;

    if-eq p2, p3, :cond_40

    instance-of p3, p2, Ljava/lang/Class;

    if-eqz p3, :cond_37

    const-string p3, "android.net.Uri"

    check-cast p2, Ljava/lang/Class;

    invoke-virtual {p2}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p3, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_37

    goto :goto_40

    :cond_37
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Url must be okhttp3.HttpUrl, String, java.net.URI, or android.net.Uri type."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_40
    :goto_40
    new-instance p1, Lf/j$m;

    invoke-direct {p1}, Lf/j$m;-><init>()V

    return-object p1

    :cond_46
    new-array p2, v1, [Ljava/lang/Object;

    iget-object p3, p0, Lf/o$a;->m:Ljava/lang/String;

    aput-object p3, p2, v2

    const-string p3, "@Url cannot be used with @%s URL"

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_53
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "A @Url parameter must not come after a @Query"

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_5c
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Path parameters may not be used with @Url."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_65
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "Multiple @Url method annotations found."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_6e
    instance-of v0, p4, Lf/c/s;

    if-eqz v0, :cond_b8

    iget-boolean v0, p0, Lf/o$a;->k:Z

    if-nez v0, :cond_af

    iget-boolean v0, p0, Lf/o$a;->l:Z

    if-nez v0, :cond_a6

    iget-object v0, p0, Lf/o$a;->q:Ljava/lang/String;

    if-eqz v0, :cond_99

    iput-boolean v1, p0, Lf/o$a;->j:Z

    check-cast p4, Lf/c/s;

    invoke-interface {p4}, Lf/c/s;->a()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, p1, v0}, Lf/o$a;->a(ILjava/lang/String;)V

    iget-object p1, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p1, p2, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$h;

    invoke-interface {p4}, Lf/c/s;->b()Z

    move-result p3

    invoke-direct {p2, v0, p1, p3}, Lf/j$h;-><init>(Ljava/lang/String;Lf/e;Z)V

    return-object p2

    :cond_99
    new-array p2, v1, [Ljava/lang/Object;

    iget-object p3, p0, Lf/o$a;->m:Ljava/lang/String;

    aput-object p3, p2, v2

    const-string p3, "@Path can only be used with relative url on @%s"

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_a6
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Path parameters may not be used with @Url."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_af
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "A @Path parameter must not come after a @Query."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_b8
    instance-of v0, p4, Lf/c/t;

    if-eqz v0, :cond_140

    check-cast p4, Lf/c/t;

    invoke-interface {p4}, Lf/c/t;->a()Ljava/lang/String;

    move-result-object v0

    invoke-interface {p4}, Lf/c/t;->b()Z

    move-result p4

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object v3

    iput-boolean v1, p0, Lf/o$a;->k:Z

    const-class v1, Ljava/lang/Iterable;

    invoke-virtual {v1, v3}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v1

    if-eqz v1, :cond_116

    instance-of v1, p2, Ljava/lang/reflect/ParameterizedType;

    if-eqz v1, :cond_ee

    check-cast p2, Ljava/lang/reflect/ParameterizedType;

    invoke-static {v2, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object p1

    iget-object p2, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p2, p1, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$i;

    invoke-direct {p2, v0, p1, p4}, Lf/j$i;-><init>(Ljava/lang/String;Lf/e;Z)V

    invoke-virtual {p2}, Lf/j$i;->a()Lf/j;

    move-result-object p1

    return-object p1

    :cond_ee
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, " must include generic type (e.g., "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, "<String>)"

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array p3, v2, [Ljava/lang/Object;

    invoke-direct {p0, p1, p2, p3}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_116
    invoke-virtual {v3}, Ljava/lang/Class;->isArray()Z

    move-result p1

    if-eqz p1, :cond_134

    invoke-virtual {v3}, Ljava/lang/Class;->getComponentType()Ljava/lang/Class;

    move-result-object p1

    invoke-static {p1}, Lf/o;->a(Ljava/lang/Class;)Ljava/lang/Class;

    move-result-object p1

    iget-object p2, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p2, p1, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$i;

    invoke-direct {p2, v0, p1, p4}, Lf/j$i;-><init>(Ljava/lang/String;Lf/e;Z)V

    invoke-virtual {p2}, Lf/j$i;->b()Lf/j;

    move-result-object p1

    return-object p1

    :cond_134
    iget-object p1, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p1, p2, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$i;

    invoke-direct {p2, v0, p1, p4}, Lf/j$i;-><init>(Ljava/lang/String;Lf/e;Z)V

    return-object p2

    :cond_140
    instance-of v0, p4, Lf/c/v;

    if-eqz v0, :cond_1c4

    check-cast p4, Lf/c/v;

    invoke-interface {p4}, Lf/c/v;->a()Z

    move-result p4

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object v0

    iput-boolean v1, p0, Lf/o$a;->k:Z

    const-class v1, Ljava/lang/Iterable;

    invoke-virtual {v1, v0}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v1

    if-eqz v1, :cond_19a

    instance-of v1, p2, Ljava/lang/reflect/ParameterizedType;

    if-eqz v1, :cond_172

    check-cast p2, Ljava/lang/reflect/ParameterizedType;

    invoke-static {v2, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object p1

    iget-object p2, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p2, p1, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$k;

    invoke-direct {p2, p1, p4}, Lf/j$k;-><init>(Lf/e;Z)V

    invoke-virtual {p2}, Lf/j$k;->a()Lf/j;

    move-result-object p1

    return-object p1

    :cond_172
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, " must include generic type (e.g., "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, "<String>)"

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array p3, v2, [Ljava/lang/Object;

    invoke-direct {p0, p1, p2, p3}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_19a
    invoke-virtual {v0}, Ljava/lang/Class;->isArray()Z

    move-result p1

    if-eqz p1, :cond_1b8

    invoke-virtual {v0}, Ljava/lang/Class;->getComponentType()Ljava/lang/Class;

    move-result-object p1

    invoke-static {p1}, Lf/o;->a(Ljava/lang/Class;)Ljava/lang/Class;

    move-result-object p1

    iget-object p2, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p2, p1, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$k;

    invoke-direct {p2, p1, p4}, Lf/j$k;-><init>(Lf/e;Z)V

    invoke-virtual {p2}, Lf/j$k;->b()Lf/j;

    move-result-object p1

    return-object p1

    :cond_1b8
    iget-object p1, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p1, p2, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$k;

    invoke-direct {p2, p1, p4}, Lf/j$k;-><init>(Lf/e;Z)V

    return-object p2

    :cond_1c4
    instance-of v0, p4, Lf/c/u;

    if-eqz v0, :cond_228

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object v0

    const-class v3, Ljava/util/Map;

    invoke-virtual {v3, v0}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v3

    if-eqz v3, :cond_21f

    const-class v3, Ljava/util/Map;

    invoke-static {p2, v0, v3}, Lf/p;->b(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;

    move-result-object p2

    instance-of v0, p2, Ljava/lang/reflect/ParameterizedType;

    if-eqz v0, :cond_216

    check-cast p2, Ljava/lang/reflect/ParameterizedType;

    invoke-static {v2, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object v0

    const-class v3, Ljava/lang/String;

    if-ne v3, v0, :cond_1fe

    invoke-static {v1, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object p1

    iget-object p2, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p2, p1, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$j;

    check-cast p4, Lf/c/u;

    invoke-interface {p4}, Lf/c/u;->a()Z

    move-result p3

    invoke-direct {p2, p1, p3}, Lf/j$j;-><init>(Lf/e;Z)V

    return-object p2

    :cond_1fe
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "@QueryMap keys must be of type String: "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array p3, v2, [Ljava/lang/Object;

    invoke-direct {p0, p1, p2, p3}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_216
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "Map must include generic types (e.g., Map<String, String>)"

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_21f
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@QueryMap parameter type must be Map."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_228
    instance-of v0, p4, Lf/c/i;

    if-eqz v0, :cond_2aa

    check-cast p4, Lf/c/i;

    invoke-interface {p4}, Lf/c/i;->a()Ljava/lang/String;

    move-result-object p4

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object v0

    const-class v1, Ljava/lang/Iterable;

    invoke-virtual {v1, v0}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v1

    if-eqz v1, :cond_280

    instance-of v1, p2, Ljava/lang/reflect/ParameterizedType;

    if-eqz v1, :cond_258

    check-cast p2, Ljava/lang/reflect/ParameterizedType;

    invoke-static {v2, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object p1

    iget-object p2, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p2, p1, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$d;

    invoke-direct {p2, p4, p1}, Lf/j$d;-><init>(Ljava/lang/String;Lf/e;)V

    invoke-virtual {p2}, Lf/j$d;->a()Lf/j;

    move-result-object p1

    return-object p1

    :cond_258
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, " must include generic type (e.g., "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, "<String>)"

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array p3, v2, [Ljava/lang/Object;

    invoke-direct {p0, p1, p2, p3}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_280
    invoke-virtual {v0}, Ljava/lang/Class;->isArray()Z

    move-result p1

    if-eqz p1, :cond_29e

    invoke-virtual {v0}, Ljava/lang/Class;->getComponentType()Ljava/lang/Class;

    move-result-object p1

    invoke-static {p1}, Lf/o;->a(Ljava/lang/Class;)Ljava/lang/Class;

    move-result-object p1

    iget-object p2, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p2, p1, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$d;

    invoke-direct {p2, p4, p1}, Lf/j$d;-><init>(Ljava/lang/String;Lf/e;)V

    invoke-virtual {p2}, Lf/j$d;->b()Lf/j;

    move-result-object p1

    return-object p1

    :cond_29e
    iget-object p1, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p1, p2, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$d;

    invoke-direct {p2, p4, p1}, Lf/j$d;-><init>(Ljava/lang/String;Lf/e;)V

    return-object p2

    :cond_2aa
    instance-of v0, p4, Lf/c/j;

    if-eqz v0, :cond_308

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object p4

    const-class v0, Ljava/util/Map;

    invoke-virtual {v0, p4}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v0

    if-eqz v0, :cond_2ff

    const-class v0, Ljava/util/Map;

    invoke-static {p2, p4, v0}, Lf/p;->b(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;

    move-result-object p2

    instance-of p4, p2, Ljava/lang/reflect/ParameterizedType;

    if-eqz p4, :cond_2f6

    check-cast p2, Ljava/lang/reflect/ParameterizedType;

    invoke-static {v2, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object p4

    const-class v0, Ljava/lang/String;

    if-ne v0, p4, :cond_2de

    invoke-static {v1, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object p1

    iget-object p2, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p2, p1, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$e;

    invoke-direct {p2, p1}, Lf/j$e;-><init>(Lf/e;)V

    return-object p2

    :cond_2de
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "@HeaderMap keys must be of type String: "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array p3, v2, [Ljava/lang/Object;

    invoke-direct {p0, p1, p2, p3}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_2f6
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "Map must include generic types (e.g., Map<String, String>)"

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_2ff
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@HeaderMap parameter type must be Map."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_308
    instance-of v0, p4, Lf/c/c;

    if-eqz v0, :cond_39d

    iget-boolean v0, p0, Lf/o$a;->o:Z

    if-eqz v0, :cond_394

    check-cast p4, Lf/c/c;

    invoke-interface {p4}, Lf/c/c;->a()Ljava/lang/String;

    move-result-object v0

    invoke-interface {p4}, Lf/c/c;->b()Z

    move-result p4

    iput-boolean v1, p0, Lf/o$a;->g:Z

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object v1

    const-class v3, Ljava/lang/Iterable;

    invoke-virtual {v3, v1}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v3

    if-eqz v3, :cond_36a

    instance-of v3, p2, Ljava/lang/reflect/ParameterizedType;

    if-eqz v3, :cond_342

    check-cast p2, Ljava/lang/reflect/ParameterizedType;

    invoke-static {v2, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object p1

    iget-object p2, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p2, p1, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$b;

    invoke-direct {p2, v0, p1, p4}, Lf/j$b;-><init>(Ljava/lang/String;Lf/e;Z)V

    invoke-virtual {p2}, Lf/j$b;->a()Lf/j;

    move-result-object p1

    return-object p1

    :cond_342
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, " must include generic type (e.g., "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, "<String>)"

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array p3, v2, [Ljava/lang/Object;

    invoke-direct {p0, p1, p2, p3}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_36a
    invoke-virtual {v1}, Ljava/lang/Class;->isArray()Z

    move-result p1

    if-eqz p1, :cond_388

    invoke-virtual {v1}, Ljava/lang/Class;->getComponentType()Ljava/lang/Class;

    move-result-object p1

    invoke-static {p1}, Lf/o;->a(Ljava/lang/Class;)Ljava/lang/Class;

    move-result-object p1

    iget-object p2, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p2, p1, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$b;

    invoke-direct {p2, v0, p1, p4}, Lf/j$b;-><init>(Ljava/lang/String;Lf/e;Z)V

    invoke-virtual {p2}, Lf/j$b;->b()Lf/j;

    move-result-object p1

    return-object p1

    :cond_388
    iget-object p1, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p1, p2, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$b;

    invoke-direct {p2, v0, p1, p4}, Lf/j$b;-><init>(Ljava/lang/String;Lf/e;Z)V

    return-object p2

    :cond_394
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Field parameters can only be used with form encoding."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_39d
    instance-of v0, p4, Lf/c/d;

    if-eqz v0, :cond_410

    iget-boolean v0, p0, Lf/o$a;->o:Z

    if-eqz v0, :cond_407

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object v0

    const-class v3, Ljava/util/Map;

    invoke-virtual {v3, v0}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v3

    if-eqz v3, :cond_3fe

    const-class v3, Ljava/util/Map;

    invoke-static {p2, v0, v3}, Lf/p;->b(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;

    move-result-object p2

    instance-of v0, p2, Ljava/lang/reflect/ParameterizedType;

    if-eqz v0, :cond_3f5

    check-cast p2, Ljava/lang/reflect/ParameterizedType;

    invoke-static {v2, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object v0

    const-class v3, Ljava/lang/String;

    if-ne v3, v0, :cond_3dd

    invoke-static {v1, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object p1

    iget-object p2, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {p2, p1, p3}, Lf/n;->c(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    iput-boolean v1, p0, Lf/o$a;->g:Z

    new-instance p2, Lf/j$c;

    check-cast p4, Lf/c/d;

    invoke-interface {p4}, Lf/c/d;->a()Z

    move-result p3

    invoke-direct {p2, p1, p3}, Lf/j$c;-><init>(Lf/e;Z)V

    return-object p2

    :cond_3dd
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "@FieldMap keys must be of type String: "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array p3, v2, [Ljava/lang/Object;

    invoke-direct {p0, p1, p2, p3}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_3f5
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "Map must include generic types (e.g., Map<String, String>)"

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_3fe
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@FieldMap parameter type must be Map."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_407
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@FieldMap parameters can only be used with form encoding."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_410
    instance-of v0, p4, Lf/c/q;

    if-eqz v0, :cond_59f

    iget-boolean v0, p0, Lf/o$a;->p:Z

    if-eqz v0, :cond_596

    check-cast p4, Lf/c/q;

    iput-boolean v1, p0, Lf/o$a;->h:Z

    invoke-interface {p4}, Lf/c/q;->a()Ljava/lang/String;

    move-result-object v0

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object v3

    invoke-virtual {v0}, Ljava/lang/String;->isEmpty()Z

    move-result v4

    if-eqz v4, :cond_4b6

    const-class p3, Ljava/lang/Iterable;

    invoke-virtual {p3, v3}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result p3

    if-eqz p3, :cond_480

    instance-of p3, p2, Ljava/lang/reflect/ParameterizedType;

    if-eqz p3, :cond_458

    check-cast p2, Ljava/lang/reflect/ParameterizedType;

    invoke-static {v2, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object p2

    const-class p3, Ld/w$b;

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object p2

    invoke-virtual {p3, p2}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result p2

    if-eqz p2, :cond_44f

    sget-object p1, Lf/j$l;->a:Lf/j$l;

    invoke-virtual {p1}, Lf/j$l;->a()Lf/j;

    move-result-object p1

    return-object p1

    :cond_44f
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Part annotation must supply a name or use MultipartBody.Part parameter type."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_458
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, " must include generic type (e.g., "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, "<String>)"

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array p3, v2, [Ljava/lang/Object;

    invoke-direct {p0, p1, p2, p3}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_480
    invoke-virtual {v3}, Ljava/lang/Class;->isArray()Z

    move-result p2

    if-eqz p2, :cond_4a2

    invoke-virtual {v3}, Ljava/lang/Class;->getComponentType()Ljava/lang/Class;

    move-result-object p2

    const-class p3, Ld/w$b;

    invoke-virtual {p3, p2}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result p2

    if-eqz p2, :cond_499

    sget-object p1, Lf/j$l;->a:Lf/j$l;

    invoke-virtual {p1}, Lf/j$l;->b()Lf/j;

    move-result-object p1

    return-object p1

    :cond_499
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Part annotation must supply a name or use MultipartBody.Part parameter type."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_4a2
    const-class p2, Ld/w$b;

    invoke-virtual {p2, v3}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result p2

    if-eqz p2, :cond_4ad

    sget-object p1, Lf/j$l;->a:Lf/j$l;

    return-object p1

    :cond_4ad
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Part annotation must supply a name or use MultipartBody.Part parameter type."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_4b6
    const/4 v4, 0x4

    new-array v4, v4, [Ljava/lang/String;

    const-string v5, "Content-Disposition"

    aput-object v5, v4, v2

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "form-data; name=\""

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\""

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    aput-object v0, v4, v1

    const/4 v0, 0x2

    const-string v1, "Content-Transfer-Encoding"

    aput-object v1, v4, v0

    const/4 v0, 0x3

    invoke-interface {p4}, Lf/c/q;->b()Ljava/lang/String;

    move-result-object p4

    aput-object p4, v4, v0

    invoke-static {v4}, Ld/s;->a([Ljava/lang/String;)Ld/s;

    move-result-object p4

    const-class v0, Ljava/lang/Iterable;

    invoke-virtual {v0, v3}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v0

    if-eqz v0, :cond_546

    instance-of v0, p2, Ljava/lang/reflect/ParameterizedType;

    if-eqz v0, :cond_51e

    check-cast p2, Ljava/lang/reflect/ParameterizedType;

    invoke-static {v2, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object p2

    const-class v0, Ld/w$b;

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v0

    if-nez v0, :cond_515

    iget-object p1, p0, Lf/o$a;->a:Lf/n;

    iget-object v0, p0, Lf/o$a;->c:[Ljava/lang/annotation/Annotation;

    invoke-virtual {p1, p2, p3, v0}, Lf/n;->a(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$f;

    invoke-direct {p2, p4, p1}, Lf/j$f;-><init>(Ld/s;Lf/e;)V

    invoke-virtual {p2}, Lf/j$f;->a()Lf/j;

    move-result-object p1

    return-object p1

    :cond_515
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Part parameters using the MultipartBody.Part must not include a part name in the annotation."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_51e
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, " must include generic type (e.g., "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, "<String>)"

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array p3, v2, [Ljava/lang/Object;

    invoke-direct {p0, p1, p2, p3}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_546
    invoke-virtual {v3}, Ljava/lang/Class;->isArray()Z

    move-result v0

    if-eqz v0, :cond_577

    invoke-virtual {v3}, Ljava/lang/Class;->getComponentType()Ljava/lang/Class;

    move-result-object p2

    invoke-static {p2}, Lf/o;->a(Ljava/lang/Class;)Ljava/lang/Class;

    move-result-object p2

    const-class v0, Ld/w$b;

    invoke-virtual {v0, p2}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v0

    if-nez v0, :cond_56e

    iget-object p1, p0, Lf/o$a;->a:Lf/n;

    iget-object v0, p0, Lf/o$a;->c:[Ljava/lang/annotation/Annotation;

    invoke-virtual {p1, p2, p3, v0}, Lf/n;->a(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$f;

    invoke-direct {p2, p4, p1}, Lf/j$f;-><init>(Ld/s;Lf/e;)V

    invoke-virtual {p2}, Lf/j$f;->b()Lf/j;

    move-result-object p1

    return-object p1

    :cond_56e
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Part parameters using the MultipartBody.Part must not include a part name in the annotation."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_577
    const-class v0, Ld/w$b;

    invoke-virtual {v0, v3}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v0

    if-nez v0, :cond_58d

    iget-object p1, p0, Lf/o$a;->a:Lf/n;

    iget-object v0, p0, Lf/o$a;->c:[Ljava/lang/annotation/Annotation;

    invoke-virtual {p1, p2, p3, v0}, Lf/n;->a(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    new-instance p2, Lf/j$f;

    invoke-direct {p2, p4, p1}, Lf/j$f;-><init>(Ld/s;Lf/e;)V

    return-object p2

    :cond_58d
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Part parameters using the MultipartBody.Part must not include a part name in the annotation."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_596
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Part parameters can only be used with multipart encoding."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_59f
    instance-of v0, p4, Lf/c/r;

    if-eqz v0, :cond_629

    iget-boolean v0, p0, Lf/o$a;->p:Z

    if-eqz v0, :cond_620

    iput-boolean v1, p0, Lf/o$a;->h:Z

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object v0

    const-class v3, Ljava/util/Map;

    invoke-virtual {v3, v0}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v3

    if-eqz v3, :cond_617

    const-class v3, Ljava/util/Map;

    invoke-static {p2, v0, v3}, Lf/p;->b(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;

    move-result-object p2

    instance-of v0, p2, Ljava/lang/reflect/ParameterizedType;

    if-eqz v0, :cond_60e

    check-cast p2, Ljava/lang/reflect/ParameterizedType;

    invoke-static {v2, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object v0

    const-class v3, Ljava/lang/String;

    if-ne v3, v0, :cond_5f6

    invoke-static {v1, p2}, Lf/p;->a(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;

    move-result-object p2

    const-class v0, Ld/w$b;

    invoke-static {p2}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v0

    if-nez v0, :cond_5ed

    iget-object p1, p0, Lf/o$a;->a:Lf/n;

    iget-object v0, p0, Lf/o$a;->c:[Ljava/lang/annotation/Annotation;

    invoke-virtual {p1, p2, p3, v0}, Lf/n;->a(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p1

    check-cast p4, Lf/c/r;

    new-instance p2, Lf/j$g;

    invoke-interface {p4}, Lf/c/r;->a()Ljava/lang/String;

    move-result-object p3

    invoke-direct {p2, p1, p3}, Lf/j$g;-><init>(Lf/e;Ljava/lang/String;)V

    return-object p2

    :cond_5ed
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@PartMap values cannot be MultipartBody.Part. Use @Part List<Part> or a different value type instead."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_5f6
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "@PartMap keys must be of type String: "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-array p3, v2, [Ljava/lang/Object;

    invoke-direct {p0, p1, p2, p3}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_60e
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "Map must include generic types (e.g., Map<String, String>)"

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_617
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@PartMap parameter type must be Map."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_620
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@PartMap parameters can only be used with multipart encoding."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_629
    instance-of p4, p4, Lf/c/a;

    if-eqz p4, :cond_667

    iget-boolean p4, p0, Lf/o$a;->o:Z

    if-nez p4, :cond_65e

    iget-boolean p4, p0, Lf/o$a;->p:Z

    if-nez p4, :cond_65e

    iget-boolean p4, p0, Lf/o$a;->i:Z

    if-nez p4, :cond_655

    :try_start_639
    iget-object p4, p0, Lf/o$a;->a:Lf/n;

    iget-object v0, p0, Lf/o$a;->c:[Ljava/lang/annotation/Annotation;

    invoke-virtual {p4, p2, p3, v0}, Lf/n;->a(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object p3
    :try_end_641
    .catch Ljava/lang/RuntimeException; {:try_start_639 .. :try_end_641} :catch_649

    iput-boolean v1, p0, Lf/o$a;->i:Z

    new-instance p1, Lf/j$a;

    invoke-direct {p1, p3}, Lf/j$a;-><init>(Lf/e;)V

    return-object p1

    :catch_649
    move-exception p3

    new-array p4, v1, [Ljava/lang/Object;

    aput-object p2, p4, v2

    const-string p2, "Unable to create @Body converter for %s"

    invoke-direct {p0, p3, p1, p2, p4}, Lf/o$a;->a(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_655
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "Multiple @Body method annotations found."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_65e
    new-array p2, v2, [Ljava/lang/Object;

    const-string p3, "@Body parameters cannot be used with form or multi-part encoding."

    invoke-direct {p0, p1, p3, p2}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_667
    const/4 p1, 0x0

    return-object p1
.end method

.method private varargs a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;
    .registers 5

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, " (parameter #"

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    add-int/lit8 p1, p1, 0x1

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ")"

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1, p3}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    return-object p1
.end method

.method private varargs a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;
    .registers 4

    const/4 v0, 0x0

    invoke-direct {p0, v0, p1, p2}, Lf/o$a;->a(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    return-object p1
.end method

.method private varargs a(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;
    .registers 6

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, " (parameter #"

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    add-int/lit8 p2, p2, 0x1

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ")"

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p0, p1, p2, p4}, Lf/o$a;->a(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    return-object p1
.end method

.method private varargs a(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;
    .registers 5

    invoke-static {p2, p3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    new-instance p3, Ljava/lang/IllegalArgumentException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "\n    for method "

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p2, p0, Lf/o$a;->b:Ljava/lang/reflect/Method;

    invoke-virtual {p2}, Ljava/lang/reflect/Method;->getDeclaringClass()Ljava/lang/Class;

    move-result-object p2

    invoke-virtual {p2}, Ljava/lang/Class;->getSimpleName()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "."

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p2, p0, Lf/o$a;->b:Ljava/lang/reflect/Method;

    invoke-virtual {p2}, Ljava/lang/reflect/Method;->getName()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p3, p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    return-object p3
.end method

.method private a(ILjava/lang/String;)V
    .registers 7

    sget-object v0, Lf/o;->b:Ljava/util/regex/Pattern;

    invoke-virtual {v0, p2}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v0

    invoke-virtual {v0}, Ljava/util/regex/Matcher;->matches()Z

    move-result v0

    const/4 v1, 0x1

    const/4 v2, 0x0

    const/4 v3, 0x2

    if-eqz v0, :cond_27

    iget-object v0, p0, Lf/o$a;->t:Ljava/util/Set;

    invoke-interface {v0, p2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_18

    return-void

    :cond_18
    new-array v0, v3, [Ljava/lang/Object;

    iget-object v3, p0, Lf/o$a;->q:Ljava/lang/String;

    aput-object v3, v0, v2

    aput-object p2, v0, v1

    const-string p2, "URL \"%s\" does not contain \"{%s}\"."

    invoke-direct {p0, p1, p2, v0}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_27
    new-array v0, v3, [Ljava/lang/Object;

    sget-object v3, Lf/o;->a:Ljava/util/regex/Pattern;

    invoke-virtual {v3}, Ljava/util/regex/Pattern;->pattern()Ljava/lang/String;

    move-result-object v3

    aput-object v3, v0, v2

    aput-object p2, v0, v1

    const-string p2, "@Path parameter name must match %s. Found: %s"

    invoke-direct {p0, p1, p2, v0}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1
.end method

.method private a(Ljava/lang/String;Ljava/lang/String;Z)V
    .registers 7

    iget-object v0, p0, Lf/o$a;->m:Ljava/lang/String;

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-nez v0, :cond_47

    iput-object p1, p0, Lf/o$a;->m:Ljava/lang/String;

    iput-boolean p3, p0, Lf/o$a;->n:Z

    invoke-virtual {p2}, Ljava/lang/String;->isEmpty()Z

    move-result p1

    if-eqz p1, :cond_11

    return-void

    :cond_11
    const/16 p1, 0x3f

    invoke-virtual {p2, p1}, Ljava/lang/String;->indexOf(I)I

    move-result p1

    const/4 p3, -0x1

    if-eq p1, p3, :cond_3e

    invoke-virtual {p2}, Ljava/lang/String;->length()I

    move-result p3

    sub-int/2addr p3, v2

    if-ge p1, p3, :cond_3e

    add-int/2addr p1, v2

    invoke-virtual {p2, p1}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object p1

    sget-object p3, Lf/o;->a:Ljava/util/regex/Pattern;

    invoke-virtual {p3, p1}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object p3

    invoke-virtual {p3}, Ljava/util/regex/Matcher;->find()Z

    move-result p3

    if-nez p3, :cond_33

    goto :goto_3e

    :cond_33
    new-array p2, v2, [Ljava/lang/Object;

    aput-object p1, p2, v1

    const-string p1, "URL query string \"%s\" must not have replace block. For dynamic query parameters use @Query."

    invoke-direct {p0, p1, p2}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_3e
    :goto_3e
    iput-object p2, p0, Lf/o$a;->q:Ljava/lang/String;

    invoke-static {p2}, Lf/o;->a(Ljava/lang/String;)Ljava/util/Set;

    move-result-object p1

    iput-object p1, p0, Lf/o$a;->t:Ljava/util/Set;

    return-void

    :cond_47
    const/4 p2, 0x2

    new-array p2, p2, [Ljava/lang/Object;

    iget-object p3, p0, Lf/o$a;->m:Ljava/lang/String;

    aput-object p3, p2, v1

    aput-object p1, p2, v2

    const-string p1, "Only one HTTP method is allowed. Found: %s and %s."

    invoke-direct {p0, p1, p2}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1
.end method

.method private a(Ljava/lang/annotation/Annotation;)V
    .registers 5

    instance-of v0, p1, Lf/c/b;

    const/4 v1, 0x0

    if-eqz v0, :cond_12

    const-string v0, "DELETE"

    check-cast p1, Lf/c/b;

    invoke-interface {p1}, Lf/c/b;->a()Ljava/lang/String;

    move-result-object p1

    :goto_d
    invoke-direct {p0, v0, p1, v1}, Lf/o$a;->a(Ljava/lang/String;Ljava/lang/String;Z)V

    goto/16 :goto_d7

    :cond_12
    instance-of v0, p1, Lf/c/f;

    if-eqz v0, :cond_1f

    const-string v0, "GET"

    check-cast p1, Lf/c/f;

    invoke-interface {p1}, Lf/c/f;->a()Ljava/lang/String;

    move-result-object p1

    goto :goto_d

    :cond_1f
    instance-of v0, p1, Lf/c/g;

    if-eqz v0, :cond_43

    const-string v0, "HEAD"

    check-cast p1, Lf/c/g;

    invoke-interface {p1}, Lf/c/g;->a()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, v0, p1, v1}, Lf/o$a;->a(Ljava/lang/String;Ljava/lang/String;Z)V

    const-class p1, Ljava/lang/Void;

    iget-object v0, p0, Lf/o$a;->f:Ljava/lang/reflect/Type;

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_3a

    goto/16 :goto_d7

    :cond_3a
    new-array p1, v1, [Ljava/lang/Object;

    const-string v0, "HEAD method must use Void as response type."

    invoke-direct {p0, v0, p1}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_43
    instance-of v0, p1, Lf/c/n;

    const/4 v2, 0x1

    if-eqz v0, :cond_55

    const-string v0, "PATCH"

    check-cast p1, Lf/c/n;

    invoke-interface {p1}, Lf/c/n;->a()Ljava/lang/String;

    move-result-object p1

    :goto_50
    invoke-direct {p0, v0, p1, v2}, Lf/o$a;->a(Ljava/lang/String;Ljava/lang/String;Z)V

    goto/16 :goto_d7

    :cond_55
    instance-of v0, p1, Lf/c/o;

    if-eqz v0, :cond_62

    const-string v0, "POST"

    check-cast p1, Lf/c/o;

    invoke-interface {p1}, Lf/c/o;->a()Ljava/lang/String;

    move-result-object p1

    goto :goto_50

    :cond_62
    instance-of v0, p1, Lf/c/p;

    if-eqz v0, :cond_6f

    const-string v0, "PUT"

    check-cast p1, Lf/c/p;

    invoke-interface {p1}, Lf/c/p;->a()Ljava/lang/String;

    move-result-object p1

    goto :goto_50

    :cond_6f
    instance-of v0, p1, Lf/c/m;

    if-eqz v0, :cond_7c

    const-string v0, "OPTIONS"

    check-cast p1, Lf/c/m;

    invoke-interface {p1}, Lf/c/m;->a()Ljava/lang/String;

    move-result-object p1

    goto :goto_d

    :cond_7c
    instance-of v0, p1, Lf/c/h;

    if-eqz v0, :cond_92

    check-cast p1, Lf/c/h;

    invoke-interface {p1}, Lf/c/h;->a()Ljava/lang/String;

    move-result-object v0

    invoke-interface {p1}, Lf/c/h;->b()Ljava/lang/String;

    move-result-object v1

    invoke-interface {p1}, Lf/c/h;->c()Z

    move-result p1

    invoke-direct {p0, v0, v1, p1}, Lf/o$a;->a(Ljava/lang/String;Ljava/lang/String;Z)V

    goto :goto_d7

    :cond_92
    instance-of v0, p1, Lf/c/k;

    if-eqz v0, :cond_af

    check-cast p1, Lf/c/k;

    invoke-interface {p1}, Lf/c/k;->a()[Ljava/lang/String;

    move-result-object p1

    array-length v0, p1

    if-eqz v0, :cond_a6

    invoke-direct {p0, p1}, Lf/o$a;->a([Ljava/lang/String;)Ld/s;

    move-result-object p1

    iput-object p1, p0, Lf/o$a;->r:Ld/s;

    goto :goto_d7

    :cond_a6
    new-array p1, v1, [Ljava/lang/Object;

    const-string v0, "@Headers annotation is empty."

    invoke-direct {p0, v0, p1}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_af
    instance-of v0, p1, Lf/c/l;

    if-eqz v0, :cond_c3

    iget-boolean p1, p0, Lf/o$a;->o:Z

    if-nez p1, :cond_ba

    iput-boolean v2, p0, Lf/o$a;->p:Z

    goto :goto_d7

    :cond_ba
    new-array p1, v1, [Ljava/lang/Object;

    const-string v0, "Only one encoding annotation is allowed."

    invoke-direct {p0, v0, p1}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_c3
    instance-of p1, p1, Lf/c/e;

    if-eqz p1, :cond_d7

    iget-boolean p1, p0, Lf/o$a;->p:Z

    if-nez p1, :cond_ce

    iput-boolean v2, p0, Lf/o$a;->o:Z

    goto :goto_d7

    :cond_ce
    new-array p1, v1, [Ljava/lang/Object;

    const-string v0, "Only one encoding annotation is allowed."

    invoke-direct {p0, v0, p1}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object p1

    throw p1

    :cond_d7
    :goto_d7
    return-void
.end method

.method private b()Lf/c;
    .registers 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Lf/c<",
            "TT;TR;>;"
        }
    .end annotation

    iget-object v0, p0, Lf/o$a;->b:Ljava/lang/reflect/Method;

    invoke-virtual {v0}, Ljava/lang/reflect/Method;->getGenericReturnType()Ljava/lang/reflect/Type;

    move-result-object v0

    invoke-static {v0}, Lf/p;->d(Ljava/lang/reflect/Type;)Z

    move-result v1

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-nez v1, :cond_34

    sget-object v1, Ljava/lang/Void;->TYPE:Ljava/lang/Class;

    if-eq v0, v1, :cond_2b

    iget-object v1, p0, Lf/o$a;->b:Ljava/lang/reflect/Method;

    invoke-virtual {v1}, Ljava/lang/reflect/Method;->getAnnotations()[Ljava/lang/annotation/Annotation;

    move-result-object v1

    :try_start_18
    iget-object v4, p0, Lf/o$a;->a:Lf/n;

    invoke-virtual {v4, v0, v1}, Lf/n;->a(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/c;

    move-result-object v1
    :try_end_1e
    .catch Ljava/lang/RuntimeException; {:try_start_18 .. :try_end_1e} :catch_1f

    return-object v1

    :catch_1f
    move-exception v1

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v0, v2, v3

    const-string v0, "Unable to create call adapter for %s"

    invoke-direct {p0, v1, v0, v2}, Lf/o$a;->a(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_2b
    new-array v0, v3, [Ljava/lang/Object;

    const-string v1, "Service methods cannot return void."

    invoke-direct {p0, v1, v0}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_34
    new-array v1, v2, [Ljava/lang/Object;

    aput-object v0, v1, v3

    const-string v0, "Method return type must not include a type variable or wildcard: %s"

    invoke-direct {p0, v0, v1}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0
.end method

.method private c()Lf/e;
    .registers 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Lf/e<",
            "Ld/ad;",
            "TT;>;"
        }
    .end annotation

    iget-object v0, p0, Lf/o$a;->b:Ljava/lang/reflect/Method;

    invoke-virtual {v0}, Ljava/lang/reflect/Method;->getAnnotations()[Ljava/lang/annotation/Annotation;

    move-result-object v0

    :try_start_6
    iget-object v1, p0, Lf/o$a;->a:Lf/n;

    iget-object v2, p0, Lf/o$a;->f:Ljava/lang/reflect/Type;

    invoke-virtual {v1, v2, v0}, Lf/n;->b(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/e;

    move-result-object v0
    :try_end_e
    .catch Ljava/lang/RuntimeException; {:try_start_6 .. :try_end_e} :catch_f

    return-object v0

    :catch_f
    move-exception v0

    const/4 v1, 0x1

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v2, 0x0

    iget-object v3, p0, Lf/o$a;->f:Ljava/lang/reflect/Type;

    aput-object v3, v1, v2

    const-string v2, "Unable to create converter for %s"

    invoke-direct {p0, v0, v2, v1}, Lf/o$a;->a(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0
.end method


# virtual methods
.method public a()Lf/o;
    .registers 7

    invoke-direct {p0}, Lf/o$a;->b()Lf/c;

    move-result-object v0

    iput-object v0, p0, Lf/o$a;->w:Lf/c;

    iget-object v0, p0, Lf/o$a;->w:Lf/c;

    invoke-interface {v0}, Lf/c;->a()Ljava/lang/reflect/Type;

    move-result-object v0

    iput-object v0, p0, Lf/o$a;->f:Ljava/lang/reflect/Type;

    iget-object v0, p0, Lf/o$a;->f:Ljava/lang/reflect/Type;

    const-class v1, Lf/m;

    const/4 v2, 0x0

    if-eq v0, v1, :cond_ef

    iget-object v0, p0, Lf/o$a;->f:Ljava/lang/reflect/Type;

    const-class v1, Ld/ac;

    if-eq v0, v1, :cond_ef

    invoke-direct {p0}, Lf/o$a;->c()Lf/e;

    move-result-object v0

    iput-object v0, p0, Lf/o$a;->v:Lf/e;

    iget-object v0, p0, Lf/o$a;->c:[Ljava/lang/annotation/Annotation;

    array-length v1, v0

    const/4 v3, 0x0

    :goto_25
    if-ge v3, v1, :cond_2f

    aget-object v4, v0, v3

    invoke-direct {p0, v4}, Lf/o$a;->a(Ljava/lang/annotation/Annotation;)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_25

    :cond_2f
    iget-object v0, p0, Lf/o$a;->m:Ljava/lang/String;

    if-eqz v0, :cond_e6

    iget-boolean v0, p0, Lf/o$a;->n:Z

    if-nez v0, :cond_52

    iget-boolean v0, p0, Lf/o$a;->p:Z

    if-nez v0, :cond_49

    iget-boolean v0, p0, Lf/o$a;->o:Z

    if-nez v0, :cond_40

    goto :goto_52

    :cond_40
    new-array v0, v2, [Ljava/lang/Object;

    const-string v1, "FormUrlEncoded can only be specified on HTTP methods with request body (e.g., @POST)."

    invoke-direct {p0, v1, v0}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_49
    new-array v0, v2, [Ljava/lang/Object;

    const-string v1, "Multipart can only be specified on HTTP methods with request body (e.g., @POST)."

    invoke-direct {p0, v1, v0}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_52
    :goto_52
    iget-object v0, p0, Lf/o$a;->d:[[Ljava/lang/annotation/Annotation;

    array-length v0, v0

    new-array v1, v0, [Lf/j;

    iput-object v1, p0, Lf/o$a;->u:[Lf/j;

    const/4 v1, 0x0

    :goto_5a
    const/4 v3, 0x1

    if-ge v1, v0, :cond_8c

    iget-object v4, p0, Lf/o$a;->e:[Ljava/lang/reflect/Type;

    aget-object v4, v4, v1

    invoke-static {v4}, Lf/p;->d(Ljava/lang/reflect/Type;)Z

    move-result v5

    if-nez v5, :cond_81

    iget-object v3, p0, Lf/o$a;->d:[[Ljava/lang/annotation/Annotation;

    aget-object v3, v3, v1

    if-eqz v3, :cond_78

    iget-object v5, p0, Lf/o$a;->u:[Lf/j;

    invoke-direct {p0, v1, v4, v3}, Lf/o$a;->a(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lf/j;

    move-result-object v3

    aput-object v3, v5, v1

    add-int/lit8 v1, v1, 0x1

    goto :goto_5a

    :cond_78
    new-array v0, v2, [Ljava/lang/Object;

    const-string v2, "No Retrofit annotation found."

    invoke-direct {p0, v1, v2, v0}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_81
    new-array v0, v3, [Ljava/lang/Object;

    aput-object v4, v0, v2

    const-string v2, "Parameter type must not include a type variable or wildcard: %s"

    invoke-direct {p0, v1, v2, v0}, Lf/o$a;->a(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_8c
    iget-object v0, p0, Lf/o$a;->q:Ljava/lang/String;

    if-nez v0, :cond_a2

    iget-boolean v0, p0, Lf/o$a;->l:Z

    if-eqz v0, :cond_95

    goto :goto_a2

    :cond_95
    new-array v0, v3, [Ljava/lang/Object;

    iget-object v1, p0, Lf/o$a;->m:Ljava/lang/String;

    aput-object v1, v0, v2

    const-string v1, "Missing either @%s URL or @Url parameter."

    invoke-direct {p0, v1, v0}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_a2
    :goto_a2
    iget-boolean v0, p0, Lf/o$a;->o:Z

    if-nez v0, :cond_bc

    iget-boolean v0, p0, Lf/o$a;->p:Z

    if-nez v0, :cond_bc

    iget-boolean v0, p0, Lf/o$a;->n:Z

    if-nez v0, :cond_bc

    iget-boolean v0, p0, Lf/o$a;->i:Z

    if-nez v0, :cond_b3

    goto :goto_bc

    :cond_b3
    new-array v0, v2, [Ljava/lang/Object;

    const-string v1, "Non-body HTTP method cannot contain @Body."

    invoke-direct {p0, v1, v0}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_bc
    :goto_bc
    iget-boolean v0, p0, Lf/o$a;->o:Z

    if-eqz v0, :cond_ce

    iget-boolean v0, p0, Lf/o$a;->g:Z

    if-eqz v0, :cond_c5

    goto :goto_ce

    :cond_c5
    new-array v0, v2, [Ljava/lang/Object;

    const-string v1, "Form-encoded method must contain at least one @Field."

    invoke-direct {p0, v1, v0}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_ce
    :goto_ce
    iget-boolean v0, p0, Lf/o$a;->p:Z

    if-eqz v0, :cond_e0

    iget-boolean v0, p0, Lf/o$a;->h:Z

    if-eqz v0, :cond_d7

    goto :goto_e0

    :cond_d7
    new-array v0, v2, [Ljava/lang/Object;

    const-string v1, "Multipart method must contain at least one @Part."

    invoke-direct {p0, v1, v0}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_e0
    :goto_e0
    new-instance v0, Lf/o;

    invoke-direct {v0, p0}, Lf/o;-><init>(Lf/o$a;)V

    return-object v0

    :cond_e6
    new-array v0, v2, [Ljava/lang/Object;

    const-string v1, "HTTP method annotation is required (e.g., @GET, @POST, etc.)."

    invoke-direct {p0, v1, v0}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_ef
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "\'"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Lf/o$a;->f:Ljava/lang/reflect/Type;

    invoke-static {v1}, Lf/p;->a(Ljava/lang/reflect/Type;)Ljava/lang/Class;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "\' is not a valid response body type. Did you mean ResponseBody?"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    new-array v1, v2, [Ljava/lang/Object;

    invoke-direct {p0, v0, v1}, Lf/o$a;->a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0
.end method
