.class public Lcom/itextpdf/xmp/impl/XMPUtilsImpl;
.super Ljava/lang/Object;

# interfaces
.implements Lcom/itextpdf/xmp/XMPConst;


# static fields
.field static final synthetic $assertionsDisabled:Z = false

.field private static final COMMAS:Ljava/lang/String; = ",\uff0c\uff64\ufe50\ufe51\u3001\u060c\u055d"

.field private static final CONTROLS:Ljava/lang/String; = "\u2028\u2029"

.field private static final QUOTES:Ljava/lang/String; = "\"\u00ab\u00bb\u301d\u301e\u301f\u2015\u2039\u203a"

.field private static final SEMICOLA:Ljava/lang/String; = ";\uff1b\ufe54\u061b\u037e"

.field private static final SPACES:Ljava/lang/String; = " \u3000\u303f"

.field private static final UCK_COMMA:I = 0x2

.field private static final UCK_CONTROL:I = 0x5

.field private static final UCK_NORMAL:I = 0x0

.field private static final UCK_QUOTE:I = 0x4

.field private static final UCK_SEMICOLON:I = 0x3

.field private static final UCK_SPACE:I = 0x1


# direct methods
.method static constructor <clinit>()V
    .registers 0

    return-void
.end method

.method private constructor <init>()V
    .registers 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static appendProperties(Lcom/itextpdf/xmp/XMPMeta;Lcom/itextpdf/xmp/XMPMeta;ZZZ)V
    .registers 12

    invoke-static {p0}, Lcom/itextpdf/xmp/impl/ParameterAsserts;->assertImplementation(Lcom/itextpdf/xmp/XMPMeta;)V

    invoke-static {p1}, Lcom/itextpdf/xmp/impl/ParameterAsserts;->assertImplementation(Lcom/itextpdf/xmp/XMPMeta;)V

    check-cast p0, Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    check-cast p1, Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p0

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p0

    :cond_12
    :goto_12
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_83

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x0

    invoke-static {v1, v2, v3}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findSchemaNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    const/4 v2, 0x1

    if-nez v1, :cond_4c

    new-instance v1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v4

    new-instance v5, Lcom/itextpdf/xmp/options/PropertyOptions;

    invoke-direct {v5}, Lcom/itextpdf/xmp/options/PropertyOptions;-><init>()V

    invoke-virtual {v5, v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->setSchemaNode(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v5

    invoke-direct {v1, v3, v4, v5}, Lcom/itextpdf/xmp/impl/XMPNode;-><init>(Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v3

    invoke-virtual {v3, v1}, Lcom/itextpdf/xmp/impl/XMPNode;->addChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto :goto_4d

    :cond_4c
    const/4 v2, 0x0

    :goto_4d
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v3

    :cond_51
    :goto_51
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_71

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/xmp/impl/XMPNode;

    if-nez p2, :cond_6d

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Lcom/itextpdf/xmp/impl/Utils;->isInternalProperty(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_51

    :cond_6d
    invoke-static {p1, v4, v1, p3, p4}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->appendSubtree(Lcom/itextpdf/xmp/impl/XMPMetaImpl;Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;ZZ)V

    goto :goto_51

    :cond_71
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result v0

    if-nez v0, :cond_12

    if-nez v2, :cond_7b

    if-eqz p4, :cond_12

    :cond_7b
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto :goto_12

    :cond_83
    return-void
.end method

.method private static appendSubtree(Lcom/itextpdf/xmp/impl/XMPMetaImpl;Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;ZZ)V
    .registers 10

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x0

    invoke-static {p2, v0, v1}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findChildNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    const/4 v2, 0x1

    if-eqz p4, :cond_2f

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/xmp/options/PropertyOptions;->isSimple()Z

    move-result v3

    if-eqz v3, :cond_28

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_26

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/String;->length()I

    move-result v3

    if-nez v3, :cond_2f

    :cond_26
    :goto_26
    const/4 v3, 0x1

    goto :goto_30

    :cond_28
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result v3

    if-nez v3, :cond_2f

    goto :goto_26

    :cond_2f
    const/4 v3, 0x0

    :goto_30
    if-eqz p4, :cond_3b

    if-eqz v3, :cond_3b

    if-eqz v0, :cond_157

    invoke-virtual {p2, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto/16 :goto_157

    :cond_3b
    if-nez v0, :cond_48

    :goto_3d
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->clone()Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {p2, p0}, Lcom/itextpdf/xmp/impl/XMPNode;->addChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto/16 :goto_157

    :cond_48
    if-eqz p3, :cond_59

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p4

    invoke-virtual {p0, v0, p3, p4, v2}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->setNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/Object;Lcom/itextpdf/xmp/options/PropertyOptions;Z)V

    invoke-virtual {p2, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto :goto_3d

    :cond_59
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v3

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v4

    if-eq v3, v4, :cond_64

    return-void

    :cond_64
    invoke-virtual {v3}, Lcom/itextpdf/xmp/options/PropertyOptions;->isStruct()Z

    move-result v4

    if-eqz v4, :cond_89

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p1

    :cond_6e
    :goto_6e
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_157

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-static {p0, v1, v0, p3, p4}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->appendSubtree(Lcom/itextpdf/xmp/impl/XMPMetaImpl;Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;ZZ)V

    if-eqz p4, :cond_6e

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result v1

    if-nez v1, :cond_6e

    invoke-virtual {p2, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto :goto_6e

    :cond_89
    invoke-virtual {v3}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArrayAltText()Z

    move-result p0

    if-eqz p0, :cond_11b

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p0

    :cond_93
    :goto_93
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result p1

    if-eqz p1, :cond_157

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->hasQualifier()Z

    move-result p3

    if-eqz p3, :cond_93

    const-string p3, "xml:lang"

    invoke-virtual {p1, v2}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier(I)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p3

    if-nez p3, :cond_b6

    goto :goto_93

    :cond_b6
    invoke-virtual {p1, v2}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier(I)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p3

    invoke-static {v0, p3}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->lookupLanguageItem(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;)I

    move-result p3

    const/4 v1, -0x1

    if-eqz p4, :cond_e4

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_d5

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/String;->length()I

    move-result v3

    if-nez v3, :cond_e4

    :cond_d5
    if-eq p3, v1, :cond_93

    invoke-virtual {v0, p3}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChild(I)V

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result p1

    if-nez p1, :cond_93

    invoke-virtual {p2, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto :goto_93

    :cond_e4
    if-ne p3, v1, :cond_93

    const-string p3, "x-default"

    invoke-virtual {p1, v2}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier(I)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p3

    if-eqz p3, :cond_116

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result p3

    if-nez p3, :cond_fd

    goto :goto_116

    :cond_fd
    new-instance p3, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v4

    invoke-direct {p3, v1, v3, v4}, Lcom/itextpdf/xmp/impl/XMPNode;-><init>(Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    invoke-virtual {p1, p3}, Lcom/itextpdf/xmp/impl/XMPNode;->cloneSubtree(Lcom/itextpdf/xmp/impl/XMPNode;)V

    invoke-virtual {v0, v2, p3}, Lcom/itextpdf/xmp/impl/XMPNode;->addChild(ILcom/itextpdf/xmp/impl/XMPNode;)V

    goto/16 :goto_93

    :cond_116
    :goto_116
    invoke-virtual {p1, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->cloneSubtree(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto/16 :goto_93

    :cond_11b
    invoke-virtual {v3}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArray()Z

    move-result p0

    if-eqz p0, :cond_157

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p0

    :cond_125
    :goto_125
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result p1

    if-eqz p1, :cond_157

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p3

    const/4 p4, 0x0

    :cond_136
    :goto_136
    invoke-interface {p3}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_14a

    invoke-interface {p3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-static {p1, v3}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->itemValuesMatch(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;)Z

    move-result v3

    if-eqz v3, :cond_136

    const/4 p4, 0x1

    goto :goto_136

    :cond_14a
    if-nez p4, :cond_125

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->clone()Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {p2, p1}, Lcom/itextpdf/xmp/impl/XMPNode;->addChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    move-object v0, p1

    goto :goto_125

    :cond_157
    :goto_157
    return-void
.end method

.method private static applyQuotes(Ljava/lang/String;CCZ)Ljava/lang/String;
    .registers 11

    if-nez p0, :cond_4

    const-string p0, ""

    :cond_4
    const/4 v0, 0x0

    const/4 v1, 0x0

    const/4 v2, 0x0

    :goto_7
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v3

    const/4 v4, 0x2

    const/4 v5, 0x4

    if-ge v1, v3, :cond_33

    invoke-virtual {p0, v1}, Ljava/lang/String;->charAt(I)C

    move-result v3

    invoke-static {v3}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->classifyCharacter(C)I

    move-result v3

    if-nez v1, :cond_1c

    if-ne v3, v5, :cond_1c

    goto :goto_33

    :cond_1c
    const/4 v6, 0x1

    if-ne v3, v6, :cond_24

    if-eqz v2, :cond_22

    goto :goto_33

    :cond_22
    const/4 v2, 0x1

    goto :goto_30

    :cond_24
    const/4 v2, 0x3

    if-eq v3, v2, :cond_33

    const/4 v2, 0x5

    if-eq v3, v2, :cond_33

    if-ne v3, v4, :cond_2f

    if-nez p3, :cond_2f

    goto :goto_33

    :cond_2f
    const/4 v2, 0x0

    :goto_30
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    :cond_33
    :goto_33
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result p3

    if-ge v1, p3, :cond_90

    new-instance p3, Ljava/lang/StringBuffer;

    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v2

    add-int/2addr v2, v4

    invoke-direct {p3, v2}, Ljava/lang/StringBuffer;-><init>(I)V

    const/4 v2, 0x0

    :goto_44
    if-gt v2, v1, :cond_54

    invoke-virtual {p0, v1}, Ljava/lang/String;->charAt(I)C

    move-result v3

    invoke-static {v3}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->classifyCharacter(C)I

    move-result v3

    if-ne v3, v5, :cond_51

    goto :goto_54

    :cond_51
    add-int/lit8 v2, v2, 0x1

    goto :goto_44

    :cond_54
    :goto_54
    invoke-virtual {p3, p1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    invoke-virtual {p0, v0, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p3, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    :goto_5e
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v0

    if-ge v2, v0, :cond_89

    invoke-virtual {p0, v2}, Ljava/lang/String;->charAt(I)C

    move-result v0

    invoke-virtual {p3, v0}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    invoke-virtual {p0, v2}, Ljava/lang/String;->charAt(I)C

    move-result v0

    invoke-static {v0}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->classifyCharacter(C)I

    move-result v0

    if-ne v0, v5, :cond_86

    invoke-virtual {p0, v2}, Ljava/lang/String;->charAt(I)C

    move-result v0

    invoke-static {v0, p1, p2}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->isSurroundingQuote(CCC)Z

    move-result v0

    if-eqz v0, :cond_86

    invoke-virtual {p0, v2}, Ljava/lang/String;->charAt(I)C

    move-result v0

    invoke-virtual {p3, v0}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    :cond_86
    add-int/lit8 v2, v2, 0x1

    goto :goto_5e

    :cond_89
    invoke-virtual {p3, p2}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    invoke-virtual {p3}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p0

    :cond_90
    return-object p0
.end method

.method public static catenateArrayItems(Lcom/itextpdf/xmp/XMPMeta;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
    .registers 9

    invoke-static {p1}, Lcom/itextpdf/xmp/impl/ParameterAsserts;->assertSchemaNS(Ljava/lang/String;)V

    invoke-static {p2}, Lcom/itextpdf/xmp/impl/ParameterAsserts;->assertArrayName(Ljava/lang/String;)V

    invoke-static {p0}, Lcom/itextpdf/xmp/impl/ParameterAsserts;->assertImplementation(Lcom/itextpdf/xmp/XMPMeta;)V

    if-eqz p3, :cond_11

    invoke-virtual {p3}, Ljava/lang/String;->length()I

    move-result v0

    if-nez v0, :cond_13

    :cond_11
    const-string p3, "; "

    :cond_13
    if-eqz p4, :cond_1b

    invoke-virtual {p4}, Ljava/lang/String;->length()I

    move-result v0

    if-nez v0, :cond_1d

    :cond_1b
    const-string p4, "\""

    :cond_1d
    check-cast p0, Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    invoke-static {p1, p2}, Lcom/itextpdf/xmp/impl/xpath/XMPPathParser;->expandXPath(Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/xmp/impl/xpath/XMPPath;

    move-result-object p1

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p0

    const/4 p2, 0x0

    const/4 v0, 0x0

    invoke-static {p0, p1, v0, p2}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findNode(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/xpath/XMPPath;ZLcom/itextpdf/xmp/options/PropertyOptions;)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p0

    if-nez p0, :cond_32

    const-string p0, ""

    return-object p0

    :cond_32
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArray()Z

    move-result p1

    const/4 p2, 0x4

    if-eqz p1, :cond_93

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArrayAlternate()Z

    move-result p1

    if-nez p1, :cond_93

    invoke-static {p3}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->checkSeparator(Ljava/lang/String;)V

    invoke-virtual {p4, v0}, Ljava/lang/String;->charAt(I)C

    move-result p1

    invoke-static {p4, p1}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->checkQuotes(Ljava/lang/String;C)C

    move-result p4

    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p0

    :cond_5b
    :goto_5b
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_8e

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->isCompositeProperty()Z

    move-result v2

    if-nez v2, :cond_86

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1, p1, p4, p5}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->applyQuotes(Ljava/lang/String;CCZ)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_5b

    invoke-virtual {v0, p3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    goto :goto_5b

    :cond_86
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Array items must be simple"

    invoke-direct {p0, p1, p2}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_8e
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p0

    return-object p0

    :cond_93
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Named property must be non-alternate array"

    invoke-direct {p0, p1, p2}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0
.end method

.method private static checkQuotes(Ljava/lang/String;C)C
    .registers 5

    invoke-static {p1}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->classifyCharacter(C)I

    move-result v0

    const/4 v1, 0x4

    if-ne v0, v1, :cond_31

    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v0

    const/4 v2, 0x1

    if-ne v0, v2, :cond_10

    move p0, p1

    goto :goto_1a

    :cond_10
    invoke-virtual {p0, v2}, Ljava/lang/String;->charAt(I)C

    move-result p0

    invoke-static {p0}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->classifyCharacter(C)I

    move-result v0

    if-ne v0, v1, :cond_29

    :goto_1a
    invoke-static {p1}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->getClosingQuote(C)C

    move-result p1

    if-ne p0, p1, :cond_21

    return p0

    :cond_21
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Mismatched quote pair"

    invoke-direct {p0, p1, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_29
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Invalid quoting character"

    invoke-direct {p0, p1, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_31
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Invalid quoting character"

    invoke-direct {p0, p1, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0
.end method

.method private static checkSeparator(Ljava/lang/String;)V
    .registers 7

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_2
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v2

    const/4 v3, 0x4

    if-ge v0, v2, :cond_2e

    invoke-virtual {p0, v0}, Ljava/lang/String;->charAt(I)C

    move-result v2

    invoke-static {v2}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->classifyCharacter(C)I

    move-result v2

    const/4 v4, 0x3

    const/4 v5, 0x1

    if-ne v2, v4, :cond_21

    if-nez v1, :cond_19

    const/4 v1, 0x1

    goto :goto_23

    :cond_19
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string v0, "Separator can have only one semicolon"

    invoke-direct {p0, v0, v3}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_21
    if-ne v2, v5, :cond_26

    :goto_23
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    :cond_26
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string v0, "Separator can have only spaces and one semicolon"

    invoke-direct {p0, v0, v3}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_2e
    if-eqz v1, :cond_31

    return-void

    :cond_31
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string v0, "Separator must have one semicolon"

    invoke-direct {p0, v0, v3}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0
.end method

.method private static classifyCharacter(C)I
    .registers 2

    const-string v0, " \u3000\u303f"

    invoke-virtual {v0, p0}, Ljava/lang/String;->indexOf(I)I

    move-result v0

    if-gez v0, :cond_51

    const/16 v0, 0x2000

    if-gt v0, p0, :cond_11

    const/16 v0, 0x200b

    if-gt p0, v0, :cond_11

    goto :goto_51

    :cond_11
    const-string v0, ",\uff0c\uff64\ufe50\ufe51\u3001\u060c\u055d"

    invoke-virtual {v0, p0}, Ljava/lang/String;->indexOf(I)I

    move-result v0

    if-ltz v0, :cond_1b

    const/4 p0, 0x2

    return p0

    :cond_1b
    const-string v0, ";\uff1b\ufe54\u061b\u037e"

    invoke-virtual {v0, p0}, Ljava/lang/String;->indexOf(I)I

    move-result v0

    if-ltz v0, :cond_25

    const/4 p0, 0x3

    return p0

    :cond_25
    const-string v0, "\"\u00ab\u00bb\u301d\u301e\u301f\u2015\u2039\u203a"

    invoke-virtual {v0, p0}, Ljava/lang/String;->indexOf(I)I

    move-result v0

    if-gez v0, :cond_4f

    const/16 v0, 0x3008

    if-gt v0, p0, :cond_35

    const/16 v0, 0x300f

    if-le p0, v0, :cond_4f

    :cond_35
    const/16 v0, 0x2018

    if-gt v0, p0, :cond_3e

    const/16 v0, 0x201f

    if-gt p0, v0, :cond_3e

    goto :goto_4f

    :cond_3e
    const/16 v0, 0x20

    if-lt p0, v0, :cond_4d

    const-string v0, "\u2028\u2029"

    invoke-virtual {v0, p0}, Ljava/lang/String;->indexOf(I)I

    move-result p0

    if-ltz p0, :cond_4b

    goto :goto_4d

    :cond_4b
    const/4 p0, 0x0

    return p0

    :cond_4d
    :goto_4d
    const/4 p0, 0x5

    return p0

    :cond_4f
    :goto_4f
    const/4 p0, 0x4

    return p0

    :cond_51
    :goto_51
    const/4 p0, 0x1

    return p0
.end method

.method private static getClosingQuote(C)C
    .registers 1

    sparse-switch p0, :sswitch_data_32

    const/4 p0, 0x0

    return p0

    :sswitch_5
    const/16 p0, 0x301f

    return p0

    :sswitch_8
    const/16 p0, 0x300f

    return p0

    :sswitch_b
    const/16 p0, 0x300d

    return p0

    :sswitch_e
    const/16 p0, 0x300b

    return p0

    :sswitch_11
    const/16 p0, 0x3009

    return p0

    :sswitch_14
    const/16 p0, 0x2039

    return p0

    :sswitch_17
    const/16 p0, 0x203a

    return p0

    :sswitch_1a
    const/16 p0, 0x201f

    return p0

    :sswitch_1d
    const/16 p0, 0x201d

    return p0

    :sswitch_20
    const/16 p0, 0x201b

    return p0

    :sswitch_23
    const/16 p0, 0x2019

    return p0

    :sswitch_26
    const/16 p0, 0x2015

    return p0

    :sswitch_29
    const/16 p0, 0xab

    return p0

    :sswitch_2c
    const/16 p0, 0xbb

    return p0

    :sswitch_2f
    const/16 p0, 0x22

    return p0

    :sswitch_data_32
    .sparse-switch
        0x22 -> :sswitch_2f
        0xab -> :sswitch_2c
        0xbb -> :sswitch_29
        0x2015 -> :sswitch_26
        0x2018 -> :sswitch_23
        0x201a -> :sswitch_20
        0x201c -> :sswitch_1d
        0x201e -> :sswitch_1a
        0x2039 -> :sswitch_17
        0x203a -> :sswitch_14
        0x3008 -> :sswitch_11
        0x300a -> :sswitch_e
        0x300c -> :sswitch_b
        0x300e -> :sswitch_8
        0x301d -> :sswitch_5
    .end sparse-switch
.end method

.method private static isClosingingQuote(CCC)Z
    .registers 3

    if-eq p0, p2, :cond_11

    const/16 p2, 0x301d

    if-ne p1, p2, :cond_a

    const/16 p1, 0x301e

    if-eq p0, p1, :cond_11

    :cond_a
    const/16 p1, 0x301f

    if-ne p0, p1, :cond_f

    goto :goto_11

    :cond_f
    const/4 p0, 0x0

    goto :goto_12

    :cond_11
    :goto_11
    const/4 p0, 0x1

    :goto_12
    return p0
.end method

.method private static isSurroundingQuote(CCC)Z
    .registers 3

    if-eq p0, p1, :cond_b

    invoke-static {p0, p1, p2}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->isClosingingQuote(CCC)Z

    move-result p0

    if-eqz p0, :cond_9

    goto :goto_b

    :cond_9
    const/4 p0, 0x0

    goto :goto_c

    :cond_b
    :goto_b
    const/4 p0, 0x1

    :goto_c
    return p0
.end method

.method private static itemValuesMatch(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;)Z
    .registers 7

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->equals(Ljava/lang/Object;)Z

    move-result v1

    const/4 v2, 0x0

    if-eqz v1, :cond_10

    return v2

    :cond_10
    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->getOptions()I

    move-result v1

    const/4 v3, 0x1

    if-nez v1, :cond_5a

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_26

    return v2

    :cond_26
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->getHasLanguage()Z

    move-result v0

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->getHasLanguage()Z

    move-result v1

    if-eq v0, v1, :cond_39

    return v2

    :cond_39
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->getHasLanguage()Z

    move-result v0

    if-eqz v0, :cond_b8

    invoke-virtual {p0, v3}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier(I)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p0

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, v3}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier(I)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b8

    return v2

    :cond_5a
    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isStruct()Z

    move-result v0

    if-eqz v0, :cond_8c

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildrenLength()I

    move-result v0

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildrenLength()I

    move-result v1

    if-eq v0, v1, :cond_6b

    return v2

    :cond_6b
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p0

    :cond_6f
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_b8

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v1

    invoke-static {p1, v1, v2}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findChildNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    if-eqz v1, :cond_8b

    invoke-static {v0, v1}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->itemValuesMatch(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;)Z

    move-result v0

    if-nez v0, :cond_6f

    :cond_8b
    return v2

    :cond_8c
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p0

    :cond_90
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_b8

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v1

    :cond_a0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_b4

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-static {v0, v4}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->itemValuesMatch(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;)Z

    move-result v4

    if-eqz v4, :cond_a0

    const/4 v0, 0x1

    goto :goto_b5

    :cond_b4
    const/4 v0, 0x0

    :goto_b5
    if-nez v0, :cond_90

    return v2

    :cond_b8
    return v3
.end method

.method public static removeProperties(Lcom/itextpdf/xmp/XMPMeta;Ljava/lang/String;Ljava/lang/String;ZZ)V
    .registers 8

    invoke-static {p0}, Lcom/itextpdf/xmp/impl/ParameterAsserts;->assertImplementation(Lcom/itextpdf/xmp/XMPMeta;)V

    check-cast p0, Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    const/4 v0, 0x0

    const/4 v1, 0x0

    if-eqz p2, :cond_67

    invoke-virtual {p2}, Ljava/lang/String;->length()I

    move-result v2

    if-lez v2, :cond_67

    if-eqz p1, :cond_5e

    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result p4

    if-eqz p4, :cond_5e

    invoke-static {p1, p2}, Lcom/itextpdf/xmp/impl/xpath/XMPPathParser;->expandXPath(Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/xmp/impl/xpath/XMPPath;

    move-result-object p1

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p0

    invoke-static {p0, p1, v1, v0}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findNode(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/xpath/XMPPath;ZLcom/itextpdf/xmp/options/PropertyOptions;)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p0

    if-eqz p0, :cond_d4

    if-nez p3, :cond_3e

    invoke-virtual {p1, v1}, Lcom/itextpdf/xmp/impl/xpath/XMPPath;->getSegment(I)Lcom/itextpdf/xmp/impl/xpath/XMPPathSegment;

    move-result-object p2

    invoke-virtual {p2}, Lcom/itextpdf/xmp/impl/xpath/XMPPathSegment;->getName()Ljava/lang/String;

    move-result-object p2

    const/4 p3, 0x1

    invoke-virtual {p1, p3}, Lcom/itextpdf/xmp/impl/xpath/XMPPath;->getSegment(I)Lcom/itextpdf/xmp/impl/xpath/XMPPathSegment;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/xpath/XMPPathSegment;->getName()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Lcom/itextpdf/xmp/impl/Utils;->isInternalProperty(Ljava/lang/String;Ljava/lang/String;)Z

    move-result p1

    if-nez p1, :cond_d4

    :cond_3e
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getParent()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p1

    invoke-virtual {p1, p0}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p0

    invoke-virtual {p0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isSchemaNode()Z

    move-result p0

    if-eqz p0, :cond_d4

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result p0

    if-nez p0, :cond_d4

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getParent()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p0

    invoke-virtual {p0, p1}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto/16 :goto_d4

    :cond_5e
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const/4 p1, 0x4

    const-string p2, "Property name requires schema namespace"

    invoke-direct {p0, p2, p1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_67
    if-eqz p1, :cond_b6

    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result p2

    if-lez p2, :cond_b6

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p2

    invoke-static {p2, p1, v1}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findSchemaNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p2

    if-eqz p2, :cond_86

    invoke-static {p2, p3}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->removeSchemaChildren(Lcom/itextpdf/xmp/impl/XMPNode;Z)Z

    move-result p3

    if-eqz p3, :cond_86

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p3

    invoke-virtual {p3, p2}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    :cond_86
    if-eqz p4, :cond_d4

    invoke-static {}, Lcom/itextpdf/xmp/XMPMetaFactory;->getSchemaRegistry()Lcom/itextpdf/xmp/XMPSchemaRegistry;

    move-result-object p2

    invoke-interface {p2, p1}, Lcom/itextpdf/xmp/XMPSchemaRegistry;->findAliases(Ljava/lang/String;)[Lcom/itextpdf/xmp/properties/XMPAliasInfo;

    move-result-object p1

    const/4 p2, 0x0

    :goto_91
    array-length p3, p1

    if-ge p2, p3, :cond_d4

    aget-object p3, p1, p2

    invoke-interface {p3}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getNamespace()Ljava/lang/String;

    move-result-object p4

    invoke-interface {p3}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getPropName()Ljava/lang/String;

    move-result-object p3

    invoke-static {p4, p3}, Lcom/itextpdf/xmp/impl/xpath/XMPPathParser;->expandXPath(Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/xmp/impl/xpath/XMPPath;

    move-result-object p3

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p4

    invoke-static {p4, p3, v1, v0}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findNode(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/xpath/XMPPath;ZLcom/itextpdf/xmp/options/PropertyOptions;)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p3

    if-eqz p3, :cond_b3

    invoke-virtual {p3}, Lcom/itextpdf/xmp/impl/XMPNode;->getParent()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p4

    invoke-virtual {p4, p3}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    :cond_b3
    add-int/lit8 p2, p2, 0x1

    goto :goto_91

    :cond_b6
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p0

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p0

    :cond_be
    :goto_be
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result p1

    if-eqz p1, :cond_d4

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-static {p1, p3}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->removeSchemaChildren(Lcom/itextpdf/xmp/impl/XMPNode;Z)Z

    move-result p1

    if-eqz p1, :cond_be

    invoke-interface {p0}, Ljava/util/Iterator;->remove()V

    goto :goto_be

    :cond_d4
    :goto_d4
    return-void
.end method

.method private static removeSchemaChildren(Lcom/itextpdf/xmp/impl/XMPNode;Z)Z
    .registers 5

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v0

    :cond_4
    :goto_4
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_24

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    if-nez p1, :cond_20

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v1

    invoke-static {v2, v1}, Lcom/itextpdf/xmp/impl/Utils;->isInternalProperty(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_4

    :cond_20
    invoke-interface {v0}, Ljava/util/Iterator;->remove()V

    goto :goto_4

    :cond_24
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result p0

    xor-int/lit8 p0, p0, 0x1

    return p0
.end method

.method public static separateArrayItems(Lcom/itextpdf/xmp/XMPMeta;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;Z)V
    .registers 14

    invoke-static {p1}, Lcom/itextpdf/xmp/impl/ParameterAsserts;->assertSchemaNS(Ljava/lang/String;)V

    invoke-static {p2}, Lcom/itextpdf/xmp/impl/ParameterAsserts;->assertArrayName(Ljava/lang/String;)V

    const/4 v0, 0x4

    if-eqz p3, :cond_f8

    invoke-static {p0}, Lcom/itextpdf/xmp/impl/ParameterAsserts;->assertImplementation(Lcom/itextpdf/xmp/XMPMeta;)V

    check-cast p0, Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    invoke-static {p1, p2, p4, p0}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->separateFindCreateArray(Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;Lcom/itextpdf/xmp/impl/XMPMetaImpl;)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p0

    invoke-virtual {p3}, Ljava/lang/String;->length()I

    move-result p1

    const/4 p2, 0x0

    const/4 p4, 0x0

    const/4 v1, 0x0

    :cond_19
    :goto_19
    if-ge p2, p1, :cond_f7

    :goto_1b
    if-ge p2, p1, :cond_2d

    invoke-virtual {p3, p2}, Ljava/lang/String;->charAt(I)C

    move-result v1

    invoke-static {v1}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->classifyCharacter(C)I

    move-result p4

    if-eqz p4, :cond_2d

    if-ne p4, v0, :cond_2a

    goto :goto_2d

    :cond_2a
    add-int/lit8 p2, p2, 0x1

    goto :goto_1b

    :cond_2d
    :goto_2d
    if-lt p2, p1, :cond_31

    goto/16 :goto_f7

    :cond_31
    const/4 v2, 0x1

    if-eq p4, v0, :cond_6f

    move v3, v1

    move v1, p4

    move p4, p2

    :goto_37
    if-ge p4, p1, :cond_65

    invoke-virtual {p3, p4}, Ljava/lang/String;->charAt(I)C

    move-result v3

    invoke-static {v3}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->classifyCharacter(C)I

    move-result v1

    if-eqz v1, :cond_62

    if-eq v1, v0, :cond_62

    const/4 v4, 0x2

    if-ne v1, v4, :cond_4b

    if-eqz p5, :cond_4b

    goto :goto_62

    :cond_4b
    if-eq v1, v2, :cond_4e

    goto :goto_65

    :cond_4e
    add-int/lit8 v5, p4, 0x1

    if-ge v5, p1, :cond_65

    invoke-virtual {p3, v5}, Ljava/lang/String;->charAt(I)C

    move-result v3

    invoke-static {v3}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->classifyCharacter(C)I

    move-result v5

    if-eqz v5, :cond_62

    if-eq v5, v0, :cond_62

    if-ne v5, v4, :cond_65

    if-eqz p5, :cond_65

    :cond_62
    :goto_62
    add-int/lit8 p4, p4, 0x1

    goto :goto_37

    :cond_65
    :goto_65
    invoke-virtual {p3, p2, p4}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object p2

    move-object v4, p2

    move p2, p4

    move p4, v1

    move v1, v3

    goto/16 :goto_ce

    :cond_6f
    invoke-static {v1}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->getClosingQuote(C)C

    move-result v3

    add-int/lit8 p2, p2, 0x1

    const-string v4, ""

    move v5, v1

    :goto_78
    if-ge p2, p1, :cond_cd

    invoke-virtual {p3, p2}, Ljava/lang/String;->charAt(I)C

    move-result v5

    invoke-static {v5}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->classifyCharacter(C)I

    move-result p4

    if-ne p4, v0, :cond_bc

    invoke-static {v5, v1, v3}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->isSurroundingQuote(CCC)Z

    move-result v6

    if-nez v6, :cond_8b

    goto :goto_bc

    :cond_8b
    add-int/lit8 v6, p2, 0x1

    if-ge v6, p1, :cond_97

    invoke-virtual {p3, v6}, Ljava/lang/String;->charAt(I)C

    move-result v7

    invoke-static {v7}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->classifyCharacter(C)I

    goto :goto_99

    :cond_97
    const/16 v7, 0x3b

    :goto_99
    if-ne v5, v7, :cond_ad

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    move-object v4, p2

    move p2, v6

    goto :goto_cb

    :cond_ad
    invoke-static {v5, v1, v3}, Lcom/itextpdf/xmp/impl/XMPUtilsImpl;->isClosingingQuote(CCC)Z

    move-result v7

    if-nez v7, :cond_b9

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    goto :goto_c1

    :cond_b9
    move v1, v5

    move p2, v6

    goto :goto_ce

    :cond_bc
    :goto_bc
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    :goto_c1
    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    :goto_cb
    add-int/2addr p2, v2

    goto :goto_78

    :cond_cd
    move v1, v5

    :goto_ce
    const/4 v3, -0x1

    :goto_cf
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildrenLength()I

    move-result v5

    if-gt v2, v5, :cond_e7

    invoke-virtual {p0, v2}, Lcom/itextpdf/xmp/impl/XMPNode;->getChild(I)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_e4

    goto :goto_e8

    :cond_e4
    add-int/lit8 v2, v2, 0x1

    goto :goto_cf

    :cond_e7
    const/4 v2, -0x1

    :goto_e8
    if-gez v2, :cond_19

    new-instance v2, Lcom/itextpdf/xmp/impl/XMPNode;

    const-string v3, "[]"

    const/4 v5, 0x0

    invoke-direct {v2, v3, v4, v5}, Lcom/itextpdf/xmp/impl/XMPNode;-><init>(Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    invoke-virtual {p0, v2}, Lcom/itextpdf/xmp/impl/XMPNode;->addChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto/16 :goto_19

    :cond_f7
    :goto_f7
    return-void

    :cond_f8
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Parameter must not be null"

    invoke-direct {p0, p1, v0}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0
.end method

.method private static separateFindCreateArray(Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;Lcom/itextpdf/xmp/impl/XMPMetaImpl;)Lcom/itextpdf/xmp/impl/XMPNode;
    .registers 6

    const/4 v0, 0x0

    invoke-static {p2, v0}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->verifySetOptions(Lcom/itextpdf/xmp/options/PropertyOptions;Ljava/lang/Object;)Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p2

    invoke-virtual {p2}, Lcom/itextpdf/xmp/options/PropertyOptions;->isOnlyArrayOptions()Z

    move-result v1

    if-eqz v1, :cond_5b

    invoke-static {p0, p1}, Lcom/itextpdf/xmp/impl/xpath/XMPPathParser;->expandXPath(Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/xmp/impl/xpath/XMPPath;

    move-result-object p0

    invoke-virtual {p3}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p1

    const/4 v1, 0x0

    invoke-static {p1, p0, v1, v0}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findNode(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/xpath/XMPPath;ZLcom/itextpdf/xmp/options/PropertyOptions;)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p1

    const/16 v0, 0x66

    if-eqz p1, :cond_43

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p0

    invoke-virtual {p0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArray()Z

    move-result p3

    if-eqz p3, :cond_3b

    invoke-virtual {p0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArrayAlternate()Z

    move-result p3

    if-nez p3, :cond_3b

    invoke-virtual {p2, p0}, Lcom/itextpdf/xmp/options/PropertyOptions;->equalArrayTypes(Lcom/itextpdf/xmp/options/PropertyOptions;)Z

    move-result p0

    if-nez p0, :cond_33

    goto :goto_52

    :cond_33
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Mismatch of specified and existing array form"

    invoke-direct {p0, p1, v0}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_3b
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Named property must be non-alternate array"

    invoke-direct {p0, p1, v0}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_43
    invoke-virtual {p3}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p1

    const/4 p3, 0x1

    invoke-virtual {p2, p3}, Lcom/itextpdf/xmp/options/PropertyOptions;->setArray(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p2

    invoke-static {p1, p0, p3, p2}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findNode(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/xpath/XMPPath;ZLcom/itextpdf/xmp/options/PropertyOptions;)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p1

    if-eqz p1, :cond_53

    :goto_52
    return-object p1

    :cond_53
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Failed to create named array"

    invoke-direct {p0, p1, v0}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_5b
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const/16 p1, 0x67

    const-string p2, "Options can only provide array form"

    invoke-direct {p0, p2, p1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0
.end method
