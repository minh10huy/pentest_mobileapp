.class public final Lcom/itextpdf/xmp/impl/ISO8601Converter;
.super Ljava/lang/Object;


# direct methods
.method private constructor <init>()V
    .registers 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static parse(Ljava/lang/String;)Lcom/itextpdf/xmp/XMPDateTime;
    .registers 2

    new-instance v0, Lcom/itextpdf/xmp/impl/XMPDateTimeImpl;

    invoke-direct {v0}, Lcom/itextpdf/xmp/impl/XMPDateTimeImpl;-><init>()V

    invoke-static {p0, v0}, Lcom/itextpdf/xmp/impl/ISO8601Converter;->parse(Ljava/lang/String;Lcom/itextpdf/xmp/XMPDateTime;)Lcom/itextpdf/xmp/XMPDateTime;

    move-result-object p0

    return-object p0
.end method

.method public static parse(Ljava/lang/String;Lcom/itextpdf/xmp/XMPDateTime;)Lcom/itextpdf/xmp/XMPDateTime;
    .registers 13

    if-eqz p0, :cond_223

    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v0

    if-nez v0, :cond_9

    return-object p1

    :cond_9
    new-instance v0, Lcom/itextpdf/xmp/impl/ParseState;

    invoke-direct {v0, p0}, Lcom/itextpdf/xmp/impl/ParseState;-><init>(Ljava/lang/String;)V

    const/4 p0, 0x0

    invoke-virtual {v0, p0}, Lcom/itextpdf/xmp/impl/ParseState;->ch(I)C

    move-result v1

    const/16 v2, 0x2d

    if-ne v1, v2, :cond_1a

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->skip()V

    :cond_1a
    const-string v1, "Invalid year in date string"

    const/16 v3, 0x270f

    invoke-virtual {v0, v1, v3}, Lcom/itextpdf/xmp/impl/ParseState;->gatherInt(Ljava/lang/String;I)I

    move-result v1

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v3

    const/4 v4, 0x5

    if-eqz v3, :cond_38

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v3

    if-ne v3, v2, :cond_30

    goto :goto_38

    :cond_30
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Invalid date string, after year"

    invoke-direct {p0, p1, v4}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_38
    :goto_38
    invoke-virtual {v0, p0}, Lcom/itextpdf/xmp/impl/ParseState;->ch(I)C

    move-result v3

    if-ne v3, v2, :cond_3f

    neg-int v1, v1

    :cond_3f
    invoke-interface {p1, v1}, Lcom/itextpdf/xmp/XMPDateTime;->setYear(I)V

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v1

    if-nez v1, :cond_49

    return-object p1

    :cond_49
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->skip()V

    const-string v1, "Invalid month in date string"

    const/16 v3, 0xc

    invoke-virtual {v0, v1, v3}, Lcom/itextpdf/xmp/impl/ParseState;->gatherInt(Ljava/lang/String;I)I

    move-result v1

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_69

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v3

    if-ne v3, v2, :cond_61

    goto :goto_69

    :cond_61
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Invalid date string, after month"

    invoke-direct {p0, p1, v4}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_69
    :goto_69
    invoke-interface {p1, v1}, Lcom/itextpdf/xmp/XMPDateTime;->setMonth(I)V

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v1

    if-nez v1, :cond_73

    return-object p1

    :cond_73
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->skip()V

    const-string v1, "Invalid day in date string"

    const/16 v3, 0x1f

    invoke-virtual {v0, v1, v3}, Lcom/itextpdf/xmp/impl/ParseState;->gatherInt(Ljava/lang/String;I)I

    move-result v1

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_95

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v3

    const/16 v5, 0x54

    if-ne v3, v5, :cond_8d

    goto :goto_95

    :cond_8d
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Invalid date string, after day"

    invoke-direct {p0, p1, v4}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_95
    :goto_95
    invoke-interface {p1, v1}, Lcom/itextpdf/xmp/XMPDateTime;->setDay(I)V

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v1

    if-nez v1, :cond_9f

    return-object p1

    :cond_9f
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->skip()V

    const-string v1, "Invalid hour in date string"

    const/16 v3, 0x17

    invoke-virtual {v0, v1, v3}, Lcom/itextpdf/xmp/impl/ParseState;->gatherInt(Ljava/lang/String;I)I

    move-result v1

    invoke-interface {p1, v1}, Lcom/itextpdf/xmp/XMPDateTime;->setHour(I)V

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v1

    if-nez v1, :cond_b4

    return-object p1

    :cond_b4
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v1

    const/16 v5, 0x3b

    const/16 v6, 0x3a

    const/16 v7, 0x2b

    const/16 v8, 0x5a

    if-ne v1, v6, :cond_f5

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->skip()V

    const-string v1, "Invalid minute in date string"

    invoke-virtual {v0, v1, v5}, Lcom/itextpdf/xmp/impl/ParseState;->gatherInt(Ljava/lang/String;I)I

    move-result v1

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v9

    if-eqz v9, :cond_f2

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v9

    if-eq v9, v6, :cond_f2

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v9

    if-eq v9, v8, :cond_f2

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v9

    if-eq v9, v7, :cond_f2

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v9

    if-ne v9, v2, :cond_ea

    goto :goto_f2

    :cond_ea
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Invalid date string, after minute"

    invoke-direct {p0, p1, v4}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_f2
    :goto_f2
    invoke-interface {p1, v1}, Lcom/itextpdf/xmp/XMPDateTime;->setMinute(I)V

    :cond_f5
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v1

    if-nez v1, :cond_fc

    return-object p1

    :cond_fc
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_18d

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v1

    if-ne v1, v6, :cond_18d

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->skip()V

    const-string v1, "Invalid whole seconds in date string"

    invoke-virtual {v0, v1, v5}, Lcom/itextpdf/xmp/impl/ParseState;->gatherInt(Ljava/lang/String;I)I

    move-result v1

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v9

    const/16 v10, 0x2e

    if-eqz v9, :cond_13a

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v9

    if-eq v9, v10, :cond_13a

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v9

    if-eq v9, v8, :cond_13a

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v9

    if-eq v9, v7, :cond_13a

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v9

    if-ne v9, v2, :cond_132

    goto :goto_13a

    :cond_132
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Invalid date string, after whole seconds"

    invoke-direct {p0, p1, v4}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_13a
    :goto_13a
    invoke-interface {p1, v1}, Lcom/itextpdf/xmp/XMPDateTime;->setSecond(I)V

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v1

    if-ne v1, v10, :cond_1a8

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->skip()V

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->pos()I

    move-result v1

    const-string v9, "Invalid fractional seconds in date string"

    const v10, 0x3b9ac9ff

    invoke-virtual {v0, v9, v10}, Lcom/itextpdf/xmp/impl/ParseState;->gatherInt(Ljava/lang/String;I)I

    move-result v9

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_174

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v10

    if-eq v10, v8, :cond_174

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v10

    if-eq v10, v7, :cond_174

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v10

    if-ne v10, v2, :cond_16c

    goto :goto_174

    :cond_16c
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Invalid date string, after fractional second"

    invoke-direct {p0, p1, v4}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_174
    :goto_174
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->pos()I

    move-result v10

    sub-int/2addr v10, v1

    :goto_179
    const/16 v1, 0x9

    if-le v10, v1, :cond_182

    div-int/lit8 v9, v9, 0xa

    add-int/lit8 v10, v10, -0x1

    goto :goto_179

    :cond_182
    :goto_182
    if-ge v10, v1, :cond_189

    mul-int/lit8 v9, v9, 0xa

    add-int/lit8 v10, v10, 0x1

    goto :goto_182

    :cond_189
    invoke-interface {p1, v9}, Lcom/itextpdf/xmp/XMPDateTime;->setNanoSecond(I)V

    goto :goto_1a8

    :cond_18d
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v1

    if-eq v1, v8, :cond_1a8

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v1

    if-eq v1, v7, :cond_1a8

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v1

    if-ne v1, v2, :cond_1a0

    goto :goto_1a8

    :cond_1a0
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Invalid date string, after time"

    invoke-direct {p0, p1, v4}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_1a8
    :goto_1a8
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v1

    if-nez v1, :cond_1af

    return-object p1

    :cond_1af
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v1

    if-ne v1, v8, :cond_1b9

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->skip()V

    goto :goto_1fd

    :cond_1b9
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_1fd

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v1

    if-ne v1, v7, :cond_1c7

    const/4 v1, 0x1

    goto :goto_1ce

    :cond_1c7
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result v1

    if-ne v1, v2, :cond_1f5

    const/4 v1, -0x1

    :goto_1ce
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->skip()V

    const-string v2, "Invalid time zone hour in date string"

    invoke-virtual {v0, v2, v3}, Lcom/itextpdf/xmp/impl/ParseState;->gatherInt(Ljava/lang/String;I)I

    move-result v2

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_1ff

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->ch()C

    move-result p0

    if-ne p0, v6, :cond_1ed

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->skip()V

    const-string p0, "Invalid time zone minute in date string"

    invoke-virtual {v0, p0, v5}, Lcom/itextpdf/xmp/impl/ParseState;->gatherInt(Ljava/lang/String;I)I

    move-result p0

    goto :goto_1ff

    :cond_1ed
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Invalid date string, after time zone hour"

    invoke-direct {p0, p1, v4}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_1f5
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Time zone must begin with \'Z\', \'+\', or \'-\'"

    invoke-direct {p0, p1, v4}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_1fd
    :goto_1fd
    const/4 v1, 0x0

    const/4 v2, 0x0

    :cond_1ff
    :goto_1ff
    mul-int/lit16 v2, v2, 0xe10

    mul-int/lit16 v2, v2, 0x3e8

    mul-int/lit8 p0, p0, 0x3c

    mul-int/lit16 p0, p0, 0x3e8

    add-int/2addr v2, p0

    mul-int v2, v2, v1

    new-instance p0, Ljava/util/SimpleTimeZone;

    const-string v1, ""

    invoke-direct {p0, v2, v1}, Ljava/util/SimpleTimeZone;-><init>(ILjava/lang/String;)V

    invoke-interface {p1, p0}, Lcom/itextpdf/xmp/XMPDateTime;->setTimeZone(Ljava/util/TimeZone;)V

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/ParseState;->hasNext()Z

    move-result p0

    if-nez p0, :cond_21b

    return-object p1

    :cond_21b
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Invalid date string, extra chars at end"

    invoke-direct {p0, p1, v4}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_223
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const/4 p1, 0x4

    const-string v0, "Parameter must not be null"

    invoke-direct {p0, v0, p1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0
.end method

.method public static render(Lcom/itextpdf/xmp/XMPDateTime;)Ljava/lang/String;
    .registers 9

    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->hasDate()Z

    move-result v1

    if-eqz v1, :cond_f4

    new-instance v1, Ljava/text/DecimalFormat;

    const-string v2, "0000"

    new-instance v3, Ljava/text/DecimalFormatSymbols;

    sget-object v4, Ljava/util/Locale;->ENGLISH:Ljava/util/Locale;

    invoke-direct {v3, v4}, Ljava/text/DecimalFormatSymbols;-><init>(Ljava/util/Locale;)V

    invoke-direct {v1, v2, v3}, Ljava/text/DecimalFormat;-><init>(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getYear()I

    move-result v2

    int-to-long v2, v2

    invoke-virtual {v1, v2, v3}, Ljava/text/DecimalFormat;->format(J)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getMonth()I

    move-result v2

    if-nez v2, :cond_30

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p0

    return-object p0

    :cond_30
    const-string v2, "\'-\'00"

    invoke-virtual {v1, v2}, Ljava/text/DecimalFormat;->applyPattern(Ljava/lang/String;)V

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getMonth()I

    move-result v2

    int-to-long v2, v2

    invoke-virtual {v1, v2, v3}, Ljava/text/DecimalFormat;->format(J)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getDay()I

    move-result v2

    if-nez v2, :cond_4c

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p0

    return-object p0

    :cond_4c
    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getDay()I

    move-result v2

    int-to-long v2, v2

    invoke-virtual {v1, v2, v3}, Ljava/text/DecimalFormat;->format(J)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->hasTime()Z

    move-result v2

    if-eqz v2, :cond_f4

    const/16 v2, 0x54

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    const-string v2, "00"

    invoke-virtual {v1, v2}, Ljava/text/DecimalFormat;->applyPattern(Ljava/lang/String;)V

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getHour()I

    move-result v2

    int-to-long v2, v2

    invoke-virtual {v1, v2, v3}, Ljava/text/DecimalFormat;->format(J)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    const/16 v2, 0x3a

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getMinute()I

    move-result v2

    int-to-long v2, v2

    invoke-virtual {v1, v2, v3}, Ljava/text/DecimalFormat;->format(J)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getSecond()I

    move-result v2

    if-nez v2, :cond_91

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getNanoSecond()I

    move-result v2

    if-eqz v2, :cond_ae

    :cond_91
    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getSecond()I

    move-result v2

    int-to-double v2, v2

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getNanoSecond()I

    move-result v4

    int-to-double v4, v4

    const-wide v6, 0x41cdcd6500000000L

    div-double/2addr v4, v6

    add-double/2addr v2, v4

    const-string v4, ":00.#########"

    invoke-virtual {v1, v4}, Ljava/text/DecimalFormat;->applyPattern(Ljava/lang/String;)V

    invoke-virtual {v1, v2, v3}, Ljava/text/DecimalFormat;->format(D)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    :cond_ae
    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->hasTimeZone()Z

    move-result v2

    if-eqz v2, :cond_f4

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getCalendar()Ljava/util/Calendar;

    move-result-object v2

    invoke-virtual {v2}, Ljava/util/Calendar;->getTimeInMillis()J

    move-result-wide v2

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getTimeZone()Ljava/util/TimeZone;

    move-result-object p0

    invoke-virtual {p0, v2, v3}, Ljava/util/TimeZone;->getOffset(J)I

    move-result p0

    if-nez p0, :cond_cc

    const/16 p0, 0x5a

    invoke-virtual {v0, p0}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    goto :goto_f4

    :cond_cc
    const v2, 0x36ee80

    div-int v3, p0, v2

    rem-int/2addr p0, v2

    const v2, 0xea60

    div-int/2addr p0, v2

    invoke-static {p0}, Ljava/lang/Math;->abs(I)I

    move-result p0

    const-string v2, "+00;-00"

    invoke-virtual {v1, v2}, Ljava/text/DecimalFormat;->applyPattern(Ljava/lang/String;)V

    int-to-long v2, v3

    invoke-virtual {v1, v2, v3}, Ljava/text/DecimalFormat;->format(J)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    const-string v2, ":00"

    invoke-virtual {v1, v2}, Ljava/text/DecimalFormat;->applyPattern(Ljava/lang/String;)V

    int-to-long v2, p0

    invoke-virtual {v1, v2, v3}, Ljava/text/DecimalFormat;->format(J)Ljava/lang/String;

    move-result-object p0

    invoke-virtual {v0, p0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    :cond_f4
    :goto_f4
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method
