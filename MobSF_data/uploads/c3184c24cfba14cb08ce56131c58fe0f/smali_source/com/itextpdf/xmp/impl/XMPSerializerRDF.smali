.class public Lcom/itextpdf/xmp/impl/XMPSerializerRDF;
.super Ljava/lang/Object;


# static fields
.field private static final DEFAULT_PAD:I = 0x800

.field private static final PACKET_HEADER:Ljava/lang/String; = "<?xpacket begin=\"\ufeff\" id=\"W5M0MpCehiHzreSzNTczkc9d\"?>"

.field private static final PACKET_TRAILER:Ljava/lang/String; = "<?xpacket end=\""

.field private static final PACKET_TRAILER2:Ljava/lang/String; = "\"?>"

.field static final RDF_ATTR_QUALIFIER:Ljava/util/Set;

.field private static final RDF_EMPTY_STRUCT:Ljava/lang/String; = "<rdf:Description/>"

.field private static final RDF_RDF_END:Ljava/lang/String; = "</rdf:RDF>"

.field private static final RDF_RDF_START:Ljava/lang/String; = "<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">"

.field private static final RDF_SCHEMA_END:Ljava/lang/String; = "</rdf:Description>"

.field private static final RDF_SCHEMA_START:Ljava/lang/String; = "<rdf:Description rdf:about="

.field private static final RDF_STRUCT_END:Ljava/lang/String; = "</rdf:Description>"

.field private static final RDF_STRUCT_START:Ljava/lang/String; = "<rdf:Description"

.field private static final RDF_XMPMETA_END:Ljava/lang/String; = "</x:xmpmeta>"

.field private static final RDF_XMPMETA_START:Ljava/lang/String; = "<x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\""


# instance fields
.field private options:Lcom/itextpdf/xmp/options/SerializeOptions;

.field private outputStream:Lcom/itextpdf/xmp/impl/CountOutputStream;

.field private padding:I

.field private unicodeSize:I

.field private writer:Ljava/io/OutputStreamWriter;

.field private xmp:Lcom/itextpdf/xmp/impl/XMPMetaImpl;


# direct methods
.method static constructor <clinit>()V
    .registers 6

    new-instance v0, Ljava/util/HashSet;

    const-string v1, "xml:lang"

    const-string v2, "rdf:resource"

    const-string v3, "rdf:ID"

    const-string v4, "rdf:bagID"

    const-string v5, "rdf:nodeID"

    filled-new-array {v1, v2, v3, v4, v5}, [Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/util/HashSet;-><init>(Ljava/util/Collection;)V

    sput-object v0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->RDF_ATTR_QUALIFIER:Ljava/util/Set;

    return-void
.end method

.method public constructor <init>()V
    .registers 2

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, 0x1

    iput v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->unicodeSize:I

    return-void
.end method

.method private addPadding(I)V
    .registers 6

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getExactPacketLength()Z

    move-result v0

    if-eqz v0, :cond_27

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->outputStream:Lcom/itextpdf/xmp/impl/CountOutputStream;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/CountOutputStream;->getBytesWritten()I

    move-result v0

    iget v1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->unicodeSize:I

    mul-int p1, p1, v1

    add-int/2addr v0, p1

    iget p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    if-gt v0, p1, :cond_1d

    iget p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    sub-int/2addr p1, v0

    iput p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    goto :goto_27

    :cond_1d
    new-instance p1, Lcom/itextpdf/xmp/XMPException;

    const/16 v0, 0x6b

    const-string v1, "Can\'t fit into specified packet size"

    invoke-direct {p1, v1, v0}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p1

    :cond_27
    :goto_27
    iget p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    iget v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->unicodeSize:I

    div-int/2addr p1, v0

    iput p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    iget-object p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {p1}, Lcom/itextpdf/xmp/options/SerializeOptions;->getNewline()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result p1

    iget v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    const/16 v1, 0x20

    if-lt v0, p1, :cond_5e

    iget v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    sub-int/2addr v0, p1

    :goto_41
    iput v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    iget v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    const/16 v2, 0x64

    add-int/lit8 v3, p1, 0x64

    if-lt v0, v3, :cond_55

    invoke-direct {p0, v2, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeChars(IC)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    iget v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    sub-int/2addr v0, v3

    goto :goto_41

    :cond_55
    iget p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    invoke-direct {p0, p1, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeChars(IC)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    goto :goto_63

    :cond_5e
    iget p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    invoke-direct {p0, p1, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeChars(IC)V

    :goto_63
    return-void
.end method

.method private appendNodeValue(Ljava/lang/String;Z)V
    .registers 4

    if-nez p1, :cond_4

    const-string p1, ""

    :cond_4
    const/4 v0, 0x1

    invoke-static {p1, p2, v0}, Lcom/itextpdf/xmp/impl/Utils;->escapeXML(Ljava/lang/String;ZZ)Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    return-void
.end method

.method private canBeRDFAttrProp(Lcom/itextpdf/xmp/impl/XMPNode;)Z
    .registers 4

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->hasQualifier()Z

    move-result v0

    if-nez v0, :cond_34

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isURI()Z

    move-result v0

    if-nez v0, :cond_34

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isCompositeProperty()Z

    move-result v0

    if-nez v0, :cond_34

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    const/high16 v1, 0x40000000

    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->containsOneOf(I)Z

    move-result v0

    if-nez v0, :cond_34

    const-string v0, "[]"

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-nez p1, :cond_34

    const/4 p1, 0x1

    goto :goto_35

    :cond_34
    const/4 p1, 0x0

    :goto_35
    return p1
.end method

.method private declareNamespace(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;I)V
    .registers 7

    if-nez p2, :cond_2f

    new-instance p2, Lcom/itextpdf/xmp/impl/QName;

    invoke-direct {p2, p1}, Lcom/itextpdf/xmp/impl/QName;-><init>(Ljava/lang/String;)V

    invoke-virtual {p2}, Lcom/itextpdf/xmp/impl/QName;->hasPrefix()Z

    move-result p1

    if-eqz p1, :cond_2e

    invoke-virtual {p2}, Lcom/itextpdf/xmp/impl/QName;->getPrefix()Ljava/lang/String;

    move-result-object p1

    invoke-static {}, Lcom/itextpdf/xmp/XMPMetaFactory;->getSchemaRegistry()Lcom/itextpdf/xmp/XMPSchemaRegistry;

    move-result-object p2

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ":"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-interface {p2, v0}, Lcom/itextpdf/xmp/XMPSchemaRegistry;->getNamespaceURI(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p0, p1, p2, p3, p4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->declareNamespace(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;I)V

    goto :goto_2f

    :cond_2e
    return-void

    :cond_2f
    :goto_2f
    invoke-interface {p3, p1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_53

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    invoke-direct {p0, p4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string p4, "xmlns:"

    invoke-direct {p0, p4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    const-string p4, "=\""

    invoke-direct {p0, p4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    const/16 p2, 0x22

    invoke-direct {p0, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-interface {p3, p1}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    :cond_53
    return-void
.end method

.method private declareUsedNamespaces(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/util/Set;I)V
    .registers 8

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isSchemaNode()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_26

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v0

    const/4 v2, 0x0

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/String;->length()I

    move-result v3

    add-int/lit8 v3, v3, -0x1

    invoke-virtual {v0, v2, v3}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v0, v2, p2, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->declareNamespace(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;I)V

    goto :goto_48

    :cond_26
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isStruct()Z

    move-result v0

    if-eqz v0, :cond_48

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v0

    :goto_34
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_48

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v2}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v1, p2, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->declareNamespace(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;I)V

    goto :goto_34

    :cond_48
    :goto_48
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v0

    :goto_4c
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_5c

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-direct {p0, v2, p2, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->declareUsedNamespaces(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/util/Set;I)V

    goto :goto_4c

    :cond_5c
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateQualifier()Ljava/util/Iterator;

    move-result-object p1

    :goto_60
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_77

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v1, p2, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->declareNamespace(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;I)V

    invoke-direct {p0, v0, p2, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->declareUsedNamespaces(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/util/Set;I)V

    goto :goto_60

    :cond_77
    return-void
.end method

.method private emitRDFArrayTag(Lcom/itextpdf/xmp/impl/XMPNode;ZI)V
    .registers 5

    if-nez p2, :cond_8

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result v0

    if-eqz v0, :cond_48

    :cond_8
    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    if-eqz p2, :cond_10

    const-string p3, "<rdf:"

    goto :goto_12

    :cond_10
    const-string p3, "</rdf:"

    :goto_12
    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArrayAlternate()Z

    move-result p3

    if-eqz p3, :cond_25

    const-string p3, "Alt"

    :goto_21
    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    goto :goto_35

    :cond_25
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArrayOrdered()Z

    move-result p3

    if-eqz p3, :cond_32

    const-string p3, "Seq"

    goto :goto_21

    :cond_32
    const-string p3, "Bag"

    goto :goto_21

    :goto_35
    if-eqz p2, :cond_40

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result p1

    if-nez p1, :cond_40

    const-string p1, "/>"

    goto :goto_42

    :cond_40
    const-string p1, ">"

    :goto_42
    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    :cond_48
    return-void
.end method

.method private endOuterRDFDescription(I)V
    .registers 2

    add-int/lit8 p1, p1, 0x1

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string p1, "</rdf:Description>"

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    return-void
.end method

.method private serializeAsRDF()Ljava/lang/String;
    .registers 4

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getOmitPacketWrapper()Z

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_14

    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string v0, "<?xpacket begin=\"\ufeff\" id=\"W5M0MpCehiHzreSzNTczkc9d\"?>"

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    :cond_14
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getOmitXmpMetaElement()Z

    move-result v0

    if-nez v0, :cond_40

    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string v0, "<x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\""

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getOmitVersionAttribute()Z

    move-result v0

    if-nez v0, :cond_37

    invoke-static {}, Lcom/itextpdf/xmp/XMPMetaFactory;->getVersionInfo()Lcom/itextpdf/xmp/XMPVersionInfo;

    move-result-object v0

    invoke-interface {v0}, Lcom/itextpdf/xmp/XMPVersionInfo;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    :cond_37
    const-string v0, "\">"

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    const/4 v1, 0x1

    :cond_40
    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string v0, "<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">"

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getUseCanonicalFormat()Z

    move-result v0

    if-eqz v0, :cond_57

    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCanonicalRDFSchemas(I)V

    goto :goto_5a

    :cond_57
    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFSchemas(I)V

    :goto_5a
    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string v0, "</rdf:RDF>"

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getOmitXmpMetaElement()Z

    move-result v0

    if-nez v0, :cond_7a

    add-int/lit8 v1, v1, -0x1

    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string v0, "</x:xmpmeta>"

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    :cond_7a
    const-string v0, ""

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/SerializeOptions;->getOmitPacketWrapper()Z

    move-result v1

    if-nez v1, :cond_e2

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/SerializeOptions;->getBaseIndent()I

    move-result v1

    :goto_8a
    if-lez v1, :cond_a4

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getIndent()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    add-int/lit8 v1, v1, -0x1

    goto :goto_8a

    :cond_a4
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "<?xpacket end=\""

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getReadOnlyPacket()Z

    move-result v0

    if-eqz v0, :cond_c8

    const/16 v0, 0x72

    goto :goto_ca

    :cond_c8
    const/16 v0, 0x77

    :goto_ca
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\"?>"

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    :cond_e2
    return-object v0
.end method

.method private serializeCanonicalRDFProperty(Lcom/itextpdf/xmp/impl/XMPNode;ZZI)V
    .registers 16

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v0

    if-eqz p3, :cond_9

    const-string v0, "rdf:value"

    goto :goto_13

    :cond_9
    const-string v1, "[]"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_13

    const-string v0, "rdf:li"

    :cond_13
    :goto_13
    invoke-direct {p0, p4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const/16 v1, 0x3c

    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateQualifier()Ljava/util/Iterator;

    move-result-object v1

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    :cond_25
    :goto_25
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    const/16 v6, 0x22

    const/16 v7, 0x20

    const/4 v8, 0x1

    if-eqz v5, :cond_6a

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/xmp/impl/XMPNode;

    sget-object v9, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->RDF_ATTR_QUALIFIER:Ljava/util/Set;

    invoke-virtual {v5}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v10

    invoke-interface {v9, v10}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v9

    if-nez v9, :cond_44

    const/4 v3, 0x1

    goto :goto_25

    :cond_44
    const-string v4, "rdf:resource"

    invoke-virtual {v5}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v4, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez p3, :cond_25

    invoke-direct {p0, v7}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-virtual {v5}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v7

    invoke-direct {p0, v7}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    const-string v7, "=\""

    invoke-direct {p0, v7}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-virtual {v5}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v5

    invoke-direct {p0, v5, v8}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->appendNodeValue(Ljava/lang/String;Z)V

    invoke-direct {p0, v6}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    goto :goto_25

    :cond_6a
    const/16 v1, 0xca

    const/16 v5, 0x3e

    if-eqz v3, :cond_d2

    if-nez p3, :cond_d2

    if-nez v4, :cond_ca

    if-eqz p2, :cond_8e

    const-string p3, ">"

    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    add-int/lit8 p4, p4, 0x1

    invoke-direct {p0, p4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string p3, "<rdf:Description"

    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    const-string p3, ">"

    :goto_8a
    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    goto :goto_91

    :cond_8e
    const-string p3, " rdf:parseType=\"Resource\">"

    goto :goto_8a

    :goto_91
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    add-int/lit8 p3, p4, 0x1

    invoke-direct {p0, p1, p2, v8, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCanonicalRDFProperty(Lcom/itextpdf/xmp/impl/XMPNode;ZZI)V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateQualifier()Ljava/util/Iterator;

    move-result-object p1

    :cond_9d
    :goto_9d
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_b9

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    sget-object v3, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->RDF_ATTR_QUALIFIER:Ljava/util/Set;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v4

    invoke-interface {v3, v4}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_9d

    invoke-direct {p0, v1, p2, v2, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCanonicalRDFProperty(Lcom/itextpdf/xmp/impl/XMPNode;ZZI)V

    goto :goto_9d

    :cond_b9
    if-eqz p2, :cond_15b

    :goto_bb
    invoke-direct {p0, p4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string p1, "</rdf:Description>"

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    add-int/lit8 p4, p4, -0x1

    goto/16 :goto_15b

    :cond_ca
    new-instance p1, Lcom/itextpdf/xmp/XMPException;

    const-string p2, "Can\'t mix rdf:resource and general qualifiers"

    invoke-direct {p1, p2, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p1

    :cond_d2
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/xmp/options/PropertyOptions;->isCompositeProperty()Z

    move-result p3

    if-nez p3, :cond_120

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p2

    invoke-virtual {p2}, Lcom/itextpdf/xmp/options/PropertyOptions;->isURI()Z

    move-result p2

    if-eqz p2, :cond_fe

    const-string p2, " rdf:resource=\""

    invoke-direct {p0, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1, v8}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->appendNodeValue(Ljava/lang/String;Z)V

    const-string p1, "\"/>"

    :goto_f4
    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    const/4 v2, 0x1

    const/4 v8, 0x0

    goto/16 :goto_200

    :cond_fe
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p2

    if-eqz p2, :cond_11d

    const-string p2, ""

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_111

    goto :goto_11d

    :cond_111
    invoke-direct {p0, v5}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1, v2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->appendNodeValue(Ljava/lang/String;Z)V

    goto/16 :goto_200

    :cond_11d
    :goto_11d
    const-string p1, "/>"

    goto :goto_f4

    :cond_120
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArray()Z

    move-result p3

    if-eqz p3, :cond_15e

    invoke-direct {p0, v5}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    add-int/lit8 p3, p4, 0x1

    invoke-direct {p0, p1, v8, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->emitRDFArrayTag(Lcom/itextpdf/xmp/impl/XMPNode;ZI)V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArrayAltText()Z

    move-result v1

    if-eqz v1, :cond_142

    invoke-static {p1}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->normalizeLangArray(Lcom/itextpdf/xmp/impl/XMPNode;)V

    :cond_142
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v1

    :goto_146
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_158

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/xmp/impl/XMPNode;

    add-int/lit8 v4, p4, 0x2

    invoke-direct {p0, v3, p2, v2, v4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCanonicalRDFProperty(Lcom/itextpdf/xmp/impl/XMPNode;ZZI)V

    goto :goto_146

    :cond_158
    invoke-direct {p0, p1, v2, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->emitRDFArrayTag(Lcom/itextpdf/xmp/impl/XMPNode;ZI)V

    :cond_15b
    :goto_15b
    const/4 v2, 0x1

    goto/16 :goto_200

    :cond_15e
    if-nez v4, :cond_1c0

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result p3

    if-nez p3, :cond_186

    if-eqz p2, :cond_17c

    const-string p1, ">"

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    add-int/lit8 p1, p4, 0x1

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string p1, "<rdf:Description/>"

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    const/4 v2, 0x1

    goto :goto_181

    :cond_17c
    const-string p1, " rdf:parseType=\"Resource\"/>"

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    :goto_181
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    move v8, v2

    goto :goto_15b

    :cond_186
    if-eqz p2, :cond_1a0

    const-string p3, ">"

    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    add-int/lit8 p4, p4, 0x1

    invoke-direct {p0, p4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string p3, "<rdf:Description"

    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    const-string p3, ">"

    :goto_19c
    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    goto :goto_1a3

    :cond_1a0
    const-string p3, " rdf:parseType=\"Resource\">"

    goto :goto_19c

    :goto_1a3
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p1

    :goto_1aa
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result p3

    if-eqz p3, :cond_1bc

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Lcom/itextpdf/xmp/impl/XMPNode;

    add-int/lit8 v1, p4, 0x1

    invoke-direct {p0, p3, p2, v2, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCanonicalRDFProperty(Lcom/itextpdf/xmp/impl/XMPNode;ZZI)V

    goto :goto_1aa

    :cond_1bc
    if-eqz p2, :cond_15b

    goto/16 :goto_bb

    :cond_1c0
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p1

    :goto_1c4
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result p2

    if-eqz p2, :cond_11d

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-direct {p0, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->canBeRDFAttrProp(Lcom/itextpdf/xmp/impl/XMPNode;)Z

    move-result p3

    if-eqz p3, :cond_1f8

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    add-int/lit8 p3, p4, 0x1

    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    invoke-direct {p0, v7}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-virtual {p2}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object p3

    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    const-string p3, "=\""

    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-virtual {p2}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p0, p2, v8}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->appendNodeValue(Ljava/lang/String;Z)V

    invoke-direct {p0, v6}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    goto :goto_1c4

    :cond_1f8
    new-instance p1, Lcom/itextpdf/xmp/XMPException;

    const-string p2, "Can\'t mix rdf:resource and complex fields"

    invoke-direct {p1, p2, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p1

    :goto_200
    if-eqz v8, :cond_215

    if-eqz v2, :cond_207

    invoke-direct {p0, p4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    :cond_207
    const-string p1, "</"

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0, v5}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    :cond_215
    return-void
.end method

.method private serializeCanonicalRDFSchema(Lcom/itextpdf/xmp/impl/XMPNode;I)V
    .registers 7

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p1

    :goto_4
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1d

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/xmp/impl/XMPNode;

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/SerializeOptions;->getUseCanonicalFormat()Z

    move-result v1

    const/4 v2, 0x0

    add-int/lit8 v3, p2, 0x2

    invoke-direct {p0, v0, v1, v2, v3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCanonicalRDFProperty(Lcom/itextpdf/xmp/impl/XMPNode;ZZI)V

    goto :goto_4

    :cond_1d
    return-void
.end method

.method private serializeCanonicalRDFSchemas(I)V
    .registers 4

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->xmp:Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildrenLength()I

    move-result v0

    if-lez v0, :cond_33

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->xmp:Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    invoke-direct {p0, v0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->startOuterRDFDescription(Lcom/itextpdf/xmp/impl/XMPNode;I)V

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->xmp:Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v0

    :goto_1f
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_2f

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-direct {p0, v1, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCanonicalRDFSchema(Lcom/itextpdf/xmp/impl/XMPNode;I)V

    goto :goto_1f

    :cond_2f
    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->endOuterRDFDescription(I)V

    goto :goto_48

    :cond_33
    add-int/lit8 p1, p1, 0x1

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string p1, "<rdf:Description rdf:about="

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeTreeName()V

    const-string p1, "/>"

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    :goto_48
    return-void
.end method

.method private serializeCompactRDFArrayProp(Lcom/itextpdf/xmp/impl/XMPNode;I)V
    .registers 5

    const/16 v0, 0x3e

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    add-int/lit8 v0, p2, 0x1

    const/4 v1, 0x1

    invoke-direct {p0, p1, v1, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->emitRDFArrayTag(Lcom/itextpdf/xmp/impl/XMPNode;ZI)V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArrayAltText()Z

    move-result v1

    if-eqz v1, :cond_1b

    invoke-static {p1}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->normalizeLangArray(Lcom/itextpdf/xmp/impl/XMPNode;)V

    :cond_1b
    add-int/lit8 p2, p2, 0x2

    invoke-direct {p0, p1, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFElementProps(Lcom/itextpdf/xmp/impl/XMPNode;I)V

    const/4 p2, 0x0

    invoke-direct {p0, p1, p2, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->emitRDFArrayTag(Lcom/itextpdf/xmp/impl/XMPNode;ZI)V

    return-void
.end method

.method private serializeCompactRDFAttrProps(Lcom/itextpdf/xmp/impl/XMPNode;I)Z
    .registers 7

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p1

    const/4 v0, 0x1

    const/4 v1, 0x1

    :goto_6
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_39

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-direct {p0, v2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->canBeRDFAttrProp(Lcom/itextpdf/xmp/impl/XMPNode;)Z

    move-result v3

    if-eqz v3, :cond_37

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    invoke-direct {p0, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    invoke-virtual {v2}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-direct {p0, v3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    const-string v3, "=\""

    invoke-direct {p0, v3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-virtual {v2}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->appendNodeValue(Ljava/lang/String;Z)V

    const/16 v2, 0x22

    invoke-direct {p0, v2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    goto :goto_6

    :cond_37
    const/4 v1, 0x0

    goto :goto_6

    :cond_39
    return v1
.end method

.method private serializeCompactRDFElementProps(Lcom/itextpdf/xmp/impl/XMPNode;I)V
    .registers 13

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p1

    :cond_4
    :goto_4
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_cc

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->canBeRDFAttrProp(Lcom/itextpdf/xmp/impl/XMPNode;)Z

    move-result v1

    if-eqz v1, :cond_17

    goto :goto_4

    :cond_17
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "[]"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_25

    const-string v1, "rdf:li"

    :cond_25
    invoke-direct {p0, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const/16 v2, 0x3c

    invoke-direct {p0, v2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateQualifier()Ljava/util/Iterator;

    move-result-object v2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    :goto_37
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    const/4 v7, 0x1

    if-eqz v6, :cond_7a

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/xmp/impl/XMPNode;

    sget-object v8, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->RDF_ATTR_QUALIFIER:Ljava/util/Set;

    invoke-virtual {v6}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v9

    invoke-interface {v8, v9}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_52

    const/4 v4, 0x1

    goto :goto_37

    :cond_52
    const-string v5, "rdf:resource"

    invoke-virtual {v6}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v5, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    const/16 v8, 0x20

    invoke-direct {p0, v8}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-virtual {v6}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v8

    invoke-direct {p0, v8}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    const-string v8, "=\""

    invoke-direct {p0, v8}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-virtual {v6}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v6

    invoke-direct {p0, v6, v7}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->appendNodeValue(Ljava/lang/String;Z)V

    const/16 v6, 0x22

    invoke-direct {p0, v6}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    goto :goto_37

    :cond_7a
    if-eqz v4, :cond_80

    invoke-direct {p0, p2, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFGeneralQualifier(ILcom/itextpdf/xmp/impl/XMPNode;)V

    goto :goto_ad

    :cond_80
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->isCompositeProperty()Z

    move-result v2

    if-nez v2, :cond_a0

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFSimpleProp(Lcom/itextpdf/xmp/impl/XMPNode;)[Ljava/lang/Object;

    move-result-object v0

    aget-object v2, v0, v3

    check-cast v2, Ljava/lang/Boolean;

    invoke-virtual {v2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v2

    aget-object v0, v0, v7

    check-cast v0, Ljava/lang/Boolean;

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v7

    move v0, v2

    goto :goto_b3

    :cond_a0
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArray()Z

    move-result v2

    if-eqz v2, :cond_af

    invoke-direct {p0, v0, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFArrayProp(Lcom/itextpdf/xmp/impl/XMPNode;I)V

    :goto_ad
    const/4 v0, 0x1

    goto :goto_b3

    :cond_af
    invoke-direct {p0, v0, p2, v5}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFStructProp(Lcom/itextpdf/xmp/impl/XMPNode;IZ)Z

    move-result v0

    :goto_b3
    if-eqz v0, :cond_4

    if-eqz v7, :cond_ba

    invoke-direct {p0, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    :cond_ba
    const-string v0, "</"

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    const/16 v0, 0x3e

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    goto/16 :goto_4

    :cond_cc
    return-void
.end method

.method private serializeCompactRDFGeneralQualifier(ILcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 5

    const-string v0, " rdf:parseType=\"Resource\">"

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    const/4 v0, 0x1

    add-int/2addr p1, v0

    const/4 v1, 0x0

    invoke-direct {p0, p2, v1, v0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCanonicalRDFProperty(Lcom/itextpdf/xmp/impl/XMPNode;ZZI)V

    invoke-virtual {p2}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateQualifier()Ljava/util/Iterator;

    move-result-object p2

    :goto_12
    invoke-interface {p2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_22

    invoke-interface {p2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-direct {p0, v0, v1, v1, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCanonicalRDFProperty(Lcom/itextpdf/xmp/impl/XMPNode;ZZI)V

    goto :goto_12

    :cond_22
    return-void
.end method

.method private serializeCompactRDFSchemas(I)V
    .registers 7

    add-int/lit8 v0, p1, 0x1

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string v1, "<rdf:Description rdf:about="

    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeTreeName()V

    new-instance v1, Ljava/util/HashSet;

    invoke-direct {v1}, Ljava/util/HashSet;-><init>()V

    const-string v2, "xml"

    invoke-interface {v1, v2}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    const-string v2, "rdf"

    invoke-interface {v1, v2}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    iget-object v2, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->xmp:Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    invoke-virtual {v2}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v2

    :goto_26
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_38

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/xmp/impl/XMPNode;

    add-int/lit8 v4, p1, 0x3

    invoke-direct {p0, v3, v1, v4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->declareUsedNamespaces(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/util/Set;I)V

    goto :goto_26

    :cond_38
    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->xmp:Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v1

    const/4 v2, 0x1

    :goto_43
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_57

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/xmp/impl/XMPNode;

    add-int/lit8 v4, p1, 0x2

    invoke-direct {p0, v3, v4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFAttrProps(Lcom/itextpdf/xmp/impl/XMPNode;I)Z

    move-result v3

    and-int/2addr v2, v3

    goto :goto_43

    :cond_57
    if-nez v2, :cond_89

    const/16 v1, 0x3e

    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->xmp:Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v1

    :goto_6b
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_7d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/xmp/impl/XMPNode;

    add-int/lit8 v3, p1, 0x2

    invoke-direct {p0, v2, v3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFElementProps(Lcom/itextpdf/xmp/impl/XMPNode;I)V

    goto :goto_6b

    :cond_7d
    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string p1, "</rdf:Description>"

    :goto_82
    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    return-void

    :cond_89
    const-string p1, "/>"

    goto :goto_82
.end method

.method private serializeCompactRDFSimpleProp(Lcom/itextpdf/xmp/impl/XMPNode;)[Ljava/lang/Object;
    .registers 7

    sget-object v0, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    sget-object v1, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->isURI()Z

    move-result v2

    const/4 v3, 0x0

    const/4 v4, 0x1

    if-eqz v2, :cond_27

    const-string v0, " rdf:resource=\""

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1, v4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->appendNodeValue(Ljava/lang/String;Z)V

    const-string p1, "\"/>"

    :goto_1e
    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    sget-object v0, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    goto :goto_4a

    :cond_27
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_47

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/String;->length()I

    move-result v2

    if-nez v2, :cond_38

    goto :goto_47

    :cond_38
    const/16 v1, 0x3e

    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1, v3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->appendNodeValue(Ljava/lang/String;Z)V

    sget-object v1, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    goto :goto_4a

    :cond_47
    :goto_47
    const-string p1, "/>"

    goto :goto_1e

    :goto_4a
    const/4 p1, 0x2

    new-array p1, p1, [Ljava/lang/Object;

    aput-object v0, p1, v3

    aput-object v1, p1, v4

    return-object p1
.end method

.method private serializeCompactRDFStructProp(Lcom/itextpdf/xmp/impl/XMPNode;IZ)Z
    .registers 10

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v0

    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v3, 0x0

    :cond_7
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    const/4 v5, 0x1

    if-eqz v4, :cond_21

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-direct {p0, v4}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->canBeRDFAttrProp(Lcom/itextpdf/xmp/impl/XMPNode;)Z

    move-result v4

    if-eqz v4, :cond_1c

    const/4 v2, 0x1

    goto :goto_1d

    :cond_1c
    const/4 v3, 0x1

    :goto_1d
    if-eqz v2, :cond_7

    if-eqz v3, :cond_7

    :cond_21
    if-eqz p3, :cond_30

    if-nez v3, :cond_26

    goto :goto_30

    :cond_26
    new-instance p1, Lcom/itextpdf/xmp/XMPException;

    const/16 p2, 0xca

    const-string p3, "Can\'t mix rdf:resource qualifier and element fields"

    invoke-direct {p1, p3, p2}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p1

    :cond_30
    :goto_30
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result p3

    if-nez p3, :cond_3f

    const-string p1, " rdf:parseType=\"Resource\"/>"

    :goto_38
    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    goto :goto_85

    :cond_3f
    if-nez v3, :cond_48

    add-int/2addr p2, v5

    invoke-direct {p0, p1, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFAttrProps(Lcom/itextpdf/xmp/impl/XMPNode;I)Z

    const-string p1, "/>"

    goto :goto_38

    :cond_48
    if-nez v2, :cond_57

    const-string p3, " rdf:parseType=\"Resource\">"

    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    add-int/2addr p2, v5

    invoke-direct {p0, p1, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFElementProps(Lcom/itextpdf/xmp/impl/XMPNode;I)V

    goto :goto_84

    :cond_57
    const/16 p3, 0x3e

    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    add-int/lit8 p3, p2, 0x1

    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string v0, "<rdf:Description"

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    add-int/lit8 p2, p2, 0x2

    invoke-direct {p0, p1, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFAttrProps(Lcom/itextpdf/xmp/impl/XMPNode;I)Z

    const-string p2, ">"

    invoke-direct {p0, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    invoke-direct {p0, p1, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeCompactRDFElementProps(Lcom/itextpdf/xmp/impl/XMPNode;I)V

    invoke-direct {p0, p3}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string p1, "</rdf:Description>"

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    :goto_84
    const/4 v1, 0x1

    :goto_85
    return v1
.end method

.method private startOuterRDFDescription(Lcom/itextpdf/xmp/impl/XMPNode;I)V
    .registers 5

    add-int/lit8 v0, p2, 0x1

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeIndent(I)V

    const-string v0, "<rdf:Description rdf:about="

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeTreeName()V

    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    const-string v1, "xml"

    invoke-interface {v0, v1}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    const-string v1, "rdf"

    invoke-interface {v0, v1}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    add-int/lit8 p2, p2, 0x3

    invoke-direct {p0, p1, v0, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->declareUsedNamespaces(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/util/Set;I)V

    const/16 p1, 0x3e

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writeNewline()V

    return-void
.end method

.method private write(I)V
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writer:Ljava/io/OutputStreamWriter;

    invoke-virtual {v0, p1}, Ljava/io/OutputStreamWriter;->write(I)V

    return-void
.end method

.method private write(Ljava/lang/String;)V
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writer:Ljava/io/OutputStreamWriter;

    invoke-virtual {v0, p1}, Ljava/io/OutputStreamWriter;->write(Ljava/lang/String;)V

    return-void
.end method

.method private writeChars(IC)V
    .registers 4

    :goto_0
    if-lez p1, :cond_a

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writer:Ljava/io/OutputStreamWriter;

    invoke-virtual {v0, p2}, Ljava/io/OutputStreamWriter;->write(I)V

    add-int/lit8 p1, p1, -0x1

    goto :goto_0

    :cond_a
    return-void
.end method

.method private writeIndent(I)V
    .registers 4

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getBaseIndent()I

    move-result v0

    add-int/2addr v0, p1

    :goto_7
    if-lez v0, :cond_17

    iget-object p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writer:Ljava/io/OutputStreamWriter;

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/SerializeOptions;->getIndent()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Ljava/io/OutputStreamWriter;->write(Ljava/lang/String;)V

    add-int/lit8 v0, v0, -0x1

    goto :goto_7

    :cond_17
    return-void
.end method

.method private writeNewline()V
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writer:Ljava/io/OutputStreamWriter;

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/SerializeOptions;->getNewline()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/io/OutputStreamWriter;->write(Ljava/lang/String;)V

    return-void
.end method

.method private writeTreeName()V
    .registers 4

    const/16 v0, 0x22

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->xmp:Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_15

    const/4 v2, 0x1

    invoke-direct {p0, v1, v2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->appendNodeValue(Ljava/lang/String;Z)V

    :cond_15
    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(I)V

    return-void
.end method


# virtual methods
.method protected checkOptionsConsistence()V
    .registers 5

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getEncodeUTF16BE()Z

    move-result v0

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/SerializeOptions;->getEncodeUTF16LE()Z

    move-result v1

    or-int/2addr v0, v1

    if-eqz v0, :cond_12

    const/4 v0, 0x2

    iput v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->unicodeSize:I

    :cond_12
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getExactPacketLength()Z

    move-result v0

    const/16 v1, 0x67

    if-eqz v0, :cond_4a

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getOmitPacketWrapper()Z

    move-result v0

    iget-object v2, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v2}, Lcom/itextpdf/xmp/options/SerializeOptions;->getIncludeThumbnailPad()Z

    move-result v2

    or-int/2addr v0, v2

    if-nez v0, :cond_42

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getPadding()I

    move-result v0

    iget v2, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->unicodeSize:I

    add-int/lit8 v2, v2, -0x1

    and-int/2addr v0, v2

    if-nez v0, :cond_3a

    goto/16 :goto_ad

    :cond_3a
    new-instance v0, Lcom/itextpdf/xmp/XMPException;

    const-string v2, "Exact size must be a multiple of the Unicode element"

    invoke-direct {v0, v2, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw v0

    :cond_42
    new-instance v0, Lcom/itextpdf/xmp/XMPException;

    const-string v2, "Inconsistent options for exact size serialize"

    invoke-direct {v0, v2, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw v0

    :cond_4a
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getReadOnlyPacket()Z

    move-result v0

    const/4 v2, 0x0

    if-eqz v0, :cond_6d

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getOmitPacketWrapper()Z

    move-result v0

    iget-object v3, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v3}, Lcom/itextpdf/xmp/options/SerializeOptions;->getIncludeThumbnailPad()Z

    move-result v3

    or-int/2addr v0, v3

    if-nez v0, :cond_65

    :goto_62
    iput v2, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    goto :goto_ad

    :cond_65
    new-instance v0, Lcom/itextpdf/xmp/XMPException;

    const-string v2, "Inconsistent options for read-only packet"

    invoke-direct {v0, v2, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw v0

    :cond_6d
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getOmitPacketWrapper()Z

    move-result v0

    if-eqz v0, :cond_86

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getIncludeThumbnailPad()Z

    move-result v0

    if-nez v0, :cond_7e

    goto :goto_62

    :cond_7e
    new-instance v0, Lcom/itextpdf/xmp/XMPException;

    const-string v2, "Inconsistent options for non-packet serialize"

    invoke-direct {v0, v2, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw v0

    :cond_86
    iget v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    if-nez v0, :cond_90

    iget v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->unicodeSize:I

    mul-int/lit16 v0, v0, 0x800

    iput v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    :cond_90
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/SerializeOptions;->getIncludeThumbnailPad()Z

    move-result v0

    if-eqz v0, :cond_ad

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->xmp:Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    const-string v1, "http://ns.adobe.com/xap/1.0/"

    const-string v2, "Thumbnails"

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->doesPropertyExist(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_ad

    iget v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    iget v1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->unicodeSize:I

    mul-int/lit16 v1, v1, 0x2710

    add-int/2addr v0, v1

    iput v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    :cond_ad
    :goto_ad
    return-void
.end method

.method public serialize(Lcom/itextpdf/xmp/XMPMeta;Ljava/io/OutputStream;Lcom/itextpdf/xmp/options/SerializeOptions;)V
    .registers 6

    :try_start_0
    new-instance v0, Lcom/itextpdf/xmp/impl/CountOutputStream;

    invoke-direct {v0, p2}, Lcom/itextpdf/xmp/impl/CountOutputStream;-><init>(Ljava/io/OutputStream;)V

    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->outputStream:Lcom/itextpdf/xmp/impl/CountOutputStream;

    new-instance p2, Ljava/io/OutputStreamWriter;

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->outputStream:Lcom/itextpdf/xmp/impl/CountOutputStream;

    invoke-virtual {p3}, Lcom/itextpdf/xmp/options/SerializeOptions;->getEncoding()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p2, v0, v1}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;Ljava/lang/String;)V

    iput-object p2, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writer:Ljava/io/OutputStreamWriter;

    check-cast p1, Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->xmp:Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    iput-object p3, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->options:Lcom/itextpdf/xmp/options/SerializeOptions;

    invoke-virtual {p3}, Lcom/itextpdf/xmp/options/SerializeOptions;->getPadding()I

    move-result p1

    iput p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->padding:I

    new-instance p1, Ljava/io/OutputStreamWriter;

    iget-object p2, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->outputStream:Lcom/itextpdf/xmp/impl/CountOutputStream;

    invoke-virtual {p3}, Lcom/itextpdf/xmp/options/SerializeOptions;->getEncoding()Ljava/lang/String;

    move-result-object p3

    invoke-direct {p1, p2, p3}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;Ljava/lang/String;)V

    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writer:Ljava/io/OutputStreamWriter;

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->checkOptionsConsistence()V

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->serializeAsRDF()Ljava/lang/String;

    move-result-object p1

    iget-object p2, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writer:Ljava/io/OutputStreamWriter;

    invoke-virtual {p2}, Ljava/io/OutputStreamWriter;->flush()V

    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result p2

    invoke-direct {p0, p2}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->addPadding(I)V

    invoke-direct {p0, p1}, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->write(Ljava/lang/String;)V

    iget-object p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->writer:Ljava/io/OutputStreamWriter;

    invoke-virtual {p1}, Ljava/io/OutputStreamWriter;->flush()V

    iget-object p1, p0, Lcom/itextpdf/xmp/impl/XMPSerializerRDF;->outputStream:Lcom/itextpdf/xmp/impl/CountOutputStream;

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/CountOutputStream;->close()V
    :try_end_4d
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_4d} :catch_4e

    return-void

    :catch_4e
    new-instance p1, Lcom/itextpdf/xmp/XMPException;

    const/4 p2, 0x0

    const-string p3, "Error writing to the OutputStream"

    invoke-direct {p1, p3, p2}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p1
.end method
