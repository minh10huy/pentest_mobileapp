.class public Lcom/itextpdf/text/pdf/AcroFields;
.super Ljava/lang/Object;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/itextpdf/text/pdf/AcroFields$FieldPosition;,
        Lcom/itextpdf/text/pdf/AcroFields$SorterComparator;,
        Lcom/itextpdf/text/pdf/AcroFields$InstHit;,
        Lcom/itextpdf/text/pdf/AcroFields$Item;
    }
.end annotation


# static fields
.field public static final DA_COLOR:I = 0x2

.field public static final DA_FONT:I = 0x0

.field public static final DA_SIZE:I = 0x1

.field public static final FIELD_TYPE_CHECKBOX:I = 0x2

.field public static final FIELD_TYPE_COMBO:I = 0x6

.field public static final FIELD_TYPE_LIST:I = 0x5

.field public static final FIELD_TYPE_NONE:I = 0x0

.field public static final FIELD_TYPE_PUSHBUTTON:I = 0x1

.field public static final FIELD_TYPE_RADIOBUTTON:I = 0x3

.field public static final FIELD_TYPE_SIGNATURE:I = 0x7

.field public static final FIELD_TYPE_TEXT:I = 0x4

.field private static final buttonRemove:[Lcom/itextpdf/text/pdf/PdfName;

.field private static final stdFieldFontNames:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "[",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field


# instance fields
.field private append:Z

.field private extensionFonts:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/Integer;",
            "Lcom/itextpdf/text/pdf/BaseFont;",
            ">;"
        }
    .end annotation
.end field

.field private extraMarginLeft:F

.field private extraMarginTop:F

.field private fieldCache:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/text/pdf/TextField;",
            ">;"
        }
    .end annotation
.end field

.field fields:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/text/pdf/AcroFields$Item;",
            ">;"
        }
    .end annotation
.end field

.field private generateAppearances:Z

.field private lastWasString:Z

.field private localFonts:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/text/pdf/BaseFont;",
            ">;"
        }
    .end annotation
.end field

.field private orderedSignatureNames:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field reader:Lcom/itextpdf/text/pdf/PdfReader;

.field private sigNames:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "[I>;"
        }
    .end annotation
.end field

.field private substitutionFonts:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/BaseFont;",
            ">;"
        }
    .end annotation
.end field

.field private topFirst:I

.field private totalRevisions:I

.field writer:Lcom/itextpdf/text/pdf/PdfWriter;

.field private xfa:Lcom/itextpdf/text/pdf/XfaForm;


# direct methods
.method static constructor <clinit>()V
    .registers 4

    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    sput-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "CoBO"

    const-string v2, "Courier-BoldOblique"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "CoBo"

    const-string v2, "Courier-Bold"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "CoOb"

    const-string v2, "Courier-Oblique"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "Cour"

    const-string v2, "Courier"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "HeBO"

    const-string v2, "Helvetica-BoldOblique"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "HeBo"

    const-string v2, "Helvetica-Bold"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "HeOb"

    const-string v2, "Helvetica-Oblique"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "Helv"

    const-string v2, "Helvetica"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "Symb"

    const-string v2, "Symbol"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "TiBI"

    const-string v2, "Times-BoldItalic"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "TiBo"

    const-string v2, "Times-Bold"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "TiIt"

    const-string v2, "Times-Italic"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "TiRo"

    const-string v2, "Times-Roman"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "ZaDb"

    const-string v2, "ZapfDingbats"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "HySm"

    const-string v2, "HYSMyeongJo-Medium"

    const-string v3, "UniKS-UCS2-H"

    filled-new-array {v2, v3}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "HyGo"

    const-string v2, "HYGoThic-Medium"

    const-string v3, "UniKS-UCS2-H"

    filled-new-array {v2, v3}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "KaGo"

    const-string v2, "HeiseiKakuGo-W5"

    const-string v3, "UniKS-UCS2-H"

    filled-new-array {v2, v3}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "KaMi"

    const-string v2, "HeiseiMin-W3"

    const-string v3, "UniJIS-UCS2-H"

    filled-new-array {v2, v3}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "MHei"

    const-string v2, "MHei-Medium"

    const-string v3, "UniCNS-UCS2-H"

    filled-new-array {v2, v3}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "MSun"

    const-string v2, "MSung-Light"

    const-string v3, "UniCNS-UCS2-H"

    filled-new-array {v2, v3}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    sget-object v0, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    const-string v1, "STSo"

    const-string v2, "STSong-Light"

    const-string v3, "UniGB-UCS2-H"

    filled-new-array {v2, v3}, [Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    const/4 v0, 0x6

    new-array v0, v0, [Lcom/itextpdf/text/pdf/PdfName;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->MK:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v2, 0x0

    aput-object v1, v0, v2

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v2, 0x1

    aput-object v1, v0, v2

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v2, 0x2

    aput-object v1, v0, v2

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->Q:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v2, 0x3

    aput-object v1, v0, v2

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->BS:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v2, 0x4

    aput-object v1, v0, v2

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->BORDER:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v2, 0x5

    aput-object v1, v0, v2

    sput-object v0, Lcom/itextpdf/text/pdf/AcroFields;->buttonRemove:[Lcom/itextpdf/text/pdf/PdfName;

    return-void
.end method

.method constructor <init>(Lcom/itextpdf/text/pdf/PdfReader;Lcom/itextpdf/text/pdf/PdfWriter;)V
    .registers 4

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->extensionFonts:Ljava/util/HashMap;

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->generateAppearances:Z

    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->localFonts:Ljava/util/HashMap;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    iput-object p2, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    :try_start_18
    new-instance v0, Lcom/itextpdf/text/pdf/XfaForm;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/pdf/XfaForm;-><init>(Lcom/itextpdf/text/pdf/PdfReader;)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;
    :try_end_1f
    .catch Ljava/lang/Exception; {:try_start_18 .. :try_end_1f} :catch_2f

    instance-of p1, p2, Lcom/itextpdf/text/pdf/PdfStamperImp;

    if-eqz p1, :cond_2b

    check-cast p2, Lcom/itextpdf/text/pdf/PdfStamperImp;

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfStamperImp;->isAppend()Z

    move-result p1

    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/AcroFields;->append:Z

    :cond_2b
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/AcroFields;->fill()V

    return-void

    :catch_2f
    move-exception p1

    new-instance p2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {p2, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw p2
.end method

.method static synthetic access$000(Lcom/itextpdf/text/pdf/AcroFields;Lcom/itextpdf/text/pdf/PdfObject;)V
    .registers 2

    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    return-void
.end method

.method private static clearSigDic(Lcom/itextpdf/text/pdf/PdfDictionary;)V
    .registers 4

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->DV:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->SV:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v1, Lcom/itextpdf/text/pdf/PdfNumber;

    const/4 v2, 0x4

    invoke-direct {v1, v2}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {p0, v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    return-void
.end method

.method private getListOption(Ljava/lang/String;I)[Ljava/lang/String;
    .registers 7

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldItem(Ljava/lang/String;)Lcom/itextpdf/text/pdf/AcroFields$Item;

    move-result-object p1

    const/4 v0, 0x0

    if-nez p1, :cond_8

    return-object v0

    :cond_8
    const/4 v1, 0x0

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->OPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p1

    if-nez p1, :cond_16

    return-object v0

    :cond_16
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v0

    new-array v0, v0, [Ljava/lang/String;

    :goto_1c
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_4f

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getDirectObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    :try_start_26
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v3

    if-eqz v3, :cond_32

    check-cast v2, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {v2, p2}, Lcom/itextpdf/text/pdf/PdfArray;->getDirectObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    :cond_32
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isString()Z

    move-result v3

    if-eqz v3, :cond_41

    check-cast v2, Lcom/itextpdf/text/pdf/PdfString;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v2

    aput-object v2, v0, v1

    goto :goto_4c

    :cond_41
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v2

    aput-object v2, v0, v1
    :try_end_47
    .catch Ljava/lang/Exception; {:try_start_26 .. :try_end_47} :catch_48

    goto :goto_4c

    :catch_48
    const-string v2, ""

    aput-object v2, v0, v1

    :goto_4c
    add-int/lit8 v1, v1, 0x1

    goto :goto_1c

    :cond_4f
    return-object v0
.end method

.method private markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V
    .registers 3

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->append:Z

    if-nez v0, :cond_5

    return-void

    :cond_5
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    check-cast v0, Lcom/itextpdf/text/pdf/PdfStamperImp;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfStamperImp;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    return-void
.end method

.method private removeRefFromArray(Lcom/itextpdf/text/pdf/PdfArray;Lcom/itextpdf/text/pdf/PdfObject;)I
    .registers 6

    if-eqz p2, :cond_37

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v0

    if-nez v0, :cond_9

    goto :goto_37

    :cond_9
    check-cast p2, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    const/4 v0, 0x0

    :goto_c
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_32

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v2

    if-nez v2, :cond_1d

    goto :goto_2f

    :cond_1d
    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v1

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v2

    if-ne v1, v2, :cond_2f

    add-int/lit8 v1, v0, -0x1

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->remove(I)Lcom/itextpdf/text/pdf/PdfObject;

    move v0, v1

    :cond_2f
    :goto_2f
    add-int/lit8 v0, v0, 0x1

    goto :goto_c

    :cond_32
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result p1

    return p1

    :cond_37
    :goto_37
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result p1

    return p1
.end method

.method public static splitDAelements(Ljava/lang/String;)[Ljava/lang/Object;
    .registers 11

    :try_start_0
    new-instance v0, Lcom/itextpdf/text/pdf/PRTokeniser;

    new-instance v1, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    new-instance v2, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v2}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    const/4 v3, 0x0

    invoke-static {p0, v3}, Lcom/itextpdf/text/pdf/PdfEncodings;->convertToBytes(Ljava/lang/String;Ljava/lang/String;)[B

    move-result-object p0

    invoke-virtual {v2, p0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource([B)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p0

    invoke-direct {v1, p0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;)V

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/PRTokeniser;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    new-instance p0, Ljava/util/ArrayList;

    invoke-direct {p0}, Ljava/util/ArrayList;-><init>()V

    const/4 v1, 0x3

    new-array v2, v1, [Ljava/lang/Object;

    :goto_20
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    move-result v3

    if-eqz v3, :cond_161

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v3

    sget-object v4, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->COMMENT:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-ne v3, v4, :cond_2f

    goto :goto_20

    :cond_2f
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v3

    sget-object v4, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->OTHER:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-ne v3, v4, :cond_158

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v3

    const-string v4, "Tf"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    const/4 v5, 0x1

    const/4 v6, 0x2

    if-eqz v4, :cond_6b

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lt v3, v6, :cond_153

    const/4 v3, 0x0

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v4

    sub-int/2addr v4, v6

    invoke-virtual {p0, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    aput-object v4, v2, v3

    new-instance v3, Ljava/lang/Float;

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v4

    sub-int/2addr v4, v5

    invoke-virtual {p0, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-direct {v3, v4}, Ljava/lang/Float;-><init>(Ljava/lang/String;)V

    aput-object v3, v2, v5

    goto/16 :goto_153

    :cond_6b
    const-string v4, "g"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_9b

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lt v3, v5, :cond_153

    new-instance v3, Ljava/lang/Float;

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v4

    sub-int/2addr v4, v5

    invoke-virtual {p0, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-direct {v3, v4}, Ljava/lang/Float;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3}, Ljava/lang/Float;->floatValue()F

    move-result v3

    const/4 v4, 0x0

    cmpl-float v4, v3, v4

    if-eqz v4, :cond_153

    new-instance v4, Lcom/itextpdf/text/pdf/GrayColor;

    invoke-direct {v4, v3}, Lcom/itextpdf/text/pdf/GrayColor;-><init>(F)V

    aput-object v4, v2, v6

    goto/16 :goto_153

    :cond_9b
    const-string v4, "rg"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_ed

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lt v3, v1, :cond_153

    new-instance v3, Ljava/lang/Float;

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v4

    sub-int/2addr v4, v1

    invoke-virtual {p0, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-direct {v3, v4}, Ljava/lang/Float;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3}, Ljava/lang/Float;->floatValue()F

    move-result v3

    new-instance v4, Ljava/lang/Float;

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v7

    sub-int/2addr v7, v6

    invoke-virtual {p0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/String;

    invoke-direct {v4, v7}, Ljava/lang/Float;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4}, Ljava/lang/Float;->floatValue()F

    move-result v4

    new-instance v7, Ljava/lang/Float;

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v8

    sub-int/2addr v8, v5

    invoke-virtual {p0, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-direct {v7, v5}, Ljava/lang/Float;-><init>(Ljava/lang/String;)V

    invoke-virtual {v7}, Ljava/lang/Float;->floatValue()F

    move-result v5

    new-instance v7, Lcom/itextpdf/text/BaseColor;

    invoke-direct {v7, v3, v4, v5}, Lcom/itextpdf/text/BaseColor;-><init>(FFF)V

    aput-object v7, v2, v6

    goto :goto_153

    :cond_ed
    const-string v4, "k"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_153

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v3

    const/4 v4, 0x4

    if-lt v3, v4, :cond_153

    new-instance v3, Ljava/lang/Float;

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v7

    sub-int/2addr v7, v4

    invoke-virtual {p0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-direct {v3, v4}, Ljava/lang/Float;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3}, Ljava/lang/Float;->floatValue()F

    move-result v3

    new-instance v4, Ljava/lang/Float;

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v7

    sub-int/2addr v7, v1

    invoke-virtual {p0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/String;

    invoke-direct {v4, v7}, Ljava/lang/Float;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4}, Ljava/lang/Float;->floatValue()F

    move-result v4

    new-instance v7, Ljava/lang/Float;

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v8

    sub-int/2addr v8, v6

    invoke-virtual {p0, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Ljava/lang/String;

    invoke-direct {v7, v8}, Ljava/lang/Float;-><init>(Ljava/lang/String;)V

    invoke-virtual {v7}, Ljava/lang/Float;->floatValue()F

    move-result v7

    new-instance v8, Ljava/lang/Float;

    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v9

    sub-int/2addr v9, v5

    invoke-virtual {p0, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-direct {v8, v5}, Ljava/lang/Float;-><init>(Ljava/lang/String;)V

    invoke-virtual {v8}, Ljava/lang/Float;->floatValue()F

    move-result v5

    new-instance v8, Lcom/itextpdf/text/pdf/CMYKColor;

    invoke-direct {v8, v3, v4, v7, v5}, Lcom/itextpdf/text/pdf/CMYKColor;-><init>(FFFF)V

    aput-object v8, v2, v6

    :cond_153
    :goto_153
    invoke-virtual {p0}, Ljava/util/ArrayList;->clear()V

    goto/16 :goto_20

    :cond_158
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_15f
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_15f} :catch_162

    goto/16 :goto_20

    :cond_161
    return-object v2

    :catch_162
    move-exception p0

    new-instance v0, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v0, p0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v0
.end method

.method private updateByteRange(Lcom/itextpdf/text/pdf/security/PdfPKCS7;Lcom/itextpdf/text/pdf/PdfDictionary;)V
    .registers 7

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->BYTERANGE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p2

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v0

    const/4 v1, 0x0

    :try_start_d
    new-instance v2, Lcom/itextpdf/text/io/RASInputStream;

    new-instance v3, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v3}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->createSourceView()Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object v0

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfArray;->asLongArray()[J

    move-result-object p2

    invoke-virtual {v3, v0, p2}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createRanged(Lcom/itextpdf/text/io/RandomAccessSource;[J)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p2

    invoke-direct {v2, p2}, Lcom/itextpdf/text/io/RASInputStream;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;)V
    :try_end_23
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_23} :catch_46
    .catchall {:try_start_d .. :try_end_23} :catchall_44

    const/16 p2, 0x2000

    :try_start_25
    new-array p2, p2, [B

    :goto_27
    array-length v0, p2

    const/4 v1, 0x0

    invoke-virtual {v2, p2, v1, v0}, Ljava/io/InputStream;->read([BII)I

    move-result v0

    if-lez v0, :cond_33

    invoke-virtual {p1, p2, v1, v0}, Lcom/itextpdf/text/pdf/security/PdfPKCS7;->update([BII)V
    :try_end_32
    .catch Ljava/lang/Exception; {:try_start_25 .. :try_end_32} :catch_41
    .catchall {:try_start_25 .. :try_end_32} :catchall_3e

    goto :goto_27

    :cond_33
    :try_start_33
    invoke-virtual {v2}, Ljava/io/InputStream;->close()V
    :try_end_36
    .catch Ljava/io/IOException; {:try_start_33 .. :try_end_36} :catch_37

    return-void

    :catch_37
    move-exception p1

    new-instance p2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {p2, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw p2

    :catchall_3e
    move-exception p1

    move-object v1, v2

    goto :goto_4d

    :catch_41
    move-exception p1

    move-object v1, v2

    goto :goto_47

    :catchall_44
    move-exception p1

    goto :goto_4d

    :catch_46
    move-exception p1

    :goto_47
    :try_start_47
    new-instance p2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {p2, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw p2
    :try_end_4d
    .catchall {:try_start_47 .. :try_end_4d} :catchall_44

    :goto_4d
    if-eqz v1, :cond_5a

    :try_start_4f
    invoke-virtual {v1}, Ljava/io/InputStream;->close()V
    :try_end_52
    .catch Ljava/io/IOException; {:try_start_4f .. :try_end_52} :catch_53

    goto :goto_5a

    :catch_53
    move-exception p1

    new-instance p2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {p2, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw p2

    :cond_5a
    :goto_5a
    throw p1
.end method


# virtual methods
.method public addSubstitutionFont(Lcom/itextpdf/text/pdf/BaseFont;)V
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->substitutionFonts:Ljava/util/ArrayList;

    if-nez v0, :cond_b

    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->substitutionFonts:Ljava/util/ArrayList;

    :cond_b
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->substitutionFonts:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    return-void
.end method

.method public clearSignatureField(Ljava/lang/String;)Z
    .registers 5

    const/4 v0, 0x0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/AcroFields;->getSignatureNames()Ljava/util/ArrayList;

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_10

    return v1

    :cond_10
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/AcroFields$Item;

    const/4 v0, 0x6

    invoke-virtual {p1, p0, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->markUsed(Lcom/itextpdf/text/pdf/AcroFields;I)V

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v0

    :goto_20
    if-ge v1, v0, :cond_3a

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/AcroFields;->clearSigDic(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/AcroFields;->clearSigDic(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/AcroFields;->clearSigDic(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_20

    :cond_3a
    const/4 p1, 0x1

    return p1
.end method

.method public decodeGenericDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/BaseField;)V
    .registers 20

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v3

    const/4 v4, 0x2

    const/4 v5, 0x0

    const/4 v6, 0x1

    if-eqz v3, :cond_10d

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/AcroFields;->splitDAelements(Ljava/lang/String;)[Ljava/lang/Object;

    move-result-object v3

    aget-object v7, v3, v6

    if-eqz v7, :cond_28

    aget-object v7, v3, v6

    check-cast v7, Ljava/lang/Float;

    invoke-virtual {v7}, Ljava/lang/Float;->floatValue()F

    move-result v7

    invoke-virtual {v2, v7}, Lcom/itextpdf/text/pdf/BaseField;->setFontSize(F)V

    :cond_28
    aget-object v7, v3, v4

    if-eqz v7, :cond_33

    aget-object v7, v3, v4

    check-cast v7, Lcom/itextpdf/text/BaseColor;

    invoke-virtual {v2, v7}, Lcom/itextpdf/text/pdf/BaseField;->setTextColor(Lcom/itextpdf/text/BaseColor;)V

    :cond_33
    aget-object v7, v3, v5

    if-eqz v7, :cond_de

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->DR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    if-eqz v7, :cond_dc

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->FONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v8

    if-eqz v8, :cond_dc

    new-instance v9, Lcom/itextpdf/text/pdf/PdfName;

    aget-object v10, v3, v5

    check-cast v10, Ljava/lang/String;

    invoke-direct {v9, v10}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    invoke-virtual {v8, v9}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    if-eqz v8, :cond_dc

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v9

    const/16 v10, 0xa

    if-ne v9, v10, :cond_dc

    move-object v9, v8

    check-cast v9, Lcom/itextpdf/text/pdf/PRIndirectReference;

    new-instance v10, Lcom/itextpdf/text/pdf/DocumentFont;

    sget-object v11, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v11}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    invoke-direct {v10, v9, v7}, Lcom/itextpdf/text/pdf/DocumentFont;-><init>(Lcom/itextpdf/text/pdf/PRIndirectReference;Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {v2, v10}, Lcom/itextpdf/text/pdf/BaseField;->setFont(Lcom/itextpdf/text/pdf/BaseFont;)V

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/PRIndirectReference;->getNumber()I

    move-result v7

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    iget-object v9, v0, Lcom/itextpdf/text/pdf/AcroFields;->extensionFonts:Ljava/util/HashMap;

    invoke-virtual {v9, v7}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/BaseFont;

    if-nez v9, :cond_d1

    iget-object v10, v0, Lcom/itextpdf/text/pdf/AcroFields;->extensionFonts:Ljava/util/HashMap;

    invoke-virtual {v10, v7}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v10

    if-nez v10, :cond_d1

    invoke-static {v8}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    check-cast v8, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v10, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v8, v10}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v8

    if-eqz v8, :cond_d1

    sget-object v10, Lcom/itextpdf/text/pdf/PdfName;->FONTFILE2:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v8, v10}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v10

    invoke-static {v10}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v10

    check-cast v10, Lcom/itextpdf/text/pdf/PRStream;

    if-nez v10, :cond_b2

    sget-object v10, Lcom/itextpdf/text/pdf/PdfName;->FONTFILE3:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v8, v10}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    invoke-static {v8}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    move-object v10, v8

    check-cast v10, Lcom/itextpdf/text/pdf/PRStream;

    :cond_b2
    if-nez v10, :cond_bb

    iget-object v8, v0, Lcom/itextpdf/text/pdf/AcroFields;->extensionFonts:Ljava/util/HashMap;

    const/4 v10, 0x0

    invoke-virtual {v8, v7, v10}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_d1

    :cond_bb
    :try_start_bb
    const-string v11, "font.ttf"

    const-string v12, "Identity-H"

    const/4 v13, 0x1

    const/4 v14, 0x0

    invoke-static {v10}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;)[B

    move-result-object v15

    const/16 v16, 0x0

    invoke-static/range {v11 .. v16}, Lcom/itextpdf/text/pdf/BaseFont;->createFont(Ljava/lang/String;Ljava/lang/String;ZZ[B[B)Lcom/itextpdf/text/pdf/BaseFont;

    move-result-object v8
    :try_end_cb
    .catch Ljava/lang/Exception; {:try_start_bb .. :try_end_cb} :catch_cc

    move-object v9, v8

    :catch_cc
    iget-object v8, v0, Lcom/itextpdf/text/pdf/AcroFields;->extensionFonts:Ljava/util/HashMap;

    invoke-virtual {v8, v7, v9}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_d1
    :goto_d1
    instance-of v7, v2, Lcom/itextpdf/text/pdf/TextField;

    if-eqz v7, :cond_de

    move-object v7, v2

    check-cast v7, Lcom/itextpdf/text/pdf/TextField;

    invoke-virtual {v7, v9}, Lcom/itextpdf/text/pdf/TextField;->setExtensionFont(Lcom/itextpdf/text/pdf/BaseFont;)V

    goto :goto_de

    :cond_dc
    const/4 v7, 0x1

    goto :goto_df

    :cond_de
    :goto_de
    const/4 v7, 0x0

    :goto_df
    if-eqz v7, :cond_10d

    iget-object v7, v0, Lcom/itextpdf/text/pdf/AcroFields;->localFonts:Ljava/util/HashMap;

    aget-object v8, v3, v5

    invoke-virtual {v7, v8}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/itextpdf/text/pdf/BaseFont;

    if-nez v7, :cond_10a

    sget-object v7, Lcom/itextpdf/text/pdf/AcroFields;->stdFieldFontNames:Ljava/util/HashMap;

    aget-object v3, v3, v5

    invoke-virtual {v7, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, [Ljava/lang/String;

    if-eqz v3, :cond_10d

    :try_start_f9
    const-string v7, "winansi"

    array-length v8, v3

    if-le v8, v6, :cond_100

    aget-object v7, v3, v6

    :cond_100
    aget-object v3, v3, v5

    invoke-static {v3, v7, v5}, Lcom/itextpdf/text/pdf/BaseFont;->createFont(Ljava/lang/String;Ljava/lang/String;Z)Lcom/itextpdf/text/pdf/BaseFont;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/BaseField;->setFont(Lcom/itextpdf/text/pdf/BaseFont;)V
    :try_end_109
    .catch Ljava/lang/Exception; {:try_start_f9 .. :try_end_109} :catch_10d

    goto :goto_10d

    :cond_10a
    invoke-virtual {v2, v7}, Lcom/itextpdf/text/pdf/BaseField;->setFont(Lcom/itextpdf/text/pdf/BaseFont;)V

    :catch_10d
    :cond_10d
    :goto_10d
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->MK:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    if-eqz v3, :cond_145

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->BC:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v7

    invoke-virtual {v0, v7}, Lcom/itextpdf/text/pdf/AcroFields;->getMKColor(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/BaseColor;

    move-result-object v7

    invoke-virtual {v2, v7}, Lcom/itextpdf/text/pdf/BaseField;->setBorderColor(Lcom/itextpdf/text/BaseColor;)V

    if-eqz v7, :cond_129

    const/high16 v7, 0x3f800000

    invoke-virtual {v2, v7}, Lcom/itextpdf/text/pdf/BaseField;->setBorderWidth(F)V

    :cond_129
    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->BG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v7

    invoke-virtual {v0, v7}, Lcom/itextpdf/text/pdf/AcroFields;->getMKColor(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/BaseColor;

    move-result-object v7

    invoke-virtual {v2, v7}, Lcom/itextpdf/text/pdf/BaseField;->setBackgroundColor(Lcom/itextpdf/text/BaseColor;)V

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->R:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v3

    if-eqz v3, :cond_145

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v3

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/BaseField;->setRotation(I)V

    :cond_145
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v3

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/BaseField;->setVisibility(I)V

    const/4 v7, 0x3

    if-eqz v3, :cond_170

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v3

    and-int/lit8 v8, v3, 0x4

    if-eqz v8, :cond_161

    and-int/lit8 v9, v3, 0x2

    if-eqz v9, :cond_161

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/BaseField;->setVisibility(I)V

    goto :goto_170

    :cond_161
    if-eqz v8, :cond_16b

    and-int/lit8 v3, v3, 0x20

    if-eqz v3, :cond_16b

    invoke-virtual {v2, v7}, Lcom/itextpdf/text/pdf/BaseField;->setVisibility(I)V

    goto :goto_170

    :cond_16b
    if-eqz v8, :cond_170

    invoke-virtual {v2, v5}, Lcom/itextpdf/text/pdf/BaseField;->setVisibility(I)V

    :cond_170
    :goto_170
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v3

    if-eqz v3, :cond_17d

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v3

    goto :goto_17e

    :cond_17d
    const/4 v3, 0x0

    :goto_17e
    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/BaseField;->setOptions(I)V

    const/high16 v8, 0x1000000

    and-int/2addr v3, v8

    if-eqz v3, :cond_195

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->MAXLEN:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v3

    if-eqz v3, :cond_192

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v5

    :cond_192
    invoke-virtual {v2, v5}, Lcom/itextpdf/text/pdf/BaseField;->setMaxCharacterLength(I)V

    :cond_195
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->Q:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v3

    if-eqz v3, :cond_1b0

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v5

    if-ne v5, v6, :cond_1a7

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/BaseField;->setAlignment(I)V

    goto :goto_1b0

    :cond_1a7
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v3

    if-ne v3, v4, :cond_1b0

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/BaseField;->setAlignment(I)V

    :cond_1b0
    :goto_1b0
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->BS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    const/4 v5, 0x4

    if-eqz v3, :cond_1fb

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->W:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    if-eqz v1, :cond_1c8

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v1

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/BaseField;->setBorderWidth(F)V

    :cond_1c8
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->S:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v1

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->D:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_1d7

    goto :goto_21a

    :cond_1d7
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->B:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_1e3

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/BaseField;->setBorderStyle(I)V

    goto :goto_21d

    :cond_1e3
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->I:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_1ef

    invoke-virtual {v2, v7}, Lcom/itextpdf/text/pdf/BaseField;->setBorderStyle(I)V

    goto :goto_21d

    :cond_1ef
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->U:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_21d

    invoke-virtual {v2, v5}, Lcom/itextpdf/text/pdf/BaseField;->setBorderStyle(I)V

    goto :goto_21d

    :cond_1fb
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->BORDER:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v1

    if-eqz v1, :cond_21d

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-lt v3, v7, :cond_214

    invoke-virtual {v1, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v3

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/BaseField;->setBorderWidth(F)V

    :cond_214
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    if-lt v1, v5, :cond_21d

    :goto_21a
    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/BaseField;->setBorderStyle(I)V

    :cond_21d
    :goto_21d
    return-void
.end method

.method public doesSignatureFieldExist(Ljava/lang/String;)Z
    .registers 3

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/AcroFields;->getBlankSignatureNames()Ljava/util/ArrayList;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_17

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/AcroFields;->getSignatureNames()Ljava/util/ArrayList;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_15

    goto :goto_17

    :cond_15
    const/4 p1, 0x0

    goto :goto_18

    :cond_17
    :goto_17
    const/4 p1, 0x1

    :goto_18
    return p1
.end method

.method public exportAsFdf(Lcom/itextpdf/text/pdf/FdfWriter;)V
    .registers 6

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_a
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_40

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/Map$Entry;

    invoke-interface {v1}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/AcroFields$Item;

    invoke-interface {v1}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-nez v2, :cond_30

    goto :goto_a

    :cond_30
    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/AcroFields;->getField(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    iget-boolean v3, p0, Lcom/itextpdf/text/pdf/AcroFields;->lastWasString:Z

    if-eqz v3, :cond_3c

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/FdfWriter;->setFieldAsString(Ljava/lang/String;Ljava/lang/String;)Z

    goto :goto_a

    :cond_3c
    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/FdfWriter;->setFieldAsName(Ljava/lang/String;Ljava/lang/String;)Z

    goto :goto_a

    :cond_40
    return-void
.end method

.method public extractRevision(Ljava/lang/String;)Ljava/io/InputStream;
    .registers 11

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/AcroFields;->getSignatureNames()Ljava/util/ArrayList;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getTranslatedFieldName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_11

    const/4 p1, 0x0

    return-object p1

    :cond_11
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, [I

    const/4 v0, 0x0

    aget p1, p1, v0

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v0

    new-instance v1, Lcom/itextpdf/text/io/RASInputStream;

    new-instance v8, Lcom/itextpdf/text/io/WindowRandomAccessSource;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->createSourceView()Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object v3

    const-wide/16 v4, 0x0

    int-to-long v6, p1

    move-object v2, v8

    invoke-direct/range {v2 .. v7}, Lcom/itextpdf/text/io/WindowRandomAccessSource;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;JJ)V

    invoke-direct {v1, v8}, Lcom/itextpdf/text/io/RASInputStream;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;)V

    return-object v1
.end method

.method fill()V
    .registers 17

    move-object/from16 v0, p0

    new-instance v1, Ljava/util/LinkedHashMap;

    invoke-direct {v1}, Ljava/util/LinkedHashMap;-><init>()V

    iput-object v1, v0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    iget-object v1, v0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v1

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ACROFORM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-nez v1, :cond_1e

    return-void

    :cond_1e
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->NEEDAPPEARANCES:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsBoolean(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfBoolean;

    move-result-object v2

    const/4 v3, 0x0

    const/4 v4, 0x1

    if-eqz v2, :cond_33

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfBoolean;->booleanValue()Z

    move-result v2

    if-nez v2, :cond_2f

    goto :goto_33

    :cond_2f
    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/AcroFields;->setGenerateAppearances(Z)V

    goto :goto_36

    :cond_33
    :goto_33
    invoke-virtual {v0, v4}, Lcom/itextpdf/text/pdf/AcroFields;->setGenerateAppearances(Z)V

    :goto_36
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FIELDS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfArray;

    if-eqz v2, :cond_1cf

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v5

    if-nez v5, :cond_4c

    goto/16 :goto_1cf

    :cond_4c
    const/4 v5, 0x1

    :goto_4d
    iget-object v6, v0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfReader;->getNumberOfPages()I

    move-result v6

    if-gt v5, v6, :cond_149

    iget-object v6, v0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v6, v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPageNRelease(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v7

    invoke-static {v7, v6}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/text/pdf/PdfArray;

    if-nez v6, :cond_6c

    :cond_69
    const/4 v10, 0x0

    goto/16 :goto_144

    :cond_6c
    const/4 v7, 0x0

    :goto_6d
    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v8

    if-ge v7, v8, :cond_69

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PdfArray;->getAsDict(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v8

    if-nez v8, :cond_83

    :goto_79
    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PdfArray;->getAsIndirectObject(I)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v8

    invoke-static {v8}, Lcom/itextpdf/text/pdf/PdfReader;->releaseLastXrefPartial(Lcom/itextpdf/text/pdf/PdfObject;)V

    const/4 v10, 0x0

    goto/16 :goto_13f

    :cond_83
    sget-object v9, Lcom/itextpdf/text/pdf/PdfName;->WIDGET:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v10, Lcom/itextpdf/text/pdf/PdfName;->SUBTYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v8, v10}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v10

    invoke-virtual {v9, v10}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-nez v9, :cond_92

    goto :goto_79

    :cond_92
    new-instance v9, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v9}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    invoke-virtual {v9, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->putAll(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    const-string v10, ""

    const/4 v11, 0x0

    move-object v12, v11

    move-object v13, v12

    move-object v11, v10

    move-object v10, v8

    :goto_a1
    if-eqz v10, :cond_f8

    invoke-virtual {v9, v10}, Lcom/itextpdf/text/pdf/PdfDictionary;->mergeDifferent(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    sget-object v14, Lcom/itextpdf/text/pdf/PdfName;->T:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v10, v14}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v14

    if-eqz v14, :cond_c7

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v14}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v15, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, "."

    invoke-virtual {v15, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v15, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object v11, v3

    :cond_c7
    if-nez v12, :cond_dc

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v10, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-eqz v3, :cond_dc

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v10, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    move-object v12, v3

    :cond_dc
    if-nez v13, :cond_f0

    if-eqz v14, :cond_f0

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v10, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-nez v3, :cond_ef

    if-eqz v12, :cond_ef

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v10, v3, v12}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_ef
    move-object v13, v10

    :cond_f0
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->PARENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v10, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v10

    const/4 v3, 0x0

    goto :goto_a1

    :cond_f8
    invoke-virtual {v11}, Ljava/lang/String;->length()I

    move-result v3

    if-lez v3, :cond_109

    invoke-virtual {v11}, Ljava/lang/String;->length()I

    move-result v3

    sub-int/2addr v3, v4

    const/4 v10, 0x0

    invoke-virtual {v11, v10, v3}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v11

    goto :goto_10a

    :cond_109
    const/4 v10, 0x0

    :goto_10a
    iget-object v3, v0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v3, v11}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/AcroFields$Item;

    if-nez v3, :cond_11e

    new-instance v3, Lcom/itextpdf/text/pdf/AcroFields$Item;

    invoke-direct {v3}, Lcom/itextpdf/text/pdf/AcroFields$Item;-><init>()V

    iget-object v12, v0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v12, v11, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_11e
    if-nez v13, :cond_124

    invoke-virtual {v3, v8}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addValue(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    goto :goto_127

    :cond_124
    invoke-virtual {v3, v13}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addValue(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    :goto_127
    invoke-virtual {v3, v8}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addWidget(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PdfArray;->getAsIndirectObject(I)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v8

    invoke-virtual {v3, v8}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addWidgetRef(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    if-eqz v1, :cond_136

    invoke-virtual {v9, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->mergeDifferent(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    :cond_136
    invoke-virtual {v3, v9}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addMerged(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addPage(I)V

    invoke-virtual {v3, v7}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addTabOrder(I)V

    :goto_13f
    add-int/lit8 v7, v7, 0x1

    const/4 v3, 0x0

    goto/16 :goto_6d

    :goto_144
    add-int/lit8 v5, v5, 0x1

    const/4 v3, 0x0

    goto/16 :goto_4d

    :cond_149
    const/4 v10, 0x0

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->SIGFLAGS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    if-eqz v1, :cond_1cf

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    and-int/2addr v1, v4

    if-eq v1, v4, :cond_15b

    goto/16 :goto_1cf

    :cond_15b
    :goto_15b
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    if-ge v10, v1, :cond_1cf

    invoke-virtual {v2, v10}, Lcom/itextpdf/text/pdf/PdfArray;->getAsDict(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v1

    if-nez v1, :cond_16f

    :goto_167
    invoke-virtual {v2, v10}, Lcom/itextpdf/text/pdf/PdfArray;->getAsIndirectObject(I)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->releaseLastXrefPartial(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_1cc

    :cond_16f
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->WIDGET:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->SUBTYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_17e

    goto :goto_167

    :cond_17e
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->KIDS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfArray;

    if-eqz v3, :cond_18d

    goto :goto_1cc

    :cond_18d
    new-instance v3, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v3}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->putAll(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->T:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v1

    if-nez v1, :cond_19e

    goto :goto_1cc

    :cond_19e
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v1

    iget-object v4, v0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v4, v1}, Ljava/util/Map;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1ab

    goto :goto_1cc

    :cond_1ab
    new-instance v4, Lcom/itextpdf/text/pdf/AcroFields$Item;

    invoke-direct {v4}, Lcom/itextpdf/text/pdf/AcroFields$Item;-><init>()V

    iget-object v5, v0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v5, v1, v4}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addValue(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addWidget(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {v2, v10}, Lcom/itextpdf/text/pdf/PdfArray;->getAsIndirectObject(I)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v1

    invoke-virtual {v4, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addWidgetRef(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addMerged(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    const/4 v1, -0x1

    invoke-virtual {v4, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addPage(I)V

    invoke-virtual {v4, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->addTabOrder(I)V

    :goto_1cc
    add-int/lit8 v10, v10, 0x1

    goto :goto_15b

    :cond_1cf
    :goto_1cf
    return-void
.end method

.method getAppearance(Lcom/itextpdf/text/pdf/PdfDictionary;Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfAppearance;
    .registers 6

    const/4 v0, 0x1

    new-array v0, v0, [Ljava/lang/String;

    const/4 v1, 0x0

    aput-object p2, v0, v1

    invoke-virtual {p0, p1, v0, p3}, Lcom/itextpdf/text/pdf/AcroFields;->getAppearance(Lcom/itextpdf/text/pdf/PdfDictionary;[Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfAppearance;

    move-result-object p1

    return-object p1
.end method

.method getAppearance(Lcom/itextpdf/text/pdf/PdfDictionary;[Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfAppearance;
    .registers 13

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v0

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->BTN:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v1

    const/16 v2, 0x10e

    const/16 v3, 0x5a

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    if-eqz v1, :cond_67

    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p2

    if-eqz p2, :cond_28

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p2

    const p3, 0x8000

    and-int/2addr p2, p3

    if-eqz p2, :cond_28

    const/4 v6, 0x1

    :cond_28
    new-instance p2, Lcom/itextpdf/text/pdf/RadioCheckField;

    iget-object p3, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-direct {p2, p3, v4, v4, v4}, Lcom/itextpdf/text/pdf/RadioCheckField;-><init>(Lcom/itextpdf/text/pdf/PdfWriter;Lcom/itextpdf/text/Rectangle;Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {p0, p1, p2}, Lcom/itextpdf/text/pdf/AcroFields;->decodeGenericDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/BaseField;)V

    sget-object p3, Lcom/itextpdf/text/pdf/PdfName;->RECT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p3

    invoke-static {p3}, Lcom/itextpdf/text/pdf/PdfReader;->getNormalizedRectangle(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/Rectangle;

    move-result-object p3

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/RadioCheckField;->getRotation()I

    move-result v0

    if-eq v0, v3, :cond_48

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/RadioCheckField;->getRotation()I

    move-result v0

    if-ne v0, v2, :cond_4c

    :cond_48
    invoke-virtual {p3}, Lcom/itextpdf/text/Rectangle;->rotate()Lcom/itextpdf/text/Rectangle;

    move-result-object p3

    :cond_4c
    invoke-virtual {p2, p3}, Lcom/itextpdf/text/pdf/RadioCheckField;->setBox(Lcom/itextpdf/text/Rectangle;)V

    if-nez v6, :cond_55

    const/4 p3, 0x3

    invoke-virtual {p2, p3}, Lcom/itextpdf/text/pdf/RadioCheckField;->setCheckType(I)V

    :cond_55
    sget-object p3, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object p1

    sget-object p3, Lcom/itextpdf/text/pdf/PdfName;->Off:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result p1

    xor-int/2addr p1, v5

    invoke-virtual {p2, v6, p1}, Lcom/itextpdf/text/pdf/RadioCheckField;->getAppearance(ZZ)Lcom/itextpdf/text/pdf/PdfAppearance;

    move-result-object p1

    return-object p1

    :cond_67
    iput v6, p0, Lcom/itextpdf/text/pdf/AcroFields;->topFirst:I

    array-length v1, p2

    if-lez v1, :cond_6f

    aget-object v1, p2, v6

    goto :goto_70

    :cond_6f
    move-object v1, v4

    :goto_70
    iget-object v7, p0, Lcom/itextpdf/text/pdf/AcroFields;->fieldCache:Ljava/util/Map;

    if-eqz v7, :cond_8b

    iget-object v7, p0, Lcom/itextpdf/text/pdf/AcroFields;->fieldCache:Ljava/util/Map;

    invoke-interface {v7, p3}, Ljava/util/Map;->containsKey(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_7d

    goto :goto_8b

    :cond_7d
    iget-object v2, p0, Lcom/itextpdf/text/pdf/AcroFields;->fieldCache:Ljava/util/Map;

    invoke-interface {v2, p3}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Lcom/itextpdf/text/pdf/TextField;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-virtual {p3, v2}, Lcom/itextpdf/text/pdf/TextField;->setWriter(Lcom/itextpdf/text/pdf/PdfWriter;)V

    goto :goto_cc

    :cond_8b
    :goto_8b
    new-instance v7, Lcom/itextpdf/text/pdf/TextField;

    iget-object v8, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-direct {v7, v8, v4, v4}, Lcom/itextpdf/text/pdf/TextField;-><init>(Lcom/itextpdf/text/pdf/PdfWriter;Lcom/itextpdf/text/Rectangle;Ljava/lang/String;)V

    iget v4, p0, Lcom/itextpdf/text/pdf/AcroFields;->extraMarginLeft:F

    iget v8, p0, Lcom/itextpdf/text/pdf/AcroFields;->extraMarginTop:F

    invoke-virtual {v7, v4, v8}, Lcom/itextpdf/text/pdf/TextField;->setExtraMargin(FF)V

    const/4 v4, 0x0

    invoke-virtual {v7, v4}, Lcom/itextpdf/text/pdf/TextField;->setBorderWidth(F)V

    iget-object v4, p0, Lcom/itextpdf/text/pdf/AcroFields;->substitutionFonts:Ljava/util/ArrayList;

    invoke-virtual {v7, v4}, Lcom/itextpdf/text/pdf/TextField;->setSubstitutionFonts(Ljava/util/ArrayList;)V

    invoke-virtual {p0, p1, v7}, Lcom/itextpdf/text/pdf/AcroFields;->decodeGenericDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/BaseField;)V

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->RECT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v4

    invoke-static {v4}, Lcom/itextpdf/text/pdf/PdfReader;->getNormalizedRectangle(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/Rectangle;

    move-result-object v4

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/TextField;->getRotation()I

    move-result v8

    if-eq v8, v3, :cond_bb

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/TextField;->getRotation()I

    move-result v3

    if-ne v3, v2, :cond_bf

    :cond_bb
    invoke-virtual {v4}, Lcom/itextpdf/text/Rectangle;->rotate()Lcom/itextpdf/text/Rectangle;

    move-result-object v4

    :cond_bf
    invoke-virtual {v7, v4}, Lcom/itextpdf/text/pdf/TextField;->setBox(Lcom/itextpdf/text/Rectangle;)V

    iget-object v2, p0, Lcom/itextpdf/text/pdf/AcroFields;->fieldCache:Ljava/util/Map;

    if-eqz v2, :cond_cb

    iget-object v2, p0, Lcom/itextpdf/text/pdf/AcroFields;->fieldCache:Ljava/util/Map;

    invoke-interface {v2, p3, v7}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_cb
    move-object p3, v7

    :goto_cc
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_e5

    array-length p1, p2

    if-lez p1, :cond_e0

    aget-object p1, p2, v6

    if-eqz p1, :cond_e0

    aget-object p1, p2, v6

    invoke-virtual {p3, p1}, Lcom/itextpdf/text/pdf/TextField;->setText(Ljava/lang/String;)V

    :cond_e0
    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/TextField;->getAppearance()Lcom/itextpdf/text/pdf/PdfAppearance;

    move-result-object p1

    return-object p1

    :cond_e5
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->CH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1a9

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->OPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p1

    if-eqz p1, :cond_100

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p1

    goto :goto_101

    :cond_100
    const/4 p1, 0x0

    :goto_101
    const/high16 v2, 0x20000

    and-int/2addr p1, v2

    if-eqz p1, :cond_110

    if-nez v0, :cond_110

    invoke-virtual {p3, v1}, Lcom/itextpdf/text/pdf/TextField;->setText(Ljava/lang/String;)V

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/TextField;->getAppearance()Lcom/itextpdf/text/pdf/PdfAppearance;

    move-result-object p1

    return-object p1

    :cond_110
    if-eqz v0, :cond_19e

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    new-array v2, v2, [Ljava/lang/String;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    new-array v3, v3, [Ljava/lang/String;

    const/4 v4, 0x0

    :goto_11f
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v7

    if-ge v4, v7, :cond_153

    invoke-virtual {v0, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v7

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfObject;->isString()Z

    move-result v8

    if-eqz v8, :cond_13a

    check-cast v7, Lcom/itextpdf/text/pdf/PdfString;

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v7

    aput-object v7, v3, v4

    aput-object v7, v2, v4

    goto :goto_150

    :cond_13a
    check-cast v7, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {v7, v6}, Lcom/itextpdf/text/pdf/PdfArray;->getAsString(I)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v8

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v8

    aput-object v8, v3, v4

    invoke-virtual {v7, v5}, Lcom/itextpdf/text/pdf/PdfArray;->getAsString(I)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v7

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v7

    aput-object v7, v2, v4

    :goto_150
    add-int/lit8 v4, v4, 0x1

    goto :goto_11f

    :cond_153
    if-eqz p1, :cond_16e

    :goto_155
    array-length p1, v2

    if-ge v6, p1, :cond_166

    aget-object p1, v3, v6

    invoke-virtual {v1, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_163

    aget-object v1, v2, v6

    goto :goto_166

    :cond_163
    add-int/lit8 v6, v6, 0x1

    goto :goto_155

    :cond_166
    :goto_166
    invoke-virtual {p3, v1}, Lcom/itextpdf/text/pdf/TextField;->setText(Ljava/lang/String;)V

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/TextField;->getAppearance()Lcom/itextpdf/text/pdf/PdfAppearance;

    move-result-object p1

    return-object p1

    :cond_16e
    new-instance p1, Ljava/util/ArrayList;

    invoke-direct {p1}, Ljava/util/ArrayList;-><init>()V

    const/4 v0, 0x0

    :goto_174
    array-length v1, v3

    if-ge v0, v1, :cond_195

    const/4 v1, 0x0

    :goto_178
    array-length v4, p2

    if-ge v1, v4, :cond_192

    aget-object v4, p2, v1

    if-eqz v4, :cond_18f

    aget-object v5, v3, v0

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_18f

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {p1, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_192

    :cond_18f
    add-int/lit8 v1, v1, 0x1

    goto :goto_178

    :cond_192
    :goto_192
    add-int/lit8 v0, v0, 0x1

    goto :goto_174

    :cond_195
    invoke-virtual {p3, v2}, Lcom/itextpdf/text/pdf/TextField;->setChoices([Ljava/lang/String;)V

    invoke-virtual {p3, v3}, Lcom/itextpdf/text/pdf/TextField;->setChoiceExports([Ljava/lang/String;)V

    invoke-virtual {p3, p1}, Lcom/itextpdf/text/pdf/TextField;->setChoiceSelections(Ljava/util/ArrayList;)V

    :cond_19e
    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/TextField;->getListAppearance()Lcom/itextpdf/text/pdf/PdfAppearance;

    move-result-object p1

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/TextField;->getTopFirst()I

    move-result p2

    iput p2, p0, Lcom/itextpdf/text/pdf/AcroFields;->topFirst:I

    return-object p1

    :cond_1a9
    new-instance p1, Lcom/itextpdf/text/DocumentException;

    new-array p2, v6, [Ljava/lang/Object;

    const-string p3, "an.appearance.was.requested.without.a.variable.text.field"

    invoke-static {p3, p2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/DocumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public getAppearanceStates(Ljava/lang/String;)[Ljava/lang/String;
    .registers 10

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/AcroFields$Item;

    const/4 v0, 0x0

    if-nez p1, :cond_c

    return-object v0

    :cond_c
    new-instance v1, Ljava/util/LinkedHashSet;

    invoke-direct {v1}, Ljava/util/LinkedHashSet;-><init>()V

    const/4 v2, 0x0

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->OPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v4

    if-eqz v4, :cond_26

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_5b

    :cond_26
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->OPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v3

    if-eqz v3, :cond_5b

    const/4 v4, 0x0

    :goto_2f
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_5b

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getDirectObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v6

    const/4 v7, 0x3

    if-eq v6, v7, :cond_4d

    const/4 v7, 0x5

    if-eq v6, v7, :cond_45

    move-object v5, v0

    goto :goto_4f

    :cond_45
    check-cast v5, Lcom/itextpdf/text/pdf/PdfArray;

    const/4 v6, 0x1

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfArray;->getAsString(I)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v5

    goto :goto_4f

    :cond_4d
    check-cast v5, Lcom/itextpdf/text/pdf/PdfString;

    :goto_4f
    if-eqz v5, :cond_58

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v1, v5}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    :cond_58
    add-int/lit8 v4, v4, 0x1

    goto :goto_2f

    :cond_5b
    :goto_5b
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v0

    if-ge v2, v0, :cond_9a

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    if-nez v0, :cond_6e

    goto :goto_97

    :cond_6e
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->N:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    if-nez v0, :cond_77

    goto :goto_97

    :cond_77
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_7f
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_97

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfName;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_7f

    :cond_97
    :goto_97
    add-int/lit8 v2, v2, 0x1

    goto :goto_5b

    :cond_9a
    invoke-virtual {v1}, Ljava/util/HashSet;->size()I

    move-result p1

    new-array p1, p1, [Ljava/lang/String;

    invoke-virtual {v1, p1}, Ljava/util/HashSet;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object p1

    check-cast p1, [Ljava/lang/String;

    return-object p1
.end method

.method public getBlankSignatureNames()Ljava/util/ArrayList;
    .registers 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/AcroFields;->getSignatureNames()Ljava/util/ArrayList;

    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iget-object v1, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_12
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_4d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/AcroFields$Item;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->SIG:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v3

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_38

    goto :goto_12

    :cond_38
    iget-object v3, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_45

    goto :goto_12

    :cond_45
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_12

    :cond_4d
    return-object v0
.end method

.method public getField(Ljava/lang/String;)Ljava/lang/String;
    .registers 7

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/XfaForm;->isXfaPresent()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_21

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v0, p1, p0}, Lcom/itextpdf/text/pdf/XfaForm;->findFieldName(Ljava/lang/String;Lcom/itextpdf/text/pdf/AcroFields;)Ljava/lang/String;

    move-result-object p1

    if-nez p1, :cond_12

    return-object v1

    :cond_12
    invoke-static {p1}, Lcom/itextpdf/text/pdf/XfaForm$Xml2Som;->getShortName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/XfaForm;->findDatasetsNode(Ljava/lang/String;)Lorg/w3c/dom/Node;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/XfaForm;->getNodeText(Lorg/w3c/dom/Node;)Ljava/lang/String;

    move-result-object p1

    return-object p1

    :cond_21
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/AcroFields$Item;

    if-nez p1, :cond_2c

    return-object v1

    :cond_2c
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->lastWasString:Z

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v1

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-nez v2, :cond_42

    const-string p1, ""

    return-object p1

    :cond_42
    instance-of v3, v2, Lcom/itextpdf/text/pdf/PRStream;

    if-eqz v3, :cond_59

    :try_start_46
    check-cast v2, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;)[B

    move-result-object p1

    new-instance v0, Ljava/lang/String;

    invoke-direct {v0, p1}, Ljava/lang/String;-><init>([B)V
    :try_end_51
    .catch Ljava/io/IOException; {:try_start_46 .. :try_end_51} :catch_52

    return-object v0

    :catch_52
    move-exception p1

    new-instance v0, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v0

    :cond_59
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v3

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->BTN:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    const/4 v4, 0x1

    if-eqz v3, :cond_b3

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    if-eqz v1, :cond_75

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    goto :goto_76

    :cond_75
    const/4 v1, 0x0

    :goto_76
    const/high16 v3, 0x10000

    and-int/2addr v1, v3

    if-eqz v1, :cond_7e

    const-string p1, ""

    return-object p1

    :cond_7e
    const-string v1, ""

    instance-of v3, v2, Lcom/itextpdf/text/pdf/PdfName;

    if-eqz v3, :cond_8d

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    goto :goto_97

    :cond_8d
    instance-of v3, v2, Lcom/itextpdf/text/pdf/PdfString;

    if-eqz v3, :cond_97

    check-cast v2, Lcom/itextpdf/text/pdf/PdfString;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v1

    :cond_97
    :goto_97
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->OPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p1

    if-eqz p1, :cond_b2

    :try_start_a3
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsString(I)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object p1
    :try_end_af
    .catch Ljava/lang/Exception; {:try_start_a3 .. :try_end_af} :catch_b2

    :try_start_af
    iput-boolean v4, p0, Lcom/itextpdf/text/pdf/AcroFields;->lastWasString:Z
    :try_end_b1
    .catch Ljava/lang/Exception; {:try_start_af .. :try_end_b1} :catch_b1

    :catch_b1
    move-object v1, p1

    :catch_b2
    :cond_b2
    return-object v1

    :cond_b3
    instance-of p1, v2, Lcom/itextpdf/text/pdf/PdfString;

    if-eqz p1, :cond_c0

    iput-boolean v4, p0, Lcom/itextpdf/text/pdf/AcroFields;->lastWasString:Z

    check-cast v2, Lcom/itextpdf/text/pdf/PdfString;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object p1

    return-object p1

    :cond_c0
    instance-of p1, v2, Lcom/itextpdf/text/pdf/PdfName;

    if-eqz p1, :cond_cd

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    return-object p1

    :cond_cd
    const-string p1, ""

    return-object p1
.end method

.method public getFieldCache()Ljava/util/Map;
    .registers 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/text/pdf/TextField;",
            ">;"
        }
    .end annotation

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fieldCache:Ljava/util/Map;

    return-object v0
.end method

.method public getFieldItem(Ljava/lang/String;)Lcom/itextpdf/text/pdf/AcroFields$Item;
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/XfaForm;->isXfaPresent()Z

    move-result v0

    if-eqz v0, :cond_12

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v0, p1, p0}, Lcom/itextpdf/text/pdf/XfaForm;->findFieldName(Ljava/lang/String;Lcom/itextpdf/text/pdf/AcroFields;)Ljava/lang/String;

    move-result-object p1

    if-nez p1, :cond_12

    const/4 p1, 0x0

    return-object p1

    :cond_12
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/AcroFields$Item;

    return-object p1
.end method

.method public getFieldPositions(Ljava/lang/String;)Ljava/util/List;
    .registers 12
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/List<",
            "Lcom/itextpdf/text/pdf/AcroFields$FieldPosition;",
            ">;"
        }
    .end annotation

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldItem(Ljava/lang/String;)Lcom/itextpdf/text/pdf/AcroFields$Item;

    move-result-object p1

    if-nez p1, :cond_8

    const/4 p1, 0x0

    return-object p1

    :cond_8
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    const/4 v1, 0x0

    :goto_e
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v2

    if-ge v1, v2, :cond_c6

    :try_start_14
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->RECT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v2

    if-nez v2, :cond_22

    goto/16 :goto_c2

    :cond_22
    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getNormalizedRectangle(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/Rectangle;

    move-result-object v2

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getPage(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    move-result v3

    iget-object v4, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPageRotation(I)I

    move-result v4

    new-instance v5, Lcom/itextpdf/text/pdf/AcroFields$FieldPosition;

    invoke-direct {v5}, Lcom/itextpdf/text/pdf/AcroFields$FieldPosition;-><init>()V

    iput v3, v5, Lcom/itextpdf/text/pdf/AcroFields$FieldPosition;->page:I

    if-eqz v4, :cond_bd

    iget-object v6, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v6, v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPageSize(I)Lcom/itextpdf/text/Rectangle;

    move-result-object v3

    const/16 v6, 0x5a

    if-eq v4, v6, :cond_9a

    const/16 v6, 0xb4

    if-eq v4, v6, :cond_70

    const/16 v6, 0x10e

    if-eq v4, v6, :cond_50

    goto :goto_ba

    :cond_50
    new-instance v4, Lcom/itextpdf/text/Rectangle;

    invoke-virtual {v3}, Lcom/itextpdf/text/Rectangle;->getTop()F

    move-result v6

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getBottom()F

    move-result v7

    sub-float/2addr v6, v7

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getLeft()F

    move-result v7

    invoke-virtual {v3}, Lcom/itextpdf/text/Rectangle;->getTop()F

    move-result v3

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getTop()F

    move-result v8

    sub-float/2addr v3, v8

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getRight()F

    move-result v2

    invoke-direct {v4, v6, v7, v3, v2}, Lcom/itextpdf/text/Rectangle;-><init>(FFFF)V

    goto :goto_b9

    :cond_70
    new-instance v4, Lcom/itextpdf/text/Rectangle;

    invoke-virtual {v3}, Lcom/itextpdf/text/Rectangle;->getRight()F

    move-result v6

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getLeft()F

    move-result v7

    sub-float/2addr v6, v7

    invoke-virtual {v3}, Lcom/itextpdf/text/Rectangle;->getTop()F

    move-result v7

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getBottom()F

    move-result v8

    sub-float/2addr v7, v8

    invoke-virtual {v3}, Lcom/itextpdf/text/Rectangle;->getRight()F

    move-result v8

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getRight()F

    move-result v9

    sub-float/2addr v8, v9

    invoke-virtual {v3}, Lcom/itextpdf/text/Rectangle;->getTop()F

    move-result v3

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getTop()F

    move-result v2

    sub-float/2addr v3, v2

    invoke-direct {v4, v6, v7, v8, v3}, Lcom/itextpdf/text/Rectangle;-><init>(FFFF)V

    goto :goto_b9

    :cond_9a
    new-instance v4, Lcom/itextpdf/text/Rectangle;

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getBottom()F

    move-result v6

    invoke-virtual {v3}, Lcom/itextpdf/text/Rectangle;->getRight()F

    move-result v7

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getLeft()F

    move-result v8

    sub-float/2addr v7, v8

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getTop()F

    move-result v8

    invoke-virtual {v3}, Lcom/itextpdf/text/Rectangle;->getRight()F

    move-result v3

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getRight()F

    move-result v2

    sub-float/2addr v3, v2

    invoke-direct {v4, v6, v7, v8, v3}, Lcom/itextpdf/text/Rectangle;-><init>(FFFF)V

    :goto_b9
    move-object v2, v4

    :goto_ba
    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->normalize()V

    :cond_bd
    iput-object v2, v5, Lcom/itextpdf/text/pdf/AcroFields$FieldPosition;->position:Lcom/itextpdf/text/Rectangle;

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_c2
    .catch Ljava/lang/Exception; {:try_start_14 .. :try_end_c2} :catch_c2

    :catch_c2
    :goto_c2
    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_e

    :cond_c6
    return-object v0
.end method

.method public getFieldRichValue(Ljava/lang/String;)Ljava/lang/String;
    .registers 4

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/XfaForm;->isXfaPresent()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_a

    return-object v1

    :cond_a
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/AcroFields$Item;

    if-nez p1, :cond_15

    return-object v1

    :cond_15
    const/4 v0, 0x0

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->RV:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object p1

    if-eqz p1, :cond_26

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfString;->toString()Ljava/lang/String;

    move-result-object v1

    :cond_26
    return-object v1
.end method

.method public getFieldType(Ljava/lang/String;)I
    .registers 5

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldItem(Ljava/lang/String;)Lcom/itextpdf/text/pdf/AcroFields$Item;

    move-result-object p1

    const/4 v0, 0x0

    if-nez p1, :cond_8

    return v0

    :cond_8
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v1

    if-nez v1, :cond_15

    return v0

    :cond_15
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p1

    if-eqz p1, :cond_22

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p1

    goto :goto_23

    :cond_22
    const/4 p1, 0x0

    :goto_23
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->BTN:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3c

    const/high16 v0, 0x10000

    and-int/2addr v0, p1

    if-eqz v0, :cond_32

    const/4 p1, 0x1

    return p1

    :cond_32
    const v0, 0x8000

    and-int/2addr p1, v0

    if-eqz p1, :cond_3a

    const/4 p1, 0x3

    return p1

    :cond_3a
    const/4 p1, 0x2

    return p1

    :cond_3c
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_46

    const/4 p1, 0x4

    return p1

    :cond_46
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->CH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_57

    const/high16 v0, 0x20000

    and-int/2addr p1, v0

    if-eqz p1, :cond_55

    const/4 p1, 0x6

    return p1

    :cond_55
    const/4 p1, 0x5

    return p1

    :cond_57
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->SIG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_61

    const/4 p1, 0x7

    return p1

    :cond_61
    return v0
.end method

.method public getFields()Ljava/util/Map;
    .registers 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/text/pdf/AcroFields$Item;",
            ">;"
        }
    .end annotation

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    return-object v0
.end method

.method public getListOptionDisplay(Ljava/lang/String;)[Ljava/lang/String;
    .registers 3

    const/4 v0, 0x1

    invoke-direct {p0, p1, v0}, Lcom/itextpdf/text/pdf/AcroFields;->getListOption(Ljava/lang/String;I)[Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method

.method public getListOptionExport(Ljava/lang/String;)[Ljava/lang/String;
    .registers 3

    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, Lcom/itextpdf/text/pdf/AcroFields;->getListOption(Ljava/lang/String;I)[Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method

.method public getListSelection(Ljava/lang/String;)[Ljava/lang/String;
    .registers 7

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getField(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_a

    new-array v0, v1, [Ljava/lang/String;

    goto :goto_10

    :cond_a
    const/4 v2, 0x1

    new-array v2, v2, [Ljava/lang/String;

    aput-object v0, v2, v1

    move-object v0, v2

    :goto_10
    iget-object v2, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v2, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/AcroFields$Item;

    if-nez v2, :cond_1b

    return-object v0

    :cond_1b
    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->I:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v2

    if-nez v2, :cond_28

    return-object v0

    :cond_28
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v0

    new-array v0, v0, [Ljava/lang/String;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getListOptionExport(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfArray;->listIterator()Ljava/util/ListIterator;

    move-result-object v2

    :goto_36
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_4e

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfNumber;

    add-int/lit8 v4, v1, 0x1

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v3

    aget-object v3, p1, v3

    aput-object v3, v0, v1

    move v1, v4

    goto :goto_36

    :cond_4e
    return-object v0
.end method

.method getMKColor(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/BaseColor;
    .registers 7

    const/4 v0, 0x0

    if-nez p1, :cond_4

    return-object v0

    :cond_4
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    const/4 v2, 0x0

    const/4 v3, 0x1

    if-eq v1, v3, :cond_62

    const/4 v4, 0x2

    packed-switch v1, :pswitch_data_70

    return-object v0

    :pswitch_11
    new-instance v0, Lcom/itextpdf/text/pdf/CMYKColor;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v1

    invoke-virtual {p1, v3}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v2

    invoke-virtual {p1, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v3

    const/4 v4, 0x3

    invoke-virtual {p1, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result p1

    invoke-direct {v0, v1, v2, v3, p1}, Lcom/itextpdf/text/pdf/CMYKColor;-><init>(FFFF)V

    return-object v0

    :pswitch_38
    new-instance v0, Lcom/itextpdf/text/BaseColor;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/ExtendedColor;->normalize(F)F

    move-result v1

    invoke-virtual {p1, v3}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/ExtendedColor;->normalize(F)F

    move-result v2

    invoke-virtual {p1, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/ExtendedColor;->normalize(F)F

    move-result p1

    invoke-direct {v0, v1, v2, p1}, Lcom/itextpdf/text/BaseColor;-><init>(FFF)V

    return-object v0

    :cond_62
    new-instance v0, Lcom/itextpdf/text/pdf/GrayColor;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result p1

    invoke-direct {v0, p1}, Lcom/itextpdf/text/pdf/GrayColor;-><init>(F)V

    return-object v0

    :pswitch_data_70
    .packed-switch 0x3
        :pswitch_38
        :pswitch_11
    .end packed-switch
.end method

.method public getNewPushbuttonFromField(Ljava/lang/String;)Lcom/itextpdf/text/pdf/PushbuttonField;
    .registers 3

    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lcom/itextpdf/text/pdf/AcroFields;->getNewPushbuttonFromField(Ljava/lang/String;I)Lcom/itextpdf/text/pdf/PushbuttonField;

    move-result-object p1

    return-object p1
.end method

.method public getNewPushbuttonFromField(Ljava/lang/String;I)Lcom/itextpdf/text/pdf/PushbuttonField;
    .registers 9

    :try_start_0
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldType(Ljava/lang/String;)I

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eq v0, v2, :cond_9

    return-object v1

    :cond_9
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldItem(Ljava/lang/String;)Lcom/itextpdf/text/pdf/AcroFields$Item;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v3

    if-lt p2, v3, :cond_14

    return-object v1

    :cond_14
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldPositions(Ljava/lang/String;)Ljava/util/List;

    move-result-object p1

    invoke-interface {p1, p2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/AcroFields$FieldPosition;

    iget-object p1, p1, Lcom/itextpdf/text/pdf/AcroFields$FieldPosition;->position:Lcom/itextpdf/text/Rectangle;

    new-instance v3, Lcom/itextpdf/text/pdf/PushbuttonField;

    iget-object v4, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-direct {v3, v4, p1, v1}, Lcom/itextpdf/text/pdf/PushbuttonField;-><init>(Lcom/itextpdf/text/pdf/PdfWriter;Lcom/itextpdf/text/Rectangle;Ljava/lang/String;)V

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    invoke-virtual {p0, p1, v3}, Lcom/itextpdf/text/pdf/AcroFields;->decodeGenericDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/BaseField;)V

    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->MK:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    if-eqz p1, :cond_e4

    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->CA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object p2

    if-eqz p2, :cond_45

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {v3, p2}, Lcom/itextpdf/text/pdf/PushbuttonField;->setText(Ljava/lang/String;)V

    :cond_45
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->TP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p2

    if-eqz p2, :cond_55

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p2

    add-int/2addr p2, v2

    invoke-virtual {v3, p2}, Lcom/itextpdf/text/pdf/PushbuttonField;->setLayout(I)V

    :cond_55
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->IF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p2

    if-eqz p2, :cond_d1

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->SW:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v0

    const/4 v1, 0x2

    if-eqz v0, :cond_88

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->B:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v4}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_70

    const/4 v0, 0x3

    goto :goto_85

    :cond_70
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->S:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v4}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_7a

    const/4 v0, 0x4

    goto :goto_85

    :cond_7a
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->N:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v4}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_84

    const/4 v0, 0x2

    goto :goto_85

    :cond_84
    const/4 v0, 0x1

    :goto_85
    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/PushbuttonField;->setScaleIcon(I)V

    :cond_88
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->S:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v0

    const/4 v4, 0x0

    if-eqz v0, :cond_9c

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->A:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_9c

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PushbuttonField;->setProportionalIcon(Z)V

    :cond_9c
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->A:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    if-eqz v0, :cond_c0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v5

    if-ne v5, v1, :cond_c0

    invoke-virtual {v0, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v1

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PushbuttonField;->setIconHorizontalAdjustment(F)V

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/PushbuttonField;->setIconVerticalAdjustment(F)V

    :cond_c0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FB:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsBoolean(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfBoolean;

    move-result-object p2

    if-eqz p2, :cond_d1

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfBoolean;->booleanValue()Z

    move-result p2

    if-eqz p2, :cond_d1

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PushbuttonField;->setIconFitToBounds(Z)V

    :cond_d1
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->I:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-eqz p1, :cond_e4

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result p2

    if-eqz p2, :cond_e4

    check-cast p1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-virtual {v3, p1}, Lcom/itextpdf/text/pdf/PushbuttonField;->setIconReference(Lcom/itextpdf/text/pdf/PRIndirectReference;)V
    :try_end_e4
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_e4} :catch_e5

    :cond_e4
    return-object v3

    :catch_e5
    move-exception p1

    new-instance p2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {p2, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw p2
.end method

.method public getNormalAppearance(Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfIndirectReference;
    .registers 4

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/AcroFields;->getSignatureNames()Ljava/util/ArrayList;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getTranslatedFieldName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/AcroFields$Item;

    const/4 v0, 0x0

    if-nez p1, :cond_13

    return-object v0

    :cond_13
    const/4 v1, 0x0

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    if-nez p1, :cond_21

    return-object v0

    :cond_21
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->N:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsIndirectObject(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object p1

    if-nez p1, :cond_2a

    return-object v0

    :cond_2a
    return-object p1
.end method

.method public getRevision(Ljava/lang/String;)I
    .registers 3

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/AcroFields;->getSignatureNames()Ljava/util/ArrayList;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getTranslatedFieldName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_11

    const/4 p1, 0x0

    return p1

    :cond_11
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, [I

    const/4 v0, 0x1

    aget p1, p1, v0

    return p1
.end method

.method public getSignatureDictionary(Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfDictionary;
    .registers 3

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/AcroFields;->getSignatureNames()Ljava/util/ArrayList;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getTranslatedFieldName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_11

    const/4 p1, 0x0

    return-object p1

    :cond_11
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/AcroFields$Item;

    const/4 v0, 0x0

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    return-object p1
.end method

.method public getSignatureNames()Ljava/util/ArrayList;
    .registers 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    if-eqz v0, :cond_c

    new-instance v0, Ljava/util/ArrayList;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/AcroFields;->orderedSignatureNames:Ljava/util/ArrayList;

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    return-object v0

    :cond_c
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->orderedSignatureNames:Ljava/util/ArrayList;

    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iget-object v1, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_29
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    const/4 v3, 0x0

    const/4 v4, 0x1

    if-eqz v2, :cond_9c

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/AcroFields$Item;

    invoke-virtual {v5, v3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v5

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->SIG:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v7

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_50

    goto :goto_29

    :cond_50
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v5

    if-nez v5, :cond_59

    goto :goto_29

    :cond_59
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->CONTENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v6

    if-nez v6, :cond_62

    goto :goto_29

    :cond_62
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->BYTERANGE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v5

    if-nez v5, :cond_6b

    goto :goto_29

    :cond_6b
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v6

    const/4 v7, 0x2

    if-ge v6, v7, :cond_73

    goto :goto_29

    :cond_73
    add-int/lit8 v8, v6, -0x1

    invoke-virtual {v5, v8}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v8

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v8

    add-int/lit8 v6, v6, -0x2

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v5

    add-int/2addr v8, v5

    new-array v5, v7, [Ljava/lang/Object;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    aput-object v2, v5, v3

    new-array v2, v7, [I

    aput v8, v2, v3

    aput v3, v2, v4

    aput-object v2, v5, v4

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_29

    :cond_9c
    new-instance v1, Lcom/itextpdf/text/pdf/AcroFields$SorterComparator;

    const/4 v2, 0x0

    invoke-direct {v1, v2}, Lcom/itextpdf/text/pdf/AcroFields$SorterComparator;-><init>(Lcom/itextpdf/text/pdf/AcroFields$1;)V

    invoke-static {v0, v1}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v1

    if-nez v1, :cond_f8

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    sub-int/2addr v1, v4

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [Ljava/lang/Object;

    aget-object v1, v1, v4

    check-cast v1, [I

    aget v1, v1, v3

    int-to-long v1, v1

    iget-object v5, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getFileLength()J

    move-result-wide v5

    cmp-long v1, v1, v5

    if-nez v1, :cond_ce

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    :goto_cb
    iput v1, p0, Lcom/itextpdf/text/pdf/AcroFields;->totalRevisions:I

    goto :goto_d4

    :cond_ce
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/2addr v1, v4

    goto :goto_cb

    :goto_d4
    const/4 v1, 0x0

    :goto_d5
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-ge v1, v2, :cond_f8

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, [Ljava/lang/Object;

    aget-object v5, v2, v3

    check-cast v5, Ljava/lang/String;

    aget-object v2, v2, v4

    check-cast v2, [I

    add-int/lit8 v1, v1, 0x1

    aput v1, v2, v4

    iget-object v6, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    invoke-virtual {v6, v5, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/AcroFields;->orderedSignatureNames:Ljava/util/ArrayList;

    invoke-virtual {v2, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_d5

    :cond_f8
    new-instance v0, Ljava/util/ArrayList;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/AcroFields;->orderedSignatureNames:Ljava/util/ArrayList;

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    return-object v0
.end method

.method public getSubstitutionFonts()Ljava/util/ArrayList;
    .registers 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/BaseFont;",
            ">;"
        }
    .end annotation

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->substitutionFonts:Ljava/util/ArrayList;

    return-object v0
.end method

.method public getTotalRevisions()I
    .registers 2

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/AcroFields;->getSignatureNames()Ljava/util/ArrayList;

    iget v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->totalRevisions:I

    return v0
.end method

.method public getTranslatedFieldName(Ljava/lang/String;)Ljava/lang/String;
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/XfaForm;->isXfaPresent()Z

    move-result v0

    if-eqz v0, :cond_11

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v0, p1, p0}, Lcom/itextpdf/text/pdf/XfaForm;->findFieldName(Ljava/lang/String;Lcom/itextpdf/text/pdf/AcroFields;)Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_11

    move-object p1, v0

    :cond_11
    return-object p1
.end method

.method public getXfa()Lcom/itextpdf/text/pdf/XfaForm;
    .registers 2

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    return-object v0
.end method

.method public isGenerateAppearances()Z
    .registers 2

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->generateAppearances:Z

    return v0
.end method

.method isInAP(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;)Z
    .registers 3

    if-eqz p1, :cond_a

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-eqz p1, :cond_a

    const/4 p1, 0x1

    goto :goto_b

    :cond_a
    const/4 p1, 0x0

    :goto_b
    return p1
.end method

.method public mergeXfaData(Lorg/w3c/dom/Node;)V
    .registers 5

    new-instance v0, Lcom/itextpdf/text/pdf/XfaForm$Xml2SomDatasets;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/pdf/XfaForm$Xml2SomDatasets;-><init>(Lorg/w3c/dom/Node;)V

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/XfaForm$Xml2SomDatasets;->getOrder()Ljava/util/ArrayList;

    move-result-object p1

    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_d
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_2b

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/XfaForm$Xml2SomDatasets;->getName2Node()Ljava/util/HashMap;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lorg/w3c/dom/Node;

    invoke-static {v2}, Lcom/itextpdf/text/pdf/XfaForm;->getNodeText(Lorg/w3c/dom/Node;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p0, v1, v2}, Lcom/itextpdf/text/pdf/AcroFields;->setField(Ljava/lang/String;Ljava/lang/String;)Z

    goto :goto_d

    :cond_2b
    return-void
.end method

.method public regenerateField(Ljava/lang/String;)Z
    .registers 3

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getField(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, p1, v0, v0}, Lcom/itextpdf/text/pdf/AcroFields;->setField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p1

    return p1
.end method

.method public removeField(Ljava/lang/String;)Z
    .registers 3

    const/4 v0, -0x1

    invoke-virtual {p0, p1, v0}, Lcom/itextpdf/text/pdf/AcroFields;->removeField(Ljava/lang/String;I)Z

    move-result p1

    return p1
.end method

.method public removeField(Ljava/lang/String;I)Z
    .registers 13

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldItem(Ljava/lang/String;)Lcom/itextpdf/text/pdf/AcroFields$Item;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_8

    return v1

    :cond_8
    iget-object v2, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->ACROFORM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    iget-object v3, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-nez v2, :cond_23

    return v1

    :cond_23
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FIELDS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v2

    if-nez v2, :cond_2c

    return v1

    :cond_2c
    :goto_2c
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v3

    const/4 v4, 0x1

    const/4 v5, -0x1

    if-ge v1, v3, :cond_a1

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getPage(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    move-result v3

    if-eq p2, v5, :cond_41

    if-eq p2, v3, :cond_41

    goto :goto_9f

    :cond_41
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidgetRef(I)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v6

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    iget-object v8, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v8, v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    if-eqz v3, :cond_58

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v8

    goto :goto_59

    :cond_58
    const/4 v8, 0x0

    :goto_59
    if-eqz v8, :cond_6d

    invoke-direct {p0, v8, v6}, Lcom/itextpdf/text/pdf/AcroFields;->removeRefFromArray(Lcom/itextpdf/text/pdf/PdfArray;Lcom/itextpdf/text/pdf/PdfObject;)I

    move-result v9

    if-nez v9, :cond_6a

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    invoke-direct {p0, v3}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_6d

    :cond_6a
    invoke-direct {p0, v8}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_6d
    :goto_6d
    invoke-static {v6}, Lcom/itextpdf/text/pdf/PdfReader;->killIndirect(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    :goto_70
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->PARENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsIndirectObject(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v3

    if-eqz v3, :cond_90

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->PARENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->KIDS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v8

    invoke-direct {p0, v8, v6}, Lcom/itextpdf/text/pdf/AcroFields;->removeRefFromArray(Lcom/itextpdf/text/pdf/PdfArray;Lcom/itextpdf/text/pdf/PdfObject;)I

    move-result v8

    if-eqz v8, :cond_8b

    goto :goto_90

    :cond_8b
    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->killIndirect(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-object v6, v3

    goto :goto_70

    :cond_90
    :goto_90
    if-nez v3, :cond_98

    invoke-direct {p0, v2, v6}, Lcom/itextpdf/text/pdf/AcroFields;->removeRefFromArray(Lcom/itextpdf/text/pdf/PdfArray;Lcom/itextpdf/text/pdf/PdfObject;)I

    invoke-direct {p0, v2}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_98
    if-eq p2, v5, :cond_9f

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->remove(I)V

    add-int/lit8 v1, v1, -0x1

    :cond_9f
    :goto_9f
    add-int/2addr v1, v4

    goto :goto_2c

    :cond_a1
    if-eq p2, v5, :cond_a9

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result p2

    if-nez p2, :cond_ae

    :cond_a9
    iget-object p2, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {p2, p1}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    :cond_ae
    return v4
.end method

.method public removeFieldsFromPage(I)Z
    .registers 8

    const/4 v0, 0x1

    const/4 v1, 0x0

    if-ge p1, v0, :cond_5

    return v1

    :cond_5
    iget-object v2, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v2}, Ljava/util/Map;->size()I

    move-result v2

    new-array v2, v2, [Ljava/lang/String;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v3}, Ljava/util/Map;->keySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3, v2}, Ljava/util/Set;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    const/4 v3, 0x0

    const/4 v4, 0x0

    :goto_18
    array-length v5, v2

    if-ge v3, v5, :cond_2c

    aget-object v5, v2, v3

    invoke-virtual {p0, v5, p1}, Lcom/itextpdf/text/pdf/AcroFields;->removeField(Ljava/lang/String;I)Z

    move-result v5

    if-nez v4, :cond_28

    if-eqz v5, :cond_26

    goto :goto_28

    :cond_26
    const/4 v4, 0x0

    goto :goto_29

    :cond_28
    :goto_28
    const/4 v4, 0x1

    :goto_29
    add-int/lit8 v3, v3, 0x1

    goto :goto_18

    :cond_2c
    return v4
.end method

.method public removeXfa()V
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ACROFORM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->XFA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    :try_start_11
    new-instance v0, Lcom/itextpdf/text/pdf/XfaForm;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/XfaForm;-><init>(Lcom/itextpdf/text/pdf/PdfReader;)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;
    :try_end_1a
    .catch Ljava/lang/Exception; {:try_start_11 .. :try_end_1a} :catch_1b

    return-void

    :catch_1b
    move-exception v0

    new-instance v1, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v1
.end method

.method public renameField(Ljava/lang/String;Ljava/lang/String;)Z
    .registers 8

    const/16 v0, 0x2e

    invoke-virtual {p1, v0}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v1

    const/4 v2, 0x1

    add-int/2addr v1, v2

    invoke-virtual {p2, v0}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v0

    add-int/2addr v0, v2

    const/4 v3, 0x0

    if-eq v1, v0, :cond_11

    return v3

    :cond_11
    invoke-virtual {p1, v3, v1}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v3, v0}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_20

    return v3

    :cond_20
    iget-object v1, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v1, p2}, Ljava/util/Map;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_29

    return v3

    :cond_29
    iget-object v1, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v1, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/AcroFields$Item;

    if-nez v1, :cond_34

    return v3

    :cond_34
    invoke-virtual {p2, v0}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object p2

    new-instance v0, Lcom/itextpdf/text/pdf/PdfString;

    const-string v3, "UnicodeBig"

    invoke-direct {v0, p2, v3}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->T:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v4, 0x5

    invoke-virtual {v1, v3, v0, v4}, Lcom/itextpdf/text/pdf/AcroFields$Item;->writeToAll(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;I)V

    const/4 v0, 0x4

    invoke-virtual {v1, p0, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->markUsed(Lcom/itextpdf/text/pdf/AcroFields;I)V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    iget-object p1, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {p1, p2, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    return v2
.end method

.method public replacePushbuttonField(Ljava/lang/String;Lcom/itextpdf/text/pdf/PdfFormField;)Z
    .registers 4

    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, Lcom/itextpdf/text/pdf/AcroFields;->replacePushbuttonField(Ljava/lang/String;Lcom/itextpdf/text/pdf/PdfFormField;I)Z

    move-result p1

    return p1
.end method

.method public replacePushbuttonField(Ljava/lang/String;Lcom/itextpdf/text/pdf/PdfFormField;I)Z
    .registers 9

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldType(Ljava/lang/String;)I

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eq v0, v2, :cond_9

    return v1

    :cond_9
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldItem(Ljava/lang/String;)Lcom/itextpdf/text/pdf/AcroFields$Item;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v0

    if-lt p3, v0, :cond_14

    return v1

    :cond_14
    invoke-virtual {p1, p3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    invoke-virtual {p1, p3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    invoke-virtual {p1, p3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    :goto_20
    sget-object p3, Lcom/itextpdf/text/pdf/AcroFields;->buttonRemove:[Lcom/itextpdf/text/pdf/PdfName;

    array-length p3, p3

    if-ge v1, p3, :cond_3d

    sget-object p3, Lcom/itextpdf/text/pdf/AcroFields;->buttonRemove:[Lcom/itextpdf/text/pdf/PdfName;

    aget-object p3, p3, v1

    invoke-virtual {v0, p3}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    sget-object p3, Lcom/itextpdf/text/pdf/AcroFields;->buttonRemove:[Lcom/itextpdf/text/pdf/PdfName;

    aget-object p3, p3, v1

    invoke-virtual {v3, p3}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    sget-object p3, Lcom/itextpdf/text/pdf/AcroFields;->buttonRemove:[Lcom/itextpdf/text/pdf/PdfName;

    aget-object p3, p3, v1

    invoke-virtual {p1, p3}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_20

    :cond_3d
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfFormField;->getKeys()Ljava/util/Set;

    move-result-object p3

    invoke-interface {p3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object p3

    :goto_45
    invoke-interface {p3}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_7f

    invoke-interface {p3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->T:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v4}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_5a

    goto :goto_45

    :cond_5a
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v4}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_6a

    invoke-virtual {p2, v1}, Lcom/itextpdf/text/pdf/PdfFormField;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    invoke-virtual {v3, v1, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_71

    :cond_6a
    invoke-virtual {p2, v1}, Lcom/itextpdf/text/pdf/PdfFormField;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    invoke-virtual {p1, v1, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :goto_71
    invoke-virtual {p2, v1}, Lcom/itextpdf/text/pdf/PdfFormField;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    invoke-virtual {v0, v1, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-direct {p0, v3}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_45

    :cond_7f
    return v2
.end method

.method public setExtraMargin(FF)V
    .registers 3

    iput p1, p0, Lcom/itextpdf/text/pdf/AcroFields;->extraMarginLeft:F

    iput p2, p0, Lcom/itextpdf/text/pdf/AcroFields;->extraMarginTop:F

    return-void
.end method

.method public setField(Ljava/lang/String;Ljava/lang/String;)Z
    .registers 4

    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, Lcom/itextpdf/text/pdf/AcroFields;->setField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p1

    return p1
.end method

.method public setField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    .registers 5

    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/itextpdf/text/pdf/AcroFields;->setField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z

    move-result p1

    return p1
.end method

.method public setField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z
    .registers 15

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    const/4 v1, 0x0

    if-eqz v0, :cond_20a

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/XfaForm;->isXfaPresent()Z

    move-result v0

    if-eqz v0, :cond_37

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v0, p1, p0}, Lcom/itextpdf/text/pdf/XfaForm;->findFieldName(Ljava/lang/String;Lcom/itextpdf/text/pdf/AcroFields;)Ljava/lang/String;

    move-result-object p1

    if-nez p1, :cond_16

    return v1

    :cond_16
    invoke-static {p1}, Lcom/itextpdf/text/pdf/XfaForm$Xml2Som;->getShortName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    iget-object v2, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/XfaForm;->findDatasetsNode(Ljava/lang/String;)Lorg/w3c/dom/Node;

    move-result-object v2

    if-nez v2, :cond_32

    iget-object v2, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/XfaForm;->getDatasetsSom()Lcom/itextpdf/text/pdf/XfaForm$Xml2SomDatasets;

    move-result-object v2

    iget-object v3, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/XfaForm;->getDatasetsNode()Lorg/w3c/dom/Node;

    move-result-object v3

    invoke-virtual {v2, v3, v0}, Lcom/itextpdf/text/pdf/XfaForm$Xml2SomDatasets;->insertNode(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/w3c/dom/Node;

    move-result-object v2

    :cond_32
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->xfa:Lcom/itextpdf/text/pdf/XfaForm;

    invoke-virtual {v0, v2, p2}, Lcom/itextpdf/text/pdf/XfaForm;->setNodeText(Lorg/w3c/dom/Node;Ljava/lang/String;)V

    :cond_37
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/AcroFields$Item;

    if-nez v0, :cond_42

    return v1

    :cond_42
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v3

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->TX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_70

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->MAXLEN:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v2

    if-eqz v2, :cond_61

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    goto :goto_62

    :cond_61
    const/4 v2, 0x0

    :goto_62
    if-lez v2, :cond_70

    invoke-virtual {p2}, Ljava/lang/String;->length()I

    move-result v4

    invoke-static {v2, v4}, Ljava/lang/Math;->min(II)I

    move-result v2

    invoke-virtual {p2, v1, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object p2

    :cond_70
    if-nez p3, :cond_73

    move-object p3, p2

    :cond_73
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    const/4 v4, 0x1

    if-nez v2, :cond_182

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->CH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_86

    goto/16 :goto_182

    :cond_86
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->BTN:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_181

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v2

    if-eqz v2, :cond_9f

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    goto :goto_a0

    :cond_9f
    const/4 v2, 0x0

    :goto_a0
    const/high16 v3, 0x10000

    and-int/2addr v2, v3

    if-eqz v2, :cond_bd

    :try_start_a5
    invoke-static {p2}, Lcom/itextpdf/text/pdf/codec/Base64;->decode(Ljava/lang/String;)[B

    move-result-object p2

    invoke-static {p2}, Lcom/itextpdf/text/Image;->getInstance([B)Lcom/itextpdf/text/Image;

    move-result-object p2
    :try_end_ad
    .catch Ljava/lang/Exception; {:try_start_a5 .. :try_end_ad} :catch_bc

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getNewPushbuttonFromField(Ljava/lang/String;)Lcom/itextpdf/text/pdf/PushbuttonField;

    move-result-object p3

    invoke-virtual {p3, p2}, Lcom/itextpdf/text/pdf/PushbuttonField;->setImage(Lcom/itextpdf/text/Image;)V

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/PushbuttonField;->getField()Lcom/itextpdf/text/pdf/PdfFormField;

    move-result-object p2

    invoke-virtual {p0, p1, p2}, Lcom/itextpdf/text/pdf/AcroFields;->replacePushbuttonField(Ljava/lang/String;Lcom/itextpdf/text/pdf/PdfFormField;)Z

    return v4

    :catch_bc
    return v1

    :cond_bd
    new-instance v2, Lcom/itextpdf/text/pdf/PdfName;

    invoke-direct {v2, p2}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v5

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->OPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v5

    if-eqz v5, :cond_ed

    const/4 v6, 0x0

    :goto_d4
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v7

    if-ge v6, v7, :cond_ed

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfArray;->getAsString(I)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v7

    if-eqz v7, :cond_e8

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v7

    :goto_e4
    invoke-virtual {v3, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_ea

    :cond_e8
    const/4 v7, 0x0

    goto :goto_e4

    :goto_ea
    add-int/lit8 v6, v6, 0x1

    goto :goto_d4

    :cond_ed
    invoke-virtual {v3, p2}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result p2

    if-ltz p2, :cond_fc

    new-instance v2, Lcom/itextpdf/text/pdf/PdfName;

    invoke-static {p2}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object p2

    invoke-direct {v2, p2}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    :cond_fc
    const/4 p2, 0x0

    :goto_fd
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v3

    if-ge p2, v3, :cond_180

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v5

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    invoke-direct {p0, v7}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v7, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v6, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-direct {p0, v5}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    if-nez v6, :cond_12c

    return v1

    :cond_12c
    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->N:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    invoke-virtual {p0, v7, v2}, Lcom/itextpdf/text/pdf/AcroFields;->isInAP(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v8

    if-nez v8, :cond_14a

    if-nez v7, :cond_13b

    goto :goto_14a

    :cond_13b
    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v9, Lcom/itextpdf/text/pdf/PdfName;->Off:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v8, v9}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v9, Lcom/itextpdf/text/pdf/PdfName;->Off:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v8, v9}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_154

    :cond_14a
    :goto_14a
    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v8, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v8, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :goto_154
    iget-boolean v5, p0, Lcom/itextpdf/text/pdf/AcroFields;->generateAppearances:Z

    if-eqz v5, :cond_17c

    if-nez p4, :cond_17c

    invoke-virtual {p0, v3, p3, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getAppearance(Lcom/itextpdf/text/pdf/PdfDictionary;Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfAppearance;

    move-result-object v5

    if-eqz v7, :cond_16e

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v3

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfAppearance;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v6

    invoke-virtual {v7, v3, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_177

    :cond_16e
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->N:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfAppearance;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v7

    invoke-virtual {v6, v3, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :goto_177
    iget-object v3, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfWriter;->releaseTemplate(Lcom/itextpdf/text/pdf/PdfTemplate;)V

    :cond_17c
    add-int/lit8 p2, p2, 0x1

    goto/16 :goto_fd

    :cond_180
    return v4

    :cond_181
    return v1

    :cond_182
    :goto_182
    new-instance p4, Lcom/itextpdf/text/pdf/PdfString;

    const-string v2, "UnicodeBig"

    invoke-direct {p4, p2, v2}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    :goto_189
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result p2

    if-ge v1, p2, :cond_209

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p2

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v2, p4}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->I:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    invoke-direct {p0, p2}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p2

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->I:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v2, p4}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    iget-boolean v5, p0, Lcom/itextpdf/text/pdf/AcroFields;->generateAppearances:Z

    if-eqz v5, :cond_1f9

    invoke-virtual {p0, p2, p3, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getAppearance(Lcom/itextpdf/text/pdf/PdfDictionary;Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfAppearance;

    move-result-object v5

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->CH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_1d3

    new-instance v6, Lcom/itextpdf/text/pdf/PdfNumber;

    iget v7, p0, Lcom/itextpdf/text/pdf/AcroFields;->topFirst:I

    invoke-direct {v6, v7}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->TI:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v7, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->TI:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v7, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_1d3
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    if-nez v6, :cond_1ea

    new-instance v6, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v6}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v7, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v7, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_1ea
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->N:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfAppearance;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v7

    invoke-virtual {v6, p2, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    iget-object p2, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-virtual {p2, v5}, Lcom/itextpdf/text/pdf/PdfWriter;->releaseTemplate(Lcom/itextpdf/text/pdf/PdfTemplate;)V

    goto :goto_203

    :cond_1f9
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    :goto_203
    invoke-direct {p0, v2}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_189

    :cond_209
    return v4

    :cond_20a
    new-instance p1, Lcom/itextpdf/text/DocumentException;

    new-array p2, v1, [Ljava/lang/Object;

    const-string p3, "this.acrofields.instance.is.read.only"

    invoke-static {p3, p2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/DocumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public setField(Ljava/lang/String;Ljava/lang/String;Z)Z
    .registers 5

    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0, p3}, Lcom/itextpdf/text/pdf/AcroFields;->setField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z

    move-result p1

    return p1
.end method

.method public setFieldCache(Ljava/util/Map;)V
    .registers 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/text/pdf/TextField;",
            ">;)V"
        }
    .end annotation

    iput-object p1, p0, Lcom/itextpdf/text/pdf/AcroFields;->fieldCache:Ljava/util/Map;

    return-void
.end method

.method public setFieldProperty(Ljava/lang/String;Ljava/lang/String;I[I)Z
    .registers 10

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    const/4 v1, 0x0

    if-eqz v0, :cond_190

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/AcroFields$Item;

    if-nez p1, :cond_10

    return v1

    :cond_10
    new-instance v0, Lcom/itextpdf/text/pdf/AcroFields$InstHit;

    invoke-direct {v0, p4}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;-><init>([I)V

    const-string p4, "flags"

    invoke-virtual {p2, p4}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result p4

    if-eqz p4, :cond_4a

    new-instance p2, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-direct {p2, p3}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    :goto_22
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result p3

    if-ge v1, p3, :cond_18d

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;->isHit(I)Z

    move-result p3

    if-eqz p3, :cond_47

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p3

    sget-object p4, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p3, p4, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p3

    sget-object p4, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p3, p4, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p3

    invoke-direct {p0, p3}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_47
    add-int/lit8 v1, v1, 0x1

    goto :goto_22

    :cond_4a
    const-string p4, "setflags"

    invoke-virtual {p2, p4}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result p4

    if-eqz p4, :cond_93

    const/4 p2, 0x0

    :goto_53
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result p4

    if-ge p2, p4, :cond_18d

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;->isHit(I)Z

    move-result p4

    if-eqz p4, :cond_90

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p4

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p4, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p4

    if-eqz p4, :cond_70

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p4

    goto :goto_71

    :cond_70
    const/4 p4, 0x0

    :goto_71
    new-instance v2, Lcom/itextpdf/text/pdf/PdfNumber;

    or-int/2addr p4, p3

    invoke-direct {v2, p4}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p4

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p4, v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p4

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p4, v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p4

    invoke-direct {p0, p4}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_90
    add-int/lit8 p2, p2, 0x1

    goto :goto_53

    :cond_93
    const-string p4, "clrflags"

    invoke-virtual {p2, p4}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result p4

    if-eqz p4, :cond_d5

    const/4 p2, 0x0

    :goto_9c
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result p4

    if-ge p2, p4, :cond_18d

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;->isHit(I)Z

    move-result p4

    if-eqz p4, :cond_d2

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p4

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p4, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v2

    if-eqz v2, :cond_b9

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    goto :goto_ba

    :cond_b9
    const/4 v2, 0x0

    :goto_ba
    new-instance v3, Lcom/itextpdf/text/pdf/PdfNumber;

    not-int v4, p3

    and-int/2addr v2, v4

    invoke-direct {v3, v2}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v4, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p4, v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-direct {p0, p4}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_d2
    add-int/lit8 p2, p2, 0x1

    goto :goto_9c

    :cond_d5
    const-string p4, "fflags"

    invoke-virtual {p2, p4}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result p4

    if-eqz p4, :cond_10a

    new-instance p2, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-direct {p2, p3}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    :goto_e2
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result p3

    if-ge v1, p3, :cond_18d

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;->isHit(I)Z

    move-result p3

    if-eqz p3, :cond_107

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p3

    sget-object p4, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p3, p4, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p3

    sget-object p4, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p3, p4, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p3

    invoke-direct {p0, p3}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_107
    add-int/lit8 v1, v1, 0x1

    goto :goto_e2

    :cond_10a
    const-string p4, "setfflags"

    invoke-virtual {p2, p4}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result p4

    if-eqz p4, :cond_14b

    const/4 p2, 0x0

    :goto_113
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result p4

    if-ge p2, p4, :cond_18d

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;->isHit(I)Z

    move-result p4

    if-eqz p4, :cond_148

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p4

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p4, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v2

    if-eqz v2, :cond_130

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    goto :goto_131

    :cond_130
    const/4 v2, 0x0

    :goto_131
    new-instance v3, Lcom/itextpdf/text/pdf/PdfNumber;

    or-int/2addr v2, p3

    invoke-direct {v3, v2}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v4, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p4, v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-direct {p0, p4}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_148
    add-int/lit8 p2, p2, 0x1

    goto :goto_113

    :cond_14b
    const-string p4, "clrfflags"

    invoke-virtual {p2, p4}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result p2

    if-eqz p2, :cond_18f

    const/4 p2, 0x0

    :goto_154
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result p4

    if-ge p2, p4, :cond_18d

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;->isHit(I)Z

    move-result p4

    if-eqz p4, :cond_18a

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p4

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p4, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v2

    if-eqz v2, :cond_171

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    goto :goto_172

    :cond_171
    const/4 v2, 0x0

    :goto_172
    new-instance v3, Lcom/itextpdf/text/pdf/PdfNumber;

    not-int v4, p3

    and-int/2addr v2, v4

    invoke-direct {v3, v2}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v4, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p4, v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-direct {p0, p4}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_18a
    add-int/lit8 p2, p2, 0x1

    goto :goto_154

    :cond_18d
    const/4 p1, 0x1

    return p1

    :cond_18f
    return v1

    :cond_190
    new-instance p1, Ljava/lang/RuntimeException;

    new-array p2, v1, [Ljava/lang/Object;

    const-string p3, "this.acrofields.instance.is.read.only"

    invoke-static {p3, p2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public setFieldProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;[I)Z
    .registers 21

    move-object/from16 v1, p0

    move-object/from16 v0, p2

    iget-object v3, v1, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    const/4 v4, 0x0

    if-eqz v3, :cond_303

    :try_start_9
    iget-object v3, v1, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    move-object/from16 v5, p1

    invoke-interface {v3, v5}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/AcroFields$Item;

    if-nez v3, :cond_16

    return v4

    :cond_16
    new-instance v5, Lcom/itextpdf/text/pdf/AcroFields$InstHit;

    move-object/from16 v6, p4

    invoke-direct {v5, v6}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;-><init>([I)V

    const-string v6, "textfont"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v6

    const/4 v9, 0x1

    if-eqz v6, :cond_16c

    const/4 v0, 0x0

    :goto_27
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v6

    if-ge v0, v6, :cond_2fb

    invoke-virtual {v5, v0}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;->isHit(I)Z

    move-result v6

    if-eqz v6, :cond_168

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    sget-object v10, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v10}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v10

    sget-object v11, Lcom/itextpdf/text/pdf/PdfName;->DR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v11}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v11

    if-eqz v10, :cond_168

    if-nez v11, :cond_51

    new-instance v11, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v11}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    sget-object v12, Lcom/itextpdf/text/pdf/PdfName;->DR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v12, v11}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_51
    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v6}, Lcom/itextpdf/text/pdf/AcroFields;->splitDAelements(Ljava/lang/String;)[Ljava/lang/Object;

    move-result-object v6

    new-instance v10, Lcom/itextpdf/text/pdf/PdfAppearance;

    invoke-direct {v10}, Lcom/itextpdf/text/pdf/PdfAppearance;-><init>()V

    aget-object v12, v6, v4

    if-eqz v12, :cond_168

    move-object/from16 v12, p3

    check-cast v12, Lcom/itextpdf/text/pdf/BaseFont;

    sget-object v13, Lcom/itextpdf/text/pdf/PdfAppearance;->stdFieldFontNames:Ljava/util/HashMap;

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/BaseFont;->getPostscriptFontName()Ljava/lang/String;

    move-result-object v14

    invoke-virtual {v13, v14}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/itextpdf/text/pdf/PdfName;

    if-nez v13, :cond_7d

    new-instance v13, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/BaseFont;->getPostscriptFontName()Ljava/lang/String;

    move-result-object v14

    invoke-direct {v13, v14}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    :cond_7d
    sget-object v14, Lcom/itextpdf/text/pdf/PdfName;->FONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v11, v14}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v14

    if-nez v14, :cond_8f

    new-instance v14, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v14}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    sget-object v15, Lcom/itextpdf/text/pdf/PdfName;->FONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v11, v15, v14}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_8f
    invoke-virtual {v14, v13}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v11

    check-cast v11, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    iget-object v15, v1, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v15}, Lcom/itextpdf/text/pdf/PdfReader;->getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v15

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->ACROFORM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v15, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v8

    invoke-direct {v1, v8}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v15, Lcom/itextpdf/text/pdf/PdfName;->DR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v8, v15}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v15

    if-nez v15, :cond_b6

    new-instance v15, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v15}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->DR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v8, v7, v15}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_b6
    invoke-direct {v1, v15}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->FONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v15, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    if-nez v7, :cond_cb

    new-instance v7, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v7}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->FONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v15, v8, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_cb
    invoke-direct {v1, v7}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v7, v13}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    check-cast v8, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    if-eqz v8, :cond_dc

    if-nez v11, :cond_117

    invoke-virtual {v14, v13, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_117

    :cond_dc
    if-nez v11, :cond_117

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/BaseFont;->getFontType()I

    move-result v8

    const/4 v11, 0x4

    if-ne v8, v11, :cond_f3

    new-instance v8, Lcom/itextpdf/text/pdf/FontDetails;

    const/4 v11, 0x0

    move-object v15, v12

    check-cast v15, Lcom/itextpdf/text/pdf/DocumentFont;

    invoke-virtual {v15}, Lcom/itextpdf/text/pdf/DocumentFont;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v15

    invoke-direct {v8, v11, v15, v12}, Lcom/itextpdf/text/pdf/FontDetails;-><init>(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfIndirectReference;Lcom/itextpdf/text/pdf/BaseFont;)V

    goto :goto_109

    :cond_f3
    invoke-virtual {v12, v4}, Lcom/itextpdf/text/pdf/BaseFont;->setSubset(Z)V

    iget-object v8, v1, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-virtual {v8, v12}, Lcom/itextpdf/text/pdf/PdfWriter;->addSimple(Lcom/itextpdf/text/pdf/BaseFont;)Lcom/itextpdf/text/pdf/FontDetails;

    move-result-object v8

    iget-object v11, v1, Lcom/itextpdf/text/pdf/AcroFields;->localFonts:Ljava/util/HashMap;

    invoke-virtual {v13}, Lcom/itextpdf/text/pdf/PdfName;->toString()Ljava/lang/String;

    move-result-object v15

    invoke-virtual {v15, v9}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v15

    invoke-virtual {v11, v15, v12}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :goto_109
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/FontDetails;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v11

    invoke-virtual {v7, v13, v11}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/FontDetails;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v7

    invoke-virtual {v14, v13, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_117
    :goto_117
    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/PdfAppearance;->getInternalBuffer()Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v7

    invoke-virtual {v13}, Lcom/itextpdf/text/pdf/PdfName;->getBytes()[B

    move-result-object v8

    invoke-virtual {v7, v8}, Lcom/itextpdf/text/pdf/ByteBuffer;->append([B)Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v7

    const/16 v8, 0x20

    invoke-virtual {v7, v8}, Lcom/itextpdf/text/pdf/ByteBuffer;->append(C)Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v7

    aget-object v8, v6, v9

    check-cast v8, Ljava/lang/Float;

    invoke-virtual {v8}, Ljava/lang/Float;->floatValue()F

    move-result v8

    invoke-virtual {v7, v8}, Lcom/itextpdf/text/pdf/ByteBuffer;->append(F)Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v7

    const-string v8, " Tf "

    invoke-virtual {v7, v8}, Lcom/itextpdf/text/pdf/ByteBuffer;->append(Ljava/lang/String;)Lcom/itextpdf/text/pdf/ByteBuffer;

    const/4 v7, 0x2

    aget-object v8, v6, v7

    if-eqz v8, :cond_146

    aget-object v6, v6, v7

    check-cast v6, Lcom/itextpdf/text/BaseColor;

    invoke-virtual {v10, v6}, Lcom/itextpdf/text/pdf/PdfAppearance;->setColorFill(Lcom/itextpdf/text/BaseColor;)V

    :cond_146
    new-instance v6, Lcom/itextpdf/text/pdf/PdfString;

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/PdfAppearance;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v6, v7}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v8, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v8, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    invoke-direct {v1, v6}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_168
    add-int/lit8 v0, v0, 0x1

    goto/16 :goto_27

    :cond_16c
    const-string v6, "textcolor"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_1f7

    const/4 v0, 0x0

    :goto_175
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v6

    if-ge v0, v6, :cond_2fb

    invoke-virtual {v5, v0}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;->isHit(I)Z

    move-result v6

    if-eqz v6, :cond_1f3

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v6

    if-eqz v6, :cond_1f3

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v6}, Lcom/itextpdf/text/pdf/AcroFields;->splitDAelements(Ljava/lang/String;)[Ljava/lang/Object;

    move-result-object v6

    new-instance v7, Lcom/itextpdf/text/pdf/PdfAppearance;

    invoke-direct {v7}, Lcom/itextpdf/text/pdf/PdfAppearance;-><init>()V

    aget-object v8, v6, v4

    if-eqz v8, :cond_1f3

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfAppearance;->getInternalBuffer()Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v8

    new-instance v10, Lcom/itextpdf/text/pdf/PdfName;

    aget-object v11, v6, v4

    check-cast v11, Ljava/lang/String;

    invoke-direct {v10, v11}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/PdfName;->getBytes()[B

    move-result-object v10

    invoke-virtual {v8, v10}, Lcom/itextpdf/text/pdf/ByteBuffer;->append([B)Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v8

    const/16 v10, 0x20

    invoke-virtual {v8, v10}, Lcom/itextpdf/text/pdf/ByteBuffer;->append(C)Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v8

    aget-object v6, v6, v9

    check-cast v6, Ljava/lang/Float;

    invoke-virtual {v6}, Ljava/lang/Float;->floatValue()F

    move-result v6

    invoke-virtual {v8, v6}, Lcom/itextpdf/text/pdf/ByteBuffer;->append(F)Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v6

    const-string v8, " Tf "

    invoke-virtual {v6, v8}, Lcom/itextpdf/text/pdf/ByteBuffer;->append(Ljava/lang/String;)Lcom/itextpdf/text/pdf/ByteBuffer;

    move-object/from16 v6, p3

    check-cast v6, Lcom/itextpdf/text/BaseColor;

    invoke-virtual {v7, v6}, Lcom/itextpdf/text/pdf/PdfAppearance;->setColorFill(Lcom/itextpdf/text/BaseColor;)V

    new-instance v6, Lcom/itextpdf/text/pdf/PdfString;

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfAppearance;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v6, v7}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v8, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v8, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    invoke-direct {v1, v6}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_1f3
    add-int/lit8 v0, v0, 0x1

    goto/16 :goto_175

    :cond_1f7
    const-string v6, "textsize"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_28b

    const/4 v0, 0x0

    :goto_200
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v6

    if-ge v0, v6, :cond_2fb

    invoke-virtual {v5, v0}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;->isHit(I)Z

    move-result v6

    if-eqz v6, :cond_284

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v6

    if-eqz v6, :cond_284

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v6}, Lcom/itextpdf/text/pdf/AcroFields;->splitDAelements(Ljava/lang/String;)[Ljava/lang/Object;

    move-result-object v6

    new-instance v7, Lcom/itextpdf/text/pdf/PdfAppearance;

    invoke-direct {v7}, Lcom/itextpdf/text/pdf/PdfAppearance;-><init>()V

    aget-object v8, v6, v4

    if-eqz v8, :cond_284

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfAppearance;->getInternalBuffer()Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v8

    new-instance v10, Lcom/itextpdf/text/pdf/PdfName;

    aget-object v11, v6, v4

    check-cast v11, Ljava/lang/String;

    invoke-direct {v10, v11}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/PdfName;->getBytes()[B

    move-result-object v10

    invoke-virtual {v8, v10}, Lcom/itextpdf/text/pdf/ByteBuffer;->append([B)Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v8

    const/16 v10, 0x20

    invoke-virtual {v8, v10}, Lcom/itextpdf/text/pdf/ByteBuffer;->append(C)Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v8

    move-object/from16 v11, p3

    check-cast v11, Ljava/lang/Float;

    invoke-virtual {v11}, Ljava/lang/Float;->floatValue()F

    move-result v11

    invoke-virtual {v8, v11}, Lcom/itextpdf/text/pdf/ByteBuffer;->append(F)Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v8

    const-string v11, " Tf "

    invoke-virtual {v8, v11}, Lcom/itextpdf/text/pdf/ByteBuffer;->append(Ljava/lang/String;)Lcom/itextpdf/text/pdf/ByteBuffer;

    const/4 v8, 0x2

    aget-object v11, v6, v8

    if-eqz v11, :cond_261

    aget-object v6, v6, v8

    check-cast v6, Lcom/itextpdf/text/BaseColor;

    invoke-virtual {v7, v6}, Lcom/itextpdf/text/pdf/PdfAppearance;->setColorFill(Lcom/itextpdf/text/BaseColor;)V

    :cond_261
    new-instance v6, Lcom/itextpdf/text/pdf/PdfString;

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfAppearance;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v6, v7}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    sget-object v11, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v11, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    sget-object v11, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v11, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    invoke-direct {v1, v6}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_287

    :cond_284
    const/4 v8, 0x2

    const/16 v10, 0x20

    :goto_287
    add-int/lit8 v0, v0, 0x1

    goto/16 :goto_200

    :cond_28b
    const-string v6, "bgcolor"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v6

    if-nez v6, :cond_29d

    const-string v6, "bordercolor"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_29c

    goto :goto_29d

    :cond_29c
    return v4

    :cond_29d
    :goto_29d
    const-string v6, "bgcolor"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2a8

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->BG:Lcom/itextpdf/text/pdf/PdfName;

    goto :goto_2aa

    :cond_2a8
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->BC:Lcom/itextpdf/text/pdf/PdfName;

    :goto_2aa
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v6

    if-ge v4, v6, :cond_2fb

    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/AcroFields$InstHit;->isHit(I)Z

    move-result v6

    if-eqz v6, :cond_2f8

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->MK:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    if-nez v6, :cond_2e4

    if-nez p3, :cond_2c5

    return v9

    :cond_2c5
    new-instance v6, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v6}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->MK:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v8, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->MK:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v8, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidget(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    invoke-direct {v1, v7}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_2e7

    :cond_2e4
    invoke-direct {v1, v6}, Lcom/itextpdf/text/pdf/AcroFields;->markUsed(Lcom/itextpdf/text/pdf/PdfObject;)V

    :goto_2e7
    if-nez p3, :cond_2ed

    invoke-virtual {v6, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    goto :goto_2f8

    :cond_2ed
    move-object/from16 v7, p3

    check-cast v7, Lcom/itextpdf/text/BaseColor;

    invoke-static {v7}, Lcom/itextpdf/text/pdf/PdfFormField;->getMKColor(Lcom/itextpdf/text/BaseColor;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v7

    invoke-virtual {v6, v0, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V
    :try_end_2f8
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_2f8} :catch_2fc

    :cond_2f8
    :goto_2f8
    add-int/lit8 v4, v4, 0x1

    goto :goto_2aa

    :cond_2fb
    return v9

    :catch_2fc
    move-exception v0

    new-instance v2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v2, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v2

    :cond_303
    new-instance v0, Ljava/lang/RuntimeException;

    new-array v2, v4, [Ljava/lang/Object;

    const-string v3, "this.acrofields.instance.is.read.only"

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setFieldRichValue(Ljava/lang/String;Ljava/lang/String;)Z
    .registers 6

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    const/4 v1, 0x0

    if-eqz v0, :cond_50

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldItem(Ljava/lang/String;)Lcom/itextpdf/text/pdf/AcroFields$Item;

    move-result-object v0

    if-nez v0, :cond_c

    return v1

    :cond_c
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldType(Ljava/lang/String;)I

    move-result p1

    const/4 v2, 0x4

    if-eq p1, v2, :cond_14

    return v1

    :cond_14
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p1

    if-eqz p1, :cond_25

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p1

    goto :goto_26

    :cond_25
    const/4 p1, 0x0

    :goto_26
    const/high16 v2, 0x2000000

    and-int/2addr p1, v2

    if-nez p1, :cond_2c

    return v1

    :cond_2c
    new-instance p1, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;)V

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->RV:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v2, 0x5

    invoke-virtual {v0, v1, p1, v2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->writeToAll(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;I)V

    new-instance p1, Ljava/io/ByteArrayInputStream;

    invoke-virtual {p2}, Ljava/lang/String;->getBytes()[B

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/io/ByteArrayInputStream;-><init>([B)V

    new-instance p2, Lcom/itextpdf/text/pdf/PdfString;

    invoke-static {p1}, Lcom/itextpdf/text/xml/XmlToTxt;->parse(Ljava/io/InputStream;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;)V

    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, p1, p2, v2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->writeToAll(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;I)V

    const/4 p1, 0x1

    return p1

    :cond_50
    new-instance p1, Lcom/itextpdf/text/DocumentException;

    new-array p2, v1, [Ljava/lang/Object;

    const-string v0, "this.acrofields.instance.is.read.only"

    invoke-static {v0, p2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/DocumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public setFields(Lcom/itextpdf/text/pdf/FdfReader;)V
    .registers 5

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/FdfReader;->getFields()Ljava/util/HashMap;

    move-result-object v0

    invoke-virtual {v0}, Ljava/util/HashMap;->keySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_c
    :goto_c
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_22

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/FdfReader;->getFieldValue(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_c

    invoke-virtual {p0, v1, v2}, Lcom/itextpdf/text/pdf/AcroFields;->setField(Ljava/lang/String;Ljava/lang/String;)Z

    goto :goto_c

    :cond_22
    return-void
.end method

.method public setFields(Lcom/itextpdf/text/pdf/XfdfReader;)V
    .registers 6

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/XfdfReader;->getFields()Ljava/util/HashMap;

    move-result-object v0

    invoke-virtual {v0}, Ljava/util/HashMap;->keySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_c
    :goto_c
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_37

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/XfdfReader;->getFieldValue(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_21

    invoke-virtual {p0, v1, v2}, Lcom/itextpdf/text/pdf/AcroFields;->setField(Ljava/lang/String;Ljava/lang/String;)Z

    :cond_21
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/XfdfReader;->getListValues(Ljava/lang/String;)Ljava/util/List;

    move-result-object v1

    if-eqz v1, :cond_c

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v3

    new-array v3, v3, [Ljava/lang/String;

    invoke-interface {v1, v3}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [Ljava/lang/String;

    invoke-virtual {p0, v2, v1}, Lcom/itextpdf/text/pdf/AcroFields;->setListSelection(Ljava/lang/String;[Ljava/lang/String;)Z

    goto :goto_c

    :cond_37
    return-void
.end method

.method public setGenerateAppearances(Z)V
    .registers 4

    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/AcroFields;->generateAppearances:Z

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ACROFORM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    if-eqz p1, :cond_16

    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->NEEDAPPEARANCES:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    goto :goto_1d

    :cond_16
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->NEEDAPPEARANCES:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfBoolean;->PDFTRUE:Lcom/itextpdf/text/pdf/PdfBoolean;

    invoke-virtual {v0, p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :goto_1d
    return-void
.end method

.method public setListOption(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z
    .registers 11

    const/4 v0, 0x0

    if-nez p2, :cond_6

    if-nez p3, :cond_6

    return v0

    :cond_6
    if-eqz p2, :cond_1d

    if-eqz p3, :cond_1d

    array-length v1, p2

    array-length v2, p3

    if-ne v1, v2, :cond_f

    goto :goto_1d

    :cond_f
    new-instance p1, Ljava/lang/IllegalArgumentException;

    new-array p2, v0, [Ljava/lang/Object;

    const-string p3, "the.export.and.the.display.array.must.have.the.same.size"

    invoke-static {p3, p2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_1d
    :goto_1d
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldType(Ljava/lang/String;)I

    move-result v1

    const/4 v2, 0x6

    const/4 v3, 0x5

    if-eq v1, v2, :cond_28

    if-eq v1, v3, :cond_28

    return v0

    :cond_28
    iget-object v1, p0, Lcom/itextpdf/text/pdf/AcroFields;->fields:Ljava/util/Map;

    invoke-interface {v1, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/AcroFields$Item;

    const/4 v1, 0x0

    if-nez p2, :cond_37

    if-eqz p3, :cond_37

    move-object v1, p3

    goto :goto_3c

    :cond_37
    if-eqz p2, :cond_3c

    if-nez p3, :cond_3c

    move-object v1, p2

    :cond_3c
    :goto_3c
    new-instance v2, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {v2}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    if-eqz v1, :cond_55

    :goto_43
    array-length p2, v1

    if-ge v0, p2, :cond_7b

    new-instance p2, Lcom/itextpdf/text/pdf/PdfString;

    aget-object p3, v1, v0

    const-string v4, "UnicodeBig"

    invoke-direct {p2, p3, v4}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v2, p2}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    add-int/lit8 v0, v0, 0x1

    goto :goto_43

    :cond_55
    :goto_55
    array-length v1, p2

    if-ge v0, v1, :cond_7b

    new-instance v1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    new-instance v4, Lcom/itextpdf/text/pdf/PdfString;

    aget-object v5, p2, v0

    const-string v6, "UnicodeBig"

    invoke-direct {v4, v5, v6}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v1, v4}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    new-instance v4, Lcom/itextpdf/text/pdf/PdfString;

    aget-object v5, p3, v0

    const-string v6, "UnicodeBig"

    invoke-direct {v4, v5, v6}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v1, v4}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    add-int/lit8 v0, v0, 0x1

    goto :goto_55

    :cond_7b
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->OPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2, v2, v3}, Lcom/itextpdf/text/pdf/AcroFields$Item;->writeToAll(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;I)V

    const/4 p1, 0x1

    return p1
.end method

.method public setListSelection(Ljava/lang/String;[Ljava/lang/String;)Z
    .registers 13

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldItem(Ljava/lang/String;)Lcom/itextpdf/text/pdf/AcroFields$Item;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_8

    return v1

    :cond_8
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v3

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->CH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_1b

    return v1

    :cond_1b
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getListOptionExport(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v3

    new-instance v4, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {v4}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    array-length v5, p2

    const/4 v6, 0x0

    :goto_26
    if-ge v6, v5, :cond_45

    aget-object v7, p2, v6

    const/4 v8, 0x0

    :goto_2b
    array-length v9, v3

    if-ge v8, v9, :cond_42

    aget-object v9, v3, v8

    invoke-virtual {v9, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_3f

    new-instance v7, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-direct {v7, v8}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {v4, v7}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    goto :goto_42

    :cond_3f
    add-int/lit8 v8, v8, 0x1

    goto :goto_2b

    :cond_42
    :goto_42
    add-int/lit8 v6, v6, 0x1

    goto :goto_26

    :cond_45
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->I:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v5, 0x5

    invoke-virtual {v0, v3, v4, v5}, Lcom/itextpdf/text/pdf/AcroFields$Item;->writeToAll(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;I)V

    new-instance v3, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {v3}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    :goto_50
    array-length v4, p2

    if-ge v1, v4, :cond_60

    new-instance v4, Lcom/itextpdf/text/pdf/PdfString;

    aget-object v6, p2, v1

    invoke-direct {v4, v6}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_50

    :cond_60
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1, v3, v5}, Lcom/itextpdf/text/pdf/AcroFields$Item;->writeToAll(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;I)V

    invoke-virtual {p0, v2, p2, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getAppearance(Lcom/itextpdf/text/pdf/PdfDictionary;[Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfAppearance;

    move-result-object p1

    new-instance p2, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p2}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->N:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfAppearance;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v2

    invoke-virtual {p2, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v2, 0x3

    invoke-virtual {v0, v1, p2, v2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->writeToAll(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;I)V

    iget-object p2, p0, Lcom/itextpdf/text/pdf/AcroFields;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/PdfWriter;->releaseTemplate(Lcom/itextpdf/text/pdf/PdfTemplate;)V

    const/4 p1, 0x6

    invoke-virtual {v0, p0, p1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->markUsed(Lcom/itextpdf/text/pdf/AcroFields;I)V

    const/4 p1, 0x1

    return p1
.end method

.method public setSubstitutionFonts(Ljava/util/ArrayList;)V
    .registers 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/BaseFont;",
            ">;)V"
        }
    .end annotation

    iput-object p1, p0, Lcom/itextpdf/text/pdf/AcroFields;->substitutionFonts:Ljava/util/ArrayList;

    return-void
.end method

.method public signatureCoversWholeDocument(Ljava/lang/String;)Z
    .registers 8

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/AcroFields;->getSignatureNames()Ljava/util/ArrayList;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getTranslatedFieldName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_11

    return v1

    :cond_11
    iget-object v0, p0, Lcom/itextpdf/text/pdf/AcroFields;->sigNames:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, [I

    aget p1, p1, v1

    int-to-long v2, p1

    iget-object p1, p0, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getFileLength()J

    move-result-wide v4

    cmp-long p1, v2, v4

    if-nez p1, :cond_27

    const/4 v1, 0x1

    :cond_27
    return v1
.end method

.method public verifySignature(Ljava/lang/String;)Lcom/itextpdf/text/pdf/security/PdfPKCS7;
    .registers 3

    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lcom/itextpdf/text/pdf/AcroFields;->verifySignature(Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/text/pdf/security/PdfPKCS7;

    move-result-object p1

    return-object p1
.end method

.method public verifySignature(Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/text/pdf/security/PdfPKCS7;
    .registers 6

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/AcroFields;->getSignatureDictionary(Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    if-nez p1, :cond_8

    const/4 p1, 0x0

    return-object p1

    :cond_8
    :try_start_8
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->SUBFILTER:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v0

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->CONTENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v1

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ADBE_X509_RSA_SHA1:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3d

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->CERT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v0

    if-nez v0, :cond_2f

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->CERT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getAsString(I)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v0

    :cond_2f
    new-instance v2, Lcom/itextpdf/text/pdf/security/PdfPKCS7;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfString;->getOriginalBytes()[B

    move-result-object v1

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfString;->getBytes()[B

    move-result-object v0

    invoke-direct {v2, v1, v0, p2}, Lcom/itextpdf/text/pdf/security/PdfPKCS7;-><init>([B[BLjava/lang/String;)V

    goto :goto_46

    :cond_3d
    new-instance v2, Lcom/itextpdf/text/pdf/security/PdfPKCS7;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfString;->getOriginalBytes()[B

    move-result-object v1

    invoke-direct {v2, v1, v0, p2}, Lcom/itextpdf/text/pdf/security/PdfPKCS7;-><init>([BLcom/itextpdf/text/pdf/PdfName;Ljava/lang/String;)V

    :goto_46
    invoke-direct {p0, v2, p1}, Lcom/itextpdf/text/pdf/AcroFields;->updateByteRange(Lcom/itextpdf/text/pdf/security/PdfPKCS7;Lcom/itextpdf/text/pdf/PdfDictionary;)V

    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->M:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object p2

    if-eqz p2, :cond_5c

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfString;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p2}, Lcom/itextpdf/text/pdf/PdfDate;->decode(Ljava/lang/String;)Ljava/util/Calendar;

    move-result-object p2

    invoke-virtual {v2, p2}, Lcom/itextpdf/text/pdf/security/PdfPKCS7;->setSignDate(Ljava/util/Calendar;)V

    :cond_5c
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->NAME:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p2

    invoke-static {p2}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p2

    if-eqz p2, :cond_87

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfObject;->isString()Z

    move-result v0

    if-eqz v0, :cond_78

    check-cast p2, Lcom/itextpdf/text/pdf/PdfString;

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object p2

    :goto_74
    invoke-virtual {v2, p2}, Lcom/itextpdf/text/pdf/security/PdfPKCS7;->setSignName(Ljava/lang/String;)V

    goto :goto_87

    :cond_78
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v0

    if-eqz v0, :cond_87

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p2}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p2

    goto :goto_74

    :cond_87
    :goto_87
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->REASON:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object p2

    if-eqz p2, :cond_96

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {v2, p2}, Lcom/itextpdf/text/pdf/security/PdfPKCS7;->setReason(Ljava/lang/String;)V

    :cond_96
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->LOCATION:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object p1

    if-eqz p1, :cond_a5

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v2, p1}, Lcom/itextpdf/text/pdf/security/PdfPKCS7;->setLocation(Ljava/lang/String;)V
    :try_end_a5
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_a5} :catch_a6

    :cond_a5
    return-object v2

    :catch_a6
    move-exception p1

    new-instance p2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {p2, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw p2
.end method
