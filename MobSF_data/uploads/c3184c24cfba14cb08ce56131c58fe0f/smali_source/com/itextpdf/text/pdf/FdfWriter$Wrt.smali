.class Lcom/itextpdf/text/pdf/FdfWriter$Wrt;
.super Lcom/itextpdf/text/pdf/PdfWriter;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lcom/itextpdf/text/pdf/FdfWriter;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x8
    name = "Wrt"
.end annotation


# instance fields
.field private fdf:Lcom/itextpdf/text/pdf/FdfWriter;


# direct methods
.method constructor <init>(Ljava/io/OutputStream;Lcom/itextpdf/text/pdf/FdfWriter;)V
    .registers 4

    new-instance v0, Lcom/itextpdf/text/pdf/PdfDocument;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfDocument;-><init>()V

    invoke-direct {p0, v0, p1}, Lcom/itextpdf/text/pdf/PdfWriter;-><init>(Lcom/itextpdf/text/pdf/PdfDocument;Ljava/io/OutputStream;)V

    iput-object p2, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->fdf:Lcom/itextpdf/text/pdf/FdfWriter;

    iget-object p1, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->os:Lcom/itextpdf/text/pdf/OutputStreamCounter;

    # getter for: Lcom/itextpdf/text/pdf/FdfWriter;->HEADER_FDF:[B
    invoke-static {}, Lcom/itextpdf/text/pdf/FdfWriter;->access$000()[B

    move-result-object p2

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/OutputStreamCounter;->write([B)V

    new-instance p1, Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;

    invoke-direct {p1, p0}, Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;-><init>(Lcom/itextpdf/text/pdf/PdfWriter;)V

    iput-object p1, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->body:Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;

    return-void
.end method


# virtual methods
.method calculate(Ljava/util/HashMap;)Lcom/itextpdf/text/pdf/PdfArray;
    .registers 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Ljava/lang/Object;",
            ">;)",
            "Lcom/itextpdf/text/pdf/PdfArray;"
        }
    .end annotation

    new-instance v0, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    invoke-virtual {p1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object p1

    invoke-interface {p1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_d
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_7b

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/Map$Entry;

    invoke-interface {v1}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-interface {v1}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v1

    new-instance v3, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v3}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->T:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v5, Lcom/itextpdf/text/pdf/PdfString;

    const-string v6, "UnicodeBig"

    invoke-direct {v5, v2, v6}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v3, v4, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    instance-of v2, v1, Ljava/util/HashMap;

    if-eqz v2, :cond_44

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->KIDS:Lcom/itextpdf/text/pdf/PdfName;

    check-cast v1, Ljava/util/HashMap;

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->calculate(Ljava/util/HashMap;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v1

    :goto_40
    invoke-virtual {v3, v2, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_77

    :cond_44
    instance-of v2, v1, Lcom/itextpdf/text/pdf/PdfAction;

    if-eqz v2, :cond_4d

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->A:Lcom/itextpdf/text/pdf/PdfName;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfAction;

    goto :goto_40

    :cond_4d
    instance-of v2, v1, Lcom/itextpdf/text/pdf/PdfAnnotation;

    if-eqz v2, :cond_56

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->AA:Lcom/itextpdf/text/pdf/PdfName;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfAnnotation;

    goto :goto_40

    :cond_56
    instance-of v2, v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-eqz v2, :cond_72

    move-object v2, v1

    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->size()I

    move-result v4

    const/4 v5, 0x1

    if-ne v4, v5, :cond_72

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->N:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v4

    if-eqz v4, :cond_72

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_77

    :cond_72
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfObject;

    goto :goto_40

    :goto_77
    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    goto :goto_d

    :cond_7b
    return-object v0
.end method

.method write()V
    .registers 6

    iget-object v0, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->readerInstances:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_a
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_1e

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfReaderInstance;

    iput-object v1, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->currentPdfReaderInstance:Lcom/itextpdf/text/pdf/PdfReaderInstance;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->currentPdfReaderInstance:Lcom/itextpdf/text/pdf/PdfReaderInstance;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfReaderInstance;->writeAllPages()V

    goto :goto_a

    :cond_1e
    new-instance v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FIELDS:Lcom/itextpdf/text/pdf/PdfName;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->fdf:Lcom/itextpdf/text/pdf/FdfWriter;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/FdfWriter;->fields:Ljava/util/HashMap;

    invoke-virtual {p0, v2}, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->calculate(Ljava/util/HashMap;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    iget-object v1, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->fdf:Lcom/itextpdf/text/pdf/FdfWriter;

    # getter for: Lcom/itextpdf/text/pdf/FdfWriter;->file:Ljava/lang/String;
    invoke-static {v1}, Lcom/itextpdf/text/pdf/FdfWriter;->access$100(Lcom/itextpdf/text/pdf/FdfWriter;)Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_4a

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v2, Lcom/itextpdf/text/pdf/PdfString;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->fdf:Lcom/itextpdf/text/pdf/FdfWriter;

    # getter for: Lcom/itextpdf/text/pdf/FdfWriter;->file:Ljava/lang/String;
    invoke-static {v3}, Lcom/itextpdf/text/pdf/FdfWriter;->access$100(Lcom/itextpdf/text/pdf/FdfWriter;)Ljava/lang/String;

    move-result-object v3

    const-string v4, "UnicodeBig"

    invoke-direct {v2, v3, v4}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_4a
    iget-object v1, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->fdf:Lcom/itextpdf/text/pdf/FdfWriter;

    # getter for: Lcom/itextpdf/text/pdf/FdfWriter;->statusMessage:Ljava/lang/String;
    invoke-static {v1}, Lcom/itextpdf/text/pdf/FdfWriter;->access$200(Lcom/itextpdf/text/pdf/FdfWriter;)Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_72

    iget-object v1, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->fdf:Lcom/itextpdf/text/pdf/FdfWriter;

    # getter for: Lcom/itextpdf/text/pdf/FdfWriter;->statusMessage:Ljava/lang/String;
    invoke-static {v1}, Lcom/itextpdf/text/pdf/FdfWriter;->access$200(Lcom/itextpdf/text/pdf/FdfWriter;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v1

    if-eqz v1, :cond_72

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->STATUS:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v2, Lcom/itextpdf/text/pdf/PdfString;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->fdf:Lcom/itextpdf/text/pdf/FdfWriter;

    # getter for: Lcom/itextpdf/text/pdf/FdfWriter;->statusMessage:Ljava/lang/String;
    invoke-static {v3}, Lcom/itextpdf/text/pdf/FdfWriter;->access$200(Lcom/itextpdf/text/pdf/FdfWriter;)Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_72
    new-instance v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FDF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfIndirectObject;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v0

    iget-object v1, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->os:Lcom/itextpdf/text/pdf/OutputStreamCounter;

    const-string v2, "trailer\n"

    invoke-static {v2}, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->getISOBytes(Ljava/lang/String;)[B

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/OutputStreamCounter;->write([B)V

    new-instance v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ROOT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    const/4 v0, 0x0

    iget-object v2, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->os:Lcom/itextpdf/text/pdf/OutputStreamCounter;

    invoke-virtual {v1, v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->toPdf(Lcom/itextpdf/text/pdf/PdfWriter;Ljava/io/OutputStream;)V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->os:Lcom/itextpdf/text/pdf/OutputStreamCounter;

    const-string v1, "\n%%EOF\n"

    invoke-static {v1}, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->getISOBytes(Ljava/lang/String;)[B

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/OutputStreamCounter;->write([B)V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/FdfWriter$Wrt;->os:Lcom/itextpdf/text/pdf/OutputStreamCounter;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/OutputStreamCounter;->close()V

    return-void
.end method
