.class public Lcom/itextpdf/text/pdf/crypto/AESCipherCBCnoPad;
.super Ljava/lang/Object;


# instance fields
.field private cbc:Lorg/spongycastle/crypto/BlockCipher;


# direct methods
.method public constructor <init>(Z[B)V
    .registers 5

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    new-instance v0, Lorg/spongycastle/crypto/engines/AESFastEngine;

    invoke-direct {v0}, Lorg/spongycastle/crypto/engines/AESFastEngine;-><init>()V

    new-instance v1, Lorg/spongycastle/crypto/modes/CBCBlockCipher;

    invoke-direct {v1, v0}, Lorg/spongycastle/crypto/modes/CBCBlockCipher;-><init>(Lorg/spongycastle/crypto/BlockCipher;)V

    iput-object v1, p0, Lcom/itextpdf/text/pdf/crypto/AESCipherCBCnoPad;->cbc:Lorg/spongycastle/crypto/BlockCipher;

    new-instance v0, Lorg/spongycastle/crypto/params/KeyParameter;

    invoke-direct {v0, p2}, Lorg/spongycastle/crypto/params/KeyParameter;-><init>([B)V

    iget-object p2, p0, Lcom/itextpdf/text/pdf/crypto/AESCipherCBCnoPad;->cbc:Lorg/spongycastle/crypto/BlockCipher;

    invoke-interface {p2, p1, v0}, Lorg/spongycastle/crypto/BlockCipher;->init(ZLorg/spongycastle/crypto/CipherParameters;)V

    return-void
.end method


# virtual methods
.method public processBlock([BII)[B
    .registers 7

    iget-object v0, p0, Lcom/itextpdf/text/pdf/crypto/AESCipherCBCnoPad;->cbc:Lorg/spongycastle/crypto/BlockCipher;

    invoke-interface {v0}, Lorg/spongycastle/crypto/BlockCipher;->getBlockSize()I

    move-result v0

    rem-int v0, p3, v0

    if-nez v0, :cond_2b

    new-array v0, p3, [B

    const/4 v1, 0x0

    :goto_d
    if-lez p3, :cond_2a

    iget-object v2, p0, Lcom/itextpdf/text/pdf/crypto/AESCipherCBCnoPad;->cbc:Lorg/spongycastle/crypto/BlockCipher;

    invoke-interface {v2, p1, p2, v0, v1}, Lorg/spongycastle/crypto/BlockCipher;->processBlock([BI[BI)I

    iget-object v2, p0, Lcom/itextpdf/text/pdf/crypto/AESCipherCBCnoPad;->cbc:Lorg/spongycastle/crypto/BlockCipher;

    invoke-interface {v2}, Lorg/spongycastle/crypto/BlockCipher;->getBlockSize()I

    move-result v2

    sub-int/2addr p3, v2

    iget-object v2, p0, Lcom/itextpdf/text/pdf/crypto/AESCipherCBCnoPad;->cbc:Lorg/spongycastle/crypto/BlockCipher;

    invoke-interface {v2}, Lorg/spongycastle/crypto/BlockCipher;->getBlockSize()I

    move-result v2

    add-int/2addr v1, v2

    iget-object v2, p0, Lcom/itextpdf/text/pdf/crypto/AESCipherCBCnoPad;->cbc:Lorg/spongycastle/crypto/BlockCipher;

    invoke-interface {v2}, Lorg/spongycastle/crypto/BlockCipher;->getBlockSize()I

    move-result v2

    add-int/2addr p2, v2

    goto :goto_d

    :cond_2a
    return-object v0

    :cond_2b
    new-instance p1, Ljava/lang/IllegalArgumentException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Not multiple of block: "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method
