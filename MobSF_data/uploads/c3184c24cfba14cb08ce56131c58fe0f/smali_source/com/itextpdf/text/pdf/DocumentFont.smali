.class public Lcom/itextpdf/text/pdf/DocumentFont;
.super Lcom/itextpdf/text/pdf/BaseFont;


# static fields
.field private static final stdEnc:[I


# instance fields
.field private ascender:F

.field private byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

.field private capHeight:F

.field protected cjkEncoding:Ljava/lang/String;

.field private cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

.field protected defaultWidth:I

.field private descender:F

.field private diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

.field private font:Lcom/itextpdf/text/pdf/PdfDictionary;

.field private fontName:Ljava/lang/String;

.field private fontWeight:F

.field private hMetrics:Lcom/itextpdf/text/pdf/IntHashtable;

.field protected isType0:Z

.field private italicAngle:F

.field private llx:F

.field private lly:F

.field private metrics:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/Integer;",
            "[I>;"
        }
    .end annotation
.end field

.field private refFont:Lcom/itextpdf/text/pdf/PRIndirectReference;

.field private uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

.field protected uniMap:Ljava/lang/String;

.field private urx:F

.field private ury:F


# direct methods
.method static constructor <clinit>()V
    .registers 1

    const/16 v0, 0x100

    new-array v0, v0, [I

    fill-array-data v0, :array_a

    sput-object v0, Lcom/itextpdf/text/pdf/DocumentFont;->stdEnc:[I

    return-void

    :array_a
    .array-data 4
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x20
        0x21
        0x22
        0x23
        0x24
        0x25
        0x26
        0x2019
        0x28
        0x29
        0x2a
        0x2b
        0x2c
        0x2d
        0x2e
        0x2f
        0x30
        0x31
        0x32
        0x33
        0x34
        0x35
        0x36
        0x37
        0x38
        0x39
        0x3a
        0x3b
        0x3c
        0x3d
        0x3e
        0x3f
        0x40
        0x41
        0x42
        0x43
        0x44
        0x45
        0x46
        0x47
        0x48
        0x49
        0x4a
        0x4b
        0x4c
        0x4d
        0x4e
        0x4f
        0x50
        0x51
        0x52
        0x53
        0x54
        0x55
        0x56
        0x57
        0x58
        0x59
        0x5a
        0x5b
        0x5c
        0x5d
        0x5e
        0x5f
        0x2018
        0x61
        0x62
        0x63
        0x64
        0x65
        0x66
        0x67
        0x68
        0x69
        0x6a
        0x6b
        0x6c
        0x6d
        0x6e
        0x6f
        0x70
        0x71
        0x72
        0x73
        0x74
        0x75
        0x76
        0x77
        0x78
        0x79
        0x7a
        0x7b
        0x7c
        0x7d
        0x7e
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0xa1
        0xa2
        0xa3
        0x2044
        0xa5
        0x192
        0xa7
        0xa4
        0x27
        0x201c
        0xab
        0x2039
        0x203a
        0xfb01
        0xfb02
        0x0
        0x2013
        0x2020
        0x2021
        0xb7
        0x0
        0xb6
        0x2022
        0x201a
        0x201e
        0x201d
        0xbb
        0x2026
        0x2030
        0x0
        0xbf
        0x0
        0x60
        0xb4
        0x2c6
        0x2dc
        0xaf
        0x2d8
        0x2d9
        0xa8
        0x0
        0x2da
        0xb8
        0x0
        0x2dd
        0x2db
        0x2c7
        0x2014
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0xc6
        0x0
        0xaa
        0x0
        0x0
        0x0
        0x0
        0x141
        0xd8
        0x152
        0xba
        0x0
        0x0
        0x0
        0x0
        0x0
        0xe6
        0x0
        0x0
        0x0
        0x131
        0x0
        0x0
        0x142
        0xf8
        0x153
        0xdf
        0x0
        0x0
        0x0
        0x0
    .end array-data
.end method

.method constructor <init>(Lcom/itextpdf/text/pdf/PRIndirectReference;)V
    .registers 4

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/BaseFont;-><init>()V

    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    const/high16 v0, 0x44480000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    const/high16 v0, 0x442f0000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    const/high16 v0, -0x3cb80000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    const/4 v1, 0x0

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    const/high16 v1, -0x3db80000

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    const/high16 v0, 0x42c80000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    const/high16 v0, 0x44610000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const/16 v0, 0x3e8

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->defaultWidth:I

    iput-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->refFont:Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->init()V

    return-void
.end method

.method constructor <init>(Lcom/itextpdf/text/pdf/PRIndirectReference;Lcom/itextpdf/text/pdf/PdfDictionary;)V
    .registers 6

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/BaseFont;-><init>()V

    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    const/high16 v0, 0x44480000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    const/high16 v0, 0x442f0000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    const/high16 v0, -0x3cb80000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    const/4 v1, 0x0

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    const/high16 v1, -0x3db80000

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    const/high16 v0, 0x42c80000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    const/high16 v0, 0x44610000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const/16 v0, 0x3e8

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->defaultWidth:I

    iput-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->refFont:Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    iget-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-nez p1, :cond_74

    if-eqz p2, :cond_74

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object p1

    invoke-interface {p1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_5c
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_74

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfName;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-virtual {v1, v2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_5c

    :cond_74
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->init()V

    return-void
.end method

.method constructor <init>(Lcom/itextpdf/text/pdf/PdfDictionary;)V
    .registers 4

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/BaseFont;-><init>()V

    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    const/high16 v0, 0x44480000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    const/high16 v0, 0x442f0000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    const/high16 v0, -0x3cb80000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    const/4 v1, 0x0

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    const/high16 v1, -0x3db80000

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    const/high16 v0, 0x42c80000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    const/high16 v0, 0x44610000

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const/16 v0, 0x3e8

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->defaultWidth:I

    const/4 v0, 0x0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->refFont:Lcom/itextpdf/text/pdf/PRIndirectReference;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->init()V

    return-void
.end method

.method private decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;
    .registers 3

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfString;->isHexWriting()Z

    move-result v0

    if-eqz v0, :cond_11

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfString;->getBytes()[B

    move-result-object p1

    const-string v0, "UnicodeBigUnmarked"

    invoke-static {p1, v0}, Lcom/itextpdf/text/pdf/PdfEncodings;->convertToString([BLjava/lang/String;)Ljava/lang/String;

    move-result-object p1

    return-object p1

    :cond_11
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method

.method private doType1TT()V
    .registers 9

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_90

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->BASEFONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v0

    sget-object v2, Lcom/itextpdf/text/pdf/DocumentFont;->BuiltinFonts14:Ljava/util/HashMap;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_35

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->SYMBOL:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_31

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ZAPFDINGBATS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_35

    :cond_31
    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    goto :goto_38

    :cond_35
    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    :goto_38
    :try_start_38
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->processToUnicode()Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;

    move-result-object v0

    if-eqz v0, :cond_bc

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;->createReverseMapping()Ljava/util/Map;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_4a
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_bc

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Integer;

    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    move-result v5

    invoke-virtual {v3, v4, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    invoke-virtual {v3, v4, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I
    :try_end_88
    .catch Ljava/lang/Exception; {:try_start_38 .. :try_end_88} :catch_89

    goto :goto_4a

    :catch_89
    move-exception v0

    new-instance v1, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v1

    :cond_90
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v2

    if-eqz v2, :cond_9c

    check-cast v0, Lcom/itextpdf/text/pdf/PdfName;

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    goto :goto_bc

    :cond_9c
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v2

    if-eqz v2, :cond_bc

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->BASEENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-nez v2, :cond_b4

    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    goto :goto_b9

    :cond_b4
    check-cast v2, Lcom/itextpdf/text/pdf/PdfName;

    invoke-direct {p0, v2}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    :goto_b9
    invoke-direct {p0, v0, v1}, Lcom/itextpdf/text/pdf/DocumentFont;->fillDiffMap(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;)V

    :cond_bc
    :goto_bc
    sget-object v0, Lcom/itextpdf/text/pdf/DocumentFont;->BuiltinFonts14:Ljava/util/HashMap;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_165

    :try_start_c6
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    const-string v2, "Cp1252"

    const/4 v3, 0x0

    invoke-static {v0, v2, v3}, Lcom/itextpdf/text/pdf/BaseFont;->createFont(Ljava/lang/String;Ljava/lang/String;Z)Lcom/itextpdf/text/pdf/BaseFont;

    move-result-object v0
    :try_end_cf
    .catch Ljava/lang/Exception; {:try_start_c6 .. :try_end_cf} :catch_15e

    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/IntHashtable;->toOrderedKeys()[I

    move-result-object v2

    const/4 v4, 0x0

    :goto_d6
    array-length v5, v2

    if-ge v4, v5, :cond_f2

    iget-object v5, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    aget v6, v2, v4

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v5

    iget-object v6, p0, Lcom/itextpdf/text/pdf/DocumentFont;->widths:[I

    aget v7, v2, v4

    invoke-static {v7}, Lcom/itextpdf/text/pdf/GlyphList;->unicodeToName(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v0, v5, v7}, Lcom/itextpdf/text/pdf/BaseFont;->getRawWidth(ILjava/lang/String;)I

    move-result v7

    aput v7, v6, v5

    add-int/lit8 v4, v4, 0x1

    goto :goto_d6

    :cond_f2
    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    if-eqz v2, :cond_11a

    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/IntHashtable;->toOrderedKeys()[I

    move-result-object v2

    :goto_fc
    array-length v4, v2

    if-ge v3, v4, :cond_118

    iget-object v4, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    aget v5, v2, v3

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v4

    iget-object v5, p0, Lcom/itextpdf/text/pdf/DocumentFont;->widths:[I

    aget v6, v2, v3

    invoke-static {v6}, Lcom/itextpdf/text/pdf/GlyphList;->unicodeToName(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v0, v4, v6}, Lcom/itextpdf/text/pdf/BaseFont;->getRawWidth(ILjava/lang/String;)I

    move-result v6

    aput v6, v5, v4

    add-int/lit8 v3, v3, 0x1

    goto :goto_fc

    :cond_118
    iput-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    :cond_11a
    const/4 v1, 0x1

    const/high16 v2, 0x447a0000

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    const/4 v1, 0x2

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    const/4 v1, 0x3

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    const/4 v1, 0x4

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    const/16 v1, 0x17

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    const/4 v1, 0x5

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    const/4 v1, 0x6

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    const/4 v1, 0x7

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    const/16 v1, 0x8

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    goto :goto_165

    :catch_15e
    move-exception v0

    new-instance v1, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v1

    :cond_165
    :goto_165
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillWidths()V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillFontDesc(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    return-void
.end method

.method private fillDiffMap(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;)V
    .registers 9

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->DIFFERENCES:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p1

    if-eqz p1, :cond_92

    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    const/4 v0, 0x0

    move-object v1, p2

    const/4 p2, 0x0

    const/4 v2, 0x0

    :goto_13
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-ge p2, v3, :cond_92

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v4

    if-eqz v4, :cond_2a

    check-cast v3, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    goto :goto_8f

    :cond_2a
    check-cast v3, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfName;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/GlyphList;->nameToUnicode(Ljava/lang/String;)[I

    move-result-object v3

    if-eqz v3, :cond_53

    array-length v4, v3

    if-lez v4, :cond_53

    iget-object v4, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    aget v5, v3, v0

    invoke-virtual {v4, v5, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    iget-object v4, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    aget v5, v3, v0

    invoke-virtual {v4, v2, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    iget-object v4, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    aget v3, v3, v0

    invoke-virtual {v4, v3, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    goto :goto_8d

    :cond_53
    if-nez v1, :cond_60

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->processToUnicode()Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;

    move-result-object v1

    if-nez v1, :cond_60

    new-instance v1, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;-><init>()V

    :cond_60
    const/4 v3, 0x1

    new-array v4, v3, [B

    int-to-byte v5, v2

    aput-byte v5, v4, v0

    invoke-virtual {v1, v4, v0, v3}, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;->lookup([BII)Ljava/lang/String;

    move-result-object v4

    if-eqz v4, :cond_8d

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v5

    if-ne v5, v3, :cond_8d

    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v4, v0}, Ljava/lang/String;->charAt(I)C

    move-result v5

    invoke-virtual {v3, v5, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v4, v0}, Ljava/lang/String;->charAt(I)C

    move-result v5

    invoke-virtual {v3, v2, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v4, v0}, Ljava/lang/String;->charAt(I)C

    move-result v4

    invoke-virtual {v3, v4, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    :cond_8d
    :goto_8d
    add-int/lit8 v2, v2, 0x1

    :goto_8f
    add-int/lit8 p2, p2, 0x1

    goto :goto_13

    :cond_92
    return-void
.end method

.method private fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V
    .registers 7

    const/4 v0, 0x0

    const/16 v1, 0x100

    if-nez p1, :cond_1a

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->isSymbolic()Z

    move-result v2

    if-eqz v2, :cond_1a

    :goto_b
    if-ge v0, v1, :cond_9c

    iget-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {p1, v0, v0}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    iget-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {p1, v0, v0}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    add-int/lit8 v0, v0, 0x1

    goto :goto_b

    :cond_1a
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->MAC_ROMAN_ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_52

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->WIN_ANSI_ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_52

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->SYMBOL:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_52

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ZAPFDINGBATS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3b

    goto :goto_52

    :cond_3b
    :goto_3b
    if-ge v0, v1, :cond_9c

    iget-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    sget-object v2, Lcom/itextpdf/text/pdf/DocumentFont;->stdEnc:[I

    aget v2, v2, v0

    invoke-virtual {p1, v2, v0}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    iget-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    sget-object v2, Lcom/itextpdf/text/pdf/DocumentFont;->stdEnc:[I

    aget v2, v2, v0

    invoke-virtual {p1, v0, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    add-int/lit8 v0, v0, 0x1

    goto :goto_3b

    :cond_52
    :goto_52
    new-array v2, v1, [B

    const/4 v3, 0x0

    :goto_55
    if-ge v3, v1, :cond_5d

    int-to-byte v4, v3

    aput-byte v4, v2, v3

    add-int/lit8 v3, v3, 0x1

    goto :goto_55

    :cond_5d
    const-string v3, "Cp1252"

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->MAC_ROMAN_ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_6a

    const-string v3, "MacRoman"

    goto :goto_7f

    :cond_6a
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->SYMBOL:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_75

    const-string v3, "Symbol"

    goto :goto_7f

    :cond_75
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->ZAPFDINGBATS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_7f

    const-string v3, "ZapfDingbats"

    :cond_7f
    :goto_7f
    invoke-static {v2, v3}, Lcom/itextpdf/text/pdf/PdfEncodings;->convertToString([BLjava/lang/String;)Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p1}, Ljava/lang/String;->toCharArray()[C

    move-result-object p1

    :goto_87
    if-ge v0, v1, :cond_9a

    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    aget-char v4, p1, v0

    invoke-virtual {v2, v4, v0}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    aget-char v4, p1, v0

    invoke-virtual {v2, v0, v4}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    add-int/lit8 v0, v0, 0x1

    goto :goto_87

    :cond_9a
    iput-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->encoding:Ljava/lang/String;

    :cond_9c
    return-void
.end method

.method private fillFontDesc(Lcom/itextpdf/text/pdf/PdfDictionary;)V
    .registers 5

    if-nez p1, :cond_3

    return-void

    :cond_3
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->ASCENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-eqz v0, :cond_11

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    :cond_11
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->CAPHEIGHT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-eqz v0, :cond_1f

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    :cond_1f
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->DESCENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-eqz v0, :cond_2d

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    :cond_2d
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->ITALICANGLE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-eqz v0, :cond_3b

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    :cond_3b
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FONTWEIGHT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-eqz v0, :cond_49

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    :cond_49
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FONTBBOX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p1

    if-eqz p1, :cond_9d

    const/4 v0, 0x0

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    const/4 v0, 0x1

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    const/4 v0, 0x2

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    const/4 v0, 0x3

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result p1

    iput p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    cmpl-float p1, p1, v0

    if-lez p1, :cond_8d

    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    iput p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    :cond_8d
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    cmpl-float p1, p1, v0

    if-lez p1, :cond_9d

    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    iput p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    :cond_9d
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    invoke-static {p1, v0}, Ljava/lang/Math;->max(FF)F

    move-result p1

    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    iget v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    invoke-static {v0, v1}, Ljava/lang/Math;->min(FF)F

    move-result v0

    const/high16 v1, 0x447a0000

    mul-float v2, p1, v1

    sub-float/2addr p1, v0

    div-float/2addr v2, p1

    iput v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    mul-float v0, v0, v1

    div-float/2addr v0, p1

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    return-void
.end method

.method private fillMetrics([BLcom/itextpdf/text/pdf/IntHashtable;I)V
    .registers 20

    move-object/from16 v1, p0

    move-object/from16 v0, p2

    :try_start_4
    new-instance v2, Lcom/itextpdf/text/pdf/PdfContentParser;

    new-instance v3, Lcom/itextpdf/text/pdf/PRTokeniser;

    new-instance v4, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    new-instance v5, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v5}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    move-object/from16 v6, p1

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource([B)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object v5

    invoke-direct {v4, v5}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;)V

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/PRTokeniser;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/PdfContentParser;-><init>(Lcom/itextpdf/text/pdf/PRTokeniser;)V
    :try_end_1e
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_1e} :catch_176

    const/16 v3, 0x32

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v3, 0x1

    const/4 v6, 0x0

    const/16 v7, 0x32

    :cond_26
    :goto_26
    if-nez v3, :cond_2a

    if-lez v6, :cond_175

    :cond_2a
    :try_start_2a
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8
    :try_end_2e
    .catch Ljava/lang/Exception; {:try_start_2a .. :try_end_2e} :catch_171

    if-nez v8, :cond_32

    goto/16 :goto_175

    :cond_32
    :try_start_32
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v9

    const/16 v10, 0xc8

    if-ne v9, v10, :cond_26

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v10, "begin"

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_4a

    add-int/lit8 v6, v6, 0x1

    const/4 v3, 0x0

    goto :goto_26

    :cond_4a
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v10, "end"

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_59

    add-int/lit8 v6, v6, -0x1

    goto :goto_26

    :cond_59
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v10, "beginbfchar"

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    const/4 v10, 0x2

    if-eqz v9, :cond_b7

    :cond_66
    :goto_66
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v11, "endbfchar"

    invoke-virtual {v9, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_77

    goto :goto_26

    :cond_77
    check-cast v8, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {v1, v8}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {v1, v9}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/String;->length()I

    move-result v11

    if-ne v11, v5, :cond_66

    invoke-virtual {v8, v4}, Ljava/lang/String;->charAt(I)C

    move-result v8

    invoke-virtual {v9}, Ljava/lang/String;->length()I

    move-result v11

    sub-int/2addr v11, v5

    invoke-virtual {v9, v11}, Ljava/lang/String;->charAt(I)C

    move-result v9

    invoke-virtual {v0, v8}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v11

    if-eqz v11, :cond_a5

    invoke-virtual {v0, v8}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v11

    goto :goto_a7

    :cond_a5
    move/from16 v11, p3

    :goto_a7
    iget-object v12, v1, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    new-array v13, v10, [I

    aput v8, v13, v4

    aput v11, v13, v5

    invoke-virtual {v12, v9, v13}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_66

    :cond_b7
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v8

    const-string v9, "beginbfrange"

    invoke-virtual {v8, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_26

    :cond_c3
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v11, "endbfrange"

    invoke-virtual {v9, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_d5

    goto/16 :goto_26

    :cond_d5
    check-cast v8, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {v1, v8}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {v1, v9}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v4}, Ljava/lang/String;->charAt(I)C

    move-result v8

    invoke-virtual {v9, v4}, Ljava/lang/String;->charAt(I)C

    move-result v9

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v11

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/PdfObject;->isString()Z

    move-result v12

    if-eqz v12, :cond_12f

    check-cast v11, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {v1, v11}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/String;->length()I

    move-result v12

    if-ne v12, v5, :cond_c3

    invoke-virtual {v11}, Ljava/lang/String;->length()I

    move-result v12

    sub-int/2addr v12, v5

    invoke-virtual {v11, v12}, Ljava/lang/String;->charAt(I)C

    move-result v11

    :goto_10c
    if-gt v8, v9, :cond_c3

    invoke-virtual {v0, v8}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v12

    if-eqz v12, :cond_119

    invoke-virtual {v0, v8}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v12

    goto :goto_11b

    :cond_119
    move/from16 v12, p3

    :goto_11b
    iget-object v13, v1, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v14

    new-array v15, v10, [I

    aput v8, v15, v4

    aput v12, v15, v5

    invoke-virtual {v13, v14, v15}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v8, v8, 0x1

    add-int/lit8 v11, v11, 0x1

    goto :goto_10c

    :cond_12f
    check-cast v11, Lcom/itextpdf/text/pdf/PdfArray;

    move v9, v8

    const/4 v8, 0x0

    :goto_133
    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v12

    if-ge v8, v12, :cond_c3

    invoke-virtual {v11, v8}, Lcom/itextpdf/text/pdf/PdfArray;->getAsString(I)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v12

    invoke-direct {v1, v12}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/String;->length()I

    move-result v13

    if-ne v13, v5, :cond_16c

    invoke-virtual {v12}, Ljava/lang/String;->length()I

    move-result v13

    sub-int/2addr v13, v5

    invoke-virtual {v12, v13}, Ljava/lang/String;->charAt(I)C

    move-result v12

    invoke-virtual {v0, v9}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v13

    if-eqz v13, :cond_15b

    invoke-virtual {v0, v9}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v13

    goto :goto_15d

    :cond_15b
    move/from16 v13, p3

    :goto_15d
    iget-object v14, v1, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v12

    new-array v15, v10, [I

    aput v9, v15, v4

    aput v13, v15, v5

    invoke-virtual {v14, v12, v15}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_16c
    .catch Ljava/lang/Exception; {:try_start_32 .. :try_end_16c} :catch_176

    :cond_16c
    add-int/lit8 v8, v8, 0x1

    add-int/lit8 v9, v9, 0x1

    goto :goto_133

    :catch_171
    add-int/lit8 v7, v7, -0x1

    if-gez v7, :cond_26

    :cond_175
    :goto_175
    return-void

    :catch_176
    move-exception v0

    new-instance v2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v2, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v2
.end method

.method private fillMetricsIdentity(Lcom/itextpdf/text/pdf/IntHashtable;I)V
    .registers 10

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_2
    const/high16 v2, 0x10000

    if-ge v1, v2, :cond_26

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v2

    if-eqz v2, :cond_11

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v2

    goto :goto_12

    :cond_11
    move v2, p2

    :goto_12
    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v5, 0x2

    new-array v5, v5, [I

    aput v1, v5, v0

    const/4 v6, 0x1

    aput v2, v5, v6

    invoke-virtual {v3, v4, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    :cond_26
    return-void
.end method

.method private fillWidths()V
    .registers 7

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->WIDTHS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FIRSTCHAR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->LASTCHAR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v2

    if-eqz v1, :cond_4d

    if-eqz v2, :cond_4d

    if-eqz v0, :cond_4d

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    add-int/2addr v2, v1

    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->widths:[I

    array-length v3, v3

    const/4 v4, 0x0

    if-ge v3, v2, :cond_36

    new-array v2, v2, [I

    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->widths:[I

    invoke-static {v3, v4, v2, v4, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    iput-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->widths:[I

    :cond_36
    :goto_36
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    if-ge v4, v2, :cond_4d

    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->widths:[I

    add-int v3, v1, v4

    invoke-virtual {v0, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v5

    aput v5, v2, v3

    add-int/lit8 v4, v4, 0x1

    goto :goto_36

    :cond_4d
    return-void
.end method

.method private init()V
    .registers 5

    const-string v0, ""

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->encoding:Ljava/lang/String;

    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontSpecific:Z

    const/4 v1, 0x4

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontType:I

    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->BASEFONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v1

    if-eqz v1, :cond_1d

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfName;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    goto :goto_1f

    :cond_1d
    const-string v1, "Unspecified Font Name"

    :goto_1f
    iput-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->SUBTYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v1

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TYPE1:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_f4

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TRUETYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3b

    goto/16 :goto_f4

    :cond_3b
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TYPE3:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_57

    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v1

    invoke-direct {p0, v1, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillDiffMap(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;)V

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillWidths()V

    goto/16 :goto_f7

    :cond_57
    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v2

    if-eqz v2, :cond_f7

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfName;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/CJKFont;->GetCompatibleFont(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_89

    :try_start_6f
    invoke-static {v3, v2, v0}, Lcom/itextpdf/text/pdf/BaseFont;->createFont(Ljava/lang/String;Ljava/lang/String;Z)Lcom/itextpdf/text/pdf/BaseFont;

    move-result-object v3

    iput-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;
    :try_end_75
    .catch Ljava/lang/Exception; {:try_start_6f .. :try_end_75} :catch_82

    iput-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkEncoding:Ljava/lang/String;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    check-cast v3, Lcom/itextpdf/text/pdf/CJKFont;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/CJKFont;->getUniMap()Ljava/lang/String;

    move-result-object v3

    iput-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uniMap:Ljava/lang/String;

    goto :goto_89

    :catch_82
    move-exception v0

    new-instance v1, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v1

    :cond_89
    :goto_89
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->TYPE0:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_f7

    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const-string v1, "Identity-H"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_ee

    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v1, :cond_ee

    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->DESCENDANTFONTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DW:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfNumber;

    if-eqz v1, :cond_cc

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->defaultWidth:I

    :cond_cc
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->W:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/DocumentFont;->readWidths(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/pdf/IntHashtable;

    move-result-object v1

    iput-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->hMetrics:Lcom/itextpdf/text/pdf/IntHashtable;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillFontDesc(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    goto :goto_f7

    :cond_ee
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->processType0(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    goto :goto_f7

    :cond_f4
    :goto_f4
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->doType1TT()V

    :cond_f7
    :goto_f7
    return-void
.end method

.method private processToUnicode()Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;
    .registers 5

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->TOUNICODE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    instance-of v1, v0, Lcom/itextpdf/text/pdf/PRStream;

    const/4 v2, 0x0

    if-eqz v1, :cond_27

    :try_start_11
    check-cast v0, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;)[B

    move-result-object v0

    new-instance v1, Lcom/itextpdf/text/pdf/fonts/cmaps/CidLocationFromByte;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/pdf/fonts/cmaps/CidLocationFromByte;-><init>([B)V

    new-instance v0, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;-><init>()V

    const-string v3, ""

    invoke-static {v3, v0, v1}, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapParserEx;->parseCid(Ljava/lang/String;Lcom/itextpdf/text/pdf/fonts/cmaps/AbstractCMap;Lcom/itextpdf/text/pdf/fonts/cmaps/CidLocation;)V
    :try_end_26
    .catch Ljava/lang/Exception; {:try_start_11 .. :try_end_26} :catch_27

    move-object v2, v0

    :catch_27
    :cond_27
    return-object v2
.end method

.method private processType0(Lcom/itextpdf/text/pdf/PdfDictionary;)V
    .registers 6

    :try_start_0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->TOUNICODE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DESCENDANTFONTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    const/4 v1, 0x0

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DW:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfNumber;

    const/16 v2, 0x3e8

    if-eqz v1, :cond_35

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    :cond_35
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->W:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/DocumentFont;->readWidths(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/pdf/IntHashtable;

    move-result-object v1

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/DocumentFont;->fillFontDesc(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    instance-of p1, v0, Lcom/itextpdf/text/pdf/PRStream;

    if-eqz p1, :cond_62

    check-cast v0, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;)[B

    move-result-object p1

    invoke-direct {p0, p1, v1, v2}, Lcom/itextpdf/text/pdf/DocumentFont;->fillMetrics([BLcom/itextpdf/text/pdf/IntHashtable;I)V

    goto :goto_72

    :cond_62
    new-instance p1, Lcom/itextpdf/text/pdf/PdfName;

    const-string v3, "Identity-H"

    invoke-direct {p1, v3}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_72

    invoke-direct {p0, v1, v2}, Lcom/itextpdf/text/pdf/DocumentFont;->fillMetricsIdentity(Lcom/itextpdf/text/pdf/IntHashtable;I)V
    :try_end_72
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_72} :catch_73

    :cond_72
    :goto_72
    return-void

    :catch_73
    move-exception p1

    new-instance v0, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v0
.end method

.method private readWidths(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/pdf/IntHashtable;
    .registers 10

    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    if-nez p1, :cond_8

    return-object v0

    :cond_8
    const/4 v1, 0x0

    const/4 v2, 0x0

    :goto_a
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_70

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v3

    add-int/lit8 v2, v2, 0x1

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    invoke-static {v4}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v5

    if-eqz v5, :cond_4f

    check-cast v4, Lcom/itextpdf/text/pdf/PdfArray;

    move v5, v3

    const/4 v3, 0x0

    :goto_32
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v6

    if-ge v3, v6, :cond_6d

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    invoke-static {v6}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v6

    add-int/lit8 v7, v5, 0x1

    invoke-virtual {v0, v5, v6}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    add-int/lit8 v3, v3, 0x1

    move v5, v7

    goto :goto_32

    :cond_4f
    check-cast v4, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v4

    add-int/lit8 v2, v2, 0x1

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v5

    :goto_65
    if-gt v3, v4, :cond_6d

    invoke-virtual {v0, v3, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    add-int/lit8 v3, v3, 0x1

    goto :goto_65

    :cond_6d
    add-int/lit8 v2, v2, 0x1

    goto :goto_a

    :cond_70
    return-object v0
.end method


# virtual methods
.method public charExists(I)Z
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_b

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->charExists(I)Z

    move-result p1

    return p1

    :cond_b
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    if-eqz v0, :cond_1a

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result p1

    return p1

    :cond_1a
    invoke-super {p0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->charExists(I)Z

    move-result p1

    return p1
.end method

.method convertToBytes(I)[B
    .registers 6

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_b

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->convertToBytes(I)[B

    move-result-object p1

    return-object p1

    :cond_b
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_30

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, [I

    if-eqz p1, :cond_2d

    aget p1, p1, v2

    const/4 v0, 0x2

    new-array v0, v0, [B

    div-int/lit16 v3, p1, 0x100

    int-to-byte v3, v3

    aput-byte v3, v0, v2

    int-to-byte p1, p1

    aput-byte p1, v0, v1

    return-object v0

    :cond_2d
    new-array p1, v2, [B

    return-object p1

    :cond_30
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v0

    if-eqz v0, :cond_44

    new-array v0, v1, [B

    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result p1

    int-to-byte p1, p1

    aput-byte p1, v0, v2

    return-object v0

    :cond_44
    new-array p1, v2, [B

    return-object p1
.end method

.method public convertToBytes(Ljava/lang/String;)[B
    .registers 10

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_b

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->convertToBytes(Ljava/lang/String;)[B

    move-result-object p1

    return-object p1

    :cond_b
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_48

    invoke-virtual {p1}, Ljava/lang/String;->toCharArray()[C

    move-result-object p1

    array-length v0, p1

    mul-int/lit8 v2, v0, 0x2

    new-array v2, v2, [B

    const/4 v3, 0x0

    const/4 v4, 0x0

    :goto_1b
    if-ge v3, v0, :cond_3e

    iget-object v5, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    aget-char v6, p1, v3

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, [I

    if-eqz v5, :cond_3b

    aget v5, v5, v1

    add-int/lit8 v6, v4, 0x1

    div-int/lit16 v7, v5, 0x100

    int-to-byte v7, v7

    aput-byte v7, v2, v4

    add-int/lit8 v4, v6, 0x1

    int-to-byte v5, v5

    aput-byte v5, v2, v6

    :cond_3b
    add-int/lit8 v3, v3, 0x1

    goto :goto_1b

    :cond_3e
    array-length p1, v2

    if-ne v4, p1, :cond_42

    return-object v2

    :cond_42
    new-array p1, v4, [B

    invoke-static {v2, v1, p1, v1, v4}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    return-object p1

    :cond_48
    invoke-virtual {p1}, Ljava/lang/String;->toCharArray()[C

    move-result-object p1

    array-length v0, p1

    new-array v0, v0, [B

    const/4 v2, 0x0

    const/4 v3, 0x0

    :goto_51
    array-length v4, p1

    if-ge v2, v4, :cond_6f

    iget-object v4, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    aget-char v5, p1, v2

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v4

    if-eqz v4, :cond_6c

    add-int/lit8 v4, v3, 0x1

    iget-object v5, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    aget-char v6, p1, v2

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v5

    int-to-byte v5, v5

    aput-byte v5, v0, v3

    move v3, v4

    :cond_6c
    add-int/lit8 v2, v2, 0x1

    goto :goto_51

    :cond_6f
    array-length p1, v0

    if-ne v3, p1, :cond_73

    return-object v0

    :cond_73
    new-array p1, v3, [B

    invoke-static {v0, v1, p1, v1, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    return-object p1
.end method

.method public getAllNameEntries()[[Ljava/lang/String;
    .registers 6

    const/4 v0, 0x1

    new-array v1, v0, [[Ljava/lang/String;

    const/4 v2, 0x5

    new-array v2, v2, [Ljava/lang/String;

    const-string v3, "4"

    const/4 v4, 0x0

    aput-object v3, v2, v4

    const-string v3, ""

    aput-object v3, v2, v0

    const-string v0, ""

    const/4 v3, 0x2

    aput-object v0, v2, v3

    const-string v0, ""

    const/4 v3, 0x3

    aput-object v0, v2, v3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    const/4 v3, 0x4

    aput-object v0, v2, v3

    aput-object v2, v1, v4

    return-object v1
.end method

.method getByte2Uni()Lcom/itextpdf/text/pdf/IntHashtable;
    .registers 2

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    return-object v0
.end method

.method public getCharBBox(I)[I
    .registers 2

    const/4 p1, 0x0

    return-object p1
.end method

.method getDiffmap()Lcom/itextpdf/text/pdf/IntHashtable;
    .registers 2

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    return-object v0
.end method

.method public getFamilyFontName()[[Ljava/lang/String;
    .registers 2

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->getFullFontName()[[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getFontDescriptor(IF)F
    .registers 5

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_b

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v0, p1, p2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result p1

    return p1

    :cond_b
    const/16 v0, 0x17

    const/high16 v1, 0x447a0000

    if-eq p1, v0, :cond_4d

    const/4 v0, 0x0

    packed-switch p1, :pswitch_data_54

    return v0

    :pswitch_16
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    sub-float/2addr p1, v0

    mul-float p1, p1, p2

    div-float/2addr p1, v1

    return p1

    :pswitch_1f
    return v0

    :pswitch_20
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    mul-float p1, p1, p2

    div-float/2addr p1, v1

    return p1

    :pswitch_26
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    mul-float p1, p1, p2

    div-float/2addr p1, v1

    return p1

    :pswitch_2c
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    mul-float p1, p1, p2

    div-float/2addr p1, v1

    return p1

    :pswitch_32
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    mul-float p1, p1, p2

    div-float/2addr p1, v1

    return p1

    :pswitch_38
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    return p1

    :pswitch_3b
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    mul-float p1, p1, p2

    div-float/2addr p1, v1

    return p1

    :pswitch_41
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    mul-float p1, p1, p2

    div-float/2addr p1, v1

    return p1

    :pswitch_47
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    mul-float p1, p1, p2

    div-float/2addr p1, v1

    return p1

    :cond_4d
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    mul-float p1, p1, p2

    div-float/2addr p1, v1

    return p1

    nop

    :pswitch_data_54
    .packed-switch 0x1
        :pswitch_47
        :pswitch_41
        :pswitch_3b
        :pswitch_38
        :pswitch_32
        :pswitch_2c
        :pswitch_26
        :pswitch_20
        :pswitch_47
        :pswitch_3b
        :pswitch_1f
        :pswitch_16
    .end packed-switch
.end method

.method public getFontDictionary()Lcom/itextpdf/text/pdf/PdfDictionary;
    .registers 2

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    return-object v0
.end method

.method public getFontMatrix()[D
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONTMATRIX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    if-eqz v0, :cond_17

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONTMATRIX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->asDoubleArray()[D

    move-result-object v0

    return-object v0

    :cond_17
    sget-object v0, Lcom/itextpdf/text/pdf/DocumentFont;->DEFAULT_FONT_MATRIX:[D

    return-object v0
.end method

.method public getFullFontName()[[Ljava/lang/String;
    .registers 6

    const/4 v0, 0x1

    new-array v1, v0, [[Ljava/lang/String;

    const/4 v2, 0x4

    new-array v2, v2, [Ljava/lang/String;

    const-string v3, ""

    const/4 v4, 0x0

    aput-object v3, v2, v4

    const-string v3, ""

    aput-object v3, v2, v0

    const-string v0, ""

    const/4 v3, 0x2

    aput-object v0, v2, v3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    const/4 v3, 0x3

    aput-object v0, v2, v3

    aput-object v2, v1, v4

    return-object v1
.end method

.method public getFullFontStream()Lcom/itextpdf/text/pdf/PdfStream;
    .registers 2

    const/4 v0, 0x0

    return-object v0
.end method

.method getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->refFont:Lcom/itextpdf/text/pdf/PRIndirectReference;

    if-eqz v0, :cond_7

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->refFont:Lcom/itextpdf/text/pdf/PRIndirectReference;

    return-object v0

    :cond_7
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Font reuse not allowed with direct font objects."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getKerning(II)I
    .registers 3

    const/4 p1, 0x0

    return p1
.end method

.method public getPostscriptFontName()Ljava/lang/String;
    .registers 2

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    return-object v0
.end method

.method protected getRawCharBBox(ILjava/lang/String;)[I
    .registers 3

    const/4 p1, 0x0

    return-object p1
.end method

.method getRawWidth(ILjava/lang/String;)I
    .registers 3

    const/4 p1, 0x0

    return p1
.end method

.method getUni2Byte()Lcom/itextpdf/text/pdf/IntHashtable;
    .registers 2

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    return-object v0
.end method

.method public getWidth(I)I
    .registers 3

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    if-eqz v0, :cond_3a

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->hMetrics:Lcom/itextpdf/text/pdf/IntHashtable;

    if-eqz v0, :cond_26

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_26

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/BaseFont;->isVertical()Z

    move-result v0

    if-nez v0, :cond_26

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->getCidCode(I)I

    move-result p1

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->hMetrics:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result p1

    if-lez p1, :cond_23

    return p1

    :cond_23
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->defaultWidth:I

    return p1

    :cond_26
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, [I

    if-eqz p1, :cond_38

    const/4 v0, 0x1

    aget p1, p1, v0

    return p1

    :cond_38
    const/4 p1, 0x0

    return p1

    :cond_3a
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_45

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->getWidth(I)I

    move-result p1

    return p1

    :cond_45
    invoke-super {p0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->getWidth(I)I

    move-result p1

    return p1
.end method

.method public getWidth(Ljava/lang/String;)I
    .registers 8

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    if-eqz v0, :cond_72

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->hMetrics:Lcom/itextpdf/text/pdf/IntHashtable;

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_52

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_52

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/BaseFont;->isVertical()Z

    move-result v0

    if-nez v0, :cond_52

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    check-cast v0, Lcom/itextpdf/text/pdf/CJKFont;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/CJKFont;->isIdentity()Z

    move-result v0

    if-eqz v0, :cond_33

    const/4 v0, 0x0

    :goto_21
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v2

    if-ge v1, v2, :cond_71

    invoke-virtual {p1, v1}, Ljava/lang/String;->charAt(I)C

    move-result v2

    invoke-virtual {p0, v2}, Lcom/itextpdf/text/pdf/DocumentFont;->getWidth(I)I

    move-result v2

    add-int/2addr v0, v2

    add-int/lit8 v1, v1, 0x1

    goto :goto_21

    :cond_33
    const/4 v0, 0x0

    :goto_34
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v3

    if-ge v1, v3, :cond_71

    invoke-static {p1, v1}, Lcom/itextpdf/text/Utilities;->isSurrogatePair(Ljava/lang/String;I)Z

    move-result v3

    if-eqz v3, :cond_47

    invoke-static {p1, v1}, Lcom/itextpdf/text/Utilities;->convertToUtf32(Ljava/lang/String;I)I

    move-result v3

    add-int/lit8 v1, v1, 0x1

    goto :goto_4b

    :cond_47
    invoke-virtual {p1, v1}, Ljava/lang/String;->charAt(I)C

    move-result v3

    :goto_4b
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/DocumentFont;->getWidth(I)I

    move-result v3

    add-int/2addr v0, v3

    add-int/2addr v1, v2

    goto :goto_34

    :cond_52
    invoke-virtual {p1}, Ljava/lang/String;->toCharArray()[C

    move-result-object p1

    array-length v0, p1

    const/4 v3, 0x0

    :goto_58
    if-ge v1, v0, :cond_70

    iget-object v4, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    aget-char v5, p1, v1

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, [I

    if-eqz v4, :cond_6d

    aget v4, v4, v2

    add-int/2addr v3, v4

    :cond_6d
    add-int/lit8 v1, v1, 0x1

    goto :goto_58

    :cond_70
    move v0, v3

    :cond_71
    return v0

    :cond_72
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_7d

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->getWidth(Ljava/lang/String;)I

    move-result p1

    return p1

    :cond_7d
    invoke-super {p0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->getWidth(Ljava/lang/String;)I

    move-result p1

    return p1
.end method

.method public hasKernPairs()Z
    .registers 2

    const/4 v0, 0x0

    return v0
.end method

.method isSymbolic()Z
    .registers 4

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_c

    return v1

    :cond_c
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FLAGS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-nez v0, :cond_15

    return v1

    :cond_15
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v0

    and-int/lit8 v0, v0, 0x4

    if-eqz v0, :cond_1e

    const/4 v1, 0x1

    :cond_1e
    return v1
.end method

.method public isVertical()Z
    .registers 2

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_b

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/BaseFont;->isVertical()Z

    move-result v0

    return v0

    :cond_b
    invoke-super {p0}, Lcom/itextpdf/text/pdf/BaseFont;->isVertical()Z

    move-result v0

    return v0
.end method

.method public setKerning(III)Z
    .registers 4

    const/4 p1, 0x0

    return p1
.end method

.method public setPostscriptFontName(Ljava/lang/String;)V
    .registers 2

    return-void
.end method

.method writeFont(Lcom/itextpdf/text/pdf/PdfWriter;Lcom/itextpdf/text/pdf/PdfIndirectReference;[Ljava/lang/Object;)V
    .registers 4

    return-void
.end method
