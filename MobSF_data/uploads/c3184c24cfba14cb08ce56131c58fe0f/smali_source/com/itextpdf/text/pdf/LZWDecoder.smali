.class public Lcom/itextpdf/text/pdf/LZWDecoder;
.super Ljava/lang/Object;


# instance fields
.field andTable:[I

.field bitPointer:I

.field bitsToGet:I

.field bytePointer:I

.field data:[B

.field nextBits:I

.field nextData:I

.field stringTable:[[B

.field tableIndex:I

.field uncompData:Ljava/io/OutputStream;


# direct methods
.method public constructor <init>()V
    .registers 2

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, 0x0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->data:[B

    const/16 v0, 0x9

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bitsToGet:I

    const/4 v0, 0x0

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextData:I

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextBits:I

    const/4 v0, 0x4

    new-array v0, v0, [I

    fill-array-data v0, :array_18

    iput-object v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->andTable:[I

    return-void

    :array_18
    .array-data 4
        0x1ff
        0x3ff
        0x7ff
        0xfff
    .end array-data
.end method


# virtual methods
.method public addStringToTable([B)V
    .registers 5

    iget-object v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->stringTable:[[B

    iget v1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    add-int/lit8 v2, v1, 0x1

    iput v2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    aput-object p1, v0, v1

    iget p1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    const/16 v0, 0x1ff

    if-ne p1, v0, :cond_15

    const/16 p1, 0xa

    :goto_12
    iput p1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bitsToGet:I

    goto :goto_27

    :cond_15
    iget p1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    const/16 v0, 0x3ff

    if-ne p1, v0, :cond_1e

    const/16 p1, 0xb

    goto :goto_12

    :cond_1e
    iget p1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    const/16 v0, 0x7ff

    if-ne p1, v0, :cond_27

    const/16 p1, 0xc

    goto :goto_12

    :cond_27
    :goto_27
    return-void
.end method

.method public addStringToTable([BB)V
    .registers 6

    array-length v0, p1

    add-int/lit8 v1, v0, 0x1

    new-array v1, v1, [B

    const/4 v2, 0x0

    invoke-static {p1, v2, v1, v2, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    aput-byte p2, v1, v0

    iget-object p1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->stringTable:[[B

    iget p2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    add-int/lit8 v0, p2, 0x1

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    aput-object v1, p1, p2

    iget p1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    const/16 p2, 0x1ff

    if-ne p1, p2, :cond_20

    const/16 p1, 0xa

    :goto_1d
    iput p1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bitsToGet:I

    goto :goto_32

    :cond_20
    iget p1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    const/16 p2, 0x3ff

    if-ne p1, p2, :cond_29

    const/16 p1, 0xb

    goto :goto_1d

    :cond_29
    iget p1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    const/16 p2, 0x7ff

    if-ne p1, p2, :cond_32

    const/16 p1, 0xc

    goto :goto_1d

    :cond_32
    :goto_32
    return-void
.end method

.method public composeString([BB)[B
    .registers 6

    array-length v0, p1

    add-int/lit8 v1, v0, 0x1

    new-array v1, v1, [B

    const/4 v2, 0x0

    invoke-static {p1, v2, v1, v2, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    aput-byte p2, v1, v0

    return-object v1
.end method

.method public decode([BLjava/io/OutputStream;)V
    .registers 6

    const/4 v0, 0x0

    aget-byte v1, p1, v0

    if-nez v1, :cond_19

    const/4 v1, 0x1

    aget-byte v2, p1, v1

    if-eq v2, v1, :cond_b

    goto :goto_19

    :cond_b
    new-instance p1, Ljava/lang/RuntimeException;

    new-array p2, v0, [Ljava/lang/Object;

    const-string v0, "lzw.flavour.not.supported"

    invoke-static {v0, p2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_19
    :goto_19
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/LZWDecoder;->initializeStringTable()V

    iput-object p1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->data:[B

    iput-object p2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->uncompData:Ljava/io/OutputStream;

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bytePointer:I

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bitPointer:I

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextData:I

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextBits:I

    const/4 p1, 0x0

    :goto_29
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/LZWDecoder;->getNextCode()I

    move-result p2

    const/16 v1, 0x101

    if-eq p2, v1, :cond_6e

    const/16 v2, 0x100

    if-ne p2, v2, :cond_47

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/LZWDecoder;->initializeStringTable()V

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/LZWDecoder;->getNextCode()I

    move-result p1

    if-ne p1, v1, :cond_3f

    goto :goto_6e

    :cond_3f
    iget-object p2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->stringTable:[[B

    aget-object p2, p2, p1

    invoke-virtual {p0, p2}, Lcom/itextpdf/text/pdf/LZWDecoder;->writeString([B)V

    goto :goto_29

    :cond_47
    iget v1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    if-ge p2, v1, :cond_5c

    iget-object v1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->stringTable:[[B

    aget-object v1, v1, p2

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/LZWDecoder;->writeString([B)V

    iget-object v2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->stringTable:[[B

    aget-object p1, v2, p1

    aget-byte v1, v1, v0

    invoke-virtual {p0, p1, v1}, Lcom/itextpdf/text/pdf/LZWDecoder;->addStringToTable([BB)V

    goto :goto_6c

    :cond_5c
    iget-object v1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->stringTable:[[B

    aget-object p1, v1, p1

    aget-byte v1, p1, v0

    invoke-virtual {p0, p1, v1}, Lcom/itextpdf/text/pdf/LZWDecoder;->composeString([BB)[B

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/LZWDecoder;->writeString([B)V

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/LZWDecoder;->addStringToTable([B)V

    :goto_6c
    move p1, p2

    goto :goto_29

    :cond_6e
    :goto_6e
    return-void
.end method

.method public getNextCode()I
    .registers 5

    :try_start_0
    iget v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextData:I

    shl-int/lit8 v0, v0, 0x8

    iget-object v1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->data:[B

    iget v2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bytePointer:I

    add-int/lit8 v3, v2, 0x1

    iput v3, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bytePointer:I

    aget-byte v1, v1, v2

    and-int/lit16 v1, v1, 0xff

    or-int/2addr v0, v1

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextData:I

    iget v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextBits:I

    add-int/lit8 v0, v0, 0x8

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextBits:I

    iget v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextBits:I

    iget v1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bitsToGet:I

    if-ge v0, v1, :cond_38

    iget v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextData:I

    shl-int/lit8 v0, v0, 0x8

    iget-object v1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->data:[B

    iget v2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bytePointer:I

    add-int/lit8 v3, v2, 0x1

    iput v3, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bytePointer:I

    aget-byte v1, v1, v2

    and-int/lit16 v1, v1, 0xff

    or-int/2addr v0, v1

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextData:I

    iget v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextBits:I

    add-int/lit8 v0, v0, 0x8

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextBits:I

    :cond_38
    iget v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextData:I

    iget v1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextBits:I

    iget v2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bitsToGet:I

    sub-int/2addr v1, v2

    shr-int/2addr v0, v1

    iget-object v1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->andTable:[I

    iget v2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bitsToGet:I

    add-int/lit8 v2, v2, -0x9

    aget v1, v1, v2

    and-int/2addr v0, v1

    iget v1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextBits:I

    iget v2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bitsToGet:I

    sub-int/2addr v1, v2

    iput v1, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->nextBits:I
    :try_end_50
    .catch Ljava/lang/ArrayIndexOutOfBoundsException; {:try_start_0 .. :try_end_50} :catch_51

    return v0

    :catch_51
    const/16 v0, 0x101

    return v0
.end method

.method public initializeStringTable()V
    .registers 5

    const/16 v0, 0x2000

    new-array v0, v0, [[B

    iput-object v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->stringTable:[[B

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_8
    const/16 v2, 0x100

    if-ge v1, v2, :cond_1d

    iget-object v2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->stringTable:[[B

    const/4 v3, 0x1

    new-array v3, v3, [B

    aput-object v3, v2, v1

    iget-object v2, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->stringTable:[[B

    aget-object v2, v2, v1

    int-to-byte v3, v1

    aput-byte v3, v2, v0

    add-int/lit8 v1, v1, 0x1

    goto :goto_8

    :cond_1d
    const/16 v0, 0x102

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->tableIndex:I

    const/16 v0, 0x9

    iput v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->bitsToGet:I

    return-void
.end method

.method public writeString([B)V
    .registers 3

    :try_start_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/LZWDecoder;->uncompData:Ljava/io/OutputStream;

    invoke-virtual {v0, p1}, Ljava/io/OutputStream;->write([B)V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_5} :catch_6

    return-void

    :catch_6
    move-exception p1

    new-instance v0, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v0
.end method
