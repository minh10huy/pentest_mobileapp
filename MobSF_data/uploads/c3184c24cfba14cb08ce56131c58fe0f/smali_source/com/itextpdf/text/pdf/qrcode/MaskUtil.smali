.class public final Lcom/itextpdf/text/pdf/qrcode/MaskUtil;
.super Ljava/lang/Object;


# direct methods
.method private constructor <init>()V
    .registers 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static applyMaskPenaltyRule1(Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;)I
    .registers 3

    const/4 v0, 0x1

    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/qrcode/MaskUtil;->applyMaskPenaltyRule1Internal(Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;Z)I

    move-result v0

    const/4 v1, 0x0

    invoke-static {p0, v1}, Lcom/itextpdf/text/pdf/qrcode/MaskUtil;->applyMaskPenaltyRule1Internal(Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;Z)I

    move-result p0

    add-int/2addr v0, p0

    return v0
.end method

.method private static applyMaskPenaltyRule1Internal(Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;Z)I
    .registers 12

    if-eqz p1, :cond_7

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getHeight()I

    move-result v0

    goto :goto_b

    :cond_7
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getWidth()I

    move-result v0

    :goto_b
    if-eqz p1, :cond_12

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getWidth()I

    move-result v1

    goto :goto_16

    :cond_12
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getHeight()I

    move-result v1

    :goto_16
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getArray()[[B

    move-result-object p0

    const/4 v2, 0x0

    const/4 v3, -0x1

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, -0x1

    :goto_1f
    if-ge v3, v0, :cond_4b

    move v6, v5

    const/4 v7, 0x0

    move v5, v4

    const/4 v4, 0x0

    :goto_25
    if-ge v4, v1, :cond_46

    if-eqz p1, :cond_2e

    aget-object v8, p0, v3

    aget-byte v8, v8, v4

    goto :goto_32

    :cond_2e
    aget-object v8, p0, v4

    aget-byte v8, v8, v3

    :goto_32
    const/4 v9, 0x1

    if-ne v8, v6, :cond_41

    add-int/2addr v7, v9

    const/4 v8, 0x5

    if-ne v7, v8, :cond_3c

    add-int/lit8 v5, v5, 0x3

    goto :goto_43

    :cond_3c
    if-le v7, v8, :cond_43

    add-int/lit8 v5, v5, 0x1

    goto :goto_43

    :cond_41
    move v6, v8

    const/4 v7, 0x1

    :cond_43
    :goto_43
    add-int/lit8 v4, v4, 0x1

    goto :goto_25

    :cond_46
    add-int/lit8 v3, v3, 0x1

    move v4, v5

    move v5, v6

    goto :goto_1f

    :cond_4b
    return v4
.end method

.method public static applyMaskPenaltyRule2(Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;)I
    .registers 11

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getArray()[[B

    move-result-object v0

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getWidth()I

    move-result v1

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getHeight()I

    move-result p0

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    :goto_f
    add-int/lit8 v5, p0, -0x1

    if-ge v3, v5, :cond_3b

    move v5, v4

    const/4 v4, 0x0

    :goto_15
    add-int/lit8 v6, v1, -0x1

    if-ge v4, v6, :cond_37

    aget-object v6, v0, v3

    aget-byte v6, v6, v4

    aget-object v7, v0, v3

    add-int/lit8 v8, v4, 0x1

    aget-byte v7, v7, v8

    if-ne v6, v7, :cond_35

    add-int/lit8 v7, v3, 0x1

    aget-object v9, v0, v7

    aget-byte v4, v9, v4

    if-ne v6, v4, :cond_35

    aget-object v4, v0, v7

    aget-byte v4, v4, v8

    if-ne v6, v4, :cond_35

    add-int/lit8 v5, v5, 0x3

    :cond_35
    move v4, v8

    goto :goto_15

    :cond_37
    add-int/lit8 v3, v3, 0x1

    move v4, v5

    goto :goto_f

    :cond_3b
    return v4
.end method

.method public static applyMaskPenaltyRule3(Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;)I
    .registers 11

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getArray()[[B

    move-result-object v0

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getWidth()I

    move-result v1

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getHeight()I

    move-result p0

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    :goto_f
    if-ge v3, p0, :cond_11b

    move v5, v4

    const/4 v4, 0x0

    :goto_13
    if-ge v4, v1, :cond_116

    add-int/lit8 v6, v4, 0x6

    const/4 v7, 0x1

    if-ge v6, v1, :cond_94

    aget-object v8, v0, v3

    aget-byte v8, v8, v4

    if-ne v8, v7, :cond_94

    aget-object v8, v0, v3

    add-int/lit8 v9, v4, 0x1

    aget-byte v8, v8, v9

    if-nez v8, :cond_94

    aget-object v8, v0, v3

    add-int/lit8 v9, v4, 0x2

    aget-byte v8, v8, v9

    if-ne v8, v7, :cond_94

    aget-object v8, v0, v3

    add-int/lit8 v9, v4, 0x3

    aget-byte v8, v8, v9

    if-ne v8, v7, :cond_94

    aget-object v8, v0, v3

    add-int/lit8 v9, v4, 0x4

    aget-byte v8, v8, v9

    if-ne v8, v7, :cond_94

    aget-object v8, v0, v3

    add-int/lit8 v9, v4, 0x5

    aget-byte v8, v8, v9

    if-nez v8, :cond_94

    aget-object v8, v0, v3

    aget-byte v6, v8, v6

    if-ne v6, v7, :cond_94

    add-int/lit8 v6, v4, 0xa

    if-ge v6, v1, :cond_70

    aget-object v8, v0, v3

    add-int/lit8 v9, v4, 0x7

    aget-byte v8, v8, v9

    if-nez v8, :cond_70

    aget-object v8, v0, v3

    add-int/lit8 v9, v4, 0x8

    aget-byte v8, v8, v9

    if-nez v8, :cond_70

    aget-object v8, v0, v3

    add-int/lit8 v9, v4, 0x9

    aget-byte v8, v8, v9

    if-nez v8, :cond_70

    aget-object v8, v0, v3

    aget-byte v6, v8, v6

    if-eqz v6, :cond_92

    :cond_70
    add-int/lit8 v6, v4, -0x4

    if-ltz v6, :cond_94

    aget-object v8, v0, v3

    add-int/lit8 v9, v4, -0x1

    aget-byte v8, v8, v9

    if-nez v8, :cond_94

    aget-object v8, v0, v3

    add-int/lit8 v9, v4, -0x2

    aget-byte v8, v8, v9

    if-nez v8, :cond_94

    aget-object v8, v0, v3

    add-int/lit8 v9, v4, -0x3

    aget-byte v8, v8, v9

    if-nez v8, :cond_94

    aget-object v8, v0, v3

    aget-byte v6, v8, v6

    if-nez v6, :cond_94

    :cond_92
    add-int/lit8 v5, v5, 0x28

    :cond_94
    add-int/lit8 v6, v3, 0x6

    if-ge v6, p0, :cond_112

    aget-object v8, v0, v3

    aget-byte v8, v8, v4

    if-ne v8, v7, :cond_112

    add-int/lit8 v8, v3, 0x1

    aget-object v8, v0, v8

    aget-byte v8, v8, v4

    if-nez v8, :cond_112

    add-int/lit8 v8, v3, 0x2

    aget-object v8, v0, v8

    aget-byte v8, v8, v4

    if-ne v8, v7, :cond_112

    add-int/lit8 v8, v3, 0x3

    aget-object v8, v0, v8

    aget-byte v8, v8, v4

    if-ne v8, v7, :cond_112

    add-int/lit8 v8, v3, 0x4

    aget-object v8, v0, v8

    aget-byte v8, v8, v4

    if-ne v8, v7, :cond_112

    add-int/lit8 v8, v3, 0x5

    aget-object v8, v0, v8

    aget-byte v8, v8, v4

    if-nez v8, :cond_112

    aget-object v6, v0, v6

    aget-byte v6, v6, v4

    if-ne v6, v7, :cond_112

    add-int/lit8 v6, v3, 0xa

    if-ge v6, p0, :cond_ee

    add-int/lit8 v7, v3, 0x7

    aget-object v7, v0, v7

    aget-byte v7, v7, v4

    if-nez v7, :cond_ee

    add-int/lit8 v7, v3, 0x8

    aget-object v7, v0, v7

    aget-byte v7, v7, v4

    if-nez v7, :cond_ee

    add-int/lit8 v7, v3, 0x9

    aget-object v7, v0, v7

    aget-byte v7, v7, v4

    if-nez v7, :cond_ee

    aget-object v6, v0, v6

    aget-byte v6, v6, v4

    if-eqz v6, :cond_110

    :cond_ee
    add-int/lit8 v6, v3, -0x4

    if-ltz v6, :cond_112

    add-int/lit8 v7, v3, -0x1

    aget-object v7, v0, v7

    aget-byte v7, v7, v4

    if-nez v7, :cond_112

    add-int/lit8 v7, v3, -0x2

    aget-object v7, v0, v7

    aget-byte v7, v7, v4

    if-nez v7, :cond_112

    add-int/lit8 v7, v3, -0x3

    aget-object v7, v0, v7

    aget-byte v7, v7, v4

    if-nez v7, :cond_112

    aget-object v6, v0, v6

    aget-byte v6, v6, v4

    if-nez v6, :cond_112

    :cond_110
    add-int/lit8 v5, v5, 0x28

    :cond_112
    add-int/lit8 v4, v4, 0x1

    goto/16 :goto_13

    :cond_116
    add-int/lit8 v3, v3, 0x1

    move v4, v5

    goto/16 :goto_f

    :cond_11b
    return v4
.end method

.method public static applyMaskPenaltyRule4(Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;)I
    .registers 10

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getArray()[[B

    move-result-object v0

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getWidth()I

    move-result v1

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getHeight()I

    move-result v2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    :goto_f
    if-ge v4, v2, :cond_25

    move v6, v5

    const/4 v5, 0x0

    :goto_13
    if-ge v5, v1, :cond_21

    aget-object v7, v0, v4

    aget-byte v7, v7, v5

    const/4 v8, 0x1

    if-ne v7, v8, :cond_1e

    add-int/lit8 v6, v6, 0x1

    :cond_1e
    add-int/lit8 v5, v5, 0x1

    goto :goto_13

    :cond_21
    add-int/lit8 v4, v4, 0x1

    move v5, v6

    goto :goto_f

    :cond_25
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getHeight()I

    move-result v0

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/qrcode/ByteMatrix;->getWidth()I

    move-result p0

    mul-int v0, v0, p0

    int-to-double v1, v5

    int-to-double v3, v0

    div-double/2addr v1, v3

    const-wide/high16 v3, 0x4059000000000000L

    mul-double v1, v1, v3

    const-wide/high16 v3, 0x4049000000000000L

    sub-double/2addr v1, v3

    double-to-int p0, v1

    invoke-static {p0}, Ljava/lang/Math;->abs(I)I

    move-result p0

    div-int/lit8 p0, p0, 0x5

    mul-int/lit8 p0, p0, 0xa

    return p0
.end method

.method public static getDataMaskBit(III)Z
    .registers 4

    invoke-static {p0}, Lcom/itextpdf/text/pdf/qrcode/QRCode;->isValidMaskPattern(I)Z

    move-result v0

    if-eqz v0, :cond_4f

    const/4 v0, 0x1

    packed-switch p0, :pswitch_data_58

    new-instance p1, Ljava/lang/IllegalArgumentException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Invalid mask pattern: "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-direct {p1, p0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    :pswitch_21
    mul-int p0, p2, p1

    rem-int/lit8 p0, p0, 0x3

    add-int/2addr p2, p1

    and-int/lit8 p1, p2, 0x1

    goto :goto_3d

    :pswitch_29
    mul-int p2, p2, p1

    and-int/lit8 p0, p2, 0x1

    rem-int/lit8 p2, p2, 0x3

    add-int/2addr p0, p2

    goto :goto_3e

    :pswitch_31
    mul-int p2, p2, p1

    and-int/lit8 p0, p2, 0x1

    rem-int/lit8 p2, p2, 0x3

    add-int/2addr p0, p2

    goto :goto_4a

    :pswitch_39
    ushr-int/lit8 p0, p2, 0x1

    div-int/lit8 p1, p1, 0x3

    :goto_3d
    add-int/2addr p0, p1

    :goto_3e
    and-int/2addr p0, v0

    goto :goto_4a

    :pswitch_40
    add-int/2addr p2, p1

    rem-int/lit8 p0, p2, 0x3

    goto :goto_4a

    :pswitch_44
    rem-int/lit8 p0, p1, 0x3

    goto :goto_4a

    :pswitch_47
    add-int/2addr p2, p1

    :pswitch_48
    and-int/lit8 p0, p2, 0x1

    :goto_4a
    if-nez p0, :cond_4d

    goto :goto_4e

    :cond_4d
    const/4 v0, 0x0

    :goto_4e
    return v0

    :cond_4f
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "Invalid mask pattern"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    nop

    :pswitch_data_58
    .packed-switch 0x0
        :pswitch_47
        :pswitch_48
        :pswitch_44
        :pswitch_40
        :pswitch_39
        :pswitch_31
        :pswitch_29
        :pswitch_21
    .end packed-switch
.end method
