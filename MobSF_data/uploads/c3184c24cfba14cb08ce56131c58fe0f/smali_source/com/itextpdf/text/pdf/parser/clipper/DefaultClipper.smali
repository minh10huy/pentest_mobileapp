.class public Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;
.super Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;
    }
.end annotation


# static fields
.field private static final LOGGER:Ljava/util/logging/Logger;


# instance fields
.field private activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

.field private clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

.field private clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

.field private final ghostJoins:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;",
            ">;"
        }
    .end annotation
.end field

.field private final intersectList:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;",
            ">;"
        }
    .end annotation
.end field

.field private final intersectNodeComparer:Ljava/util/Comparator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Comparator<",
            "Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;",
            ">;"
        }
    .end annotation
.end field

.field private final joins:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;",
            ">;"
        }
    .end annotation
.end field

.field private maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

.field protected final polyOuts:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;",
            ">;"
        }
    .end annotation
.end field

.field private final reverseSolution:Z

.field private scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

.field private sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

.field private final strictlySimple:Z

.field private subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

.field private usingPolyTree:Z

.field public zFillFunction:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ZFillCallback;


# direct methods
.method static constructor <clinit>()V
    .registers 1

    const-class v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v0}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/util/logging/Logger;->getLogger(Ljava/lang/String;)Ljava/util/logging/Logger;

    move-result-object v0

    sput-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    return-void
.end method

.method public constructor <init>()V
    .registers 2

    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;-><init>(I)V

    return-void
.end method

.method public constructor <init>(I)V
    .registers 6

    and-int/lit8 v0, p1, 0x4

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_8

    const/4 v0, 0x1

    goto :goto_9

    :cond_8
    const/4 v0, 0x0

    :goto_9
    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;-><init>(Z)V

    const/4 v0, 0x0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    new-instance v3, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$1;

    invoke-direct {v3, p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$1;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;)V

    iput-object v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectNodeComparer:Ljava/util/Comparator;

    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->usingPolyTree:Z

    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->joins:Ljava/util/List;

    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->ghostJoins:Ljava/util/List;

    and-int/lit8 v3, p1, 0x1

    if-eqz v3, :cond_40

    const/4 v3, 0x1

    goto :goto_41

    :cond_40
    const/4 v3, 0x0

    :goto_41
    iput-boolean v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->reverseSolution:Z

    and-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_48

    const/4 v1, 0x1

    :cond_48
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->strictlySimple:Z

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->zFillFunction:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ZFillCallback;

    return-void
.end method

.method private EdgesAdjacent(Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;)Z
    .registers 4

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->edge1:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->Edge2:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eq v0, v1, :cond_13

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->edge1:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->Edge2:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v0, p1, :cond_11

    goto :goto_13

    :cond_11
    const/4 p1, 0x0

    goto :goto_14

    :cond_13
    :goto_13
    const/4 p1, 0x1

    :goto_14
    return p1
.end method

.method private GetLastOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;
    .registers 4

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    if-ne p1, v1, :cond_13

    iget-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->pts:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    return-object p1

    :cond_13
    iget-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->pts:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    return-object p1
.end method

.method private InsertMaxima(J)V
    .registers 8

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;-><init>()V

    iput-wide p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    const/4 v2, 0x0

    if-nez v1, :cond_17

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iget-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iput-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iget-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iput-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    goto :goto_50

    :cond_17
    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iget-wide v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    cmp-long v1, p1, v3

    if-gez v1, :cond_28

    iget-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iput-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iput-object v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    goto :goto_50

    :cond_28
    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    :goto_2a
    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    if-eqz v2, :cond_39

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iget-wide v2, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    cmp-long v2, p1, v2

    if-ltz v2, :cond_39

    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    goto :goto_2a

    :cond_39
    iget-wide v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    cmp-long p1, p1, v2

    if-nez p1, :cond_40

    return-void

    :cond_40
    iget-object p1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iput-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iget-object p1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    if-eqz p1, :cond_4e

    iget-object p1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    :cond_4e
    iput-object v0, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    :goto_50
    return-void
.end method

.method private addEdgeToSEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 5

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "addEdgeToSEL"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v1, 0x0

    if-nez v0, :cond_19

    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_25

    :cond_19
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_25
    return-void
.end method

.method private addGhostJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V
    .registers 4

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;-><init>()V

    iput-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->setOffPt(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    iget-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->ghostJoins:Ljava/util/List;

    invoke-interface {p1, v0}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    return-void
.end method

.method private addJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V
    .registers 7

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "addJoin"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;-><init>()V

    iput-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object p2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt2:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v0, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->setOffPt(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    iget-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->joins:Ljava/util/List;

    invoke-interface {p1, v0}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    return-void
.end method

.method private addLocalMaxPoly(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V
    .registers 5

    invoke-direct {p0, p1, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v0, :cond_a

    invoke-direct {p0, p2, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_a
    iget p3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    iget v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ne p3, v0, :cond_16

    const/4 p3, -0x1

    iput p3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    iput p3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    goto :goto_23

    :cond_16
    iget p3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    iget v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ge p3, v0, :cond_20

    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->appendPolygon(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    goto :goto_23

    :cond_20
    invoke-direct {p0, p2, p1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->appendPolygon(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    :goto_23
    return-void
.end method

.method private addLocalMinPoly(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;
    .registers 10

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "addLocalMinPoly"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isHorizontal()Z

    move-result v0

    if-nez v0, :cond_36

    iget-wide v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    iget-wide v2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v0, v0, v2

    if-lez v0, :cond_1c

    goto :goto_36

    :cond_1c
    invoke-direct {p0, p2, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    iget v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    iput v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v1, p1, :cond_33

    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_53

    :cond_33
    iget-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_53

    :cond_36
    :goto_36
    invoke-direct {p0, p1, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    iput v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v1, p2, :cond_50

    iget-object p2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_4c
    move-object v5, p2

    move-object p2, p1

    move-object p1, v5

    goto :goto_53

    :cond_50
    iget-object p2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_4c

    :goto_53
    if-eqz p1, :cond_88

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v1, :cond_88

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-static {p1, v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->topX(Lcom/itextpdf/text/pdf/parser/clipper/Edge;J)J

    move-result-wide v1

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v3

    invoke-static {p2, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->topX(Lcom/itextpdf/text/pdf/parser/clipper/Edge;J)J

    move-result-wide v3

    cmp-long v1, v1, v3

    if-nez v1, :cond_88

    iget-boolean v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {p2, p1, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Z

    move-result v1

    if-eqz v1, :cond_88

    iget v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v1, :cond_88

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v1, :cond_88

    invoke-direct {p0, p1, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object p1

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p2

    invoke-direct {p0, v0, p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :cond_88
    return-object v0
.end method

.method private addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;
    .registers 8

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "addOutPt"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-gez v0, :cond_3b

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->createOutRec()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    move-result-object v0

    iget v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v3, :cond_1c

    const/4 v1, 0x1

    :cond_1c
    iput-boolean v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    new-instance v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;-><init>()V

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->pts:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    iput v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->idx:I

    iput-object p2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->pt:Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    iput-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-boolean p2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    if-nez p2, :cond_36

    invoke-direct {p0, p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->setHoleState(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    :cond_36
    iget p2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    iput p2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    return-object v1

    :cond_3b
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    iget v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    invoke-interface {v0, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    sget-object v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    if-ne p1, v4, :cond_50

    const/4 v1, 0x1

    :cond_50
    sget-object p1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "op="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPointCount()I

    move-result v4

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    sget-object p1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v4, " "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    if-eqz v1, :cond_9c

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p1

    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_9c

    return-object v3

    :cond_9c
    if-nez v1, :cond_ad

    iget-object p1, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p1

    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_ad

    iget-object p1, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    return-object p1

    :cond_ad
    new-instance p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-direct {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;-><init>()V

    iget v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    iput v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->idx:I

    new-instance v2, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-direct {v2, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->setPt(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    iput-object v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object p2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object p2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object p2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object p1, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eqz v1, :cond_cf

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    :cond_cf
    return-object p1
.end method

.method private appendPolygon(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 13

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "appendPolygon"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    iget v2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    sget-object v2, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, ""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    sget-object v2, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, ""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    invoke-static {v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->isParam1RightOfParam2(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Z

    move-result v2

    if-eqz v2, :cond_59

    move-object v2, v1

    goto :goto_65

    :cond_59
    invoke-static {v1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->isParam1RightOfParam2(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Z

    move-result v2

    if-eqz v2, :cond_61

    move-object v2, v0

    goto :goto_65

    :cond_61
    invoke-static {v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getLowerMostRec(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    move-result-object v2

    :goto_65
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    iget-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v5

    iget-object v6, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    sget-object v7, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "p1_lft.getPointCount() = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPointCount()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    sget-object v7, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "p1_rt.getPointCount() = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPointCount()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    sget-object v7, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "p2_lft.getPointCount() = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPointCount()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    sget-object v7, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "p2_rt.getPointCount() = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPointCount()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    iget-object v7, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    sget-object v8, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    if-ne v7, v8, :cond_102

    iget-object v7, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    sget-object v8, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    if-ne v7, v8, :cond_f4

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->reversePolyPtLinks()V

    iput-object v3, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v5, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v6, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v4, v6, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v0, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    goto :goto_ff

    :cond_f4
    iput-object v3, v6, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v6, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v4, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v0, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    :goto_ff
    sget-object v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    goto :goto_11e

    :cond_102
    iget-object v7, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    sget-object v8, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    if-ne v7, v8, :cond_114

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->reversePolyPtLinks()V

    iput-object v6, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v4, v6, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v3, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v5, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_11c

    :cond_114
    iput-object v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v4, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v6, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v3, v6, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :goto_11c
    sget-object v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    :goto_11e
    const/4 v4, 0x0

    iput-object v4, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->bottomPt:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v2, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_133

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    if-eq v2, v0, :cond_12f

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iput-object v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    :cond_12f
    iget-boolean v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iput-boolean v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    :cond_133
    invoke-virtual {v1, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    iput-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->bottomPt:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v0, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    iget v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    const/4 v5, -0x1

    iput v5, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    iput v5, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    iget-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_145
    if-eqz p1, :cond_153

    iget p2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ne p2, v4, :cond_150

    iput v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    iput-object v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    goto :goto_153

    :cond_150
    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_145

    :cond_153
    :goto_153
    iget p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    iput p1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    return-void
.end method

.method private buildIntersectList(J)V
    .registers 12

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-nez v0, :cond_5

    return-void

    :cond_5
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_9
    if-eqz v0, :cond_25

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-static {v0, p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->topX(Lcom/itextpdf/text/pdf/parser/clipper/Edge;J)J

    move-result-wide v2

    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setX(Ljava/lang/Number;)V

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_9

    :cond_25
    const/4 p1, 0x1

    const/4 p2, 0x1

    :goto_27
    const/4 v0, 0x0

    if-eqz p2, :cond_75

    iget-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz p2, :cond_75

    iget-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v1, 0x0

    const/4 v2, 0x0

    :goto_32
    iget-object v3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v3, :cond_6b

    iget-object v3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    new-array v4, p1, [Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v7

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v7

    cmp-long v5, v5, v7

    if-lez v5, :cond_69

    invoke-direct {p0, p2, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectPoint(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;[Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    new-instance v2, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;

    invoke-direct {v2, p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$1;)V

    iput-object p2, v2, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->edge1:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v3, v2, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->Edge2:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    aget-object v4, v4, v1

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->setPt(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    iget-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v4, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    invoke-direct {p0, p2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->swapPositionsInSEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    const/4 v2, 0x1

    goto :goto_32

    :cond_69
    move-object p2, v3

    goto :goto_32

    :cond_6b
    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v1, :cond_75

    iget-object p2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move p2, v2

    goto :goto_27

    :cond_75
    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    return-void
.end method

.method private buildResult(Lcom/itextpdf/text/pdf/parser/clipper/Paths;)V
    .registers 9

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->clear()V

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_5
    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_5b

    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    if-nez v3, :cond_1c

    goto :goto_58

    :cond_1c
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    iget-object v2, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPointCount()I

    move-result v3

    sget-object v4, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "cnt = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    const/4 v4, 0x2

    if-ge v3, v4, :cond_40

    goto :goto_58

    :cond_40
    new-instance v4, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-direct {v4, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path;-><init>(I)V

    move-object v5, v2

    const/4 v2, 0x0

    :goto_47
    if-ge v2, v3, :cond_55

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v4, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->add(Ljava/lang/Object;)Z

    iget-object v5, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    add-int/lit8 v2, v2, 0x1

    goto :goto_47

    :cond_55
    invoke-virtual {p1, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->add(Ljava/lang/Object;)Z

    :goto_58
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    :cond_5b
    return-void
.end method

.method private buildResult2(Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;)V
    .registers 10

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;->Clear()V

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_5
    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_62

    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    if-eqz v3, :cond_24

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPointCount()I

    move-result v3

    goto :goto_25

    :cond_24
    const/4 v3, 0x0

    :goto_25
    iget-boolean v4, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    if-eqz v4, :cond_2c

    const/4 v4, 0x2

    if-lt v3, v4, :cond_5f

    :cond_2c
    iget-boolean v4, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    if-nez v4, :cond_34

    const/4 v4, 0x3

    if-ge v3, v4, :cond_34

    goto :goto_5f

    :cond_34
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->fixHoleLinkage()V

    new-instance v4, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;

    invoke-direct {v4}, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;-><init>()V

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;->getAllPolys()Ljava/util/List;

    move-result-object v5

    invoke-interface {v5, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    iput-object v4, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->polyNode:Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    iget-object v2, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-object v5, v2

    const/4 v2, 0x0

    :goto_4d
    if-ge v2, v3, :cond_5f

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;->getPolygon()Lcom/itextpdf/text/pdf/parser/clipper/Path;

    move-result-object v6

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v7

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->add(Ljava/lang/Object;)Z

    iget-object v5, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    add-int/lit8 v2, v2, 0x1

    goto :goto_4d

    :cond_5f
    :goto_5f
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    :cond_62
    :goto_62
    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    if-ge v0, v1, :cond_9d

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->polyNode:Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;

    if-nez v2, :cond_77

    goto :goto_9a

    :cond_77
    iget-boolean v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    if-eqz v2, :cond_87

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->polyNode:Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;

    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;->setOpen(Z)V

    :cond_81
    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->polyNode:Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;->addChild(Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;)V

    goto :goto_9a

    :cond_87
    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    if-eqz v2, :cond_81

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->polyNode:Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;

    if-eqz v2, :cond_81

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->polyNode:Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;

    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->polyNode:Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;->addChild(Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;)V

    :goto_9a
    add-int/lit8 v0, v0, 0x1

    goto :goto_62

    :cond_9d
    return-void
.end method

.method private copyAELToSEL()V
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_4
    if-eqz v0, :cond_11

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_4

    :cond_11
    return-void
.end method

.method private createOutRec()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;
    .registers 3

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;-><init>()V

    const/4 v1, -0x1

    iput v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    const/4 v1, 0x0

    iput-boolean v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iput-boolean v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    const/4 v1, 0x0

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->bottomPt:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->polyNode:Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v1, v0}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    iput v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    return-object v0
.end method

.method private deleteFromAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 5

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "deleteFromAEL"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-nez v0, :cond_1a

    if-nez v1, :cond_1a

    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eq p1, v2, :cond_1a

    return-void

    :cond_1a
    if-eqz v0, :cond_1f

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_21

    :cond_1f
    iput-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_21
    if-eqz v1, :cond_25

    iput-object v0, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_25
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    sget-object p1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v0}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v0

    const-string v1, "deleteFromAEL"

    invoke-virtual {p1, v0, v1}, Ljava/util/logging/Logger;->exiting(Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method private deleteFromSEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 5

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "deleteFromSEL"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-nez v0, :cond_1e

    if-nez v1, :cond_1e

    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {p1, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1e

    return-void

    :cond_1e
    if-eqz v0, :cond_23

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_25

    :cond_23
    iput-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_25
    if-eqz v1, :cond_29

    iput-object v0, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_29
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    return-void
.end method

.method private doHorzSegmentsOverlap(JJJJ)Z
    .registers 12

    cmp-long v0, p1, p3

    if-lez v0, :cond_7

    move-wide v1, p1

    move-wide p1, p3

    move-wide p3, v1

    :cond_7
    cmp-long v0, p5, p7

    if-lez v0, :cond_c

    goto :goto_f

    :cond_c
    move-wide v1, p5

    move-wide p5, p7

    move-wide p7, v1

    :goto_f
    cmp-long p1, p1, p5

    if-gez p1, :cond_19

    cmp-long p1, p7, p3

    if-gez p1, :cond_19

    const/4 p1, 0x1

    goto :goto_1a

    :cond_19
    const/4 p1, 0x0

    :goto_1a
    return p1
.end method

.method private doMaxima(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 6

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getMaximaPair()Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object v0

    if-nez v0, :cond_15

    iget v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_11

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-direct {p0, p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_11
    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->deleteFromAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    return-void

    :cond_15
    :goto_15
    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v1, :cond_2e

    if-eq v1, v0, :cond_2e

    new-instance v2, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-direct {p0, p1, v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectEdges(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->setTop(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-direct {p0, p1, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->swapPositionsInAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    goto :goto_15

    :cond_2e
    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    const/4 v2, -0x1

    if-ne v1, v2, :cond_3e

    iget v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ne v1, v2, :cond_3e

    :cond_37
    :goto_37
    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->deleteFromAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    :cond_3a
    :goto_3a
    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->deleteFromAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    goto :goto_74

    :cond_3e
    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v1, :cond_52

    iget v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v1, :cond_52

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v1, :cond_37

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {p0, p1, v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addLocalMaxPoly(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    goto :goto_37

    :cond_52
    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v1, :cond_75

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v1, :cond_63

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {p0, p1, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    :cond_63
    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->deleteFromAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    iget v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v1, :cond_3a

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p1

    invoke-direct {p0, v0, p1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    goto :goto_3a

    :goto_74
    return-void

    :cond_75
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v0, "DoMaxima error"

    invoke-direct {p1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method private doSimplePolygons()V
    .registers 7

    const/4 v0, 0x0

    :goto_1
    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    if-ge v0, v1, :cond_c1

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    add-int/lit8 v2, v0, 0x1

    invoke-interface {v1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v1

    if-eqz v1, :cond_be

    iget-boolean v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    if-eqz v3, :cond_1f

    goto/16 :goto_be

    :cond_1f
    iget-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :goto_21
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v4

    if-eq v3, v4, :cond_b6

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_b2

    iget-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v4, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_b2

    iget-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v4, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_b2

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v5, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v1, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->createOutRec()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    move-result-object v4

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    invoke-direct {p0, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->updateOutPtIdxs(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v5

    invoke-static {v3, v5}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->poly2ContainsPoly1(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)Z

    move-result v3

    if-eqz v3, :cond_7c

    iget-boolean v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    xor-int/lit8 v3, v3, 0x1

    iput-boolean v3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iput-object v0, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-boolean v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->usingPolyTree:Z

    if-eqz v3, :cond_b1

    invoke-direct {p0, v4, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->fixupFirstLefts2(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    goto :goto_b1

    :cond_7c
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v5

    invoke-static {v3, v5}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->poly2ContainsPoly1(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)Z

    move-result v3

    if-eqz v3, :cond_a2

    iget-boolean v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iput-boolean v3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iget-boolean v3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    xor-int/lit8 v3, v3, 0x1

    iput-boolean v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iget-object v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iput-object v3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iput-object v4, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-boolean v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->usingPolyTree:Z

    if-eqz v3, :cond_b1

    invoke-direct {p0, v0, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->fixupFirstLefts2(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    goto :goto_b1

    :cond_a2
    iget-boolean v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iput-boolean v3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iget-object v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iput-object v3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-boolean v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->usingPolyTree:Z

    if-eqz v3, :cond_b1

    invoke-direct {p0, v0, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->fixupFirstLefts1(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    :cond_b1
    :goto_b1
    move-object v3, v1

    :cond_b2
    iget-object v3, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto/16 :goto_21

    :cond_b6
    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    if-ne v1, v3, :cond_1f

    :cond_be
    :goto_be
    move v0, v2

    goto/16 :goto_1

    :cond_c1
    return-void
.end method

.method private executeInternal()Z
    .registers 10

    :try_start_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->reset()V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;
    :try_end_5
    .catchall {:try_start_0 .. :try_end_5} :catchall_af

    const/4 v1, 0x0

    if-nez v0, :cond_13

    :goto_8
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->joins:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->clear()V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->ghostJoins:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->clear()V

    return v1

    :cond_13
    :try_start_13
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->popScanbeam()J

    move-result-wide v2

    :cond_17
    invoke-direct {p0, v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->insertLocalMinimaIntoAEL(J)V

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->processHorizontals()V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->ghostJoins:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->clear()V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    if-nez v0, :cond_27

    goto :goto_3d

    :cond_27
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->popScanbeam()J

    move-result-wide v2

    invoke-direct {p0, v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->processIntersections(J)Z

    move-result v0

    if-nez v0, :cond_32

    goto :goto_8

    :cond_32
    invoke-direct {p0, v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->processEdgesAtTopOfScanbeam(J)V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    if-nez v0, :cond_17

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    if-nez v0, :cond_17

    :goto_3d
    const/4 v0, 0x0

    :goto_3e
    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v2

    const/4 v3, 0x1

    if-ge v0, v2, :cond_75

    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v2, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-object v4, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->pts:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eqz v4, :cond_72

    iget-boolean v4, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    if-eqz v4, :cond_58

    goto :goto_72

    :cond_58
    iget-boolean v4, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iget-boolean v5, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->reverseSolution:Z

    xor-int/2addr v4, v5

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->area()D

    move-result-wide v5

    const-wide/16 v7, 0x0

    cmpl-double v5, v5, v7

    if-lez v5, :cond_68

    goto :goto_69

    :cond_68
    const/4 v3, 0x0

    :goto_69
    if-ne v4, v3, :cond_72

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->reversePolyPtLinks()V

    :cond_72
    :goto_72
    add-int/lit8 v0, v0, 0x1

    goto :goto_3e

    :cond_75
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->joinCommonEdges()V

    :goto_78
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    if-ge v1, v0, :cond_9d

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    if-nez v2, :cond_8f

    goto :goto_9a

    :cond_8f
    iget-boolean v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    if-eqz v2, :cond_97

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->fixupOutPolyline(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    goto :goto_9a

    :cond_97
    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->fixupOutPolygon(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    :goto_9a
    add-int/lit8 v1, v1, 0x1

    goto :goto_78

    :cond_9d
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->strictlySimple:Z

    if-eqz v0, :cond_a4

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->doSimplePolygons()V
    :try_end_a4
    .catchall {:try_start_13 .. :try_end_a4} :catchall_af

    :cond_a4
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->joins:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->clear()V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->ghostJoins:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->clear()V

    return v3

    :catchall_af
    move-exception v0

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->joins:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->clear()V

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->ghostJoins:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->clear()V

    throw v0
.end method

.method private fixupFirstLefts1(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V
    .registers 7

    const/4 v0, 0x0

    :goto_1
    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    if-ge v0, v1, :cond_3b

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    if-eqz v2, :cond_38

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    if-nez v2, :cond_1c

    goto :goto_38

    :cond_1c
    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    invoke-static {v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->parseFirstLeft(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_38

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->poly2ContainsPoly1(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)Z

    move-result v2

    if-eqz v2, :cond_38

    iput-object p2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    :cond_38
    :goto_38
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_3b
    return-void
.end method

.method private fixupFirstLefts2(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V
    .registers 6

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_6
    :goto_6
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_19

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    if-ne v2, p1, :cond_6

    iput-object p2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    goto :goto_6

    :cond_19
    return-void
.end method

.method private fixupIntersectionOrder()Z
    .registers 8

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectNodeComparer:Ljava/util/Comparator;

    invoke-static {v0, v1}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->copyAELToSEL()V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x0

    :goto_12
    if-ge v2, v0, :cond_6c

    iget-object v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v3, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;

    invoke-direct {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->EdgesAdjacent(Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;)Z

    move-result v3

    if-nez v3, :cond_52

    add-int/lit8 v3, v2, 0x1

    :goto_24
    if-ge v3, v0, :cond_37

    iget-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v4, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;

    invoke-direct {p0, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->EdgesAdjacent(Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;)Z

    move-result v4

    if-nez v4, :cond_37

    add-int/lit8 v3, v3, 0x1

    goto :goto_24

    :cond_37
    if-ne v3, v0, :cond_3a

    return v1

    :cond_3a
    iget-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v4, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;

    iget-object v5, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    iget-object v6, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v6, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    invoke-interface {v5, v2, v6}, Ljava/util/List;->set(ILjava/lang/Object;)Ljava/lang/Object;

    iget-object v5, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v5, v3, v4}, Ljava/util/List;->set(ILjava/lang/Object;)Ljava/lang/Object;

    :cond_52
    iget-object v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v3, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;

    iget-object v3, v3, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->edge1:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v4, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;

    iget-object v4, v4, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->Edge2:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-direct {p0, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->swapPositionsInSEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_12

    :cond_6c
    const/4 v0, 0x1

    return v0
.end method

.method private fixupOutPolygon(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V
    .registers 10

    const/4 v0, 0x0

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->bottomPt:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v1

    iget-boolean v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->preserveCollinear:Z

    if-nez v2, :cond_12

    iget-boolean v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->strictlySimple:Z

    if-eqz v2, :cond_10

    goto :goto_12

    :cond_10
    const/4 v2, 0x0

    goto :goto_13

    :cond_12
    :goto_12
    const/4 v2, 0x1

    :goto_13
    move-object v3, v0

    :goto_14
    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v4, v1, :cond_8b

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-ne v4, v5, :cond_1f

    goto :goto_8b

    :cond_1f
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    iget-object v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_7c

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    iget-object v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_7c

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    iget-object v6, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    iget-boolean v7, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {v4, v5, v6, v7}, Lcom/itextpdf/text/pdf/parser/clipper/Point;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z

    move-result v4

    if-eqz v4, :cond_70

    if-eqz v2, :cond_7c

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    iget-object v6, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-static {v4, v5, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point;->isPt2BetweenPt1AndPt3(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Z

    move-result v4

    if-nez v4, :cond_70

    goto :goto_7c

    :cond_70
    if-ne v1, v3, :cond_76

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    return-void

    :cond_76
    if-nez v3, :cond_79

    move-object v3, v1

    :cond_79
    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_14

    :cond_7c
    :goto_7c
    iget-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_13

    :cond_8b
    :goto_8b
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    return-void
.end method

.method private fixupOutPolyline(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V
    .registers 6

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->pts:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_4
    :goto_4
    if-eq v0, v1, :cond_24

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->pt:Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    iget-object v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v3, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->pt:Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_4

    if-ne v0, v1, :cond_18

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_18
    iget-object v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v3, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-object v0, v2

    goto :goto_4

    :cond_24
    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-ne v0, v1, :cond_2b

    const/4 v0, 0x0

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->pts:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_2b
    return-void
.end method

.method private static getHorzDirection(Lcom/itextpdf/text/pdf/parser/clipper/Edge;[Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;[J[J)V
    .registers 8

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    cmp-long v0, v0, v2

    const/4 v1, 0x0

    if-gez v0, :cond_2e

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    aput-wide v2, p2, v1

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p0

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    aput-wide v2, p3, v1

    sget-object p0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->LEFT_TO_RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    aput-object p0, p1, v1

    goto :goto_46

    :cond_2e
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    aput-wide v2, p2, v1

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p0

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    aput-wide v2, p3, v1

    sget-object p0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->RIGHT_TO_LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    aput-object p0, p1, v1

    :goto_46
    return-void
.end method

.method private getOutRec(I)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;
    .registers 4

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    :goto_2
    invoke-interface {v0, p1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    if-eq p1, v0, :cond_17

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    iget p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    goto :goto_2

    :cond_17
    return-object p1
.end method

.method private static getOverlap(JJJJ[J[J)Z
    .registers 12

    cmp-long v0, p0, p2

    const/4 v1, 0x0

    if-gez v0, :cond_23

    cmp-long v0, p4, p6

    if-gez v0, :cond_16

    invoke-static {p0, p1, p4, p5}, Ljava/lang/Math;->max(JJ)J

    move-result-wide p0

    aput-wide p0, p8, v1

    invoke-static {p2, p3, p6, p7}, Ljava/lang/Math;->min(JJ)J

    move-result-wide p0

    aput-wide p0, p9, v1

    goto :goto_40

    :cond_16
    invoke-static {p0, p1, p6, p7}, Ljava/lang/Math;->max(JJ)J

    move-result-wide p0

    aput-wide p0, p8, v1

    invoke-static {p2, p3, p4, p5}, Ljava/lang/Math;->min(JJ)J

    move-result-wide p0

    aput-wide p0, p9, v1

    goto :goto_40

    :cond_23
    cmp-long v0, p4, p6

    if-gez v0, :cond_34

    invoke-static {p2, p3, p4, p5}, Ljava/lang/Math;->max(JJ)J

    move-result-wide p2

    aput-wide p2, p8, v1

    invoke-static {p0, p1, p6, p7}, Ljava/lang/Math;->min(JJ)J

    move-result-wide p0

    aput-wide p0, p9, v1

    goto :goto_40

    :cond_34
    invoke-static {p2, p3, p6, p7}, Ljava/lang/Math;->max(JJ)J

    move-result-wide p2

    aput-wide p2, p8, v1

    invoke-static {p0, p1, p4, p5}, Ljava/lang/Math;->min(JJ)J

    move-result-wide p0

    aput-wide p0, p9, v1

    :goto_40
    aget-wide p0, p8, v1

    aget-wide p2, p9, v1

    cmp-long p0, p0, p2

    if-gez p0, :cond_49

    const/4 v1, 0x1

    :cond_49
    return v1
.end method

.method private insertEdgeIntoAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 6

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "insertEdgeIntoAEL"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v1, 0x0

    if-nez v0, :cond_39

    iput-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    sget-object p2, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Edge "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " -> "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    :goto_36
    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_9c

    :cond_39
    if-nez p2, :cond_72

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-static {v0, p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->doesE2InsertBeforeE1(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)Z

    move-result v0

    if-eqz v0, :cond_72

    iput-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    sget-object p2, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Edge "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " -> "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    iget-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_36

    :cond_72
    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-string v1, "activeEdges unchanged"

    invoke-virtual {v0, v1}, Ljava/util/logging/Logger;->finest(Ljava/lang/String;)V

    if-nez p2, :cond_7d

    iget-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_7d
    :goto_7d
    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_8c

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-static {v0, p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->doesE2InsertBeforeE1(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)Z

    move-result v0

    if-nez v0, :cond_8c

    iget-object p2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_7d

    :cond_8c
    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_98

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_98
    iput-object p2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_9c
    return-void
.end method

.method private insertLocalMinimaIntoAEL(J)V
    .registers 20

    move-object/from16 v9, p0

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "insertLocalMinimaIntoAEL"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    :cond_f
    :goto_f
    iget-object v0, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    if-eqz v0, :cond_19b

    iget-object v0, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iget-wide v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->y:J

    cmp-long v0, v0, p1

    if-nez v0, :cond_19b

    iget-object v0, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iget-object v11, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iget-object v12, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->popLocalMinima()V

    const/4 v0, 0x0

    if-nez v11, :cond_45

    invoke-direct {v9, v12, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->insertEdgeIntoAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    invoke-direct {v9, v12}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->updateWindingCount(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    iget-object v1, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v2, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v3, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    invoke-virtual {v12, v1, v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isContributing(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;)Z

    move-result v1

    if-eqz v1, :cond_43

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-direct {v9, v12, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    :cond_43
    :goto_43
    move-object v13, v0

    goto :goto_93

    :cond_45
    if-nez v12, :cond_6d

    invoke-direct {v9, v11, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->insertEdgeIntoAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    invoke-direct {v9, v11}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->updateWindingCount(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    iget-object v1, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v2, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v3, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    invoke-virtual {v11, v1, v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isContributing(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;)Z

    move-result v1

    if-eqz v1, :cond_61

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-direct {v9, v11, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    :cond_61
    :goto_61
    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-direct {v9, v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->insertScanbeam(J)V

    goto :goto_43

    :cond_6d
    invoke-direct {v9, v11, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->insertEdgeIntoAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    invoke-direct {v9, v12, v11}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->insertEdgeIntoAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    invoke-direct {v9, v11}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->updateWindingCount(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    iget v1, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iput v1, v12, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iget v1, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    iput v1, v12, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    iget-object v1, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v2, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v3, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    invoke-virtual {v11, v1, v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isContributing(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;)Z

    move-result v1

    if-eqz v1, :cond_61

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-direct {v9, v11, v12, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addLocalMinPoly(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    goto :goto_61

    :goto_93
    if-eqz v12, :cond_aa

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isHorizontal()Z

    move-result v0

    if-eqz v0, :cond_9f

    invoke-direct {v9, v12}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addEdgeToSEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    goto :goto_aa

    :cond_9f
    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v0

    invoke-direct {v9, v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->insertScanbeam(J)V

    :cond_aa
    :goto_aa
    if-eqz v11, :cond_f

    if-nez v12, :cond_b0

    goto/16 :goto_f

    :cond_b0
    if-eqz v13, :cond_10f

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isHorizontal()Z

    move-result v0

    if-eqz v0, :cond_10f

    iget-object v0, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->ghostJoins:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    if-lez v0, :cond_10f

    iget v0, v12, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v0, :cond_10f

    const/4 v0, 0x0

    const/4 v14, 0x0

    :goto_c6
    iget-object v0, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->ghostJoins:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    if-ge v14, v0, :cond_10f

    iget-object v0, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->ghostJoins:Ljava/util/List;

    invoke-interface {v0, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v7, v0

    check-cast v7, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;

    iget-object v0, v7, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v15

    move-object/from16 v0, p0

    move-object v10, v7

    move-wide v7, v15

    invoke-direct/range {v0 .. v8}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->doHorzSegmentsOverlap(JJJJ)Z

    move-result v0

    if-eqz v0, :cond_10c

    iget-object v0, v10, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v9, v0, v13, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :cond_10c
    add-int/lit8 v14, v14, 0x1

    goto :goto_c6

    :cond_10f
    iget v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_158

    iget-object v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_158

    iget-object v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    cmp-long v0, v0, v2

    if-nez v0, :cond_158

    iget-object v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_158

    iget-object v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-boolean v1, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {v0, v11, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Z

    move-result v0

    if-eqz v0, :cond_158

    iget v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v0, :cond_158

    iget-object v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v0, :cond_158

    iget-object v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v9, v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v9, v13, v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :cond_158
    iget-object v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eq v0, v12, :cond_f

    iget v0, v12, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_18b

    iget-object v0, v12, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_18b

    iget-object v0, v12, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-boolean v1, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {v0, v12, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Z

    move-result v0

    if-eqz v0, :cond_18b

    iget v0, v12, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v0, :cond_18b

    iget-object v0, v12, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v0, :cond_18b

    iget-object v0, v12, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v9, v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v9, v13, v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :cond_18b
    iget-object v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_f

    :goto_18f
    if-eq v0, v12, :cond_f

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v9, v12, v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectEdges(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_18f

    :cond_19b
    return-void
.end method

.method private insertScanbeam(J)V
    .registers 6

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    if-nez v0, :cond_15

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    invoke-direct {v0, p0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    const/4 v1, 0x0

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iput-wide p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->y:J

    goto :goto_50

    :cond_15
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iget-wide v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->y:J

    cmp-long v0, p1, v0

    if-lez v0, :cond_2b

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    invoke-direct {v0, p0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;)V

    iput-wide p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->y:J

    iget-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iput-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    goto :goto_50

    :cond_2b
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    :goto_2d
    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    if-eqz v1, :cond_3c

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iget-wide v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->y:J

    cmp-long v1, p1, v1

    if-gtz v1, :cond_3c

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    goto :goto_2d

    :cond_3c
    iget-wide v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->y:J

    cmp-long v1, p1, v1

    if-nez v1, :cond_43

    return-void

    :cond_43
    new-instance v1, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    invoke-direct {v1, p0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;)V

    iput-wide p1, v1, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->y:J

    iget-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iput-object p1, v1, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    :goto_50
    return-void
.end method

.method private intersectEdges(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V
    .registers 12

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "insersectEdges"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-ltz v0, :cond_15

    const/4 v0, 0x1

    goto :goto_16

    :cond_15
    const/4 v0, 0x0

    :goto_16
    iget v3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v3, :cond_1c

    const/4 v3, 0x1

    goto :goto_1d

    :cond_1c
    const/4 v3, 0x0

    :goto_1d
    invoke-direct {p0, p3, p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->setZ(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    iget v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v4, :cond_19a

    iget v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v4, :cond_2a

    goto/16 :goto_19a

    :cond_2a
    iget-object v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    iget-object v5, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    if-ne v4, v5, :cond_67

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-virtual {p1, v1, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isEvenOddFillType(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    move-result v1

    if-eqz v1, :cond_43

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iget v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iput v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    :goto_40
    iput v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    goto :goto_99

    :cond_43
    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iget v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    add-int/2addr v1, v4

    if-nez v1, :cond_50

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    neg-int v1, v1

    :goto_4d
    iput v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    goto :goto_56

    :cond_50
    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iget v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    add-int/2addr v1, v4

    goto :goto_4d

    :goto_56
    iget v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iget v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    sub-int/2addr v1, v4

    if-nez v1, :cond_61

    iget v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    neg-int v1, v1

    goto :goto_40

    :cond_61
    iget v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iget v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    sub-int/2addr v1, v4

    goto :goto_40

    :cond_67
    iget-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v5, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-virtual {p2, v4, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isEvenOddFillType(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    move-result v4

    if-nez v4, :cond_79

    iget v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    iget v5, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    add-int/2addr v4, v5

    :goto_76
    iput v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    goto :goto_81

    :cond_79
    iget v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    if-nez v4, :cond_7f

    const/4 v4, 0x1

    goto :goto_76

    :cond_7f
    const/4 v4, 0x0

    goto :goto_76

    :goto_81
    iget-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v5, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-virtual {p1, v4, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isEvenOddFillType(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    move-result v4

    if-nez v4, :cond_93

    iget v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    iget v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    sub-int/2addr v1, v4

    :cond_90
    :goto_90
    iput v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    goto :goto_99

    :cond_93
    iget v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    if-nez v4, :cond_90

    const/4 v1, 0x1

    goto :goto_90

    :goto_99
    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    sget-object v4, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;->SUBJECT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    if-ne v1, v4, :cond_a4

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    goto :goto_a8

    :cond_a4
    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    :goto_a8
    iget-object v5, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    sget-object v6, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;->SUBJECT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    if-ne v5, v6, :cond_b3

    iget-object v5, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v6, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    goto :goto_b7

    :cond_b3
    iget-object v5, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v6, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    :goto_b7
    sget-object v7, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$2;->$SwitchMap$com$itextpdf$text$pdf$parser$clipper$Clipper$PolyFillType:[I

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->ordinal()I

    move-result v1

    aget v1, v7, v1

    packed-switch v1, :pswitch_data_20e

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    invoke-static {v1}, Ljava/lang/Math;->abs(I)I

    move-result v1

    goto :goto_cf

    :pswitch_c9
    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    neg-int v1, v1

    goto :goto_cf

    :pswitch_cd
    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    :goto_cf
    sget-object v7, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$2;->$SwitchMap$com$itextpdf$text$pdf$parser$clipper$Clipper$PolyFillType:[I

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->ordinal()I

    move-result v5

    aget v5, v7, v5

    packed-switch v5, :pswitch_data_216

    iget v5, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    invoke-static {v5}, Ljava/lang/Math;->abs(I)I

    move-result v5

    goto :goto_e7

    :pswitch_e1
    iget v5, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    neg-int v5, v5

    goto :goto_e7

    :pswitch_e5
    iget v5, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    :goto_e7
    if-eqz v0, :cond_108

    if-eqz v3, :cond_108

    if-eqz v1, :cond_ef

    if-ne v1, v2, :cond_ff

    :cond_ef
    if-eqz v5, :cond_f3

    if-ne v5, v2, :cond_ff

    :cond_f3
    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    if-eq v0, v1, :cond_104

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;->XOR:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    if-eq v0, v1, :cond_104

    :cond_ff
    invoke-direct {p0, p1, p2, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addLocalMaxPoly(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    goto/16 :goto_199

    :cond_104
    invoke-direct {p0, p1, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_11f

    :cond_108
    if-eqz v0, :cond_119

    if-eqz v5, :cond_10e

    if-ne v5, v2, :cond_199

    :cond_10e
    invoke-direct {p0, p1, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :goto_111
    invoke-static {p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->swapSides(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    invoke-static {p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->swapPolyIndexes(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    goto/16 :goto_199

    :cond_119
    if-eqz v3, :cond_123

    if-eqz v1, :cond_11f

    if-ne v1, v2, :cond_199

    :cond_11f
    :goto_11f
    invoke-direct {p0, p2, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_111

    :cond_123
    if-eqz v1, :cond_127

    if-ne v1, v2, :cond_199

    :cond_127
    if-eqz v5, :cond_12b

    if-ne v5, v2, :cond_199

    :cond_12b
    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$2;->$SwitchMap$com$itextpdf$text$pdf$parser$clipper$Clipper$PolyFillType:[I

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->ordinal()I

    move-result v3

    aget v0, v0, v3

    packed-switch v0, :pswitch_data_21e

    iget v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    invoke-static {v0}, Ljava/lang/Math;->abs(I)I

    move-result v0

    goto :goto_143

    :pswitch_13d
    iget v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    neg-int v0, v0

    goto :goto_143

    :pswitch_141
    iget v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    :goto_143
    sget-object v3, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$2;->$SwitchMap$com$itextpdf$text$pdf$parser$clipper$Clipper$PolyFillType:[I

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->ordinal()I

    move-result v4

    aget v3, v3, v4

    packed-switch v3, :pswitch_data_226

    iget v3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    invoke-static {v3}, Ljava/lang/Math;->abs(I)I

    move-result v3

    goto :goto_15b

    :pswitch_155
    iget v3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    neg-int v3, v3

    goto :goto_15b

    :pswitch_159
    iget v3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    :goto_15b
    iget-object v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    iget-object v6, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    if-eq v4, v6, :cond_165

    :cond_161
    :goto_161
    :pswitch_161
    invoke-direct {p0, p1, p2, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addLocalMinPoly(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_199

    :cond_165
    if-ne v1, v2, :cond_196

    if-ne v5, v2, :cond_196

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$2;->$SwitchMap$com$itextpdf$text$pdf$parser$clipper$Clipper$ClipType:[I

    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;->ordinal()I

    move-result v2

    aget v1, v1, v2

    packed-switch v1, :pswitch_data_22e

    goto :goto_199

    :pswitch_177
    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    sget-object v2, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;->CLIP:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    if-ne v1, v2, :cond_181

    if-lez v0, :cond_181

    if-gtz v3, :cond_161

    :cond_181
    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    sget-object v2, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;->SUBJECT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    if-ne v1, v2, :cond_199

    if-gtz v0, :cond_199

    if-gtz v3, :cond_199

    goto :goto_161

    :pswitch_18c
    if-gtz v0, :cond_199

    if-gtz v3, :cond_199

    goto :goto_161

    :pswitch_191
    if-lez v0, :cond_199

    if-lez v3, :cond_199

    goto :goto_161

    :cond_196
    invoke-static {p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->swapSides(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    :cond_199
    :goto_199
    return-void

    :cond_19a
    :goto_19a
    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v1, :cond_1a3

    iget v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v1, :cond_1a3

    return-void

    :cond_1a3
    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    iget-object v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    const/4 v5, -0x1

    if-ne v1, v4, :cond_1ce

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    iget v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eq v1, v4, :cond_1ce

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    sget-object v4, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;->UNION:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    if-ne v1, v4, :cond_1ce

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v1, :cond_1c4

    if-eqz v3, :cond_20c

    invoke-direct {p0, p1, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eqz v0, :cond_20c

    :goto_1c1
    iput v5, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    goto :goto_20c

    :cond_1c4
    if-eqz v0, :cond_20c

    invoke-direct {p0, p2, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eqz v3, :cond_20c

    :goto_1cb
    iput v5, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    goto :goto_20c

    :cond_1ce
    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    iget-object v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    if-eq v1, v4, :cond_20c

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v1, :cond_1f0

    iget v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    invoke-static {v1}, Ljava/lang/Math;->abs(I)I

    move-result v1

    if-ne v1, v2, :cond_1f0

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    sget-object v4, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;->UNION:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    if-ne v1, v4, :cond_1ea

    iget v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    if-nez v1, :cond_1f0

    :cond_1ea
    invoke-direct {p0, p1, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eqz v0, :cond_20c

    goto :goto_1c1

    :cond_1f0
    iget v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v0, :cond_20c

    iget v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    invoke-static {v0}, Ljava/lang/Math;->abs(I)I

    move-result v0

    if-ne v0, v2, :cond_20c

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;->UNION:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    if-ne v0, v1, :cond_206

    iget p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    if-nez p1, :cond_20c

    :cond_206
    invoke-direct {p0, p2, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eqz v3, :cond_20c

    goto :goto_1cb

    :cond_20c
    :goto_20c
    return-void

    nop

    :pswitch_data_20e
    .packed-switch 0x1
        :pswitch_cd
        :pswitch_c9
    .end packed-switch

    :pswitch_data_216
    .packed-switch 0x1
        :pswitch_e5
        :pswitch_e1
    .end packed-switch

    :pswitch_data_21e
    .packed-switch 0x1
        :pswitch_141
        :pswitch_13d
    .end packed-switch

    :pswitch_data_226
    .packed-switch 0x1
        :pswitch_159
        :pswitch_155
    .end packed-switch

    :pswitch_data_22e
    .packed-switch 0x1
        :pswitch_191
        :pswitch_18c
        :pswitch_177
        :pswitch_161
    .end packed-switch
.end method

.method private intersectPoint(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;[Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V
    .registers 15

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>()V

    const/4 v1, 0x0

    aput-object v0, p3, v1

    iget-wide v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    iget-wide v3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double p3, v1, v3

    if-nez p3, :cond_2f

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p2

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide p2

    invoke-static {p2, p3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p2

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setY(Ljava/lang/Number;)V

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide p2

    invoke-static {p1, p2, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->topX(Lcom/itextpdf/text/pdf/parser/clipper/Edge;J)J

    move-result-wide p1

    invoke-static {p1, p2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p1

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setX(Ljava/lang/Number;)V

    return-void

    :cond_2f
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getDelta()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    const-wide/16 v3, 0x0

    cmp-long p3, v1, v3

    if-nez p3, :cond_87

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p3

    invoke-virtual {v0, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setX(Ljava/lang/Number;)V

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isHorizontal()Z

    move-result p3

    if-eqz p3, :cond_63

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    :goto_56
    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    :goto_5a
    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p3

    invoke-virtual {v0, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setY(Ljava/lang/Number;)V

    goto/16 :goto_137

    :cond_63
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    long-to-double v1, v1

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    long-to-double v3, v3

    iget-wide v5, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    div-double/2addr v3, v5

    sub-double/2addr v1, v3

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    long-to-double v3, v3

    iget-wide v5, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    :goto_80
    div-double/2addr v3, v5

    add-double/2addr v3, v1

    invoke-static {v3, v4}, Ljava/lang/Math;->round(D)J

    move-result-wide v1

    goto :goto_5a

    :cond_87
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getDelta()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    cmp-long p3, v1, v3

    if-nez p3, :cond_cb

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p3

    invoke-virtual {v0, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setX(Ljava/lang/Number;)V

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isHorizontal()Z

    move-result p3

    if-eqz p3, :cond_ad

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    goto :goto_56

    :cond_ad
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    long-to-double v1, v1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    long-to-double v3, v3

    iget-wide v5, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    div-double/2addr v3, v5

    sub-double/2addr v1, v3

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    long-to-double v3, v3

    iget-wide v5, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    goto :goto_80

    :cond_cb
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    long-to-double v1, v1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v3

    long-to-double v3, v3

    iget-wide v5, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    mul-double v3, v3, v5

    sub-double/2addr v1, v3

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    long-to-double v3, v3

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v5

    long-to-double v5, v5

    iget-wide v7, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    mul-double v5, v5, v7

    sub-double/2addr v3, v5

    sub-double v5, v3, v1

    iget-wide v7, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    iget-wide v9, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    sub-double/2addr v7, v9

    div-double/2addr v5, v7

    invoke-static {v5, v6}, Ljava/lang/Math;->round(D)J

    move-result-wide v7

    invoke-static {v7, v8}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p3

    invoke-virtual {v0, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setY(Ljava/lang/Number;)V

    iget-wide v7, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    invoke-static {v7, v8}, Ljava/lang/Math;->abs(D)D

    move-result-wide v7

    iget-wide v9, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    invoke-static {v9, v10}, Ljava/lang/Math;->abs(D)D

    move-result-wide v9

    cmpg-double p3, v7, v9

    if-gez p3, :cond_12d

    iget-wide v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    mul-double v3, v3, v5

    add-double/2addr v3, v1

    invoke-static {v3, v4}, Ljava/lang/Math;->round(D)J

    move-result-wide v1

    :goto_125
    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p3

    invoke-virtual {v0, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setX(Ljava/lang/Number;)V

    goto :goto_137

    :cond_12d
    iget-wide v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    mul-double v1, v1, v5

    add-double/2addr v1, v3

    invoke-static {v1, v2}, Ljava/lang/Math;->round(D)J

    move-result-wide v1

    goto :goto_125

    :goto_137
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v3

    cmp-long p3, v1, v3

    if-ltz p3, :cond_157

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v3

    cmp-long p3, v1, v3

    if-gez p3, :cond_1a9

    :cond_157
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v3

    cmp-long p3, v1, v3

    if-lez p3, :cond_17b

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    :goto_16f
    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p3

    invoke-virtual {v0, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setY(Ljava/lang/Number;)V

    goto :goto_180

    :cond_17b
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    goto :goto_16f

    :goto_180
    iget-wide v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    invoke-static {v1, v2}, Ljava/lang/Math;->abs(D)D

    move-result-wide v1

    iget-wide v3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    invoke-static {v3, v4}, Ljava/lang/Math;->abs(D)D

    move-result-wide v3

    cmpg-double p3, v1, v3

    if-gez p3, :cond_1a0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-static {p1, v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->topX(Lcom/itextpdf/text/pdf/parser/clipper/Edge;J)J

    move-result-wide v1

    :goto_198
    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p3

    invoke-virtual {v0, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setX(Ljava/lang/Number;)V

    goto :goto_1a9

    :cond_1a0
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-static {p2, v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->topX(Lcom/itextpdf/text/pdf/parser/clipper/Edge;J)J

    move-result-wide v1

    goto :goto_198

    :cond_1a9
    :goto_1a9
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v3

    cmp-long p3, v1, v3

    if-lez p3, :cond_1f1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p3

    invoke-virtual {v0, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setY(Ljava/lang/Number;)V

    iget-wide v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    invoke-static {v1, v2}, Ljava/lang/Math;->abs(D)D

    move-result-wide v1

    iget-wide v3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    invoke-static {v3, v4}, Ljava/lang/Math;->abs(D)D

    move-result-wide v3

    cmpl-double p3, v1, v3

    if-lez p3, :cond_1e8

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-static {p2, v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->topX(Lcom/itextpdf/text/pdf/parser/clipper/Edge;J)J

    move-result-wide p1

    :goto_1e0
    invoke-static {p1, p2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p1

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setX(Ljava/lang/Number;)V

    goto :goto_1f1

    :cond_1e8
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide p2

    invoke-static {p1, p2, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->topX(Lcom/itextpdf/text/pdf/parser/clipper/Edge;J)J

    move-result-wide p1

    goto :goto_1e0

    :cond_1f1
    :goto_1f1
    return-void
.end method

.method private static isParam1RightOfParam2(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Z
    .registers 2

    :cond_0
    iget-object p0, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    if-ne p0, p1, :cond_6

    const/4 p0, 0x1

    return p0

    :cond_6
    if-nez p0, :cond_0

    const/4 p0, 0x0

    return p0
.end method

.method private static isPointInPolygon(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)I
    .registers 26

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v2

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v6

    move-wide v9, v4

    const/4 v5, 0x0

    move-object/from16 v4, p1

    :goto_1c
    iget-object v4, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v11

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v11

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v13

    invoke-virtual {v13}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v13

    cmp-long v15, v13, v2

    const/16 v16, -0x1

    const/16 v17, 0x1

    if-nez v15, :cond_51

    cmp-long v18, v11, v0

    if-eqz v18, :cond_50

    cmp-long v19, v6, v2

    if-nez v19, :cond_51

    if-lez v18, :cond_42

    const/4 v8, 0x1

    goto :goto_43

    :cond_42
    const/4 v8, 0x0

    :goto_43
    cmp-long v18, v9, v0

    if-gez v18, :cond_4b

    move-object/from16 v20, v4

    const/4 v4, 0x1

    goto :goto_4e

    :cond_4b
    move-object/from16 v20, v4

    const/4 v4, 0x0

    :goto_4e
    if-ne v8, v4, :cond_53

    :cond_50
    return v16

    :cond_51
    move-object/from16 v20, v4

    :cond_53
    cmp-long v4, v6, v2

    if-gez v4, :cond_59

    const/4 v4, 0x1

    goto :goto_5a

    :cond_59
    const/4 v4, 0x0

    :goto_5a
    if-gez v15, :cond_5e

    const/4 v8, 0x1

    goto :goto_5f

    :cond_5e
    const/4 v8, 0x0

    :goto_5f
    if-eq v4, v8, :cond_dc

    cmp-long v4, v9, v0

    const-wide/16 v18, 0x0

    if-ltz v4, :cond_a9

    cmp-long v4, v11, v0

    if-lez v4, :cond_77

    rsub-int/lit8 v17, v5, 0x1

    move-wide/from16 v22, v0

    move/from16 v5, v17

    move-object/from16 v1, v20

    move-object/from16 v0, p1

    goto/16 :goto_e6

    :cond_77
    const/4 v4, 0x0

    sub-long/2addr v9, v0

    long-to-double v8, v9

    move/from16 v21, v5

    sub-long v4, v13, v2

    long-to-double v4, v4

    mul-double v8, v8, v4

    sub-long v4, v11, v0

    long-to-double v4, v4

    move-wide/from16 v22, v0

    sub-long v0, v6, v2

    long-to-double v0, v0

    mul-double v4, v4, v0

    sub-double/2addr v8, v4

    cmpl-double v0, v8, v18

    if-nez v0, :cond_91

    return v16

    :cond_91
    if-lez v0, :cond_95

    const/4 v0, 0x1

    goto :goto_96

    :cond_95
    const/4 v0, 0x0

    :goto_96
    cmp-long v1, v13, v6

    if-lez v1, :cond_9c

    const/4 v1, 0x1

    goto :goto_9d

    :cond_9c
    const/4 v1, 0x0

    :goto_9d
    if-ne v0, v1, :cond_a2

    rsub-int/lit8 v5, v21, 0x1

    goto :goto_a4

    :cond_a2
    move/from16 v5, v21

    :goto_a4
    move-object/from16 v0, p1

    :goto_a6
    move-object/from16 v1, v20

    goto :goto_e6

    :cond_a9
    move-wide/from16 v22, v0

    move/from16 v21, v5

    cmp-long v0, v11, v22

    if-lez v0, :cond_e0

    sub-long v9, v9, v22

    long-to-double v0, v9

    sub-long v4, v13, v2

    long-to-double v4, v4

    mul-double v0, v0, v4

    sub-long v4, v11, v22

    long-to-double v4, v4

    sub-long v8, v6, v2

    long-to-double v8, v8

    mul-double v4, v4, v8

    sub-double/2addr v0, v4

    cmpl-double v0, v0, v18

    if-nez v0, :cond_c7

    return v16

    :cond_c7
    if-lez v0, :cond_cb

    const/4 v0, 0x1

    goto :goto_cc

    :cond_cb
    const/4 v0, 0x0

    :goto_cc
    cmp-long v1, v13, v6

    if-lez v1, :cond_d2

    const/4 v1, 0x1

    goto :goto_d3

    :cond_d2
    const/4 v1, 0x0

    :goto_d3
    if-ne v0, v1, :cond_e0

    rsub-int/lit8 v17, v21, 0x1

    move-object/from16 v0, p1

    move/from16 v5, v17

    goto :goto_a6

    :cond_dc
    move-wide/from16 v22, v0

    move/from16 v21, v5

    :cond_e0
    move-object/from16 v0, p1

    move-object/from16 v1, v20

    move/from16 v5, v21

    :goto_e6
    if-ne v0, v1, :cond_e9

    return v5

    :cond_e9
    move-object v4, v1

    move-wide v9, v11

    move-wide v6, v13

    move-wide/from16 v0, v22

    goto/16 :goto_1c
.end method

.method private joinCommonEdges()V
    .registers 12

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_2
    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->joins:Ljava/util/List;

    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_14d

    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->joins:Ljava/util/List;

    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;

    iget-object v3, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget v3, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->idx:I

    invoke-direct {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->getOutRec(I)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    move-result-object v3

    iget-object v4, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt2:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget v4, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->idx:I

    invoke-direct {p0, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->getOutRec(I)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    move-result-object v4

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v5

    if-eqz v5, :cond_149

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v5

    if-nez v5, :cond_30

    goto/16 :goto_149

    :cond_30
    iget-boolean v5, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    if-nez v5, :cond_149

    iget-boolean v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    if-eqz v5, :cond_3a

    goto/16 :goto_149

    :cond_3a
    if-ne v3, v4, :cond_3d

    goto :goto_4b

    :cond_3d
    invoke-static {v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->isParam1RightOfParam2(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Z

    move-result v5

    if-eqz v5, :cond_45

    move-object v5, v4

    goto :goto_51

    :cond_45
    invoke-static {v4, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->isParam1RightOfParam2(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Z

    move-result v5

    if-eqz v5, :cond_4d

    :goto_4b
    move-object v5, v3

    goto :goto_51

    :cond_4d
    invoke-static {v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getLowerMostRec(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    move-result-object v5

    :goto_51
    invoke-direct {p0, v2, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->joinPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Z

    move-result v6

    if-nez v6, :cond_59

    goto/16 :goto_149

    :cond_59
    const/4 v6, 0x0

    if-ne v3, v4, :cond_12d

    iget-object v4, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    iput-object v6, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->bottomPt:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->createOutRec()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    move-result-object v4

    iget-object v5, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt2:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    invoke-direct {p0, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->updateOutPtIdxs(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    iget-boolean v5, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->usingPolyTree:Z

    const/4 v6, 0x1

    if-eqz v5, :cond_ac

    const/4 v5, 0x0

    :goto_75
    iget-object v7, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v7

    sub-int/2addr v7, v6

    if-ge v5, v7, :cond_ac

    iget-object v7, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {v7, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v8

    if-eqz v8, :cond_a9

    iget-object v8, v7, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    invoke-static {v8}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->parseFirstLeft(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    move-result-object v8

    if-ne v8, v3, :cond_a9

    iget-boolean v8, v7, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iget-boolean v9, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    if-ne v8, v9, :cond_9b

    goto :goto_a9

    :cond_9b
    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v8

    iget-object v9, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt2:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-static {v8, v9}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->poly2ContainsPoly1(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)Z

    move-result v8

    if-eqz v8, :cond_a9

    iput-object v4, v7, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    :cond_a9
    :goto_a9
    add-int/lit8 v5, v5, 0x1

    goto :goto_75

    :cond_ac
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v5

    invoke-static {v2, v5}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->poly2ContainsPoly1(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)Z

    move-result v2

    const-wide/16 v7, 0x0

    if-eqz v2, :cond_e3

    iget-boolean v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    xor-int/2addr v2, v6

    iput-boolean v2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iput-object v3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-boolean v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->usingPolyTree:Z

    if-eqz v2, :cond_ca

    invoke-direct {p0, v4, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->fixupFirstLefts2(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    :cond_ca
    iget-boolean v2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iget-boolean v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->reverseSolution:Z

    xor-int/2addr v2, v3

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->area()D

    move-result-wide v9

    cmpl-double v3, v9, v7

    if-lez v3, :cond_d8

    goto :goto_d9

    :cond_d8
    const/4 v6, 0x0

    :goto_d9
    if-ne v2, v6, :cond_149

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    :goto_df
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->reversePolyPtLinks()V

    goto :goto_149

    :cond_e3
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v5

    invoke-static {v2, v5}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->poly2ContainsPoly1(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)Z

    move-result v2

    if-eqz v2, :cond_11d

    iget-boolean v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iput-boolean v2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iget-boolean v2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    xor-int/2addr v2, v6

    iput-boolean v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iget-object v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iput-object v2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iput-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-boolean v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->usingPolyTree:Z

    if-eqz v2, :cond_107

    invoke-direct {p0, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->fixupFirstLefts2(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    :cond_107
    iget-boolean v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iget-boolean v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->reverseSolution:Z

    xor-int/2addr v2, v4

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->area()D

    move-result-wide v4

    cmpl-double v4, v4, v7

    if-lez v4, :cond_115

    goto :goto_116

    :cond_115
    const/4 v6, 0x0

    :goto_116
    if-ne v2, v6, :cond_149

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    goto :goto_df

    :cond_11d
    iget-boolean v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iput-boolean v2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iget-object v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iput-object v2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-boolean v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->usingPolyTree:Z

    if-eqz v2, :cond_149

    invoke-direct {p0, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->fixupFirstLefts1(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    goto :goto_149

    :cond_12d
    invoke-virtual {v4, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->setPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)V

    iput-object v6, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->bottomPt:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    iput v2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    iget-boolean v2, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    iput-boolean v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    if-ne v5, v4, :cond_140

    iget-object v2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iput-object v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    :cond_140
    iput-object v3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-boolean v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->usingPolyTree:Z

    if-eqz v2, :cond_149

    invoke-direct {p0, v4, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->fixupFirstLefts2(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V

    :cond_149
    :goto_149
    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_2

    :cond_14d
    return-void
.end method

.method private static joinHorz(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z
    .registers 13

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    cmp-long p1, v0, v2

    if-lez p1, :cond_17

    sget-object p1, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->RIGHT_TO_LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    goto :goto_19

    :cond_17
    sget-object p1, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->LEFT_TO_RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    :goto_19
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    cmp-long p3, v0, v2

    if-lez p3, :cond_30

    sget-object p3, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->RIGHT_TO_LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    goto :goto_32

    :cond_30
    sget-object p3, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->LEFT_TO_RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    :goto_32
    const/4 v0, 0x0

    if-ne p1, p3, :cond_36

    return v0

    :cond_36
    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->LEFT_TO_RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    if-ne p1, v1, :cond_a5

    :goto_3a
    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    cmp-long v1, v1, v3

    if-gtz v1, :cond_77

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    cmp-long v1, v1, v3

    if-ltz v1, :cond_77

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v3

    cmp-long v1, v1, v3

    if-nez v1, :cond_77

    iget-object p0, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_3a

    :cond_77
    if-eqz p5, :cond_8b

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    cmp-long v1, v1, v3

    if-eqz v1, :cond_8b

    iget-object p0, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_8b
    xor-int/lit8 v1, p5, 0x1

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2, p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_10e

    invoke-virtual {v1, p4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->setPt(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    xor-int/lit8 p0, p5, 0x1

    invoke-virtual {v1, p0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object p0

    goto :goto_10b

    :cond_a5
    :goto_a5
    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    cmp-long v1, v1, v3

    if-ltz v1, :cond_e2

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    cmp-long v1, v1, v3

    if-gtz v1, :cond_e2

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v1

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v3

    cmp-long v1, v1, v3

    if-nez v1, :cond_e2

    iget-object p0, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_a5

    :cond_e2
    if-nez p5, :cond_f6

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    cmp-long v1, v1, v3

    if-eqz v1, :cond_f6

    iget-object p0, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_f6
    invoke-virtual {p0, p5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2, p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_10e

    invoke-virtual {v1, p4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->setPt(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {v1, p5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object p0

    :goto_10b
    move-object v6, v1

    move-object v1, p0

    move-object p0, v6

    :cond_10e
    sget-object v2, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->LEFT_TO_RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    if-ne p3, v2, :cond_17d

    :goto_112
    iget-object p3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    cmp-long p3, v2, v4

    if-gtz p3, :cond_14f

    iget-object p3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    cmp-long p3, v2, v4

    if-ltz p3, :cond_14f

    iget-object p3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v2

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    cmp-long p3, v2, v4

    if-nez p3, :cond_14f

    iget-object p2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_112

    :cond_14f
    if-eqz p5, :cond_163

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    cmp-long p3, v2, v4

    if-eqz p3, :cond_163

    iget-object p2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_163
    xor-int/lit8 p3, p5, 0x1

    invoke-virtual {p2, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2, p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1e6

    invoke-virtual {p3, p4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->setPt(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    xor-int/lit8 p2, p5, 0x1

    invoke-virtual {p3, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object p2

    goto :goto_1e3

    :cond_17d
    :goto_17d
    iget-object p3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    cmp-long p3, v2, v4

    if-ltz p3, :cond_1ba

    iget-object p3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    cmp-long p3, v2, v4

    if-gtz p3, :cond_1ba

    iget-object p3, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v2

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    cmp-long p3, v2, v4

    if-nez p3, :cond_1ba

    iget-object p2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_17d

    :cond_1ba
    if-nez p5, :cond_1ce

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    cmp-long p3, v2, v4

    if-eqz p3, :cond_1ce

    iget-object p2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_1ce
    invoke-virtual {p2, p5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2, p4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1e6

    invoke-virtual {p3, p4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->setPt(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {p3, p5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object p2

    :goto_1e3
    move-object v6, p3

    move-object p3, p2

    move-object p2, v6

    :cond_1e6
    sget-object p4, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->LEFT_TO_RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    const/4 v2, 0x1

    if-ne p1, p4, :cond_1ec

    const/4 v0, 0x1

    :cond_1ec
    if-ne v0, p5, :cond_1f7

    iput-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object p0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object p3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v1, p3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_1ff

    :cond_1f7
    iput-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object p0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object p3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v1, p3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :goto_1ff
    return v2
.end method

.method private joinPoints(Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Z
    .registers 26

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt2:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iget-object v6, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v6

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v8

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v8

    cmp-long v6, v6, v8

    const/4 v7, 0x1

    const/4 v8, 0x0

    if-nez v6, :cond_26

    const/4 v6, 0x1

    goto :goto_27

    :cond_26
    const/4 v6, 0x0

    :goto_27
    if-eqz v6, :cond_cf

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v9

    iget-object v10, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v10

    invoke-virtual {v9, v10}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_cf

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v9

    iget-object v10, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt2:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v10

    invoke-virtual {v9, v10}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_cf

    if-eq v2, v3, :cond_4c

    return v8

    :cond_4c
    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :goto_4e
    iget-object v2, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v2, v4, :cond_61

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v3, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_61

    goto :goto_4e

    :cond_61
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v2

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v9

    cmp-long v2, v2, v9

    if-lez v2, :cond_77

    const/4 v2, 0x1

    goto :goto_78

    :cond_77
    const/4 v2, 0x0

    :goto_78
    iget-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt2:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :goto_7a
    iget-object v3, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v3, v5, :cond_8d

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v9

    invoke-virtual {v6, v9}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_8d

    goto :goto_7a

    :cond_8d
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v9

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v11

    cmp-long v3, v9, v11

    if-lez v3, :cond_a3

    const/4 v3, 0x1

    goto :goto_a4

    :cond_a3
    const/4 v3, 0x0

    :goto_a4
    if-ne v2, v3, :cond_a7

    return v8

    :cond_a7
    if-eqz v2, :cond_be

    :goto_a9
    invoke-virtual {v4, v8}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    invoke-virtual {v5, v7}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    iput-object v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v4, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v3, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :goto_b9
    iput-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt2:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    return v7

    :cond_be
    invoke-virtual {v4, v7}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    invoke-virtual {v5, v8}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->duplicate(Z)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    iput-object v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v4, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v3, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_b9

    :cond_cf
    if-eqz v6, :cond_271

    move-object v2, v4

    :goto_d2
    iget-object v3, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v9

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v11

    cmp-long v3, v9, v11

    if-nez v3, :cond_f3

    iget-object v3, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v3, v4, :cond_f3

    iget-object v3, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v3, v5, :cond_f3

    iget-object v2, v2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_d2

    :cond_f3
    move-object v9, v4

    :goto_f4
    iget-object v3, v9, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v3

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v10

    cmp-long v3, v3, v10

    if-nez v3, :cond_115

    iget-object v3, v9, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v3, v2, :cond_115

    iget-object v3, v9, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v3, v5, :cond_115

    iget-object v9, v9, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_f4

    :cond_115
    iget-object v3, v9, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v3, v2, :cond_270

    iget-object v3, v9, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-ne v3, v5, :cond_11f

    goto/16 :goto_270

    :cond_11f
    move-object v10, v5

    :goto_120
    iget-object v3, v10, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v3

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v11

    cmp-long v3, v3, v11

    if-nez v3, :cond_141

    iget-object v3, v10, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v3, v5, :cond_141

    iget-object v3, v10, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v3, v9, :cond_141

    iget-object v10, v10, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_120

    :cond_141
    move-object v11, v5

    :goto_142
    iget-object v3, v11, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v3

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v5

    cmp-long v3, v3, v5

    if-nez v3, :cond_163

    iget-object v3, v11, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v3, v10, :cond_163

    iget-object v3, v11, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v3, v2, :cond_163

    iget-object v11, v11, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_142

    :cond_163
    iget-object v3, v11, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-eq v3, v10, :cond_270

    iget-object v3, v11, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-ne v3, v2, :cond_16d

    goto/16 :goto_270

    :cond_16d
    new-array v3, v7, [J

    new-array v4, v7, [J

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v12

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v14

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v16

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v18

    move-object/from16 v20, v3

    move-object/from16 v21, v4

    invoke-static/range {v12 .. v21}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->getOverlap(JJJJ[J[J)Z

    move-result v5

    if-nez v5, :cond_19c

    return v8

    :cond_19c
    aget-wide v5, v3, v8

    aget-wide v3, v4, v8

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v12

    cmp-long v12, v12, v5

    if-ltz v12, :cond_1db

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v12

    cmp-long v12, v12, v3

    if-gtz v12, :cond_1db

    new-instance v3, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v12

    cmp-long v4, v4, v12

    if-lez v4, :cond_1d6

    goto :goto_1d7

    :cond_1d6
    const/4 v7, 0x0

    :goto_1d7
    move-object v12, v3

    move v13, v7

    goto/16 :goto_266

    :cond_1db
    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v12

    cmp-long v12, v12, v5

    if-ltz v12, :cond_211

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v12

    cmp-long v12, v12, v3

    if-gtz v12, :cond_211

    new-instance v3, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v12

    cmp-long v4, v4, v12

    if-lez v4, :cond_1d6

    goto :goto_1d7

    :cond_211
    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v12

    cmp-long v5, v12, v5

    if-ltz v5, :cond_247

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    cmp-long v3, v5, v3

    if-gtz v3, :cond_247

    new-instance v3, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v12

    cmp-long v4, v4, v12

    if-lez v4, :cond_1d6

    goto :goto_1d7

    :cond_247
    new-instance v3, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v12

    cmp-long v4, v4, v12

    if-lez v4, :cond_1d6

    goto/16 :goto_1d7

    :goto_266
    iput-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt1:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    iput-object v10, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->outPt2:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-object v8, v2

    invoke-static/range {v8 .. v13}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->joinHorz(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z

    move-result v1

    return v1

    :cond_270
    :goto_270
    return v8

    :cond_271
    iget-object v6, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :goto_273
    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v9

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v10

    invoke-virtual {v9, v10}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_286

    if-eq v6, v4, :cond_286

    iget-object v6, v6, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_273

    :cond_286
    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v9

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v9

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v11

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v11

    cmp-long v9, v9, v11

    if-gtz v9, :cond_2b1

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v9

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v10

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v11

    iget-boolean v12, v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {v9, v10, v11, v12}, Lcom/itextpdf/text/pdf/parser/clipper/Point;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z

    move-result v9

    if-nez v9, :cond_2af

    goto :goto_2b1

    :cond_2af
    const/4 v9, 0x0

    goto :goto_2b2

    :cond_2b1
    :goto_2b1
    const/4 v9, 0x1

    :goto_2b2
    if-eqz v9, :cond_2f2

    iget-object v6, v4, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :goto_2b6
    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v10

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v11

    invoke-virtual {v10, v11}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_2c9

    if-eq v6, v4, :cond_2c9

    iget-object v6, v6, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_2b6

    :cond_2c9
    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v10

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v10

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v12

    cmp-long v10, v10, v12

    if-gtz v10, :cond_2f1

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v10

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v11

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    iget-boolean v13, v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {v10, v11, v12, v13}, Lcom/itextpdf/text/pdf/parser/clipper/Point;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z

    move-result v10

    if-nez v10, :cond_2f2

    :cond_2f1
    return v8

    :cond_2f2
    iget-object v10, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :goto_2f4
    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v11

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    invoke-virtual {v11, v12}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-eqz v11, :cond_307

    if-eq v10, v5, :cond_307

    iget-object v10, v10, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_2f4

    :cond_307
    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v11

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v11

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v13

    invoke-virtual {v13}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v13

    cmp-long v11, v11, v13

    if-gtz v11, :cond_332

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v11

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v13

    iget-boolean v14, v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {v11, v12, v13, v14}, Lcom/itextpdf/text/pdf/parser/clipper/Point;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z

    move-result v11

    if-nez v11, :cond_330

    goto :goto_332

    :cond_330
    const/4 v11, 0x0

    goto :goto_333

    :cond_332
    :goto_332
    const/4 v11, 0x1

    :goto_333
    if-eqz v11, :cond_373

    iget-object v10, v5, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :goto_337
    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v13

    invoke-virtual {v12, v13}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v12

    if-eqz v12, :cond_34a

    if-eq v10, v5, :cond_34a

    iget-object v10, v10, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_337

    :cond_34a
    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v12

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v14

    invoke-virtual {v14}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v14

    cmp-long v12, v12, v14

    if-gtz v12, :cond_372

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v12

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v13

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$Join;->getOffPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v14

    iget-boolean v15, v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {v12, v13, v14, v15}, Lcom/itextpdf/text/pdf/parser/clipper/Point;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z

    move-result v12

    if-nez v12, :cond_373

    :cond_372
    return v8

    :cond_373
    if-eq v6, v4, :cond_382

    if-eq v10, v5, :cond_382

    if-eq v6, v10, :cond_382

    if-ne v2, v3, :cond_37e

    if-ne v9, v11, :cond_37e

    goto :goto_382

    :cond_37e
    if-eqz v9, :cond_be

    goto/16 :goto_a9

    :cond_382
    :goto_382
    return v8
.end method

.method private static minkowski(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Path;ZZ)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 21

    move-object/from16 v0, p1

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->size()I

    move-result v1

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->size()I

    move-result v2

    new-instance v3, Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    invoke-direct {v3, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;-><init>(I)V

    const/4 v4, 0x0

    if-eqz p2, :cond_5d

    const/4 v5, 0x0

    :goto_13
    if-ge v5, v2, :cond_a8

    new-instance v6, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-direct {v6, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path;-><init>(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->iterator()Ljava/util/Iterator;

    move-result-object v7

    :goto_1e
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v8

    if-eqz v8, :cond_57

    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    new-instance v14, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v0, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v9

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v11

    add-long v10, v9, v11

    invoke-virtual {v0, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v12

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v8

    add-long/2addr v12, v8

    const-wide/16 v15, 0x0

    move-object v9, v14

    move-object v8, v14

    move-wide v14, v15

    invoke-direct/range {v9 .. v15}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(JJJ)V

    invoke-virtual {v6, v8}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->add(Ljava/lang/Object;)Z

    goto :goto_1e

    :cond_57
    invoke-virtual {v3, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->add(Ljava/lang/Object;)Z

    add-int/lit8 v5, v5, 0x1

    goto :goto_13

    :cond_5d
    const/4 v5, 0x0

    :goto_5e
    if-ge v5, v2, :cond_a8

    new-instance v6, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-direct {v6, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path;-><init>(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->iterator()Ljava/util/Iterator;

    move-result-object v7

    :goto_69
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v8

    if-eqz v8, :cond_a2

    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    new-instance v14, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v0, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v9

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v11

    sub-long v10, v9, v11

    invoke-virtual {v0, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v12

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v8

    sub-long/2addr v12, v8

    const-wide/16 v15, 0x0

    move-object v9, v14

    move-object v8, v14

    move-wide v14, v15

    invoke-direct/range {v9 .. v15}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(JJJ)V

    invoke-virtual {v6, v8}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->add(Ljava/lang/Object;)Z

    goto :goto_69

    :cond_a2
    invoke-virtual {v3, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->add(Ljava/lang/Object;)Z

    add-int/lit8 v5, v5, 0x1

    goto :goto_5e

    :cond_a8
    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    add-int v5, v2, p3

    add-int/lit8 v6, v1, 0x1

    mul-int v5, v5, v6

    invoke-direct {v0, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;-><init>(I)V

    const/4 v5, 0x0

    :goto_b4
    add-int/lit8 v6, v2, -0x1

    add-int v6, v6, p3

    if-ge v5, v6, :cond_112

    const/4 v6, 0x0

    :goto_bb
    if-ge v6, v1, :cond_10f

    new-instance v7, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    const/4 v8, 0x4

    invoke-direct {v7, v8}, Lcom/itextpdf/text/pdf/parser/clipper/Path;-><init>(I)V

    rem-int v8, v5, v2

    invoke-virtual {v3, v8}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    rem-int v10, v6, v1

    invoke-virtual {v9, v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v9

    invoke-virtual {v7, v9}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->add(Ljava/lang/Object;)Z

    add-int/lit8 v9, v5, 0x1

    rem-int/2addr v9, v2

    invoke-virtual {v3, v9}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v11, v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v10

    invoke-virtual {v7, v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->add(Ljava/lang/Object;)Z

    invoke-virtual {v3, v9}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    add-int/lit8 v6, v6, 0x1

    rem-int v10, v6, v1

    invoke-virtual {v9, v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v9

    invoke-virtual {v7, v9}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->add(Ljava/lang/Object;)Z

    invoke-virtual {v3, v8}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v8, v10}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v8

    invoke-virtual {v7, v8}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->add(Ljava/lang/Object;)Z

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->orientation()Z

    move-result v8

    if-nez v8, :cond_10b

    invoke-static {v7}, Ljava/util/Collections;->reverse(Ljava/util/List;)V

    :cond_10b
    invoke-virtual {v0, v7}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->add(Ljava/lang/Object;)Z

    goto :goto_bb

    :cond_10f
    add-int/lit8 v5, v5, 0x1

    goto :goto_b4

    :cond_112
    return-object v0
.end method

.method public static minkowskiDiff(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Path;)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 5

    const/4 v0, 0x1

    const/4 v1, 0x0

    invoke-static {p0, p1, v1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->minkowski(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Path;ZZ)Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    move-result-object p0

    new-instance p1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-direct {p1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;-><init>()V

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;->SUBJECT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    invoke-virtual {p1, p0, v1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addPaths(Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;Z)Z

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;->UNION:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->NON_ZERO:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    sget-object v2, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->NON_ZERO:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-virtual {p1, v0, p0, v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    return-object p0
.end method

.method public static minkowskiSum(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Path;Z)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 5

    const/4 v0, 0x1

    invoke-static {p0, p1, v0, p2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->minkowski(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Path;ZZ)Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    move-result-object p0

    new-instance p1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-direct {p1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;-><init>()V

    sget-object p2, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;->SUBJECT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    invoke-virtual {p1, p0, p2, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addPaths(Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;Z)Z

    sget-object p2, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;->UNION:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->NON_ZERO:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->NON_ZERO:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-virtual {p1, p2, p0, v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    return-object p0
.end method

.method public static minkowskiSum(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Paths;Z)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 10

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;-><init>()V

    new-instance v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;-><init>()V

    const/4 v2, 0x0

    const/4 v3, 0x0

    :goto_c
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->size()I

    move-result v4

    if-ge v3, v4, :cond_3c

    invoke-virtual {p1, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    const/4 v5, 0x1

    invoke-static {p0, v4, v5, p2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->minkowski(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Path;ZZ)Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    move-result-object v4

    sget-object v6, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;->SUBJECT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    invoke-virtual {v1, v4, v6, v5}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addPaths(Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;Z)Z

    if-eqz p2, :cond_39

    invoke-virtual {p1, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {p0, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v4, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->TranslatePath(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path;

    move-result-object v4

    sget-object v6, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;->CLIP:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    invoke-virtual {v1, v4, v6, v5}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addPath(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;Z)Z

    :cond_39
    add-int/lit8 v3, v3, 0x1

    goto :goto_c

    :cond_3c
    sget-object p0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;->UNION:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    sget-object p1, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->NON_ZERO:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    sget-object p2, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->NON_ZERO:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-virtual {v1, p0, v0, p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    return-object v0
.end method

.method private static poly2ContainsPoly1(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)Z
    .registers 5

    move-object v0, p0

    :cond_1
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-static {v1, p1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->isPointInPolygon(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;)I

    move-result v1

    const/4 v2, 0x1

    if-ltz v1, :cond_11

    if-lez v1, :cond_f

    goto :goto_10

    :cond_f
    const/4 v2, 0x0

    :goto_10
    return v2

    :cond_11
    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->next:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    if-ne v0, p0, :cond_1

    return v2
.end method

.method private popScanbeam()J
    .registers 4

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "popBeam"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iget-wide v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->y:J

    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iput-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    return-wide v0
.end method

.method private processEdgesAtTopOfScanbeam(J)V
    .registers 14

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "processEdgesAtTopOfScanbeam"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    :goto_d
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_f
    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_cd

    long-to-double v3, p1

    invoke-virtual {v0, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isMaxima(D)Z

    move-result v5

    if-eqz v5, :cond_2a

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getMaximaPair()Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object v5

    if-eqz v5, :cond_29

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isHorizontal()Z

    move-result v5

    if-nez v5, :cond_27

    goto :goto_29

    :cond_27
    const/4 v5, 0x0

    goto :goto_2a

    :cond_29
    :goto_29
    const/4 v5, 0x1

    :cond_2a
    :goto_2a
    if-eqz v5, :cond_46

    iget-boolean v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->strictlySimple:Z

    if-eqz v1, :cond_3b

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-direct {p0, v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->InsertMaxima(J)V

    :cond_3b
    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->doMaxima(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    if-nez v1, :cond_43

    goto :goto_d

    :cond_43
    iget-object v0, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_f

    :cond_46
    invoke-virtual {v0, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isIntermediate(D)Z

    move-result v3

    if-eqz v3, :cond_6c

    iget-object v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isHorizontal()Z

    move-result v3

    if-eqz v3, :cond_6c

    new-array v1, v1, [Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    aput-object v0, v1, v2

    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->updateEdgeIntoAEL([Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    aget-object v0, v1, v2

    iget v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v1, :cond_68

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {p0, v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_68
    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addEdgeToSEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    goto :goto_86

    :cond_6c
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-static {v0, p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->topX(Lcom/itextpdf/text/pdf/parser/clipper/Edge;J)J

    move-result-wide v2

    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setX(Ljava/lang/Number;)V

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-static {p1, p2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setY(Ljava/lang/Number;)V

    :goto_86
    iget-boolean v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->strictlySimple:Z

    if-eqz v1, :cond_c9

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v2, :cond_c9

    iget v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v2, :cond_c9

    if-eqz v1, :cond_c9

    iget v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v2, :cond_c9

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v2

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    cmp-long v2, v2, v4

    if-nez v2, :cond_c9

    iget v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v2, :cond_c9

    new-instance v2, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-direct {p0, v2, v1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->setZ(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    invoke-direct {p0, v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v1

    invoke-direct {p0, v0, v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v3

    invoke-direct {p0, v1, v3, v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :cond_c9
    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto/16 :goto_f

    :cond_cd
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->processHorizontals()V

    const/4 v0, 0x0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_d5
    if-eqz v3, :cond_1be

    long-to-double v4, p1

    invoke-virtual {v3, v4, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isIntermediate(D)Z

    move-result v4

    if-eqz v4, :cond_1ba

    iget v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v4, :cond_eb

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-direct {p0, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v4

    goto :goto_ec

    :cond_eb
    move-object v4, v0

    :goto_ec
    new-array v5, v1, [Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    aput-object v3, v5, v2

    invoke-direct {p0, v5}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->updateEdgeIntoAEL([Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    aget-object v3, v5, v2

    iget-object v5, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v6, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v5, :cond_15d

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v7

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v7

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v9

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v9

    cmp-long v7, v7, v9

    if-nez v7, :cond_15d

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v7

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v7

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v9

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v9

    cmp-long v7, v7, v9

    if-nez v7, :cond_15d

    if-eqz v4, :cond_15d

    iget v7, v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v7, :cond_15d

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v7

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v7

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v9

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v9

    cmp-long v7, v7, v9

    if-lez v7, :cond_15d

    iget-boolean v7, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {v3, v5, v7}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Z

    move-result v7

    if-eqz v7, :cond_15d

    iget v7, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v7, :cond_15d

    iget v7, v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v7, :cond_15d

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-direct {p0, v5, v6}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v5

    :goto_155
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-direct {p0, v4, v5, v6}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    goto :goto_1ba

    :cond_15d
    if-eqz v6, :cond_1ba

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v7

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v9

    cmp-long v5, v7, v9

    if-nez v5, :cond_1ba

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v7

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v9

    cmp-long v5, v7, v9

    if-nez v5, :cond_1ba

    if-eqz v4, :cond_1ba

    iget v5, v6, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v5, :cond_1ba

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v7

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v9

    cmp-long v5, v7, v9

    if-lez v5, :cond_1ba

    iget-boolean v5, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {v3, v6, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Z

    move-result v5

    if-eqz v5, :cond_1ba

    iget v5, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v5, :cond_1ba

    iget v5, v6, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v5, :cond_1ba

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-direct {p0, v6, v5}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v5

    goto :goto_155

    :cond_1ba
    :goto_1ba
    iget-object v3, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto/16 :goto_d5

    :cond_1be
    sget-object p1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class p2, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {p2}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object p2

    const-string v0, "processEdgesAtTopOfScanbeam"

    invoke-virtual {p1, p2, v0}, Ljava/util/logging/Logger;->exiting(Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method private processHorizontal(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 29

    move-object/from16 v9, p0

    move-object/from16 v0, p1

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v2, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v2}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v2

    const-string v3, "isHorizontal"

    invoke-virtual {v1, v2, v3}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    const/4 v10, 0x1

    new-array v11, v10, [Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    new-array v12, v10, [J

    new-array v13, v10, [J

    iget v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    const/4 v14, 0x0

    if-ltz v1, :cond_2d

    iget-object v1, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    iget v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iget-boolean v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isOpen:Z

    if-eqz v1, :cond_2d

    const/4 v15, 0x1

    goto :goto_2e

    :cond_2d
    const/4 v15, 0x0

    :goto_2e
    invoke-static {v0, v11, v12, v13}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->getHorzDirection(Lcom/itextpdf/text/pdf/parser/clipper/Edge;[Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;[J[J)V

    move-object v7, v0

    :goto_32
    iget-object v1, v7, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v1, :cond_41

    iget-object v1, v7, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isHorizontal()Z

    move-result v1

    if-eqz v1, :cond_41

    iget-object v7, v7, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_32

    :cond_41
    iget-object v1, v7, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v2, 0x0

    if-nez v1, :cond_4c

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getMaximaPair()Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object v1

    move-object v8, v1

    goto :goto_4d

    :cond_4c
    move-object v8, v2

    :goto_4d
    iget-object v1, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    if-eqz v1, :cond_a1

    aget-object v3, v11, v14

    sget-object v4, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->LEFT_TO_RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    if-ne v3, v4, :cond_7b

    :goto_57
    if-eqz v1, :cond_6a

    iget-wide v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    cmp-long v3, v3, v5

    if-gtz v3, :cond_6a

    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    goto :goto_57

    :cond_6a
    if-eqz v1, :cond_a1

    iget-wide v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    cmp-long v3, v3, v5

    if-ltz v3, :cond_a1

    goto :goto_a0

    :cond_7b
    :goto_7b
    iget-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    if-eqz v3, :cond_92

    iget-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iget-wide v3, v3, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    cmp-long v3, v3, v5

    if-gez v3, :cond_92

    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    goto :goto_7b

    :cond_92
    iget-wide v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    cmp-long v3, v3, v5

    if-gtz v3, :cond_a1

    :goto_a0
    move-object v1, v2

    :cond_a1
    move-object v5, v0

    :goto_a2
    if-ne v5, v7, :cond_a7

    const/16 v16, 0x1

    goto :goto_a9

    :cond_a7
    const/16 v16, 0x0

    :goto_a9
    aget-object v0, v11, v14

    invoke-virtual {v5, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getNextInAEL(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;)Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object v0

    move-object v6, v0

    :goto_b0
    if-eqz v6, :cond_26d

    if-eqz v1, :cond_11a

    aget-object v0, v11, v14

    sget-object v3, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->LEFT_TO_RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    if-ne v0, v3, :cond_ed

    :goto_ba
    if-eqz v1, :cond_11a

    iget-wide v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v17

    cmp-long v0, v3, v17

    if-gez v0, :cond_11a

    iget v0, v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_e5

    if-nez v15, :cond_e5

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    iget-wide v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v17

    move-object/from16 v19, v11

    invoke-virtual/range {v17 .. v17}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v10

    invoke-direct {v0, v3, v4, v10, v11}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(JJ)V

    invoke-direct {v9, v5, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    goto :goto_e7

    :cond_e5
    move-object/from16 v19, v11

    :goto_e7
    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Next:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    move-object/from16 v11, v19

    const/4 v10, 0x1

    goto :goto_ba

    :cond_ed
    move-object/from16 v19, v11

    :goto_ef
    if-eqz v1, :cond_11c

    iget-wide v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v10

    cmp-long v0, v3, v10

    if-lez v0, :cond_11c

    iget v0, v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_117

    if-nez v15, :cond_117

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    iget-wide v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->X:J

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v10

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v10

    invoke-direct {v0, v3, v4, v10, v11}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(JJ)V

    invoke-direct {v9, v5, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_117
    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;->Prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    goto :goto_ef

    :cond_11a
    move-object/from16 v19, v11

    :cond_11c
    move-object v10, v1

    aget-object v0, v19, v14

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->LEFT_TO_RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    if-ne v0, v1, :cond_131

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    aget-wide v3, v13, v14

    cmp-long v0, v0, v3

    if-gtz v0, :cond_168

    :cond_131
    aget-object v0, v19, v14

    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->RIGHT_TO_LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    if-ne v0, v1, :cond_146

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    aget-wide v3, v12, v14

    cmp-long v0, v0, v3

    if-gez v0, :cond_146

    goto :goto_168

    :cond_146
    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    cmp-long v0, v0, v3

    if-nez v0, :cond_170

    iget-object v0, v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_170

    iget-wide v0, v6, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    iget-object v3, v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-wide v3, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpg-double v0, v0, v3

    if-gez v0, :cond_170

    :cond_168
    :goto_168
    move-object v11, v5

    move-object/from16 v17, v7

    move-object v1, v10

    move/from16 v26, v15

    goto/16 :goto_274

    :cond_170
    iget v0, v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_1f8

    if-nez v15, :cond_1f8

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-direct {v9, v5, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v11

    iget-object v0, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-object v3, v0

    :goto_181
    if-eqz v3, :cond_1e5

    iget v0, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_1cc

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v17

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v20

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v22

    move-object/from16 v0, p0

    move-object v14, v3

    move-wide/from16 v3, v17

    move-object/from16 v24, v5

    move-object/from16 v25, v10

    move-object v10, v6

    move-wide/from16 v5, v20

    move-object/from16 v17, v7

    move/from16 v26, v15

    move-object v15, v8

    move-wide/from16 v7, v22

    invoke-direct/range {v0 .. v8}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->doHorzSegmentsOverlap(JJJJ)Z

    move-result v0

    if-eqz v0, :cond_1d7

    invoke-direct {v9, v14}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->GetLastOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    invoke-virtual {v14}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v9, v0, v11, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    goto :goto_1d7

    :cond_1cc
    move-object v14, v3

    move-object/from16 v24, v5

    move-object/from16 v17, v7

    move-object/from16 v25, v10

    move/from16 v26, v15

    move-object v10, v6

    move-object v15, v8

    :cond_1d7
    :goto_1d7
    iget-object v3, v14, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-object v6, v10

    move-object v8, v15

    move-object/from16 v7, v17

    move-object/from16 v5, v24

    move-object/from16 v10, v25

    move/from16 v15, v26

    const/4 v14, 0x0

    goto :goto_181

    :cond_1e5
    move-object/from16 v24, v5

    move-object/from16 v17, v7

    move-object/from16 v25, v10

    move/from16 v26, v15

    move-object v10, v6

    move-object v15, v8

    invoke-virtual/range {v24 .. v24}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-direct {v9, v11, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addGhostJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    move-object v2, v11

    goto :goto_202

    :cond_1f8
    move-object/from16 v24, v5

    move-object/from16 v17, v7

    move-object/from16 v25, v10

    move/from16 v26, v15

    move-object v10, v6

    move-object v15, v8

    :goto_202
    if-ne v10, v15, :cond_21a

    if-eqz v16, :cond_21a

    move-object/from16 v11, v24

    iget v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_213

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-direct {v9, v11, v15, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addLocalMaxPoly(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :cond_213
    invoke-direct {v9, v11}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->deleteFromAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    invoke-direct {v9, v15}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->deleteFromAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    return-void

    :cond_21a
    move-object/from16 v11, v24

    const/4 v0, 0x0

    aget-object v1, v19, v0

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;->LEFT_TO_RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;

    if-ne v1, v0, :cond_23d

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v5

    invoke-direct {v0, v3, v4, v5, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(JJ)V

    invoke-direct {v9, v11, v10, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectEdges(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :goto_23b
    const/4 v0, 0x0

    goto :goto_256

    :cond_23d
    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v5

    invoke-direct {v0, v3, v4, v5, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(JJ)V

    invoke-direct {v9, v10, v11, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectEdges(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    goto :goto_23b

    :goto_256
    aget-object v1, v19, v0

    invoke-virtual {v10, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getNextInAEL(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;)Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object v6

    invoke-direct {v9, v11, v10}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->swapPositionsInAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    move-object v5, v11

    move-object v8, v15

    move-object/from16 v7, v17

    move-object/from16 v11, v19

    move-object/from16 v1, v25

    move/from16 v15, v26

    const/4 v10, 0x1

    const/4 v14, 0x0

    goto/16 :goto_b0

    :cond_26d
    move-object/from16 v17, v7

    move-object/from16 v19, v11

    move/from16 v26, v15

    move-object v11, v5

    :goto_274
    move-object v15, v8

    iget-object v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_2a7

    iget-object v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isHorizontal()Z

    move-result v0

    if-nez v0, :cond_282

    goto :goto_2a7

    :cond_282
    const/4 v0, 0x1

    new-array v3, v0, [Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v0, 0x0

    aput-object v11, v3, v0

    invoke-direct {v9, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->updateEdgeIntoAEL([Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    aget-object v5, v3, v0

    iget v0, v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_298

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-direct {v9, v5, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_298
    move-object/from16 v0, v19

    invoke-static {v5, v0, v12, v13}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->getHorzDirection(Lcom/itextpdf/text/pdf/parser/clipper/Edge;[Lcom/itextpdf/text/pdf/parser/clipper/Clipper$Direction;[J[J)V

    move-object v11, v0

    move-object v8, v15

    move-object/from16 v7, v17

    move/from16 v15, v26

    const/4 v10, 0x1

    const/4 v14, 0x0

    goto/16 :goto_a2

    :cond_2a7
    :goto_2a7
    iget v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_2f7

    if-nez v2, :cond_2f7

    invoke-direct {v9, v11}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->GetLastOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v10

    iget-object v0, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-object v12, v0

    :goto_2b4
    if-eqz v12, :cond_2f0

    iget v0, v12, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_2ed

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v7

    move-object/from16 v0, p0

    invoke-direct/range {v0 .. v8}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->doHorzSegmentsOverlap(JJJJ)Z

    move-result v0

    if-eqz v0, :cond_2ed

    invoke-direct {v9, v12}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->GetLastOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v9, v0, v10, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :cond_2ed
    iget-object v12, v12, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_2b4

    :cond_2f0
    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-direct {v9, v10, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addGhostJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :cond_2f7
    iget-object v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_3dd

    iget v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_3d1

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-direct {v9, v11, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    const/4 v1, 0x1

    new-array v1, v1, [Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v2, 0x0

    aput-object v11, v1, v2

    invoke-direct {v9, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->updateEdgeIntoAEL([Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    aget-object v1, v1, v2

    iget v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v2, :cond_317

    return-void

    :cond_317
    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v2, :cond_37a

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v6

    cmp-long v4, v4, v6

    if-nez v4, :cond_37a

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v6

    cmp-long v4, v4, v6

    if-nez v4, :cond_37a

    iget v4, v2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v4, :cond_37a

    iget v4, v2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v4, :cond_37a

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v6

    cmp-long v4, v4, v6

    if-lez v4, :cond_37a

    iget-boolean v4, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {v1, v2, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Z

    move-result v4

    if-eqz v4, :cond_37a

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-direct {v9, v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    :goto_371
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v9, v0, v2, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addJoin(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    goto/16 :goto_3eb

    :cond_37a
    if-eqz v3, :cond_3eb

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v6

    cmp-long v2, v4, v6

    if-nez v2, :cond_3eb

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v6

    cmp-long v2, v4, v6

    if-nez v2, :cond_3eb

    iget v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v2, :cond_3eb

    iget v2, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v2, :cond_3eb

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v6

    cmp-long v2, v4, v6

    if-lez v2, :cond_3eb

    iget-boolean v2, v9, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->useFullRange:Z

    invoke-static {v1, v3, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Z

    move-result v2

    if-eqz v2, :cond_3eb

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-direct {v9, v3, v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v2

    goto :goto_371

    :cond_3d1
    const/4 v0, 0x1

    new-array v0, v0, [Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v1, 0x0

    aput-object v11, v0, v1

    invoke-direct {v9, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->updateEdgeIntoAEL([Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    aget-object v0, v0, v1

    goto :goto_3eb

    :cond_3dd
    iget v0, v11, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v0, :cond_3e8

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-direct {v9, v11, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addOutPt(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    :cond_3e8
    invoke-direct {v9, v11}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->deleteFromAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    :cond_3eb
    :goto_3eb
    return-void
.end method

.method private processHorizontals()V
    .registers 4

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "processHorizontals"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    :goto_d
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_18

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->deleteFromSEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->processHorizontal(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    goto :goto_d

    :cond_18
    return-void
.end method

.method private processIntersectList()V
    .registers 6

    const/4 v0, 0x0

    :goto_1
    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    if-ge v0, v1, :cond_26

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->edge1:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->Edge2:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->getPt()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-direct {p0, v2, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectEdges(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->edge1:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper$IntersectNode;->Edge2:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-direct {p0, v2, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->swapPositionsInAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_26
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->clear()V

    return-void
.end method

.method private processIntersections(J)Z
    .registers 6

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "processIntersections"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v1, 0x1

    if-nez v0, :cond_13

    return v1

    :cond_13
    const/4 v0, 0x0

    :try_start_14
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->buildIntersectList(J)V

    iget-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result p1

    if-nez p1, :cond_20

    return v1

    :cond_20
    iget-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result p1

    if-eq p1, v1, :cond_31

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->fixupIntersectionOrder()Z

    move-result p1

    if-eqz p1, :cond_2f

    goto :goto_31

    :cond_2f
    const/4 p1, 0x0

    return p1

    :cond_31
    :goto_31
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->processIntersectList()V
    :try_end_34
    .catch Ljava/lang/Exception; {:try_start_14 .. :try_end_34} :catch_37

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    return v1

    :catch_37
    move-exception p1

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->intersectList:Ljava/util/List;

    invoke-interface {p2}, Ljava/util/List;->clear()V

    new-instance p2, Ljava/lang/IllegalStateException;

    const-string v0, "ProcessIntersections error"

    invoke-direct {p2, v0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw p2
.end method

.method private setHoleState(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V
    .registers 6

    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v0, 0x0

    :goto_3
    if-eqz p1, :cond_22

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ltz v1, :cond_1f

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v1, :cond_1f

    xor-int/lit8 v0, v0, 0x1

    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    if-nez v1, :cond_1f

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    iget v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    iput-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    :cond_1f
    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_3

    :cond_22
    if-eqz v0, :cond_27

    const/4 p1, 0x1

    iput-boolean p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->isHole:Z

    :cond_27
    return-void
.end method

.method private setZ(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 10

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getZ()J

    move-result-wide v0

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-nez v0, :cond_6c

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->zFillFunction:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ZFillCallback;

    if-nez v0, :cond_f

    goto :goto_6c

    :cond_f
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_29

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p2

    :goto_1d
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getZ()J

    move-result-wide p2

    invoke-static {p2, p3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p2

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->setZ(Ljava/lang/Number;)V

    goto :goto_6c

    :cond_29
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_38

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p2

    goto :goto_1d

    :cond_38
    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_47

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p2

    goto :goto_1d

    :cond_47
    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_56

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p2

    goto :goto_1d

    :cond_56
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->zFillFunction:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ZFillCallback;

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    move-object v5, p1

    invoke-interface/range {v0 .. v5}, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ZFillCallback;->zFill(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :cond_6c
    :goto_6c
    return-void
.end method

.method public static simplifyPolygon(Lcom/itextpdf/text/pdf/parser/clipper/Path;)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 2

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->EVEN_ODD:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->simplifyPolygon(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    move-result-object p0

    return-object p0
.end method

.method public static simplifyPolygon(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 6

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;-><init>()V

    new-instance v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    const/4 v2, 0x2

    invoke-direct {v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;-><init>(I)V

    sget-object v2, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;->SUBJECT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    const/4 v3, 0x1

    invoke-virtual {v1, p0, v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addPath(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;Z)Z

    sget-object p0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;->UNION:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    invoke-virtual {v1, p0, v0, p1, p1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    return-object v0
.end method

.method public static simplifyPolygons(Lcom/itextpdf/text/pdf/parser/clipper/Paths;)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 2

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->EVEN_ODD:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->simplifyPolygons(Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    move-result-object p0

    return-object p0
.end method

.method public static simplifyPolygons(Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 6

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;-><init>()V

    new-instance v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    const/4 v2, 0x2

    invoke-direct {v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;-><init>(I)V

    sget-object v2, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;->SUBJECT:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    const/4 v3, 0x1

    invoke-virtual {v1, p0, v2, v3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->addPaths(Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;Z)Z

    sget-object p0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;->UNION:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    invoke-virtual {v1, p0, v0, p1, p1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    return-object v0
.end method

.method private swapPositionsInAEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 6

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "swapPositionsInAEL"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eq v0, v1, :cond_97

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v0, v1, :cond_1b

    goto/16 :goto_97

    :cond_1b
    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v0, p2, :cond_34

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_25

    iput-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_25
    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v1, :cond_2b

    iput-object p2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_2b
    iput-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_7d

    :cond_34
    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v0, p1, :cond_4d

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_3e

    iput-object p2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_3e
    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v1, :cond_44

    iput-object p1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_44
    iput-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_7d

    :cond_4d
    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v2, :cond_5d

    iget-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, v2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_5d
    iget-object v2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v2, :cond_69

    iget-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, v2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_69
    iput-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_73

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_73
    iput-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_7d

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_7d
    :goto_7d
    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-nez v0, :cond_84

    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_8a

    :cond_84
    iget-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-nez p1, :cond_8a

    iput-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_8a
    :goto_8a
    sget-object p1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class p2, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {p2}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object p2

    const-string v0, "swapPositionsInAEL"

    invoke-virtual {p1, p2, v0}, Ljava/util/logging/Logger;->exiting(Ljava/lang/String;Ljava/lang/String;)V

    :cond_97
    :goto_97
    return-void
.end method

.method private swapPositionsInSEL(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 6

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-nez v0, :cond_9

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-nez v0, :cond_9

    return-void

    :cond_9
    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-nez v0, :cond_12

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-nez v0, :cond_12

    return-void

    :cond_12
    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v0, p2, :cond_2b

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_1c

    iput-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_1c
    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v1, :cond_22

    iput-object p2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_22
    iput-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_74

    :cond_2b
    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v0, p1, :cond_44

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_35

    iput-object p2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_35
    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v1, :cond_3b

    iput-object p1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_3b
    iput-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_74

    :cond_44
    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v2, :cond_54

    iget-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, v2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_54
    iget-object v2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v2, :cond_60

    iget-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, v2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_60
    iput-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_6a

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_6a
    iput-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v0, :cond_74

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_74
    :goto_74
    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-nez v0, :cond_7b

    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_81

    :cond_7b
    iget-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInSEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-nez p1, :cond_81

    iput-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_81
    :goto_81
    return-void
.end method

.method private updateEdgeIntoAEL([Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 8

    const/4 v0, 0x0

    aget-object v1, p1, v0

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v2, :cond_5b

    iget-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    iput v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-eqz v2, :cond_18

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v4, v2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_1c

    :cond_18
    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_1c
    if-eqz v3, :cond_22

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_22
    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput-object v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    iput v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iput v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iget-object v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    iput v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    iget-object v1, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    aput-object v1, p1, v0

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p1

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->setCurrent(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    iput-object v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isHorizontal()Z

    move-result p1

    if-nez p1, :cond_5a

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v0

    invoke-direct {p0, v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->insertScanbeam(J)V

    :cond_5a
    return-void

    :cond_5b
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v0, "UpdateEdgeIntoAEL: invalid call"

    invoke-direct {p1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method private updateOutPtIdxs(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)V
    .registers 4

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    :cond_4
    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->Idx:I

    iput v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->idx:I

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v1

    if-ne v0, v1, :cond_4

    return-void
.end method

.method private updateWindingCount(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)V
    .registers 9

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "updateWindingCount"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_f
    if-eqz v0, :cond_1e

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    iget-object v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    if-ne v1, v2, :cond_1b

    iget v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v1, :cond_1e

    :cond_1b
    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_f

    :cond_1e
    const/4 v1, 0x0

    const/4 v2, 0x1

    if-nez v0, :cond_32

    iget v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v0, :cond_28

    const/4 v0, 0x1

    goto :goto_2a

    :cond_28
    iget v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    :goto_2a
    iput v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iput v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto/16 :goto_b3

    :cond_32
    iget v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v3, :cond_46

    iget-object v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    sget-object v4, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;->UNION:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    if-eq v3, v4, :cond_46

    iput v2, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    :goto_3e
    iget v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    iput v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto/16 :goto_b3

    :cond_46
    iget-object v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-virtual {p1, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isEvenOddFillType(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    move-result v3

    if-eqz v3, :cond_70

    iget v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v3, :cond_6b

    iget-object v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v4, 0x1

    :goto_57
    if-eqz v3, :cond_68

    iget-object v5, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    iget-object v6, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    if-ne v5, v6, :cond_65

    iget v5, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v5, :cond_65

    xor-int/lit8 v4, v4, 0x1

    :cond_65
    iget-object v3, v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prevInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_57

    :cond_68
    xor-int/lit8 v3, v4, 0x1

    goto :goto_6d

    :cond_6b
    iget v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    :goto_6d
    iput v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    goto :goto_3e

    :cond_70
    iget v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iget v4, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    mul-int v3, v3, v4

    if-gez v3, :cond_9a

    iget v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    invoke-static {v3}, Ljava/lang/Math;->abs(I)I

    move-result v3

    if-le v3, v2, :cond_91

    iget v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    iget v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    mul-int v3, v3, v4

    if-gez v3, :cond_8b

    :goto_88
    iget v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    goto :goto_6d

    :cond_8b
    iget v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    iget v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    add-int/2addr v3, v4

    goto :goto_6d

    :cond_91
    iget v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v3, :cond_97

    const/4 v3, 0x1

    goto :goto_6d

    :cond_97
    iget v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    goto :goto_6d

    :cond_9a
    iget v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-nez v3, :cond_aa

    iget v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    if-gez v3, :cond_a6

    iget v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    sub-int/2addr v3, v2

    goto :goto_6d

    :cond_a6
    iget v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt:I

    add-int/2addr v3, v2

    goto :goto_6d

    :cond_aa
    iget v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    iget v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    mul-int v3, v3, v4

    if-gez v3, :cond_8b

    goto :goto_88

    :goto_b3
    iget-object v3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iget-object v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-virtual {p1, v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->isEvenOddAltFillType(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    move-result v3

    if-eqz v3, :cond_cf

    :goto_bd
    if-eq v0, p1, :cond_db

    iget v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    if-eqz v3, :cond_cc

    iget v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    if-nez v3, :cond_c9

    const/4 v3, 0x1

    goto :goto_ca

    :cond_c9
    const/4 v3, 0x0

    :goto_ca
    iput v3, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    :cond_cc
    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_bd

    :cond_cf
    :goto_cf
    if-eq v0, p1, :cond_db

    iget v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    iget v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    add-int/2addr v1, v2

    iput v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windCnt2:I

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInAEL:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_cf

    :cond_db
    return-void
.end method


# virtual methods
.method public execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/Paths;)Z
    .registers 4

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->EVEN_ODD:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-virtual {p0, p1, p2, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    move-result p1

    return p1
.end method

.method public execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z
    .registers 4

    invoke-virtual {p0, p1, p2, p3, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    move-result p1

    return p1
.end method

.method public execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z
    .registers 6

    monitor-enter p0

    :try_start_1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->hasOpenPaths:Z

    if-nez v0, :cond_28

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->clear()V

    iput-object p3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iput-object p4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    const/4 p1, 0x0

    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->usingPolyTree:Z
    :try_end_11
    .catchall {:try_start_1 .. :try_end_11} :catchall_30

    :try_start_11
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->executeInternal()Z

    move-result p1

    if-eqz p1, :cond_1a

    invoke-direct {p0, p2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->buildResult(Lcom/itextpdf/text/pdf/parser/clipper/Paths;)V
    :try_end_1a
    .catchall {:try_start_11 .. :try_end_1a} :catchall_21

    :cond_1a
    :try_start_1a
    iget-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {p2}, Ljava/util/List;->clear()V

    monitor-exit p0

    return p1

    :catchall_21
    move-exception p1

    iget-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {p2}, Ljava/util/List;->clear()V

    throw p1

    :cond_28
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Error: PolyTree struct is needed for open path clipping."

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    :catchall_30
    move-exception p1

    monitor-exit p0
    :try_end_32
    .catchall {:try_start_1a .. :try_end_32} :catchall_30

    throw p1
.end method

.method public execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;)Z
    .registers 4

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;->EVEN_ODD:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    invoke-virtual {p0, p1, p2, v0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    move-result p1

    return p1
.end method

.method public execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z
    .registers 4

    invoke-virtual {p0, p1, p2, p3, p3}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z

    move-result p1

    return p1
.end method

.method public execute(Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;)Z
    .registers 5

    monitor-enter p0

    :try_start_1
    iput-object p3, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->subjFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iput-object p4, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipFillType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyFillType;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->clipType:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$ClipType;

    const/4 p1, 0x1

    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->usingPolyTree:Z
    :try_end_a
    .catchall {:try_start_1 .. :try_end_a} :catchall_21

    :try_start_a
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->executeInternal()Z

    move-result p1

    if-eqz p1, :cond_13

    invoke-direct {p0, p2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->buildResult2(Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;)V
    :try_end_13
    .catchall {:try_start_a .. :try_end_13} :catchall_1a

    :cond_13
    :try_start_13
    iget-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {p2}, Ljava/util/List;->clear()V

    monitor-exit p0

    return p1

    :catchall_1a
    move-exception p1

    iget-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->polyOuts:Ljava/util/List;

    invoke-interface {p2}, Ljava/util/List;->clear()V

    throw p1

    :catchall_21
    move-exception p1

    monitor-exit p0
    :try_end_23
    .catchall {:try_start_13 .. :try_end_23} :catchall_21

    throw p1
.end method

.method protected reset()V
    .registers 4

    invoke-super {p0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->reset()V

    const/4 v0, 0x0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->scanbeam:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->maxima:Lcom/itextpdf/text/pdf/parser/clipper/Path$Maxima;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->activeEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->sortedEdges:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    :goto_e
    if-eqz v0, :cond_18

    iget-wide v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->y:J

    invoke-direct {p0, v1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/DefaultClipper;->insertScanbeam(J)V

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    goto :goto_e

    :cond_18
    return-void
.end method
