.class public abstract Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;
.super Ljava/lang/Object;

# interfaces
.implements Lcom/itextpdf/text/pdf/parser/clipper/Clipper;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$Scanbeam;,
        Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;
    }
.end annotation


# static fields
.field private static final HI_RANGE:J = 0x3fffffffffffffffL

.field private static final LOGGER:Ljava/util/logging/Logger;

.field private static final LOW_RANGE:J = 0x3fffffffL


# instance fields
.field protected currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

.field private final edges:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Ljava/util/List<",
            "Lcom/itextpdf/text/pdf/parser/clipper/Edge;",
            ">;>;"
        }
    .end annotation
.end field

.field protected hasOpenPaths:Z

.field protected minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

.field protected final preserveCollinear:Z

.field protected useFullRange:Z


# direct methods
.method static constructor <clinit>()V
    .registers 1

    const-class v0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper;

    invoke-virtual {v0}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/util/logging/Logger;->getLogger(Ljava/lang/String;)Ljava/util/logging/Logger;

    move-result-object v0

    sput-object v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->LOGGER:Ljava/util/logging/Logger;

    return-void
.end method

.method protected constructor <init>(Z)V
    .registers 2

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->preserveCollinear:Z

    const/4 p1, 0x0

    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    const/4 p1, 0x0

    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->hasOpenPaths:Z

    new-instance p1, Ljava/util/ArrayList;

    invoke-direct {p1}, Ljava/util/ArrayList;-><init>()V

    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->edges:Ljava/util/List;

    return-void
.end method

.method private disposeLocalMinimaList()V
    .registers 3

    :goto_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    const/4 v1, 0x0

    if-eqz v0, :cond_e

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iput-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    goto :goto_0

    :cond_e
    iput-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    return-void
.end method

.method private static initEdge(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V
    .registers 4

    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    new-instance p1, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-direct {p1, p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->setCurrent(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    const/4 p1, -0x1

    iput p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    return-void
.end method

.method private static initEdge2(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;)V
    .registers 6

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v0

    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v2

    cmp-long v0, v0, v2

    if-ltz v0, :cond_31

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->setBot(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->setTop(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    goto :goto_4b

    :cond_31
    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->setTop(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->setBot(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :goto_4b
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->updateDeltaX()V

    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->polyTyp:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    return-void
.end method

.method private insertLocalMinima(Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;)V
    .registers 7

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    if-nez v0, :cond_7

    :goto_4
    iput-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    goto :goto_2f

    :cond_7
    iget-wide v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->y:J

    iget-object v2, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iget-wide v2, v2, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->y:J

    cmp-long v0, v0, v2

    if-ltz v0, :cond_16

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iput-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    goto :goto_4

    :cond_16
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    :goto_18
    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    if-eqz v1, :cond_29

    iget-wide v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->y:J

    iget-object v3, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iget-wide v3, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->y:J

    cmp-long v1, v1, v3

    if-gez v1, :cond_29

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    goto :goto_18

    :cond_29
    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iput-object v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iput-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    :goto_2f
    return-void
.end method

.method protected static parseFirstLeft(Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;)Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;
    .registers 2

    :goto_0
    if-eqz p0, :cond_b

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->getPoints()Lcom/itextpdf/text/pdf/parser/clipper/Path$OutPt;

    move-result-object v0

    if-nez v0, :cond_b

    iget-object p0, p0, Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;->firstLeft:Lcom/itextpdf/text/pdf/parser/clipper/Path$OutRec;

    goto :goto_0

    :cond_b
    return-object p0
.end method

.method private processBound(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Lcom/itextpdf/text/pdf/parser/clipper/Edge;
    .registers 11

    iget v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    const/4 v1, -0x2

    const-wide v2, -0x381006cc38732053L

    if-ne v0, v1, :cond_88

    if-eqz p2, :cond_31

    move-object v0, p1

    :goto_d
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v6

    cmp-long v1, v4, v6

    if-nez v1, :cond_26

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_d

    :cond_26
    :goto_26
    if-eq v0, p1, :cond_56

    iget-wide v4, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v1, v4, v2

    if-nez v1, :cond_56

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_26

    :cond_31
    move-object v0, p1

    :goto_32
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v6

    cmp-long v1, v4, v6

    if-nez v1, :cond_4b

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_32

    :cond_4b
    :goto_4b
    if-eq v0, p1, :cond_56

    iget-wide v4, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v1, v4, v2

    if-nez v1, :cond_56

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_4b

    :cond_56
    if-ne v0, p1, :cond_60

    if-eqz p2, :cond_5d

    iget-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_87

    :cond_5d
    iget-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_87

    :cond_60
    if-eqz p2, :cond_65

    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_67

    :cond_65
    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_67
    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    invoke-direct {v0, p0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;)V

    const/4 v1, 0x0

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v2

    iput-wide v2, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->y:J

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v1, 0x0

    iput v1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->processBound(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object p1

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->insertLocalMinima(Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;)V

    :goto_87
    return-object p1

    :cond_88
    iget-wide v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v0, v4, v2

    if-nez v0, :cond_db

    if-eqz p2, :cond_93

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_95

    :cond_93
    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_95
    iget-wide v4, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v4, v4, v2

    if-nez v4, :cond_c4

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v6

    cmp-long v4, v4, v6

    if-eqz v4, :cond_db

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v6

    cmp-long v0, v4, v6

    if-eqz v0, :cond_db

    goto :goto_d8

    :cond_c4
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v6

    cmp-long v0, v4, v6

    if-eqz v0, :cond_db

    :goto_d8
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->reverseHorizontal()V

    :cond_db
    if-eqz p2, :cond_180

    move-object p2, p1

    :goto_de
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v6

    cmp-long v0, v4, v6

    if-nez v0, :cond_fd

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-eq v0, v1, :cond_fd

    iget-object p2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_de

    :cond_fd
    iget-wide v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v0, v4, v2

    if-nez v0, :cond_12f

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-eq v0, v1, :cond_12f

    move-object v0, p2

    :goto_10a
    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-wide v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v1, v4, v2

    if-nez v1, :cond_115

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_10a

    :cond_115
    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v6

    cmp-long v1, v4, v6

    if-lez v1, :cond_12f

    iget-object p2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_12f
    move-object v0, p2

    move-object p2, p1

    :goto_131
    if-eq p2, v0, :cond_15b

    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-wide v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v1, v4, v2

    if-nez v1, :cond_158

    if-eq p2, p1, :cond_158

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v6

    cmp-long v1, v4, v6

    if-eqz v1, :cond_158

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->reverseHorizontal()V

    :cond_158
    iget-object p2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_131

    :cond_15b
    iget-wide v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v1, v4, v2

    if-nez v1, :cond_17c

    if-eq p2, p1, :cond_17c

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    iget-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    cmp-long p1, v1, v3

    if-eqz p1, :cond_17c

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->reverseHorizontal()V

    :cond_17c
    iget-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto/16 :goto_239

    :cond_180
    move-object p2, p1

    :goto_181
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v6

    cmp-long v0, v4, v6

    if-nez v0, :cond_1a0

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-eq v0, v1, :cond_1a0

    iget-object p2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_181

    :cond_1a0
    iget-wide v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v0, v4, v2

    if-nez v0, :cond_1ea

    iget-object v0, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-eq v0, v1, :cond_1ea

    move-object v0, p2

    :goto_1ad
    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-wide v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v1, v4, v2

    if-nez v1, :cond_1b8

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_1ad

    :cond_1b8
    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v6

    cmp-long v1, v4, v6

    if-eqz v1, :cond_1e8

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v6

    cmp-long v1, v4, v6

    if-lez v1, :cond_1ea

    :cond_1e8
    iget-object p2, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_1ea
    move-object v0, p2

    move-object p2, p1

    :goto_1ec
    if-eq p2, v0, :cond_216

    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-wide v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v1, v4, v2

    if-nez v1, :cond_213

    if-eq p2, p1, :cond_213

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    iget-object v1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v6

    cmp-long v1, v4, v6

    if-eqz v1, :cond_213

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->reverseHorizontal()V

    :cond_213
    iget-object p2, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_1ec

    :cond_216
    iget-wide v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpl-double v1, v4, v2

    if-nez v1, :cond_237

    if-eq p2, p1, :cond_237

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v1

    iget-object p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v3

    cmp-long p1, v1, v3

    if-eqz p1, :cond_237

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->reverseHorizontal()V

    :cond_237
    iget-object p1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :goto_239
    return-object p1
.end method

.method private static rangeTest(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z
    .registers 6

    if-eqz p1, :cond_32

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    const-wide v2, 0x3fffffffffffffffL

    cmp-long v0, v0, v2

    if-gtz v0, :cond_2a

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v0

    cmp-long v0, v0, v2

    if-gtz v0, :cond_2a

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    neg-long v0, v0

    cmp-long v0, v0, v2

    if-gtz v0, :cond_2a

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v0

    neg-long v0, v0

    cmp-long p0, v0, v2

    if-gtz p0, :cond_2a

    goto :goto_58

    :cond_2a
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "Coordinate outside allowed range"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_32
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    const-wide/32 v2, 0x3fffffff

    cmp-long v0, v0, v2

    if-gtz v0, :cond_59

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v0

    cmp-long v0, v0, v2

    if-gtz v0, :cond_59

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v0

    neg-long v0, v0

    cmp-long v0, v0, v2

    if-gtz v0, :cond_59

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v0

    neg-long v0, v0

    cmp-long v0, v0, v2

    if-lez v0, :cond_58

    goto :goto_59

    :cond_58
    :goto_58
    return p1

    :cond_59
    :goto_59
    const/4 p1, 0x1

    invoke-static {p0, p1}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->rangeTest(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z

    move-result p0

    return p0
.end method

.method private static removeEdge(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)Lcom/itextpdf/text/pdf/parser/clipper/Edge;
    .registers 3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v1, 0x0

    iput-object v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    return-object v0
.end method


# virtual methods
.method public addPath(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;Z)Z
    .registers 14

    if-nez p3, :cond_f

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;->CLIP:Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;

    if-eq p2, v0, :cond_7

    goto :goto_f

    :cond_7
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "AddPath: Open paths must be subject."

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_f
    :goto_f
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->size()I

    move-result v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    const/4 v2, 0x0

    if-eqz p3, :cond_2d

    :goto_18
    if-lez v0, :cond_2d

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2d

    add-int/lit8 v0, v0, -0x1

    goto :goto_18

    :cond_2d
    :goto_2d
    if-lez v0, :cond_44

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    add-int/lit8 v4, v0, -0x1

    invoke-virtual {p1, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_44

    add-int/lit8 v0, v0, -0x1

    goto :goto_2d

    :cond_44
    if-eqz p3, :cond_49

    const/4 v3, 0x2

    if-lt v0, v3, :cond_4d

    :cond_49
    if-nez p3, :cond_4e

    if-ge v0, v1, :cond_4e

    :cond_4d
    return v2

    :cond_4e
    new-instance v3, Ljava/util/ArrayList;

    add-int/lit8 v4, v0, 0x1

    invoke-direct {v3, v4}, Ljava/util/ArrayList;-><init>(I)V

    const/4 v4, 0x0

    :goto_56
    if-gt v4, v0, :cond_63

    new-instance v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-direct {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;-><init>()V

    invoke-interface {v3, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    add-int/lit8 v4, v4, 0x1

    goto :goto_56

    :cond_63
    invoke-interface {v3, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    new-instance v5, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-direct {v5, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->setCurrent(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    iget-boolean v5, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->useFullRange:Z

    invoke-static {v4, v5}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->rangeTest(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z

    move-result v4

    iput-boolean v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->useFullRange:Z

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    iget-boolean v5, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->useFullRange:Z

    invoke-static {v4, v5}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->rangeTest(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z

    move-result v4

    iput-boolean v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->useFullRange:Z

    invoke-interface {v3, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-interface {v3, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-interface {v3, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-static {v4, v5, v6, v7}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->initEdge(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-interface {v3, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-interface {v3, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    add-int/lit8 v6, v0, -0x1

    invoke-interface {v3, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-static {v4, v5, v7, v0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->initEdge(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    :goto_cb
    if-lt v6, v1, :cond_fd

    invoke-virtual {p1, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    iget-boolean v4, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->useFullRange:Z

    invoke-static {v0, v4}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->rangeTest(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z

    move-result v0

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->useFullRange:Z

    invoke-interface {v3, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    add-int/lit8 v4, v6, 0x1

    invoke-interface {v3, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    add-int/lit8 v5, v6, -0x1

    invoke-interface {v3, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {p1, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-static {v0, v4, v5, v7}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->initEdge(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    add-int/lit8 v6, v6, -0x1

    goto :goto_cb

    :cond_fd
    invoke-interface {v3, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-object v0, p1

    move-object v4, v0

    :cond_105
    :goto_105
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    iget-object v6, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_12e

    if-nez p3, :cond_11f

    iget-object v5, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v5, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_12e

    :cond_11f
    iget-object v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne p1, v4, :cond_124

    goto :goto_180

    :cond_124
    if-ne p1, v0, :cond_128

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_128
    invoke-static {p1}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->removeEdge(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object v4

    :goto_12c
    move-object p1, v4

    goto :goto_105

    :cond_12e
    iget-object v5, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v6, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v5, v6, :cond_135

    goto :goto_180

    :cond_135
    if-eqz p3, :cond_176

    iget-object v5, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    iget-object v7, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v7

    iget-boolean v8, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->useFullRange:Z

    invoke-static {v5, v6, v7, v8}, Lcom/itextpdf/text/pdf/parser/clipper/Point;->slopesEqual(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Z)Z

    move-result v5

    if-eqz v5, :cond_176

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->isPreserveCollinear()Z

    move-result v5

    if-eqz v5, :cond_16b

    iget-object v5, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v5

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    iget-object v7, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v7

    invoke-static {v5, v6, v7}, Lcom/itextpdf/text/pdf/parser/clipper/Point;->isPt2BetweenPt1AndPt3(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)Z

    move-result v5

    if-nez v5, :cond_176

    :cond_16b
    if-ne p1, v0, :cond_16f

    iget-object v0, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_16f
    invoke-static {p1}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->removeEdge(Lcom/itextpdf/text/pdf/parser/clipper/Edge;)Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object p1

    iget-object v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_12c

    :cond_176
    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eq p1, v4, :cond_180

    if-nez p3, :cond_105

    iget-object v5, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v5, v0, :cond_105

    :cond_180
    :goto_180
    if-nez p3, :cond_186

    iget-object v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eq p1, v4, :cond_18e

    :cond_186
    if-eqz p3, :cond_18f

    iget-object v4, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object p1, p1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v4, p1, :cond_18f

    :cond_18e
    return v2

    :cond_18f
    const/4 p1, -0x2

    if-nez p3, :cond_198

    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->hasOpenPaths:Z

    iget-object v4, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput p1, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    :cond_198
    move-object v4, v0

    const/4 v5, 0x1

    :cond_19a
    invoke-static {v4, p2}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->initEdge2(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;)V

    iget-object v4, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v5, :cond_1b6

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v6

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getCurrent()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v8

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v8

    cmp-long v6, v6, v8

    if-eqz v6, :cond_1b6

    const/4 v5, 0x0

    :cond_1b6
    if-ne v4, v0, :cond_19a

    const/4 v6, 0x0

    if-eqz v5, :cond_210

    if-eqz p3, :cond_1be

    return v2

    :cond_1be
    iget-object p2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput p1, p2, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    new-instance p2, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    invoke-direct {p2, p0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;)V

    iput-object v6, p2, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v7

    iput-wide v7, p2, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->y:J

    iput-object v6, p2, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v4, p2, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object p3, p2, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput-object v0, p3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iget-object p3, p2, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput v2, p3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    :goto_1e1
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    iget-object p3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p3

    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v7

    cmp-long p3, v5, v7

    if-eqz p3, :cond_1fa

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->reverseHorizontal()V

    :cond_1fa
    iget-object p3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget p3, p3, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ne p3, p1, :cond_209

    invoke-direct {p0, p2}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->insertLocalMinima(Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;)V

    iget-object p1, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->edges:Ljava/util/List;

    invoke-interface {p1, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    return v1

    :cond_209
    iget-object p3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object p3, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->nextInLML:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v4, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_1e1

    :cond_210
    iget-object p2, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->edges:Ljava/util/List;

    invoke-interface {p2, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    iget-object p2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object p2

    iget-object v0, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getTop()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v0

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_229

    iget-object v4, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_229
    move-object p2, v6

    :cond_22a
    :goto_22a
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->findNextLocMin()Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object v0

    if-ne v0, p2, :cond_231

    return v1

    :cond_231
    if-nez p2, :cond_234

    move-object p2, v0

    :cond_234
    new-instance v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    invoke-direct {v3, p0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;)V

    iput-object v6, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    iput-wide v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->y:J

    iget-wide v4, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    iget-object v7, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-wide v7, v7, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->deltaX:D

    cmpg-double v4, v4, v7

    if-gez v4, :cond_257

    iget-object v4, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v0, 0x0

    goto :goto_25e

    :cond_257
    iput-object v0, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->prev:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput-object v0, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v0, 0x1

    :goto_25e
    iget-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    sget-object v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput-object v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iget-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    sget-object v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput-object v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    if-nez p3, :cond_271

    iget-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput v2, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    goto :goto_283

    :cond_271
    iget-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v4, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->next:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v5, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-ne v4, v5, :cond_27f

    iget-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v5, -0x1

    iput v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    goto :goto_283

    :cond_27f
    iget-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iput v1, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    :goto_283
    iget-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget-object v5, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v5, v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    neg-int v5, v5

    iput v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->windDelta:I

    iget-object v4, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    invoke-direct {p0, v4, v0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->processBound(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object v4

    iget v5, v4, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ne v5, p1, :cond_29a

    invoke-direct {p0, v4, v0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->processBound(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object v4

    :cond_29a
    iget-object v5, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    xor-int/lit8 v7, v0, 0x1

    invoke-direct {p0, v5, v7}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->processBound(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object v5

    iget v7, v5, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ne v7, p1, :cond_2ac

    xor-int/lit8 v7, v0, 0x1

    invoke-direct {p0, v5, v7}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->processBound(Lcom/itextpdf/text/pdf/parser/clipper/Edge;Z)Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    move-result-object v5

    :cond_2ac
    iget-object v7, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v7, v7, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ne v7, p1, :cond_2b5

    iput-object v6, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    goto :goto_2bd

    :cond_2b5
    iget-object v7, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    iget v7, v7, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    if-ne v7, p1, :cond_2bd

    iput-object v6, v3, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    :cond_2bd
    :goto_2bd
    invoke-direct {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->insertLocalMinima(Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;)V

    if-nez v0, :cond_22a

    move-object v4, v5

    goto/16 :goto_22a
.end method

.method public addPaths(Lcom/itextpdf/text/pdf/parser/clipper/Paths;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;Z)Z
    .registers 7

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_2
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->size()I

    move-result v2

    if-ge v0, v2, :cond_18

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {p0, v2, p2, p3}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->addPath(Lcom/itextpdf/text/pdf/parser/clipper/Path;Lcom/itextpdf/text/pdf/parser/clipper/Clipper$PolyType;Z)Z

    move-result v2

    if-eqz v2, :cond_15

    const/4 v1, 0x1

    :cond_15
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    :cond_18
    return v1
.end method

.method public clear()V
    .registers 2

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->disposeLocalMinimaList()V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->edges:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->clear()V

    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->useFullRange:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->hasOpenPaths:Z

    return-void
.end method

.method public isPreserveCollinear()Z
    .registers 2

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->preserveCollinear:Z

    return v0
.end method

.method protected popLocalMinima()V
    .registers 4

    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->LOGGER:Ljava/util/logging/Logger;

    const-class v1, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    const-string v2, "popLocalMinima"

    invoke-virtual {v0, v1, v2}, Ljava/util/logging/Logger;->entering(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    if-nez v0, :cond_12

    return-void

    :cond_12
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    return-void
.end method

.method protected reset()V
    .registers 6

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->currentLM:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    if-nez v0, :cond_9

    return-void

    :cond_9
    iget-object v0, p0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase;->minimaList:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    :goto_b
    if-eqz v0, :cond_3d

    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->leftBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    const/4 v2, -0x1

    if-eqz v1, :cond_24

    new-instance v3, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->setCurrent(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    sget-object v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->LEFT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    :cond_24
    iget-object v1, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->rightBound:Lcom/itextpdf/text/pdf/parser/clipper/Edge;

    if-eqz v1, :cond_3a

    new-instance v3, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->getBot()Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    move-result-object v4

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;-><init>(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->setCurrent(Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;)V

    sget-object v3, Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;->RIGHT:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput-object v3, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->side:Lcom/itextpdf/text/pdf/parser/clipper/Edge$Side;

    iput v2, v1, Lcom/itextpdf/text/pdf/parser/clipper/Edge;->outIdx:I

    :cond_3a
    iget-object v0, v0, Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;->next:Lcom/itextpdf/text/pdf/parser/clipper/ClipperBase$LocalMinima;

    goto :goto_b

    :cond_3d
    return-void
.end method
