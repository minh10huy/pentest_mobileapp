.class public Lc/a/a/b/c;
.super Ljava/lang/Object;

# interfaces
.implements Lc/a/a/b/b;


# instance fields
.field private a:Lc/a/a/b/b/b;

.field private b:[B


# direct methods
.method public constructor <init>([CI)V
    .registers 4

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    if-eqz p1, :cond_19

    array-length v0, p1

    if-lez v0, :cond_19

    new-instance v0, Lc/a/a/b/b/b;

    invoke-direct {v0}, Lc/a/a/b/b/b;-><init>()V

    iput-object v0, p0, Lc/a/a/b/c;->a:Lc/a/a/b/b/b;

    const/16 v0, 0xc

    new-array v0, v0, [B

    iput-object v0, p0, Lc/a/a/b/c;->b:[B

    invoke-direct {p0, p1, p2}, Lc/a/a/b/c;->a([CI)V

    return-void

    :cond_19
    new-instance p1, Lc/a/a/c/a;

    const-string p2, "input password is null or empty in standard encrpyter constructor"

    invoke-direct {p1, p2}, Lc/a/a/c/a;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method private a([CI)V
    .registers 6

    if-eqz p1, :cond_3c

    array-length v0, p1

    if-lez v0, :cond_3c

    iget-object v0, p0, Lc/a/a/b/c;->a:Lc/a/a/b/b/b;

    invoke-virtual {v0, p1}, Lc/a/a/b/b/b;->a([C)V

    const/16 v0, 0xc

    invoke-virtual {p0, v0}, Lc/a/a/b/c;->a(I)[B

    move-result-object v1

    iput-object v1, p0, Lc/a/a/b/c;->b:[B

    iget-object v1, p0, Lc/a/a/b/c;->a:Lc/a/a/b/b/b;

    invoke-virtual {v1, p1}, Lc/a/a/b/b/b;->a([C)V

    iget-object p1, p0, Lc/a/a/b/c;->b:[B

    const/16 v1, 0xb

    ushr-int/lit8 v2, p2, 0x18

    int-to-byte v2, v2

    aput-byte v2, p1, v1

    iget-object p1, p0, Lc/a/a/b/c;->b:[B

    const/16 v1, 0xa

    ushr-int/lit8 p2, p2, 0x10

    int-to-byte p2, p2

    aput-byte p2, p1, v1

    iget-object p1, p0, Lc/a/a/b/c;->b:[B

    array-length p1, p1

    if-lt p1, v0, :cond_34

    iget-object p1, p0, Lc/a/a/b/c;->b:[B

    invoke-virtual {p0, p1}, Lc/a/a/b/c;->a([B)I

    return-void

    :cond_34
    new-instance p1, Lc/a/a/c/a;

    const-string p2, "invalid header bytes generated, cannot perform standard encryption"

    invoke-direct {p1, p2}, Lc/a/a/c/a;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_3c
    new-instance p1, Lc/a/a/c/a;

    const-string p2, "input password is null or empty, cannot initialize standard encrypter"

    invoke-direct {p1, p2}, Lc/a/a/c/a;-><init>(Ljava/lang/String;)V

    throw p1
.end method


# virtual methods
.method protected a(B)B
    .registers 4

    iget-object v0, p0, Lc/a/a/b/c;->a:Lc/a/a/b/b/b;

    invoke-virtual {v0}, Lc/a/a/b/b/b;->a()B

    move-result v0

    and-int/lit16 v0, v0, 0xff

    xor-int/2addr v0, p1

    int-to-byte v0, v0

    iget-object v1, p0, Lc/a/a/b/c;->a:Lc/a/a/b/b/b;

    invoke-virtual {v1, p1}, Lc/a/a/b/b/b;->a(B)V

    return v0
.end method

.method public a([B)I
    .registers 4

    if-eqz p1, :cond_9

    const/4 v0, 0x0

    array-length v1, p1

    invoke-virtual {p0, p1, v0, v1}, Lc/a/a/b/c;->a([BII)I

    move-result p1

    return p1

    :cond_9
    new-instance p1, Ljava/lang/NullPointerException;

    invoke-direct {p1}, Ljava/lang/NullPointerException;-><init>()V

    throw p1
.end method

.method public a([BII)I
    .registers 6

    if-ltz p3, :cond_1a

    move v0, p2

    :goto_3
    add-int v1, p2, p3

    if-lt v0, v1, :cond_8

    return p3

    :cond_8
    :try_start_8
    aget-byte v1, p1, v0

    invoke-virtual {p0, v1}, Lc/a/a/b/c;->a(B)B

    move-result v1

    aput-byte v1, p1, v0
    :try_end_10
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_10} :catch_13

    add-int/lit8 v0, v0, 0x1

    goto :goto_3

    :catch_13
    move-exception p1

    new-instance p2, Lc/a/a/c/a;

    invoke-direct {p2, p1}, Lc/a/a/c/a;-><init>(Ljava/lang/Throwable;)V

    throw p2

    :cond_1a
    new-instance p1, Lc/a/a/c/a;

    const-string p2, "invalid length specified to decrpyt data"

    invoke-direct {p1, p2}, Lc/a/a/c/a;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public a()[B
    .registers 2

    iget-object v0, p0, Lc/a/a/b/c;->b:[B

    return-object v0
.end method

.method protected a(I)[B
    .registers 5

    if-lez p1, :cond_1e

    new-array p1, p1, [B

    new-instance v0, Ljava/util/Random;

    invoke-direct {v0}, Ljava/util/Random;-><init>()V

    const/4 v1, 0x0

    :goto_a
    array-length v2, p1

    if-lt v1, v2, :cond_e

    return-object p1

    :cond_e
    const/16 v2, 0x100

    invoke-virtual {v0, v2}, Ljava/util/Random;->nextInt(I)I

    move-result v2

    int-to-byte v2, v2

    invoke-virtual {p0, v2}, Lc/a/a/b/c;->a(B)B

    move-result v2

    aput-byte v2, p1, v1

    add-int/lit8 v1, v1, 0x1

    goto :goto_a

    :cond_1e
    new-instance p1, Lc/a/a/c/a;

    const-string v0, "size is either 0 or less than 0, cannot generate header for standard encryptor"

    invoke-direct {p1, v0}, Lc/a/a/c/a;-><init>(Ljava/lang/String;)V

    throw p1
.end method
