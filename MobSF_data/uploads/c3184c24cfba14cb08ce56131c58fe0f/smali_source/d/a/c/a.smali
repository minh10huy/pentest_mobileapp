.class public final Ld/a/c/a;
.super Ljava/lang/Object;

# interfaces
.implements Ld/u;


# instance fields
.field private final a:Ld/m;


# direct methods
.method public constructor <init>(Ld/m;)V
    .registers 2

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p1, p0, Ld/a/c/a;->a:Ld/m;

    return-void
.end method

.method private a(Ljava/util/List;)Ljava/lang/String;
    .registers 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Ld/l;",
            ">;)",
            "Ljava/lang/String;"
        }
    .end annotation

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v1

    const/4 v2, 0x0

    :goto_a
    if-ge v2, v1, :cond_2f

    if-lez v2, :cond_13

    const-string v3, "; "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_13
    invoke-interface {p1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ld/l;

    invoke-virtual {v3}, Ld/l;->a()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v4, 0x3d

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ld/l;->b()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    add-int/lit8 v2, v2, 0x1

    goto :goto_a

    :cond_2f
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method


# virtual methods
.method public a(Ld/u$a;)Ld/ac;
    .registers 9

    invoke-interface {p1}, Ld/u$a;->a()Ld/aa;

    move-result-object v0

    invoke-virtual {v0}, Ld/aa;->e()Ld/aa$a;

    move-result-object v1

    invoke-virtual {v0}, Ld/aa;->d()Ld/ab;

    move-result-object v2

    const-wide/16 v3, -0x1

    if-eqz v2, :cond_40

    invoke-virtual {v2}, Ld/ab;->a()Ld/v;

    move-result-object v5

    if-eqz v5, :cond_1f

    const-string v6, "Content-Type"

    invoke-virtual {v5}, Ld/v;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v1, v6, v5}, Ld/aa$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/aa$a;

    :cond_1f
    invoke-virtual {v2}, Ld/ab;->b()J

    move-result-wide v5

    cmp-long v2, v5, v3

    if-eqz v2, :cond_36

    const-string v2, "Content-Length"

    invoke-static {v5, v6}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v1, v2, v5}, Ld/aa$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/aa$a;

    const-string v2, "Transfer-Encoding"

    :goto_32
    invoke-virtual {v1, v2}, Ld/aa$a;->b(Ljava/lang/String;)Ld/aa$a;

    goto :goto_40

    :cond_36
    const-string v2, "Transfer-Encoding"

    const-string v5, "chunked"

    invoke-virtual {v1, v2, v5}, Ld/aa$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/aa$a;

    const-string v2, "Content-Length"

    goto :goto_32

    :cond_40
    :goto_40
    const-string v2, "Host"

    invoke-virtual {v0, v2}, Ld/aa;->a(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    const/4 v5, 0x0

    if-nez v2, :cond_56

    const-string v2, "Host"

    invoke-virtual {v0}, Ld/aa;->a()Ld/t;

    move-result-object v6

    invoke-static {v6, v5}, Ld/a/c;->a(Ld/t;Z)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v1, v2, v6}, Ld/aa$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/aa$a;

    :cond_56
    const-string v2, "Connection"

    invoke-virtual {v0, v2}, Ld/aa;->a(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    if-nez v2, :cond_65

    const-string v2, "Connection"

    const-string v6, "Keep-Alive"

    invoke-virtual {v1, v2, v6}, Ld/aa$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/aa$a;

    :cond_65
    const-string v2, "Accept-Encoding"

    invoke-virtual {v0, v2}, Ld/aa;->a(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    if-nez v2, :cond_7d

    const-string v2, "Range"

    invoke-virtual {v0, v2}, Ld/aa;->a(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    if-nez v2, :cond_7d

    const/4 v5, 0x1

    const-string v2, "Accept-Encoding"

    const-string v6, "gzip"

    invoke-virtual {v1, v2, v6}, Ld/aa$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/aa$a;

    :cond_7d
    iget-object v2, p0, Ld/a/c/a;->a:Ld/m;

    invoke-virtual {v0}, Ld/aa;->a()Ld/t;

    move-result-object v6

    invoke-interface {v2, v6}, Ld/m;->a(Ld/t;)Ljava/util/List;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/List;->isEmpty()Z

    move-result v6

    if-nez v6, :cond_96

    const-string v6, "Cookie"

    invoke-direct {p0, v2}, Ld/a/c/a;->a(Ljava/util/List;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v6, v2}, Ld/aa$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/aa$a;

    :cond_96
    const-string v2, "User-Agent"

    invoke-virtual {v0, v2}, Ld/aa;->a(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    if-nez v2, :cond_a7

    const-string v2, "User-Agent"

    invoke-static {}, Ld/a/d;->a()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v1, v2, v6}, Ld/aa$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/aa$a;

    :cond_a7
    invoke-virtual {v1}, Ld/aa$a;->a()Ld/aa;

    move-result-object v1

    invoke-interface {p1, v1}, Ld/u$a;->a(Ld/aa;)Ld/ac;

    move-result-object p1

    iget-object v1, p0, Ld/a/c/a;->a:Ld/m;

    invoke-virtual {v0}, Ld/aa;->a()Ld/t;

    move-result-object v2

    invoke-virtual {p1}, Ld/ac;->g()Ld/s;

    move-result-object v6

    invoke-static {v1, v2, v6}, Ld/a/c/e;->a(Ld/m;Ld/t;Ld/s;)V

    invoke-virtual {p1}, Ld/ac;->i()Ld/ac$a;

    move-result-object v1

    invoke-virtual {v1, v0}, Ld/ac$a;->a(Ld/aa;)Ld/ac$a;

    move-result-object v0

    if-eqz v5, :cond_114

    const-string v1, "gzip"

    const-string v2, "Content-Encoding"

    invoke-virtual {p1, v2}, Ld/ac;->a(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_114

    invoke-static {p1}, Ld/a/c/e;->d(Ld/ac;)Z

    move-result v1

    if-eqz v1, :cond_114

    new-instance v1, Le/j;

    invoke-virtual {p1}, Ld/ac;->h()Ld/ad;

    move-result-object v2

    invoke-virtual {v2}, Ld/ad;->c()Le/e;

    move-result-object v2

    invoke-direct {v1, v2}, Le/j;-><init>(Le/s;)V

    invoke-virtual {p1}, Ld/ac;->g()Ld/s;

    move-result-object v2

    invoke-virtual {v2}, Ld/s;->b()Ld/s$a;

    move-result-object v2

    const-string v5, "Content-Encoding"

    invoke-virtual {v2, v5}, Ld/s$a;->b(Ljava/lang/String;)Ld/s$a;

    move-result-object v2

    const-string v5, "Content-Length"

    invoke-virtual {v2, v5}, Ld/s$a;->b(Ljava/lang/String;)Ld/s$a;

    move-result-object v2

    invoke-virtual {v2}, Ld/s$a;->a()Ld/s;

    move-result-object v2

    invoke-virtual {v0, v2}, Ld/ac$a;->a(Ld/s;)Ld/ac$a;

    const-string v2, "Content-Type"

    invoke-virtual {p1, v2}, Ld/ac;->a(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    new-instance v2, Ld/a/c/h;

    invoke-static {v1}, Le/l;->a(Le/s;)Le/e;

    move-result-object v1

    invoke-direct {v2, p1, v3, v4, v1}, Ld/a/c/h;-><init>(Ljava/lang/String;JLe/e;)V

    invoke-virtual {v0, v2}, Ld/ac$a;->a(Ld/ad;)Ld/ac$a;

    :cond_114
    invoke-virtual {v0}, Ld/ac$a;->a()Ld/ac;

    move-result-object p1

    return-object p1
.end method
