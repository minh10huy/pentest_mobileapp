.class public final Ld/a/b/c;
.super Ld/a/e/g$b;

# interfaces
.implements Ld/i;


# instance fields
.field public a:Z

.field public b:I

.field public c:I

.field public final d:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Ljava/lang/ref/Reference<",
            "Ld/a/b/g;",
            ">;>;"
        }
    .end annotation
.end field

.field public e:J

.field private final g:Ld/j;

.field private final h:Ld/ae;

.field private i:Ljava/net/Socket;

.field private j:Ljava/net/Socket;

.field private k:Ld/r;

.field private l:Ld/y;

.field private m:Ld/a/e/g;

.field private n:Le/e;

.field private o:Le/d;


# direct methods
.method public constructor <init>(Ld/j;Ld/ae;)V
    .registers 5

    invoke-direct {p0}, Ld/a/e/g$b;-><init>()V

    const/4 v0, 0x1

    iput v0, p0, Ld/a/b/c;->c:I

    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Ld/a/b/c;->d:Ljava/util/List;

    const-wide v0, 0x7fffffffffffffffL

    iput-wide v0, p0, Ld/a/b/c;->e:J

    iput-object p1, p0, Ld/a/b/c;->g:Ld/j;

    iput-object p2, p0, Ld/a/b/c;->h:Ld/ae;

    return-void
.end method

.method private a(IILd/aa;Ld/t;)Ld/aa;
    .registers 11

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "CONNECT "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v1, 0x1

    invoke-static {p4, v1}, Ld/a/c;->a(Ld/t;Z)Ljava/lang/String;

    move-result-object p4

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p4, " HTTP/1.1"

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p4

    :goto_1b
    new-instance v0, Ld/a/d/a;

    iget-object v1, p0, Ld/a/b/c;->n:Le/e;

    iget-object v2, p0, Ld/a/b/c;->o:Le/d;

    const/4 v3, 0x0

    invoke-direct {v0, v3, v3, v1, v2}, Ld/a/d/a;-><init>(Ld/x;Ld/a/b/g;Le/e;Le/d;)V

    iget-object v1, p0, Ld/a/b/c;->n:Le/e;

    invoke-interface {v1}, Le/e;->a()Le/t;

    move-result-object v1

    int-to-long v4, p1

    sget-object v2, Ljava/util/concurrent/TimeUnit;->MILLISECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v1, v4, v5, v2}, Le/t;->a(JLjava/util/concurrent/TimeUnit;)Le/t;

    iget-object v1, p0, Ld/a/b/c;->o:Le/d;

    invoke-interface {v1}, Le/d;->a()Le/t;

    move-result-object v1

    int-to-long v4, p2

    sget-object v2, Ljava/util/concurrent/TimeUnit;->MILLISECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v1, v4, v5, v2}, Le/t;->a(JLjava/util/concurrent/TimeUnit;)Le/t;

    invoke-virtual {p3}, Ld/aa;->c()Ld/s;

    move-result-object v1

    invoke-virtual {v0, v1, p4}, Ld/a/d/a;->a(Ld/s;Ljava/lang/String;)V

    invoke-virtual {v0}, Ld/a/d/a;->b()V

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Ld/a/d/a;->a(Z)Ld/ac$a;

    move-result-object v1

    invoke-virtual {v1, p3}, Ld/ac$a;->a(Ld/aa;)Ld/ac$a;

    move-result-object p3

    invoke-virtual {p3}, Ld/ac$a;->a()Ld/ac;

    move-result-object p3

    invoke-static {p3}, Ld/a/c/e;->a(Ld/ac;)J

    move-result-wide v1

    const-wide/16 v4, -0x1

    cmp-long v4, v1, v4

    if-nez v4, :cond_60

    const-wide/16 v1, 0x0

    :cond_60
    invoke-virtual {v0, v1, v2}, Ld/a/d/a;->b(J)Le/s;

    move-result-object v0

    const v1, 0x7fffffff

    sget-object v2, Ljava/util/concurrent/TimeUnit;->MILLISECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-static {v0, v1, v2}, Ld/a/c;->b(Le/s;ILjava/util/concurrent/TimeUnit;)Z

    invoke-interface {v0}, Le/s;->close()V

    invoke-virtual {p3}, Ld/ac;->c()I

    move-result v0

    const/16 v1, 0xc8

    if-eq v0, v1, :cond_c2

    const/16 v1, 0x197

    if-ne v0, v1, :cond_a7

    iget-object v0, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v0}, Ld/ae;->a()Ld/a;

    move-result-object v0

    invoke-virtual {v0}, Ld/a;->d()Ld/b;

    move-result-object v0

    iget-object v1, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-interface {v0, v1, p3}, Ld/b;->a(Ld/ae;Ld/ac;)Ld/aa;

    move-result-object v0

    if-eqz v0, :cond_9f

    const-string v1, "close"

    const-string v2, "Connection"

    invoke-virtual {p3, v2}, Ld/ac;->a(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p3

    invoke-virtual {v1, p3}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result p3

    if-eqz p3, :cond_9c

    return-object v0

    :cond_9c
    move-object p3, v0

    goto/16 :goto_1b

    :cond_9f
    new-instance p1, Ljava/io/IOException;

    const-string p2, "Failed to authenticate with proxy"

    invoke-direct {p1, p2}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_a7
    new-instance p1, Ljava/io/IOException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Unexpected response code for CONNECT: "

    invoke-virtual {p2, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ld/ac;->c()I

    move-result p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_c2
    iget-object p1, p0, Ld/a/b/c;->n:Le/e;

    invoke-interface {p1}, Le/e;->c()Le/c;

    move-result-object p1

    invoke-virtual {p1}, Le/c;->f()Z

    move-result p1

    if-eqz p1, :cond_db

    iget-object p1, p0, Ld/a/b/c;->o:Le/d;

    invoke-interface {p1}, Le/d;->c()Le/c;

    move-result-object p1

    invoke-virtual {p1}, Le/c;->f()Z

    move-result p1

    if-eqz p1, :cond_db

    return-object v3

    :cond_db
    new-instance p1, Ljava/io/IOException;

    const-string p2, "TLS tunnel buffered too many bytes!"

    invoke-direct {p1, p2}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method private a(IIILd/e;Ld/p;)V
    .registers 12

    invoke-direct {p0}, Ld/a/b/c;->f()Ld/aa;

    move-result-object v0

    invoke-virtual {v0}, Ld/aa;->a()Ld/t;

    move-result-object v1

    const/4 v2, 0x0

    :goto_9
    const/16 v3, 0x15

    if-ge v2, v3, :cond_35

    invoke-direct {p0, p1, p2, p4, p5}, Ld/a/b/c;->a(IILd/e;Ld/p;)V

    invoke-direct {p0, p2, p3, v0, v1}, Ld/a/b/c;->a(IILd/aa;Ld/t;)Ld/aa;

    move-result-object v0

    if-nez v0, :cond_17

    goto :goto_35

    :cond_17
    iget-object v3, p0, Ld/a/b/c;->i:Ljava/net/Socket;

    invoke-static {v3}, Ld/a/c;->a(Ljava/net/Socket;)V

    const/4 v3, 0x0

    iput-object v3, p0, Ld/a/b/c;->i:Ljava/net/Socket;

    iput-object v3, p0, Ld/a/b/c;->o:Le/d;

    iput-object v3, p0, Ld/a/b/c;->n:Le/e;

    iget-object v4, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v4}, Ld/ae;->c()Ljava/net/InetSocketAddress;

    move-result-object v4

    iget-object v5, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v5}, Ld/ae;->b()Ljava/net/Proxy;

    move-result-object v5

    invoke-virtual {p5, p4, v4, v5, v3}, Ld/p;->a(Ld/e;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Ld/y;)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_9

    :cond_35
    :goto_35
    return-void
.end method

.method private a(IILd/e;Ld/p;)V
    .registers 9

    iget-object v0, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v0}, Ld/ae;->b()Ljava/net/Proxy;

    move-result-object v0

    iget-object v1, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->a()Ld/a;

    move-result-object v1

    invoke-virtual {v0}, Ljava/net/Proxy;->type()Ljava/net/Proxy$Type;

    move-result-object v2

    sget-object v3, Ljava/net/Proxy$Type;->DIRECT:Ljava/net/Proxy$Type;

    if-eq v2, v3, :cond_23

    invoke-virtual {v0}, Ljava/net/Proxy;->type()Ljava/net/Proxy$Type;

    move-result-object v2

    sget-object v3, Ljava/net/Proxy$Type;->HTTP:Ljava/net/Proxy$Type;

    if-ne v2, v3, :cond_1d

    goto :goto_23

    :cond_1d
    new-instance v1, Ljava/net/Socket;

    invoke-direct {v1, v0}, Ljava/net/Socket;-><init>(Ljava/net/Proxy;)V

    goto :goto_2b

    :cond_23
    :goto_23
    invoke-virtual {v1}, Ld/a;->c()Ljavax/net/SocketFactory;

    move-result-object v1

    invoke-virtual {v1}, Ljavax/net/SocketFactory;->createSocket()Ljava/net/Socket;

    move-result-object v1

    :goto_2b
    iput-object v1, p0, Ld/a/b/c;->i:Ljava/net/Socket;

    iget-object v1, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->c()Ljava/net/InetSocketAddress;

    move-result-object v1

    invoke-virtual {p4, p3, v1, v0}, Ld/p;->a(Ld/e;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V

    iget-object p3, p0, Ld/a/b/c;->i:Ljava/net/Socket;

    invoke-virtual {p3, p2}, Ljava/net/Socket;->setSoTimeout(I)V

    :try_start_3b
    invoke-static {}, Ld/a/g/f;->c()Ld/a/g/f;

    move-result-object p2

    iget-object p3, p0, Ld/a/b/c;->i:Ljava/net/Socket;

    iget-object p4, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {p4}, Ld/ae;->c()Ljava/net/InetSocketAddress;

    move-result-object p4

    invoke-virtual {p2, p3, p4, p1}, Ld/a/g/f;->a(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V
    :try_end_4a
    .catch Ljava/net/ConnectException; {:try_start_3b .. :try_end_4a} :catch_77

    :try_start_4a
    iget-object p1, p0, Ld/a/b/c;->i:Ljava/net/Socket;

    invoke-static {p1}, Le/l;->b(Ljava/net/Socket;)Le/s;

    move-result-object p1

    invoke-static {p1}, Le/l;->a(Le/s;)Le/e;

    move-result-object p1

    iput-object p1, p0, Ld/a/b/c;->n:Le/e;

    iget-object p1, p0, Ld/a/b/c;->i:Ljava/net/Socket;

    invoke-static {p1}, Le/l;->a(Ljava/net/Socket;)Le/r;

    move-result-object p1

    invoke-static {p1}, Le/l;->a(Le/r;)Le/d;

    move-result-object p1

    iput-object p1, p0, Ld/a/b/c;->o:Le/d;
    :try_end_62
    .catch Ljava/lang/NullPointerException; {:try_start_4a .. :try_end_62} :catch_63

    goto :goto_70

    :catch_63
    move-exception p1

    const-string p2, "throw with null exception"

    invoke-virtual {p1}, Ljava/lang/NullPointerException;->getMessage()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-nez p2, :cond_71

    :goto_70
    return-void

    :cond_71
    new-instance p2, Ljava/io/IOException;

    invoke-direct {p2, p1}, Ljava/io/IOException;-><init>(Ljava/lang/Throwable;)V

    throw p2

    :catch_77
    move-exception p1

    new-instance p2, Ljava/net/ConnectException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Failed to connect to "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p4, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {p4}, Ld/ae;->c()Ljava/net/InetSocketAddress;

    move-result-object p4

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p3

    invoke-direct {p2, p3}, Ljava/net/ConnectException;-><init>(Ljava/lang/String;)V

    invoke-virtual {p2, p1}, Ljava/net/ConnectException;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    throw p2
.end method

.method private a(Ld/a/b/b;)V
    .registers 9

    iget-object v0, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v0}, Ld/ae;->a()Ld/a;

    move-result-object v0

    invoke-virtual {v0}, Ld/a;->i()Ljavax/net/ssl/SSLSocketFactory;

    move-result-object v1

    const/4 v2, 0x0

    :try_start_b
    iget-object v3, p0, Ld/a/b/c;->i:Ljava/net/Socket;

    invoke-virtual {v0}, Ld/a;->a()Ld/t;

    move-result-object v4

    invoke-virtual {v4}, Ld/t;->f()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0}, Ld/a;->a()Ld/t;

    move-result-object v5

    invoke-virtual {v5}, Ld/t;->g()I

    move-result v5

    const/4 v6, 0x1

    invoke-virtual {v1, v3, v4, v5, v6}, Ljavax/net/ssl/SSLSocketFactory;->createSocket(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;

    move-result-object v1

    check-cast v1, Ljavax/net/ssl/SSLSocket;
    :try_end_24
    .catch Ljava/lang/AssertionError; {:try_start_b .. :try_end_24} :catch_118
    .catchall {:try_start_b .. :try_end_24} :catchall_115

    :try_start_24
    invoke-virtual {p1, v1}, Ld/a/b/b;->a(Ljavax/net/ssl/SSLSocket;)Ld/k;

    move-result-object p1

    invoke-virtual {p1}, Ld/k;->d()Z

    move-result v3

    if-eqz v3, :cond_41

    invoke-static {}, Ld/a/g/f;->c()Ld/a/g/f;

    move-result-object v3

    invoke-virtual {v0}, Ld/a;->a()Ld/t;

    move-result-object v4

    invoke-virtual {v4}, Ld/t;->f()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0}, Ld/a;->e()Ljava/util/List;

    move-result-object v5

    invoke-virtual {v3, v1, v4, v5}, Ld/a/g/f;->a(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V

    :cond_41
    invoke-virtual {v1}, Ljavax/net/ssl/SSLSocket;->startHandshake()V

    invoke-virtual {v1}, Ljavax/net/ssl/SSLSocket;->getSession()Ljavax/net/ssl/SSLSession;

    move-result-object v3

    invoke-direct {p0, v3}, Ld/a/b/c;->a(Ljavax/net/ssl/SSLSession;)Z

    move-result v4

    if-eqz v4, :cond_108

    invoke-static {v3}, Ld/r;->a(Ljavax/net/ssl/SSLSession;)Ld/r;

    move-result-object v4

    invoke-virtual {v0}, Ld/a;->j()Ljavax/net/ssl/HostnameVerifier;

    move-result-object v5

    invoke-virtual {v0}, Ld/a;->a()Ld/t;

    move-result-object v6

    invoke-virtual {v6}, Ld/t;->f()Ljava/lang/String;

    move-result-object v6

    invoke-interface {v5, v6, v3}, Ljavax/net/ssl/HostnameVerifier;->verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z

    move-result v3

    if-eqz v3, :cond_b6

    invoke-virtual {v0}, Ld/a;->k()Ld/g;

    move-result-object v3

    invoke-virtual {v0}, Ld/a;->a()Ld/t;

    move-result-object v0

    invoke-virtual {v0}, Ld/t;->f()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4}, Ld/r;->c()Ljava/util/List;

    move-result-object v5

    invoke-virtual {v3, v0, v5}, Ld/g;->a(Ljava/lang/String;Ljava/util/List;)V

    invoke-virtual {p1}, Ld/k;->d()Z

    move-result p1

    if-eqz p1, :cond_85

    invoke-static {}, Ld/a/g/f;->c()Ld/a/g/f;

    move-result-object p1

    invoke-virtual {p1, v1}, Ld/a/g/f;->a(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;

    move-result-object v2

    :cond_85
    iput-object v1, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    iget-object p1, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-static {p1}, Le/l;->b(Ljava/net/Socket;)Le/s;

    move-result-object p1

    invoke-static {p1}, Le/l;->a(Le/s;)Le/e;

    move-result-object p1

    iput-object p1, p0, Ld/a/b/c;->n:Le/e;

    iget-object p1, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-static {p1}, Le/l;->a(Ljava/net/Socket;)Le/r;

    move-result-object p1

    invoke-static {p1}, Le/l;->a(Le/r;)Le/d;

    move-result-object p1

    iput-object p1, p0, Ld/a/b/c;->o:Le/d;

    iput-object v4, p0, Ld/a/b/c;->k:Ld/r;

    if-eqz v2, :cond_a8

    invoke-static {v2}, Ld/y;->a(Ljava/lang/String;)Ld/y;

    move-result-object p1

    goto :goto_aa

    :cond_a8
    sget-object p1, Ld/y;->b:Ld/y;

    :goto_aa
    iput-object p1, p0, Ld/a/b/c;->l:Ld/y;
    :try_end_ac
    .catch Ljava/lang/AssertionError; {:try_start_24 .. :try_end_ac} :catch_112
    .catchall {:try_start_24 .. :try_end_ac} :catchall_110

    if-eqz v1, :cond_b5

    invoke-static {}, Ld/a/g/f;->c()Ld/a/g/f;

    move-result-object p1

    invoke-virtual {p1, v1}, Ld/a/g/f;->b(Ljavax/net/ssl/SSLSocket;)V

    :cond_b5
    return-void

    :cond_b6
    :try_start_b6
    invoke-virtual {v4}, Ld/r;->c()Ljava/util/List;

    move-result-object p1

    const/4 v2, 0x0

    invoke-interface {p1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ljava/security/cert/X509Certificate;

    new-instance v2, Ljavax/net/ssl/SSLPeerUnverifiedException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Hostname "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ld/a;->a()Ld/t;

    move-result-object v0

    invoke-virtual {v0}, Ld/t;->f()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " not verified:\n    certificate: "

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p1}, Ld/g;->a(Ljava/security/cert/Certificate;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\n    DN: "

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/security/cert/X509Certificate;->getSubjectDN()Ljava/security/Principal;

    move-result-object v0

    invoke-interface {v0}, Ljava/security/Principal;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\n    subjectAltNames: "

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p1}, Ld/a/i/d;->a(Ljava/security/cert/X509Certificate;)Ljava/util/List;

    move-result-object p1

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {v2, p1}, Ljavax/net/ssl/SSLPeerUnverifiedException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_108
    new-instance p1, Ljava/io/IOException;

    const-string v0, "a valid ssl session was not established"

    invoke-direct {p1, v0}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw p1
    :try_end_110
    .catch Ljava/lang/AssertionError; {:try_start_b6 .. :try_end_110} :catch_112
    .catchall {:try_start_b6 .. :try_end_110} :catchall_110

    :catchall_110
    move-exception p1

    goto :goto_126

    :catch_112
    move-exception p1

    move-object v2, v1

    goto :goto_119

    :catchall_115
    move-exception p1

    move-object v1, v2

    goto :goto_126

    :catch_118
    move-exception p1

    :goto_119
    :try_start_119
    invoke-static {p1}, Ld/a/c;->a(Ljava/lang/AssertionError;)Z

    move-result v0

    if-eqz v0, :cond_125

    new-instance v0, Ljava/io/IOException;

    invoke-direct {v0, p1}, Ljava/io/IOException;-><init>(Ljava/lang/Throwable;)V

    throw v0

    :cond_125
    throw p1
    :try_end_126
    .catchall {:try_start_119 .. :try_end_126} :catchall_115

    :goto_126
    if-eqz v1, :cond_12f

    invoke-static {}, Ld/a/g/f;->c()Ld/a/g/f;

    move-result-object v0

    invoke-virtual {v0, v1}, Ld/a/g/f;->b(Ljavax/net/ssl/SSLSocket;)V

    :cond_12f
    invoke-static {v1}, Ld/a/c;->a(Ljava/net/Socket;)V

    throw p1
.end method

.method private a(Ld/a/b/b;ILd/e;Ld/p;)V
    .registers 7

    iget-object v0, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v0}, Ld/ae;->a()Ld/a;

    move-result-object v0

    invoke-virtual {v0}, Ld/a;->i()Ljavax/net/ssl/SSLSocketFactory;

    move-result-object v0

    if-nez v0, :cond_15

    sget-object p1, Ld/y;->b:Ld/y;

    iput-object p1, p0, Ld/a/b/c;->l:Ld/y;

    iget-object p1, p0, Ld/a/b/c;->i:Ljava/net/Socket;

    iput-object p1, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    return-void

    :cond_15
    invoke-virtual {p4, p3}, Ld/p;->b(Ld/e;)V

    invoke-direct {p0, p1}, Ld/a/b/c;->a(Ld/a/b/b;)V

    iget-object p1, p0, Ld/a/b/c;->k:Ld/r;

    invoke-virtual {p4, p3, p1}, Ld/p;->a(Ld/e;Ld/r;)V

    iget-object p1, p0, Ld/a/b/c;->l:Ld/y;

    sget-object p3, Ld/y;->d:Ld/y;

    if-ne p1, p3, :cond_5d

    iget-object p1, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    const/4 p3, 0x0

    invoke-virtual {p1, p3}, Ljava/net/Socket;->setSoTimeout(I)V

    new-instance p1, Ld/a/e/g$a;

    const/4 p3, 0x1

    invoke-direct {p1, p3}, Ld/a/e/g$a;-><init>(Z)V

    iget-object p3, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    iget-object p4, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {p4}, Ld/ae;->a()Ld/a;

    move-result-object p4

    invoke-virtual {p4}, Ld/a;->a()Ld/t;

    move-result-object p4

    invoke-virtual {p4}, Ld/t;->f()Ljava/lang/String;

    move-result-object p4

    iget-object v0, p0, Ld/a/b/c;->n:Le/e;

    iget-object v1, p0, Ld/a/b/c;->o:Le/d;

    invoke-virtual {p1, p3, p4, v0, v1}, Ld/a/e/g$a;->a(Ljava/net/Socket;Ljava/lang/String;Le/e;Le/d;)Ld/a/e/g$a;

    move-result-object p1

    invoke-virtual {p1, p0}, Ld/a/e/g$a;->a(Ld/a/e/g$b;)Ld/a/e/g$a;

    move-result-object p1

    invoke-virtual {p1, p2}, Ld/a/e/g$a;->a(I)Ld/a/e/g$a;

    move-result-object p1

    invoke-virtual {p1}, Ld/a/e/g$a;->a()Ld/a/e/g;

    move-result-object p1

    iput-object p1, p0, Ld/a/b/c;->m:Ld/a/e/g;

    iget-object p1, p0, Ld/a/b/c;->m:Ld/a/e/g;

    invoke-virtual {p1}, Ld/a/e/g;->c()V

    :cond_5d
    return-void
.end method

.method private a(Ljavax/net/ssl/SSLSession;)Z
    .registers 4

    const-string v0, "NONE"

    invoke-interface {p1}, Ljavax/net/ssl/SSLSession;->getProtocol()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1a

    const-string v0, "SSL_NULL_WITH_NULL_NULL"

    invoke-interface {p1}, Ljavax/net/ssl/SSLSession;->getCipherSuite()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-nez p1, :cond_1a

    const/4 p1, 0x1

    goto :goto_1b

    :cond_1a
    const/4 p1, 0x0

    :goto_1b
    return p1
.end method

.method private f()Ld/aa;
    .registers 5

    new-instance v0, Ld/aa$a;

    invoke-direct {v0}, Ld/aa$a;-><init>()V

    iget-object v1, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->a()Ld/a;

    move-result-object v1

    invoke-virtual {v1}, Ld/a;->a()Ld/t;

    move-result-object v1

    invoke-virtual {v0, v1}, Ld/aa$a;->a(Ld/t;)Ld/aa$a;

    move-result-object v0

    const-string v1, "Host"

    iget-object v2, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v2}, Ld/ae;->a()Ld/a;

    move-result-object v2

    invoke-virtual {v2}, Ld/a;->a()Ld/t;

    move-result-object v2

    const/4 v3, 0x1

    invoke-static {v2, v3}, Ld/a/c;->a(Ld/t;Z)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ld/aa$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/aa$a;

    move-result-object v0

    const-string v1, "Proxy-Connection"

    const-string v2, "Keep-Alive"

    invoke-virtual {v0, v1, v2}, Ld/aa$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/aa$a;

    move-result-object v0

    const-string v1, "User-Agent"

    invoke-static {}, Ld/a/d;->a()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ld/aa$a;->a(Ljava/lang/String;Ljava/lang/String;)Ld/aa$a;

    move-result-object v0

    invoke-virtual {v0}, Ld/aa$a;->a()Ld/aa;

    move-result-object v0

    return-object v0
.end method


# virtual methods
.method public a(Ld/x;Ld/u$a;Ld/a/b/g;)Ld/a/c/c;
    .registers 8

    iget-object v0, p0, Ld/a/b/c;->m:Ld/a/e/g;

    if-eqz v0, :cond_c

    new-instance v0, Ld/a/e/f;

    iget-object v1, p0, Ld/a/b/c;->m:Ld/a/e/g;

    invoke-direct {v0, p1, p2, p3, v1}, Ld/a/e/f;-><init>(Ld/x;Ld/u$a;Ld/a/b/g;Ld/a/e/g;)V

    return-object v0

    :cond_c
    iget-object v0, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-interface {p2}, Ld/u$a;->c()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/net/Socket;->setSoTimeout(I)V

    iget-object v0, p0, Ld/a/b/c;->n:Le/e;

    invoke-interface {v0}, Le/e;->a()Le/t;

    move-result-object v0

    invoke-interface {p2}, Ld/u$a;->c()I

    move-result v1

    int-to-long v1, v1

    sget-object v3, Ljava/util/concurrent/TimeUnit;->MILLISECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v1, v2, v3}, Le/t;->a(JLjava/util/concurrent/TimeUnit;)Le/t;

    iget-object v0, p0, Ld/a/b/c;->o:Le/d;

    invoke-interface {v0}, Le/d;->a()Le/t;

    move-result-object v0

    invoke-interface {p2}, Ld/u$a;->d()I

    move-result p2

    int-to-long v1, p2

    sget-object p2, Ljava/util/concurrent/TimeUnit;->MILLISECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v1, v2, p2}, Le/t;->a(JLjava/util/concurrent/TimeUnit;)Le/t;

    new-instance p2, Ld/a/d/a;

    iget-object v0, p0, Ld/a/b/c;->n:Le/e;

    iget-object v1, p0, Ld/a/b/c;->o:Le/d;

    invoke-direct {p2, p1, p3, v0, v1}, Ld/a/d/a;-><init>(Ld/x;Ld/a/b/g;Le/e;Le/d;)V

    return-object p2
.end method

.method public a()Ld/ae;
    .registers 2

    iget-object v0, p0, Ld/a/b/c;->h:Ld/ae;

    return-object v0
.end method

.method public a(IIIIZLd/e;Ld/p;)V
    .registers 24

    move-object/from16 v7, p0

    move-object/from16 v8, p6

    move-object/from16 v9, p7

    iget-object v0, v7, Ld/a/b/c;->l:Ld/y;

    if-nez v0, :cond_132

    iget-object v0, v7, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v0}, Ld/ae;->a()Ld/a;

    move-result-object v0

    invoke-virtual {v0}, Ld/a;->f()Ljava/util/List;

    move-result-object v0

    new-instance v10, Ld/a/b/b;

    invoke-direct {v10, v0}, Ld/a/b/b;-><init>(Ljava/util/List;)V

    iget-object v1, v7, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->a()Ld/a;

    move-result-object v1

    invoke-virtual {v1}, Ld/a;->i()Ljavax/net/ssl/SSLSocketFactory;

    move-result-object v1

    if-nez v1, :cond_74

    sget-object v1, Ld/k;->c:Ld/k;

    invoke-interface {v0, v1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_67

    iget-object v0, v7, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v0}, Ld/ae;->a()Ld/a;

    move-result-object v0

    invoke-virtual {v0}, Ld/a;->a()Ld/t;

    move-result-object v0

    invoke-virtual {v0}, Ld/t;->f()Ljava/lang/String;

    move-result-object v0

    invoke-static {}, Ld/a/g/f;->c()Ld/a/g/f;

    move-result-object v1

    invoke-virtual {v1, v0}, Ld/a/g/f;->b(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_46

    goto :goto_74

    :cond_46
    new-instance v1, Ld/a/b/e;

    new-instance v2, Ljava/net/UnknownServiceException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "CLEARTEXT communication to "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " not permitted by network security policy"

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Ljava/net/UnknownServiceException;-><init>(Ljava/lang/String;)V

    invoke-direct {v1, v2}, Ld/a/b/e;-><init>(Ljava/io/IOException;)V

    throw v1

    :cond_67
    new-instance v0, Ld/a/b/e;

    new-instance v1, Ljava/net/UnknownServiceException;

    const-string v2, "CLEARTEXT communication not enabled for client"

    invoke-direct {v1, v2}, Ljava/net/UnknownServiceException;-><init>(Ljava/lang/String;)V

    invoke-direct {v0, v1}, Ld/a/b/e;-><init>(Ljava/io/IOException;)V

    throw v0

    :cond_74
    :goto_74
    const/4 v11, 0x0

    move-object v12, v11

    :goto_76
    :try_start_76
    iget-object v0, v7, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v0}, Ld/ae;->d()Z

    move-result v0

    if-eqz v0, :cond_97

    move-object/from16 v1, p0

    move/from16 v2, p1

    move/from16 v3, p2

    move/from16 v4, p3

    move-object/from16 v5, p6

    move-object/from16 v6, p7

    invoke-direct/range {v1 .. v6}, Ld/a/b/c;->a(IIILd/e;Ld/p;)V

    iget-object v0, v7, Ld/a/b/c;->i:Ljava/net/Socket;
    :try_end_8f
    .catch Ljava/io/IOException; {:try_start_76 .. :try_end_8f} :catch_e7

    if-nez v0, :cond_92

    goto :goto_b4

    :cond_92
    move/from16 v13, p1

    move/from16 v14, p2

    goto :goto_9e

    :cond_97
    move/from16 v13, p1

    move/from16 v14, p2

    :try_start_9b
    invoke-direct {v7, v13, v14, v8, v9}, Ld/a/b/c;->a(IILd/e;Ld/p;)V
    :try_end_9e
    .catch Ljava/io/IOException; {:try_start_9b .. :try_end_9e} :catch_e5

    :goto_9e
    move/from16 v15, p4

    :try_start_a0
    invoke-direct {v7, v10, v15, v8, v9}, Ld/a/b/c;->a(Ld/a/b/b;ILd/e;Ld/p;)V

    iget-object v0, v7, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v0}, Ld/ae;->c()Ljava/net/InetSocketAddress;

    move-result-object v0

    iget-object v1, v7, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->b()Ljava/net/Proxy;

    move-result-object v1

    iget-object v2, v7, Ld/a/b/c;->l:Ld/y;

    invoke-virtual {v9, v8, v0, v1, v2}, Ld/p;->a(Ld/e;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Ld/y;)V
    :try_end_b4
    .catch Ljava/io/IOException; {:try_start_a0 .. :try_end_b4} :catch_e3

    :goto_b4
    iget-object v0, v7, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v0}, Ld/ae;->d()Z

    move-result v0

    if-eqz v0, :cond_ce

    iget-object v0, v7, Ld/a/b/c;->i:Ljava/net/Socket;

    if-eqz v0, :cond_c1

    goto :goto_ce

    :cond_c1
    new-instance v0, Ljava/net/ProtocolException;

    const-string v1, "Too many tunnel connections attempted: 21"

    invoke-direct {v0, v1}, Ljava/net/ProtocolException;-><init>(Ljava/lang/String;)V

    new-instance v1, Ld/a/b/e;

    invoke-direct {v1, v0}, Ld/a/b/e;-><init>(Ljava/io/IOException;)V

    throw v1

    :cond_ce
    :goto_ce
    iget-object v0, v7, Ld/a/b/c;->m:Ld/a/e/g;

    if-eqz v0, :cond_e2

    iget-object v1, v7, Ld/a/b/c;->g:Ld/j;

    monitor-enter v1

    :try_start_d5
    iget-object v0, v7, Ld/a/b/c;->m:Ld/a/e/g;

    invoke-virtual {v0}, Ld/a/e/g;->a()I

    move-result v0

    iput v0, v7, Ld/a/b/c;->c:I

    monitor-exit v1

    goto :goto_e2

    :catchall_df
    move-exception v0

    monitor-exit v1
    :try_end_e1
    .catchall {:try_start_d5 .. :try_end_e1} :catchall_df

    throw v0

    :cond_e2
    :goto_e2
    return-void

    :catch_e3
    move-exception v0

    goto :goto_ee

    :catch_e5
    move-exception v0

    goto :goto_ec

    :catch_e7
    move-exception v0

    move/from16 v13, p1

    move/from16 v14, p2

    :goto_ec
    move/from16 v15, p4

    :goto_ee
    iget-object v1, v7, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-static {v1}, Ld/a/c;->a(Ljava/net/Socket;)V

    iget-object v1, v7, Ld/a/b/c;->i:Ljava/net/Socket;

    invoke-static {v1}, Ld/a/c;->a(Ljava/net/Socket;)V

    iput-object v11, v7, Ld/a/b/c;->j:Ljava/net/Socket;

    iput-object v11, v7, Ld/a/b/c;->i:Ljava/net/Socket;

    iput-object v11, v7, Ld/a/b/c;->n:Le/e;

    iput-object v11, v7, Ld/a/b/c;->o:Le/d;

    iput-object v11, v7, Ld/a/b/c;->k:Ld/r;

    iput-object v11, v7, Ld/a/b/c;->l:Ld/y;

    iput-object v11, v7, Ld/a/b/c;->m:Ld/a/e/g;

    iget-object v1, v7, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->c()Ljava/net/InetSocketAddress;

    move-result-object v3

    iget-object v1, v7, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->b()Ljava/net/Proxy;

    move-result-object v4

    const/4 v5, 0x0

    move-object/from16 v1, p7

    move-object/from16 v2, p6

    move-object v6, v0

    invoke-virtual/range {v1 .. v6}, Ld/p;->a(Ld/e;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Ld/y;Ljava/io/IOException;)V

    if-nez v12, :cond_124

    new-instance v1, Ld/a/b/e;

    invoke-direct {v1, v0}, Ld/a/b/e;-><init>(Ljava/io/IOException;)V

    move-object v12, v1

    goto :goto_127

    :cond_124
    invoke-virtual {v12, v0}, Ld/a/b/e;->a(Ljava/io/IOException;)V

    :goto_127
    if-eqz p5, :cond_131

    invoke-virtual {v10, v0}, Ld/a/b/b;->a(Ljava/io/IOException;)Z

    move-result v0

    if-eqz v0, :cond_131

    goto/16 :goto_76

    :cond_131
    throw v12

    :cond_132
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "already connected"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public a(Ld/a/e/g;)V
    .registers 3

    iget-object v0, p0, Ld/a/b/c;->g:Ld/j;

    monitor-enter v0

    :try_start_3
    invoke-virtual {p1}, Ld/a/e/g;->a()I

    move-result p1

    iput p1, p0, Ld/a/b/c;->c:I

    monitor-exit v0

    return-void

    :catchall_b
    move-exception p1

    monitor-exit v0
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_b

    throw p1
.end method

.method public a(Ld/a/e/i;)V
    .registers 3

    sget-object v0, Ld/a/e/b;->e:Ld/a/e/b;

    invoke-virtual {p1, v0}, Ld/a/e/i;->a(Ld/a/e/b;)V

    return-void
.end method

.method public a(Ld/a;Ld/ae;)Z
    .registers 7
    .param p2    # Ld/ae;
        .annotation runtime Ljavax/annotation/Nullable;
        .end annotation
    .end param

    iget-object v0, p0, Ld/a/b/c;->d:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    iget v1, p0, Ld/a/b/c;->c:I

    const/4 v2, 0x0

    if-ge v0, v1, :cond_a5

    iget-boolean v0, p0, Ld/a/b/c;->a:Z

    if-eqz v0, :cond_11

    goto/16 :goto_a5

    :cond_11
    sget-object v0, Ld/a/a;->a:Ld/a/a;

    iget-object v1, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->a()Ld/a;

    move-result-object v1

    invoke-virtual {v0, v1, p1}, Ld/a/a;->a(Ld/a;Ld/a;)Z

    move-result v0

    if-nez v0, :cond_20

    return v2

    :cond_20
    invoke-virtual {p1}, Ld/a;->a()Ld/t;

    move-result-object v0

    invoke-virtual {v0}, Ld/t;->f()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0}, Ld/a/b/c;->a()Ld/ae;

    move-result-object v1

    invoke-virtual {v1}, Ld/ae;->a()Ld/a;

    move-result-object v1

    invoke-virtual {v1}, Ld/a;->a()Ld/t;

    move-result-object v1

    invoke-virtual {v1}, Ld/t;->f()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/4 v1, 0x1

    if-eqz v0, :cond_40

    return v1

    :cond_40
    iget-object v0, p0, Ld/a/b/c;->m:Ld/a/e/g;

    if-nez v0, :cond_45

    return v2

    :cond_45
    if-nez p2, :cond_48

    return v2

    :cond_48
    invoke-virtual {p2}, Ld/ae;->b()Ljava/net/Proxy;

    move-result-object v0

    invoke-virtual {v0}, Ljava/net/Proxy;->type()Ljava/net/Proxy$Type;

    move-result-object v0

    sget-object v3, Ljava/net/Proxy$Type;->DIRECT:Ljava/net/Proxy$Type;

    if-eq v0, v3, :cond_55

    return v2

    :cond_55
    iget-object v0, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v0}, Ld/ae;->b()Ljava/net/Proxy;

    move-result-object v0

    invoke-virtual {v0}, Ljava/net/Proxy;->type()Ljava/net/Proxy$Type;

    move-result-object v0

    sget-object v3, Ljava/net/Proxy$Type;->DIRECT:Ljava/net/Proxy$Type;

    if-eq v0, v3, :cond_64

    return v2

    :cond_64
    iget-object v0, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v0}, Ld/ae;->c()Ljava/net/InetSocketAddress;

    move-result-object v0

    invoke-virtual {p2}, Ld/ae;->c()Ljava/net/InetSocketAddress;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/net/InetSocketAddress;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_75

    return v2

    :cond_75
    invoke-virtual {p2}, Ld/ae;->a()Ld/a;

    move-result-object p2

    invoke-virtual {p2}, Ld/a;->j()Ljavax/net/ssl/HostnameVerifier;

    move-result-object p2

    sget-object v0, Ld/a/i/d;->a:Ld/a/i/d;

    if-eq p2, v0, :cond_82

    return v2

    :cond_82
    invoke-virtual {p1}, Ld/a;->a()Ld/t;

    move-result-object p2

    invoke-virtual {p0, p2}, Ld/a/b/c;->a(Ld/t;)Z

    move-result p2

    if-nez p2, :cond_8d

    return v2

    :cond_8d
    :try_start_8d
    invoke-virtual {p1}, Ld/a;->k()Ld/g;

    move-result-object p2

    invoke-virtual {p1}, Ld/a;->a()Ld/t;

    move-result-object p1

    invoke-virtual {p1}, Ld/t;->f()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0}, Ld/a/b/c;->d()Ld/r;

    move-result-object v0

    invoke-virtual {v0}, Ld/r;->c()Ljava/util/List;

    move-result-object v0

    invoke-virtual {p2, p1, v0}, Ld/g;->a(Ljava/lang/String;Ljava/util/List;)V
    :try_end_a4
    .catch Ljavax/net/ssl/SSLPeerUnverifiedException; {:try_start_8d .. :try_end_a4} :catch_a5

    return v1

    :catch_a5
    :cond_a5
    :goto_a5
    return v2
.end method

.method public a(Ld/t;)Z
    .registers 6

    invoke-virtual {p1}, Ld/t;->g()I

    move-result v0

    iget-object v1, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->a()Ld/a;

    move-result-object v1

    invoke-virtual {v1}, Ld/a;->a()Ld/t;

    move-result-object v1

    invoke-virtual {v1}, Ld/t;->g()I

    move-result v1

    const/4 v2, 0x0

    if-eq v0, v1, :cond_16

    return v2

    :cond_16
    invoke-virtual {p1}, Ld/t;->f()Ljava/lang/String;

    move-result-object v0

    iget-object v1, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->a()Ld/a;

    move-result-object v1

    invoke-virtual {v1}, Ld/a;->a()Ld/t;

    move-result-object v1

    invoke-virtual {v1}, Ld/t;->f()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/4 v1, 0x1

    if-nez v0, :cond_4d

    iget-object v0, p0, Ld/a/b/c;->k:Ld/r;

    if-eqz v0, :cond_4c

    sget-object v0, Ld/a/i/d;->a:Ld/a/i/d;

    invoke-virtual {p1}, Ld/t;->f()Ljava/lang/String;

    move-result-object p1

    iget-object v3, p0, Ld/a/b/c;->k:Ld/r;

    invoke-virtual {v3}, Ld/r;->c()Ljava/util/List;

    move-result-object v3

    invoke-interface {v3, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/security/cert/X509Certificate;

    invoke-virtual {v0, p1, v3}, Ld/a/i/d;->a(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z

    move-result p1

    if-eqz p1, :cond_4c

    goto :goto_4d

    :cond_4c
    const/4 v1, 0x0

    :cond_4d
    :goto_4d
    return v1
.end method

.method public a(Z)Z
    .registers 6

    iget-object v0, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-virtual {v0}, Ljava/net/Socket;->isClosed()Z

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_51

    iget-object v0, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-virtual {v0}, Ljava/net/Socket;->isInputShutdown()Z

    move-result v0

    if-nez v0, :cond_51

    iget-object v0, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-virtual {v0}, Ljava/net/Socket;->isOutputShutdown()Z

    move-result v0

    if-eqz v0, :cond_1a

    goto :goto_51

    :cond_1a
    iget-object v0, p0, Ld/a/b/c;->m:Ld/a/e/g;

    const/4 v2, 0x1

    if-eqz v0, :cond_27

    iget-object p1, p0, Ld/a/b/c;->m:Ld/a/e/g;

    invoke-virtual {p1}, Ld/a/e/g;->d()Z

    move-result p1

    xor-int/2addr p1, v2

    return p1

    :cond_27
    if-eqz p1, :cond_50

    :try_start_29
    iget-object p1, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-virtual {p1}, Ljava/net/Socket;->getSoTimeout()I

    move-result p1
    :try_end_2f
    .catch Ljava/net/SocketTimeoutException; {:try_start_29 .. :try_end_2f} :catch_50
    .catch Ljava/io/IOException; {:try_start_29 .. :try_end_2f} :catch_4f

    :try_start_2f
    iget-object v0, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-virtual {v0, v2}, Ljava/net/Socket;->setSoTimeout(I)V

    iget-object v0, p0, Ld/a/b/c;->n:Le/e;

    invoke-interface {v0}, Le/e;->f()Z

    move-result v0
    :try_end_3a
    .catchall {:try_start_2f .. :try_end_3a} :catchall_48

    if-eqz v0, :cond_42

    :try_start_3c
    iget-object v0, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-virtual {v0, p1}, Ljava/net/Socket;->setSoTimeout(I)V

    return v1

    :cond_42
    iget-object v0, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-virtual {v0, p1}, Ljava/net/Socket;->setSoTimeout(I)V

    return v2

    :catchall_48
    move-exception v0

    iget-object v3, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    invoke-virtual {v3, p1}, Ljava/net/Socket;->setSoTimeout(I)V

    throw v0
    :try_end_4f
    .catch Ljava/net/SocketTimeoutException; {:try_start_3c .. :try_end_4f} :catch_50
    .catch Ljava/io/IOException; {:try_start_3c .. :try_end_4f} :catch_4f

    :catch_4f
    return v1

    :catch_50
    :cond_50
    return v2

    :cond_51
    :goto_51
    return v1
.end method

.method public b()V
    .registers 2

    iget-object v0, p0, Ld/a/b/c;->i:Ljava/net/Socket;

    invoke-static {v0}, Ld/a/c;->a(Ljava/net/Socket;)V

    return-void
.end method

.method public c()Ljava/net/Socket;
    .registers 2

    iget-object v0, p0, Ld/a/b/c;->j:Ljava/net/Socket;

    return-object v0
.end method

.method public d()Ld/r;
    .registers 2

    iget-object v0, p0, Ld/a/b/c;->k:Ld/r;

    return-object v0
.end method

.method public e()Z
    .registers 2

    iget-object v0, p0, Ld/a/b/c;->m:Ld/a/e/g;

    if-eqz v0, :cond_6

    const/4 v0, 0x1

    goto :goto_7

    :cond_6
    const/4 v0, 0x0

    :goto_7
    return v0
.end method

.method public toString()Ljava/lang/String;
    .registers 3

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Connection{"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->a()Ld/a;

    move-result-object v1

    invoke-virtual {v1}, Ld/a;->a()Ld/t;

    move-result-object v1

    invoke-virtual {v1}, Ld/t;->f()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ":"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->a()Ld/a;

    move-result-object v1

    invoke-virtual {v1}, Ld/a;->a()Ld/t;

    move-result-object v1

    invoke-virtual {v1}, Ld/t;->g()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", proxy="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->b()Ljava/net/Proxy;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " hostAddress="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Ld/a/b/c;->h:Ld/ae;

    invoke-virtual {v1}, Ld/ae;->c()Ljava/net/InetSocketAddress;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " cipherSuite="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Ld/a/b/c;->k:Ld/r;

    if-eqz v1, :cond_5d

    iget-object v1, p0, Ld/a/b/c;->k:Ld/r;

    invoke-virtual {v1}, Ld/r;->b()Ld/h;

    move-result-object v1

    goto :goto_5f

    :cond_5d
    const-string v1, "none"

    :goto_5f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " protocol="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Ld/a/b/c;->l:Ld/y;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const/16 v1, 0x7d

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method
