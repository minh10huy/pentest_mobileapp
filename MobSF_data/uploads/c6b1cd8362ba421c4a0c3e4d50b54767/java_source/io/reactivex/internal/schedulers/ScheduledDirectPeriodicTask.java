/*
 * Decompiled with CFR 0_132.
 */
package io.reactivex.internal.schedulers;

import io.reactivex.internal.schedulers.AbstractDirectTask;
import io.reactivex.plugins.RxJavaPlugins;
import java.util.concurrent.FutureTask;

public final class ScheduledDirectPeriodicTask
extends AbstractDirectTask
implements Runnable {
    private static final long serialVersionUID = 1811839108042568751L;

    public ScheduledDirectPeriodicTask(Runnable runnable) {
        super(runnable);
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public void run() {
        Throwable throwable22222;
        block5 : {
            block4 : {
                this.runner = Thread.currentThread();
                try {
                    this.runnable.run();
                    break block4;
                }
                catch (Throwable throwable22222) {
                    break block5;
                }
                catch (Throwable throwable3) {
                    this.lazySet(FINISHED);
                    RxJavaPlugins.onError(throwable3);
                }
            }
            this.runner = null;
            return;
        }
        this.runner = null;
        throw throwable22222;
    }
}

