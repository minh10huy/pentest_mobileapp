/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Build
 *  android.os.Build$VERSION
 *  javax.annotation.Nullable
 *  org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
 *  retrofit2.CallAdapter
 *  retrofit2.DefaultCallAdapterFactory
 *  retrofit2.ExecutorCallAdapterFactory
 *  retrofit2.Platform$Android$MainThreadExecutor
 */
package retrofit2;

import android.os.Build;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.util.concurrent.Executor;
import javax.annotation.Nullable;
import org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement;
import retrofit2.CallAdapter;
import retrofit2.DefaultCallAdapterFactory;
import retrofit2.ExecutorCallAdapterFactory;
import retrofit2.Platform;

class Platform {
    private static final Platform PLATFORM = Platform.findPlatform();

    Platform() {
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static Platform findPlatform() {
        try {
            Class.forName("android.os.Build");
            if (Build.VERSION.SDK_INT != 0) {
                return new Android();
            }
        }
        catch (ClassNotFoundException classNotFoundException) {}
        try {
            Class.forName("java.util.Optional");
            return new Java8();
        }
        catch (ClassNotFoundException classNotFoundException) {
            return new Platform();
        }
    }

    static Platform get() {
        return PLATFORM;
    }

    CallAdapter.Factory defaultCallAdapterFactory(@Nullable Executor executor) {
        if (executor != null) {
            return new ExecutorCallAdapterFactory(executor);
        }
        return DefaultCallAdapterFactory.INSTANCE;
    }

    @Nullable
    Executor defaultCallbackExecutor() {
        return null;
    }

    @Nullable
    /* varargs */ Object invokeDefaultMethod(Method method, Class<?> class_, Object object, @Nullable Object ... arrobject) throws Throwable {
        throw new UnsupportedOperationException();
    }

    boolean isDefaultMethod(Method method) {
        return false;
    }

    static class Android
    extends Platform {
        Android() {
        }

        @Override
        CallAdapter.Factory defaultCallAdapterFactory(@Nullable Executor executor) {
            if (executor == null) {
                throw new AssertionError();
            }
            return new ExecutorCallAdapterFactory(executor);
        }

        @Override
        public Executor defaultCallbackExecutor() {
            return new /* Unavailable Anonymous Inner Class!! */;
        }
    }

    @IgnoreJRERequirement
    static class Java8
    extends Platform {
        Java8() {
        }

        @Override
        /* varargs */ Object invokeDefaultMethod(Method method, Class<?> class_, Object object, @Nullable Object ... arrobject) throws Throwable {
            Constructor<MethodHandles.Lookup> constructor = MethodHandles.Lookup.class.getDeclaredConstructor(Class.class, Integer.TYPE);
            constructor.setAccessible(true);
            return constructor.newInstance(class_, -1).unreflectSpecial(method, class_).bindTo(object).invokeWithArguments(arrobject);
        }

        @Override
        boolean isDefaultMethod(Method method) {
            return method.isDefault();
        }
    }

}

