/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  retrofit2.Call
 *  retrofit2.CallAdapter$Factory
 *  retrofit2.Retrofit
 *  retrofit2.Utils
 */
package retrofit2;

import java.lang.annotation.Annotation;
import java.lang.reflect.Type;
import retrofit2.Call;
import retrofit2.CallAdapter;
import retrofit2.Retrofit;
import retrofit2.Utils;

final class DefaultCallAdapterFactory
extends CallAdapter {
    static final CallAdapter INSTANCE = new DefaultCallAdapterFactory();

    DefaultCallAdapterFactory() {
    }

    public CallAdapter<?, ?> get(Type type, Annotation[] arrannotation, Retrofit retrofit) {
        if (DefaultCallAdapterFactory.getRawType((Type)type) != Call.class) {
            return null;
        }
        return new CallAdapter<Object, Call<?>>(Utils.getCallResponseType((Type)type)){
            final /* synthetic */ Type val$responseType;
            {
                this.val$responseType = type;
            }

            @Override
            public Call<Object> adapt(Call<Object> call) {
                return call;
            }

            @Override
            public Type responseType() {
                return this.val$responseType;
            }
        };
    }

}

