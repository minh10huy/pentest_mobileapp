/*
 * Decompiled with CFR 0_132.
 */
package net.lingala.zip4j.crypto.PBKDF2;

class BinTools {
    public static final String hex = "0123456789ABCDEF";

    BinTools() {
    }

    public static String bin2hex(byte[] arrby) {
        if (arrby == null) {
            return "";
        }
        StringBuffer stringBuffer = new StringBuffer(arrby.length * 2);
        int n = 0;
        while (n < arrby.length) {
            int n2 = (arrby[n] + 256) % 256;
            stringBuffer.append(hex.charAt(n2 / 16 & 15));
            stringBuffer.append(hex.charAt(n2 % 16 & 15));
            ++n;
        }
        return stringBuffer.toString();
    }

    public static int hex2bin(char c) {
        if (c >= '0' && c <= '9') {
            return c - 48;
        }
        if (c >= 'A' && c <= 'F') {
            return c - 65 + 10;
        }
        if (c >= 'a' && c <= 'f') {
            return c - 97 + 10;
        }
        StringBuffer stringBuffer = new StringBuffer("Input string may only contain hex digits, but found '");
        stringBuffer.append(c);
        stringBuffer.append("'");
        throw new IllegalArgumentException(stringBuffer.toString());
    }

    public static byte[] hex2bin(String arrby) {
        CharSequence charSequence;
        if (arrby == null) {
            charSequence = "";
        } else {
            charSequence = arrby;
            if (arrby.length() % 2 != 0) {
                charSequence = new StringBuffer("0");
                charSequence.append((String)arrby);
                charSequence = charSequence.toString();
            }
        }
        arrby = new byte[charSequence.length() / 2];
        int n = 0;
        int n2 = 0;
        while (n < charSequence.length()) {
            int n3 = n + 1;
            char c = charSequence.charAt(n);
            char c2 = charSequence.charAt(n3);
            arrby[n2] = (byte)(BinTools.hex2bin(c) * 16 + BinTools.hex2bin(c2));
            ++n2;
            n = n3 + 1;
        }
        return arrby;
    }
}

