/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.graphics.PointF
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.view.MotionEvent
 *  android.view.ScaleGestureDetector
 *  android.view.ScaleGestureDetector$OnScaleGestureListener
 *  android.view.ScaleGestureDetector$SimpleOnScaleGestureListener
 */
package com.otaliastudios.cameraview;

import android.content.Context;
import android.graphics.PointF;
import android.os.Build;
import android.view.MotionEvent;
import android.view.ScaleGestureDetector;
import com.otaliastudios.cameraview.Gesture;
import com.otaliastudios.cameraview.GestureLayout;

class PinchGestureLayout
extends GestureLayout {
    private static final float ADD_SENSITIVITY = 2.0f;
    ScaleGestureDetector mDetector;
    float mFactor = 0.0f;
    private boolean mNotify;

    public PinchGestureLayout(Context context) {
        super(context);
    }

    @Override
    protected void onInitialize(Context context) {
        super.onInitialize(context);
        this.mPoints = new PointF[]{new PointF(0.0f, 0.0f), new PointF(0.0f, 0.0f)};
        this.mDetector = new ScaleGestureDetector(context, (ScaleGestureDetector.OnScaleGestureListener)new ScaleGestureDetector.SimpleOnScaleGestureListener(){

            public boolean onScale(ScaleGestureDetector scaleGestureDetector) {
                PinchGestureLayout.this.mNotify = true;
                PinchGestureLayout.this.mFactor = (scaleGestureDetector.getScaleFactor() - 1.0f) * 2.0f;
                return true;
            }
        });
        if (Build.VERSION.SDK_INT >= 19) {
            this.mDetector.setQuickScaleEnabled(false);
        }
        this.mType = Gesture.PINCH;
    }

    @Override
    public boolean onTouchEvent(MotionEvent motionEvent) {
        if (!this.mEnabled) {
            return false;
        }
        if (motionEvent.getAction() == 0) {
            this.mNotify = false;
        }
        this.mDetector.onTouchEvent(motionEvent);
        if (this.mNotify) {
            this.mPoints[0].x = motionEvent.getX(0);
            this.mPoints[0].y = motionEvent.getY(0);
            if (motionEvent.getPointerCount() > 1) {
                this.mPoints[1].x = motionEvent.getX(1);
                this.mPoints[1].y = motionEvent.getY(1);
            }
            return true;
        }
        return false;
    }

    @Override
    public float scaleValue(float f, float f2, float f3) {
        return PinchGestureLayout.capValue(f, this.mFactor * (f3 - f2) + f, f2, f3);
    }

}

