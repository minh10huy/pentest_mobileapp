/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.graphics.PointF
 *  android.view.GestureDetector
 *  android.view.GestureDetector$OnGestureListener
 *  android.view.GestureDetector$SimpleOnGestureListener
 *  android.view.MotionEvent
 */
package com.otaliastudios.cameraview;

import android.content.Context;
import android.graphics.PointF;
import android.view.GestureDetector;
import android.view.MotionEvent;
import com.otaliastudios.cameraview.CameraLogger;
import com.otaliastudios.cameraview.Gesture;
import com.otaliastudios.cameraview.GestureLayout;

class ScrollGestureLayout
extends GestureLayout {
    private static final CameraLogger LOG = CameraLogger.create(TAG);
    private static final String TAG = "ScrollGestureLayout";
    private GestureDetector mDetector;
    float mFactor;
    private boolean mNotify;

    public ScrollGestureLayout(Context context) {
        super(context);
    }

    @Override
    protected void onInitialize(Context context) {
        super.onInitialize(context);
        this.mPoints = new PointF[]{new PointF(0.0f, 0.0f), new PointF(0.0f, 0.0f)};
        this.mDetector = new GestureDetector(context, (GestureDetector.OnGestureListener)new GestureDetector.SimpleOnGestureListener(){

            public boolean onScroll(MotionEvent object, MotionEvent motionEvent, float f, float f2) {
                Object object2 = LOG;
                boolean bl = false;
                Object object3 = new StringBuilder();
                object3.append("distanceX=");
                object3.append(f);
                object3 = object3.toString();
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("distanceY=");
                stringBuilder.append(f2);
                object2.i("onScroll:", object3, stringBuilder.toString());
                if (object != null) {
                    if (motionEvent == null) {
                        return false;
                    }
                    if (object.getX() == ScrollGestureLayout.this.mPoints[0].x && object.getY() == ScrollGestureLayout.this.mPoints[0].y) {
                        if (ScrollGestureLayout.this.mType == Gesture.SCROLL_HORIZONTAL) {
                            bl = true;
                        }
                    } else {
                        bl = Math.abs(f) >= Math.abs(f2);
                        object3 = ScrollGestureLayout.this;
                        object2 = bl ? Gesture.SCROLL_HORIZONTAL : Gesture.SCROLL_VERTICAL;
                        object3.mType = object2;
                        ScrollGestureLayout.this.mPoints[0].set(object.getX(), object.getY());
                    }
                    ScrollGestureLayout.this.mPoints[1].set(motionEvent.getX(), motionEvent.getY());
                    object = ScrollGestureLayout.this;
                    f = bl ? (f /= (float)ScrollGestureLayout.this.getWidth()) : f2 / (float)ScrollGestureLayout.this.getHeight();
                    object.mFactor = f;
                    object = ScrollGestureLayout.this;
                    f = bl ? - ScrollGestureLayout.this.mFactor : ScrollGestureLayout.this.mFactor;
                    object.mFactor = f;
                    ScrollGestureLayout.this.mNotify = true;
                    return true;
                }
                return false;
            }
        });
        this.mDetector.setIsLongpressEnabled(false);
    }

    @Override
    public boolean onTouchEvent(MotionEvent motionEvent) {
        if (!this.mEnabled) {
            return false;
        }
        if (motionEvent.getAction() == 0) {
            this.mNotify = false;
        }
        this.mDetector.onTouchEvent(motionEvent);
        if (this.mNotify) {
            LOG.i("Notifying a gesture of type", this.mType.name());
        }
        return this.mNotify;
    }

    @Override
    public float scaleValue(float f, float f2, float f3) {
        return ScrollGestureLayout.capValue(f, this.mFactor * (f3 - f2) * 2.0f + f, f2, f3);
    }

}

