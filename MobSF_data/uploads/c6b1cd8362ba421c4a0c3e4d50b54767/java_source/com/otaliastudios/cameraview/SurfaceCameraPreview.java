/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.view.LayoutInflater
 *  android.view.Surface
 *  android.view.SurfaceHolder
 *  android.view.SurfaceHolder$Callback
 *  android.view.SurfaceView
 *  android.view.View
 *  android.view.ViewGroup
 */
package com.otaliastudios.cameraview;

import android.content.Context;
import android.support.annotation.NonNull;
import android.view.LayoutInflater;
import android.view.Surface;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.View;
import android.view.ViewGroup;
import com.otaliastudios.cameraview.CameraLogger;
import com.otaliastudios.cameraview.CameraPreview;
import com.otaliastudios.cameraview.R;

class SurfaceCameraPreview
extends CameraPreview<View, SurfaceHolder> {
    private static final CameraLogger LOG = CameraLogger.create(SurfaceCameraPreview.class.getSimpleName());
    private SurfaceView mSurfaceView;

    SurfaceCameraPreview(Context context, ViewGroup viewGroup, CameraPreview.SurfaceCallback surfaceCallback) {
        super(context, viewGroup, surfaceCallback);
    }

    @Override
    protected void applyCrop(float f, float f2) {
    }

    @Override
    SurfaceHolder getOutput() {
        return this.mSurfaceView.getHolder();
    }

    @Override
    Class<SurfaceHolder> getOutputClass() {
        return SurfaceHolder.class;
    }

    @Override
    Surface getSurface() {
        return this.getOutput().getSurface();
    }

    @NonNull
    @Override
    protected View onCreateView(Context context, ViewGroup viewGroup) {
        context = LayoutInflater.from((Context)context).inflate(R.layout.cameraview_surface_view, viewGroup, false);
        viewGroup.addView((View)context, 0);
        this.mSurfaceView = (SurfaceView)context.findViewById(R.id.surface_view);
        viewGroup = this.mSurfaceView.getHolder();
        viewGroup.setType(3);
        viewGroup.addCallback(new SurfaceHolder.Callback(){
            private boolean mFirstTime = true;

            public void surfaceChanged(SurfaceHolder surfaceHolder, int n, int n2, int n3) {
                LOG.i("callback:", "surfaceChanged", "w:", n2, "h:", n3, "firstTime:", this.mFirstTime);
                if (this.mFirstTime) {
                    SurfaceCameraPreview.this.onSurfaceAvailable(n2, n3);
                    this.mFirstTime = false;
                    return;
                }
                SurfaceCameraPreview.this.onSurfaceSizeChanged(n2, n3);
            }

            public void surfaceCreated(SurfaceHolder surfaceHolder) {
                LOG.i("callback:", "surfaceCreated");
            }

            public void surfaceDestroyed(SurfaceHolder surfaceHolder) {
                LOG.i("callback:", "surfaceDestroyed");
                SurfaceCameraPreview.this.onSurfaceDestroyed();
                this.mFirstTime = true;
            }
        });
        return context.findViewById(R.id.surface_view_root);
    }

    @Override
    boolean supportsCropping() {
        return false;
    }

}

