/*
 * Decompiled with CFR 0_132.
 */
package com.otaliastudios.cameraview;

import android.support.annotation.NonNull;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;

class Task<T> {
    private int mCount;
    private CountDownLatch mLatch;
    private T mResult;

    Task() {
    }

    Task(boolean bl) {
        if (bl) {
            this.listen();
        }
    }

    private T await(long l, @NonNull TimeUnit timeUnit) {
        try {
            this.mLatch.await(l, timeUnit);
        }
        catch (Exception exception) {
            exception.printStackTrace();
        }
        timeUnit = this.mResult;
        this.mResult = null;
        this.mLatch = null;
        return (T)((Object)timeUnit);
    }

    private boolean listening() {
        if (this.mLatch != null) {
            return true;
        }
        return false;
    }

    T await() {
        return this.await(1L, TimeUnit.MINUTES);
    }

    T await(long l) {
        return this.await(l, TimeUnit.MILLISECONDS);
    }

    void end(T t) {
        if (this.mCount > 0) {
            --this.mCount;
            return;
        }
        if (this.listening()) {
            this.mResult = t;
            this.mLatch.countDown();
        }
    }

    void listen() {
        if (this.listening()) {
            throw new RuntimeException("Should not happen.");
        }
        this.mResult = null;
        this.mLatch = new CountDownLatch(1);
    }

    void start() {
        if (!this.listening()) {
            ++this.mCount;
        }
    }
}

