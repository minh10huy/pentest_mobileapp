/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.net.Uri
 */
package com.bumptech.glide.load.model;

import android.content.Context;
import android.net.Uri;
import com.bumptech.glide.load.data.DataFetcher;
import com.bumptech.glide.load.model.AssetUriParser;
import com.bumptech.glide.load.model.GlideUrl;
import com.bumptech.glide.load.model.ModelLoader;

public abstract class UriLoader<T>
implements ModelLoader<Uri, T> {
    private final Context context;
    private final ModelLoader<GlideUrl, T> urlLoader;

    public UriLoader(Context context, ModelLoader<GlideUrl, T> modelLoader) {
        this.context = context;
        this.urlLoader = modelLoader;
    }

    private static boolean isLocalUri(String string2) {
        if (!("file".equals(string2) || "content".equals(string2) || "android.resource".equals(string2))) {
            return false;
        }
        return true;
    }

    protected abstract DataFetcher<T> getAssetPathFetcher(Context var1, String var2);

    protected abstract DataFetcher<T> getLocalUriFetcher(Context var1, Uri var2);

    @Override
    public final DataFetcher<T> getResourceFetcher(Uri object, int n, int n2) {
        String string2 = object.getScheme();
        if (UriLoader.isLocalUri(string2)) {
            if (AssetUriParser.isAssetUri(object)) {
                object = AssetUriParser.toAssetPath(object);
                return this.getAssetPathFetcher(this.context, (String)object);
            }
            return this.getLocalUriFetcher(this.context, (Uri)object);
        }
        if (this.urlLoader != null && ("http".equals(string2) || "https".equals(string2))) {
            return this.urlLoader.getResourceFetcher(new GlideUrl(object.toString()), n, n2);
        }
        return null;
    }
}

