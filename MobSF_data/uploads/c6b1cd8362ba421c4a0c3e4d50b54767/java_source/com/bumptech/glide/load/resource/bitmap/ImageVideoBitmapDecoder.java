/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.graphics.Bitmap
 *  android.os.ParcelFileDescriptor
 *  android.util.Log
 */
package com.bumptech.glide.load.resource.bitmap;

import android.graphics.Bitmap;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import com.bumptech.glide.load.ResourceDecoder;
import com.bumptech.glide.load.engine.Resource;
import com.bumptech.glide.load.model.ImageVideoWrapper;
import java.io.IOException;
import java.io.InputStream;

public class ImageVideoBitmapDecoder
implements ResourceDecoder<ImageVideoWrapper, Bitmap> {
    private static final String TAG = "ImageVideoDecoder";
    private final ResourceDecoder<ParcelFileDescriptor, Bitmap> fileDescriptorDecoder;
    private final ResourceDecoder<InputStream, Bitmap> streamDecoder;

    public ImageVideoBitmapDecoder(ResourceDecoder<InputStream, Bitmap> resourceDecoder, ResourceDecoder<ParcelFileDescriptor, Bitmap> resourceDecoder2) {
        this.streamDecoder = resourceDecoder;
        this.fileDescriptorDecoder = resourceDecoder2;
    }

    @Override
    public Resource<Bitmap> decode(ImageVideoWrapper imageVideoWrapper, int n, int n2) throws IOException {
        Object object;
        block5 : {
            block6 : {
                object = imageVideoWrapper.getStream();
                if (object != null) {
                    try {
                        object = this.streamDecoder.decode((InputStream)object, n, n2);
                        break block5;
                    }
                    catch (IOException iOException) {
                        if (!Log.isLoggable((String)TAG, (int)2)) break block6;
                        Log.v((String)TAG, (String)"Failed to load image from stream, trying FileDescriptor", (Throwable)iOException);
                    }
                }
            }
            object = null;
        }
        Resource<Bitmap> resource = object;
        if (object == null) {
            imageVideoWrapper = imageVideoWrapper.getFileDescriptor();
            resource = object;
            if (imageVideoWrapper != null) {
                resource = this.fileDescriptorDecoder.decode((ParcelFileDescriptor)imageVideoWrapper, n, n2);
            }
        }
        return resource;
    }

    @Override
    public String getId() {
        return "ImageVideoBitmapDecoder.com.bumptech.glide.load.resource.bitmap";
    }
}

