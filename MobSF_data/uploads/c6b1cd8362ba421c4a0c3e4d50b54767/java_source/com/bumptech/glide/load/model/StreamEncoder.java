/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.util.Log
 */
package com.bumptech.glide.load.model;

import android.util.Log;
import com.bumptech.glide.load.Encoder;
import com.bumptech.glide.util.ByteArrayPool;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class StreamEncoder
implements Encoder<InputStream> {
    private static final String TAG = "StreamEncoder";

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public boolean encode(InputStream inputStream, OutputStream outputStream) {
        Throwable throwable2222;
        byte[] arrby = ByteArrayPool.get().getBytes();
        do {
            int n;
            if ((n = inputStream.read(arrby)) == -1) {
                ByteArrayPool.get().releaseBytes(arrby);
                return true;
            }
            outputStream.write(arrby, 0, n);
        } while (true);
        {
            catch (Throwable throwable2222) {
            }
            catch (IOException iOException) {}
            {
                if (Log.isLoggable((String)TAG, (int)3)) {
                    Log.d((String)TAG, (String)"Failed to encode data onto the OutputStream", (Throwable)iOException);
                }
                ByteArrayPool.get().releaseBytes(arrby);
                return false;
            }
        }
        ByteArrayPool.get().releaseBytes(arrby);
        throw throwable2222;
    }

    @Override
    public String getId() {
        return "";
    }
}

