/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Bundle
 *  android.util.Log
 *  javax.annotation.concurrent.GuardedBy
 */
package com.google.firebase.iid;

import android.content.Context;
import android.os.Bundle;
import android.support.annotation.VisibleForTesting;
import android.util.Log;
import com.google.android.gms.tasks.Task;
import com.google.android.gms.tasks.TaskCompletionSource;
import com.google.firebase.iid.zzaa;
import com.google.firebase.iid.zzab;
import com.google.firebase.iid.zzah;
import com.google.firebase.iid.zzai;
import com.google.firebase.iid.zzak;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import javax.annotation.concurrent.GuardedBy;

public final class zzz {
    @GuardedBy(value="MessengerIpcClient.class")
    private static zzz zzbk;
    private final ScheduledExecutorService zzbl;
    @GuardedBy(value="this")
    private zzab zzbm = new zzab(this, null);
    @GuardedBy(value="this")
    private int zzbn = 1;
    private final Context zzv;

    @VisibleForTesting
    private zzz(Context context, ScheduledExecutorService scheduledExecutorService) {
        this.zzbl = scheduledExecutorService;
        this.zzv = context.getApplicationContext();
    }

    static /* synthetic */ Context zza(zzz zzz2) {
        return zzz2.zzv;
    }

    private final <T> Task<T> zza(zzai<T> object) {
        synchronized (this) {
            if (Log.isLoggable((String)"MessengerIpcClient", (int)3)) {
                String string2 = String.valueOf(object);
                StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 9);
                stringBuilder.append("Queueing ");
                stringBuilder.append(string2);
                Log.d((String)"MessengerIpcClient", (String)stringBuilder.toString());
            }
            if (!this.zzbm.zzb((zzai)object)) {
                this.zzbm = new zzab(this, null);
                this.zzbm.zzb((zzai)object);
            }
            object = object.zzbx.getTask();
            return object;
        }
    }

    static /* synthetic */ ScheduledExecutorService zzb(zzz zzz2) {
        return zzz2.zzbl;
    }

    public static zzz zzc(Context object) {
        synchronized (zzz.class) {
            if (zzbk == null) {
                zzbk = new zzz((Context)object, Executors.newSingleThreadScheduledExecutor());
            }
            object = zzbk;
            return object;
        }
    }

    private final int zzw() {
        synchronized (this) {
            int n = this.zzbn;
            this.zzbn = n + 1;
            return n;
        }
    }

    public final Task<Void> zza(int n, Bundle bundle) {
        return this.zza(new zzah(this.zzw(), 2, bundle));
    }

    public final Task<Bundle> zzb(int n, Bundle bundle) {
        return this.zza(new zzak(this.zzw(), 1, bundle));
    }
}

