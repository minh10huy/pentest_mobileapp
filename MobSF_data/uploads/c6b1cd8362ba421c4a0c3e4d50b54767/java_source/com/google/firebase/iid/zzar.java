/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.PendingIntent
 *  android.content.Context
 *  android.content.Intent
 *  android.os.Bundle
 *  android.os.Handler
 *  android.os.Looper
 *  android.os.Message
 *  android.os.Messenger
 *  android.os.Parcelable
 *  android.util.Log
 *  javax.annotation.concurrent.GuardedBy
 */
package com.google.firebase.iid;

import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.os.Messenger;
import android.os.Parcelable;
import android.support.v4.util.SimpleArrayMap;
import android.util.Log;
import com.google.android.gms.tasks.Task;
import com.google.android.gms.tasks.TaskCompletionSource;
import com.google.android.gms.tasks.Tasks;
import com.google.firebase.iid.zzaj;
import com.google.firebase.iid.zzal;
import com.google.firebase.iid.zzas;
import com.google.firebase.iid.zzk;
import com.google.firebase.iid.zzz;
import java.io.IOException;
import java.util.concurrent.ExecutionException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.annotation.concurrent.GuardedBy;

final class zzar {
    private static int zzbw;
    private static PendingIntent zzci;
    private final zzal zzak;
    @GuardedBy(value="responseCallbacks")
    private final SimpleArrayMap<String, TaskCompletionSource<Bundle>> zzcj = new SimpleArrayMap();
    private Messenger zzck;
    private Messenger zzcl;
    private zzk zzcm;
    private final Context zzv;

    public zzar(Context context, zzal zzal2) {
        this.zzv = context;
        this.zzak = zzal2;
        this.zzck = new Messenger((Handler)new zzas(this, Looper.getMainLooper()));
    }

    private static void zza(Context context, Intent intent) {
        synchronized (zzar.class) {
            if (zzci == null) {
                Intent intent2 = new Intent();
                intent2.setPackage("com.google.example.invalidpackage");
                zzci = PendingIntent.getBroadcast((Context)context, (int)0, (Intent)intent2, (int)0);
            }
            intent.putExtra("app", (Parcelable)zzci);
            return;
        }
    }

    static /* synthetic */ void zza(zzar zzar2, Message message) {
        zzar2.zzb(message);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void zza(String string2, Bundle bundle) {
        SimpleArrayMap<String, TaskCompletionSource<Bundle>> simpleArrayMap = this.zzcj;
        synchronized (simpleArrayMap) {
            TaskCompletionSource<Bundle> taskCompletionSource = this.zzcj.remove(string2);
            if (taskCompletionSource != null) {
                taskCompletionSource.setResult(bundle);
                return;
            }
            string2 = (string2 = String.valueOf(string2)).length() != 0 ? "Missing callback for ".concat(string2) : new String("Missing callback for ");
            Log.w((String)"FirebaseInstanceId", (String)string2);
            return;
        }
    }

    private static String zzag() {
        synchronized (zzar.class) {
            int n = zzbw;
            zzbw = n + 1;
            String string2 = Integer.toString(n);
            return string2;
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    private final void zzb(Message var1_1) {
        if (var1_1 == null || !(var1_1.obj instanceof Intent)) ** GOTO lbl64
        var3_2 = (Intent)var1_1.obj;
        var3_2.setExtrasClassLoader((ClassLoader)new zzk.zza());
        if (var3_2.hasExtra("google.messenger")) {
            if ((var3_2 = var3_2.getParcelableExtra("google.messenger")) instanceof zzk) {
                this.zzcm = (zzk)var3_2;
            }
            if (var3_2 instanceof Messenger) {
                this.zzcl = (Messenger)var3_2;
            }
        }
        if (!"com.google.android.c2dm.intent.REGISTRATION".equals(var1_1 = (var4_3 = (Intent)var1_1.obj).getAction())) {
            if (Log.isLoggable((String)"FirebaseInstanceId", (int)3) == false) return;
            var1_1 = (var1_1 = String.valueOf(var1_1)).length() != 0 ? "Unexpected response action: ".concat((String)var1_1) : new String("Unexpected response action: ");
            Log.d((String)"FirebaseInstanceId", (String)var1_1);
            return;
        }
        var1_1 = var3_2 = var4_3.getStringExtra("registration_id");
        if (var3_2 == null) {
            var1_1 = var4_3.getStringExtra("unregistered");
        }
        if (var1_1 != null) ** GOTO lbl52
        var3_2 = var4_3.getStringExtra("error");
        if (var3_2 == null) {
            var1_1 = String.valueOf((Object)var4_3.getExtras());
            var3_2 = new StringBuilder(String.valueOf(var1_1).length() + 49);
            var3_2.append("Unexpected response, no error or registration id ");
            var3_2.append((String)var1_1);
            Log.w((String)"FirebaseInstanceId", (String)var3_2.toString());
            return;
        }
        if (Log.isLoggable((String)"FirebaseInstanceId", (int)3)) {
            var1_1 = String.valueOf(var3_2);
            var1_1 = var1_1.length() != 0 ? "Received InstanceID error ".concat((String)var1_1) : new String("Received InstanceID error ");
            Log.d((String)"FirebaseInstanceId", (String)var1_1);
        }
        if (var3_2.startsWith("|")) {
            var1_1 = var3_2.split("\\|");
            if (((Object)var1_1).length > 2 && "ID".equals(var1_1[1])) {
                var5_4 = var1_1[2];
                var1_1 = var3_2 = var1_1[3];
                if (var3_2.startsWith(":")) {
                    var1_1 = var3_2.substring(1);
                }
                this.zza((String)var5_4, var4_3.putExtra("error", (String)var1_1).getExtras());
                return;
            }
            var1_1 = String.valueOf(var3_2);
            var1_1 = var1_1.length() != 0 ? "Unexpected structured response ".concat((String)var1_1) : new String("Unexpected structured response ");
        } else {
            var1_1 = this.zzcj;
            // MONITORENTER : var1_1
            var2_5 = 0;
            do {
                if (var2_5 >= this.zzcj.size()) {
                    // MONITOREXIT : var1_1
                    return;
                }
                this.zza(this.zzcj.keyAt(var2_5), var4_3.getExtras());
                ++var2_5;
            } while (true);
lbl52: // 1 sources:
            var3_2 = Pattern.compile("\\|ID\\|([^|]+)\\|:?+(.*)").matcher((CharSequence)var1_1);
            if (var3_2.matches()) {
                var1_1 = var3_2.group(1);
                var3_2 = var3_2.group(2);
                var4_3 = var4_3.getExtras();
                var4_3.putString("registration_id", (String)var3_2);
                this.zza((String)var1_1, (Bundle)var4_3);
                return;
            }
            if (Log.isLoggable((String)"FirebaseInstanceId", (int)3) == false) return;
            var1_1 = (var1_1 = String.valueOf(var1_1)).length() != 0 ? "Unexpected response string: ".concat((String)var1_1) : new String("Unexpected response string: ");
            Log.d((String)"FirebaseInstanceId", (String)var1_1);
            return;
lbl64: // 1 sources:
            var1_1 = "Dropping invalid message";
        }
        Log.w((String)"FirebaseInstanceId", (String)var1_1);
    }

    private final Bundle zzd(Bundle bundle) throws IOException {
        Bundle bundle2;
        Bundle bundle3 = bundle2 = this.zze(bundle);
        if (bundle2 != null) {
            bundle3 = bundle2;
            if (bundle2.containsKey("google.messenger")) {
                bundle3 = bundle = this.zze(bundle);
                if (bundle != null) {
                    bundle3 = bundle;
                    if (bundle.containsKey("google.messenger")) {
                        bundle3 = null;
                    }
                }
            }
        }
        return bundle3;
    }

    /*
     * Exception decompiling
     */
    private final Bundle zze(Bundle var1_1) throws IOException {
        // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
        // org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [12[CATCHBLOCK]], but top level block is 4[TRYBLOCK]
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:416)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:468)
        // org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:2960)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:818)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:196)
        // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:141)
        // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:95)
        // org.benf.cfr.reader.entities.Method.analyse(Method.java:372)
        // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:867)
        // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:768)
        // org.benf.cfr.reader.Main.doJar(Main.java:141)
        // org.benf.cfr.reader.Main.main(Main.java:242)
        throw new IllegalStateException("Decompilation failed");
    }

    final Bundle zzc(Bundle bundle) throws IOException {
        if (this.zzak.zzae() >= 12000000) {
            Bundle bundle2 = zzz.zzc(this.zzv).zzb(1, bundle);
            try {
                bundle2 = Tasks.await(bundle2);
                return bundle2;
            }
            catch (InterruptedException | ExecutionException exception) {
                if (Log.isLoggable((String)"FirebaseInstanceId", (int)3)) {
                    String string2 = String.valueOf(exception);
                    StringBuilder stringBuilder = new StringBuilder(String.valueOf(string2).length() + 22);
                    stringBuilder.append("Error making request: ");
                    stringBuilder.append(string2);
                    Log.d((String)"FirebaseInstanceId", (String)stringBuilder.toString());
                }
                if (exception.getCause() instanceof zzaj && ((zzaj)exception.getCause()).getErrorCode() == 4) {
                    return this.zzd(bundle);
                }
                return null;
            }
        }
        return this.zzd(bundle);
    }
}

