/*
 * Decompiled with CFR 0_132.
 */
package com.google.firebase.components;

import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.internal.Preconditions;
import com.google.firebase.components.ComponentFactory;
import com.google.firebase.components.Dependency;
import com.google.firebase.components.zza;
import com.google.firebase.components.zzb;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

@KeepForSdk
public final class Component<T> {
    private final Set<Class<? super T>> zza;
    private final Set<Dependency> zzb;
    private final int zzc;
    private final ComponentFactory<T> zzd;
    private final Set<Class<?>> zze;

    private Component(Set<Class<? super T>> set, Set<Dependency> set2, int n, ComponentFactory<T> componentFactory, Set<Class<?>> set3) {
        this.zza = Collections.unmodifiableSet(set);
        this.zzb = Collections.unmodifiableSet(set2);
        this.zzc = n;
        this.zzd = componentFactory;
        this.zze = Collections.unmodifiableSet(set3);
    }

    /* synthetic */ Component(Set set, Set set2, int n, ComponentFactory componentFactory, Set set3, byte by) {
        this(set, set2, n, componentFactory, set3);
    }

    @KeepForSdk
    public static <T> Builder<T> builder(Class<T> class_) {
        return new Builder(class_, new Class[0], 0);
    }

    @KeepForSdk
    public static /* varargs */ <T> Builder<T> builder(Class<T> class_, Class<? super T> ... arrclass) {
        return new Builder(class_, (Class[])arrclass, 0);
    }

    @Deprecated
    @KeepForSdk
    public static <T> Component<T> of(Class<T> class_, T t) {
        return Component.builder(class_).factory(new zza(t)).build();
    }

    @SafeVarargs
    @KeepForSdk
    public static /* varargs */ <T> Component<T> of(T t, Class<T> class_, Class<? super T> ... arrclass) {
        return Component.builder(class_, arrclass).factory(new zzb(t)).build();
    }

    static final /* synthetic */ Object zza(Object object) {
        return object;
    }

    static final /* synthetic */ Object zzb(Object object) {
        return object;
    }

    public final String toString() {
        StringBuilder stringBuilder = new StringBuilder("Component<");
        stringBuilder.append(Arrays.toString(this.zza.toArray()));
        stringBuilder.append(">{");
        stringBuilder.append(this.zzc);
        stringBuilder.append(", deps=");
        stringBuilder.append(Arrays.toString(this.zzb.toArray()));
        stringBuilder.append("}");
        return stringBuilder.toString();
    }

    public final Set<Class<? super T>> zza() {
        return this.zza;
    }

    public final Set<Dependency> zzb() {
        return this.zzb;
    }

    public final ComponentFactory<T> zzc() {
        return this.zzd;
    }

    public final Set<Class<?>> zzd() {
        return this.zze;
    }

    public final boolean zze() {
        if (this.zzc == 1) {
            return true;
        }
        return false;
    }

    public final boolean zzf() {
        if (this.zzc == 2) {
            return true;
        }
        return false;
    }

    @KeepForSdk
    public static class Builder<T> {
        private final Set<Class<? super T>> zza = new HashSet<Class<? super T>>();
        private final Set<Dependency> zzb = new HashSet<Dependency>();
        private int zzc = 0;
        private ComponentFactory<T> zzd;
        private Set<Class<?>> zze = new HashSet();

        private /* varargs */ Builder(Class<T> class_, Class<? super T> ... arrclass) {
            Preconditions.checkNotNull(class_, "Null interface");
            this.zza.add(class_);
            int n = arrclass.length;
            for (int i = 0; i < n; ++i) {
                Preconditions.checkNotNull(arrclass[i], "Null interface");
            }
            Collections.addAll(this.zza, arrclass);
        }

        /* synthetic */ Builder(Class class_, Class[] arrclass, byte by) {
            this(class_, arrclass);
        }

        private Builder<T> zza(int n) {
            boolean bl = this.zzc == 0;
            Preconditions.checkState(bl, "Instantiation type has already been set.");
            this.zzc = n;
            return this;
        }

        @KeepForSdk
        public Builder<T> add(Dependency dependency) {
            Preconditions.checkNotNull(dependency, "Null dependency");
            Class<?> class_ = dependency.zza();
            Preconditions.checkArgument(this.zza.contains(class_) ^ true, "Components are not allowed to depend on interfaces they themselves provide.");
            this.zzb.add(dependency);
            return this;
        }

        @KeepForSdk
        public Builder<T> alwaysEager() {
            return this.zza(1);
        }

        @KeepForSdk
        public Component<T> build() {
            boolean bl = this.zzd != null;
            Preconditions.checkState(bl, "Missing required property: factory.");
            return new Component(new HashSet<Class<? super T>>(this.zza), new HashSet<Dependency>(this.zzb), this.zzc, this.zzd, this.zze, 0);
        }

        @KeepForSdk
        public Builder<T> eagerInDefaultApp() {
            return this.zza(2);
        }

        @KeepForSdk
        public Builder<T> factory(ComponentFactory<T> componentFactory) {
            this.zzd = Preconditions.checkNotNull(componentFactory, "Null factory");
            return this;
        }

        @KeepForSdk
        public Builder<T> publishes(Class<?> class_) {
            this.zze.add(class_);
            return this;
        }
    }

}

