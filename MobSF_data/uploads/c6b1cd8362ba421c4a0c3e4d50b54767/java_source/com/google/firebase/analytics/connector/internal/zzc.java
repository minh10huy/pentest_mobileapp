/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Bundle
 */
package com.google.firebase.analytics.connector.internal;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import com.google.android.gms.common.util.ArrayUtils;
import com.google.android.gms.internal.measurement.zzkd;
import com.google.android.gms.measurement.AppMeasurement;
import com.google.firebase.analytics.connector.AnalyticsConnector;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;

public final class zzc {
    private static final List<String> zzbqm = Arrays.asList("_e", "_f", "_iap", "_s", "_au", "_ui", "_cd", "app_open");
    private static final List<String> zzbqn = Arrays.asList("auto", "app", "am");
    private static final List<String> zzbqo = Arrays.asList("_r", "_dbg");
    private static final List<String> zzbqp = Arrays.asList(ArrayUtils.concat(AppMeasurement.UserProperty.zzada, AppMeasurement.UserProperty.zzadb));
    private static final List<String> zzbqq = Arrays.asList("^_ltv_[A-Z]{3}$", "^_cc[1-5]{1}$");

    public static boolean zza(AnalyticsConnector.ConditionalUserProperty conditionalUserProperty) {
        if (conditionalUserProperty == null) {
            return false;
        }
        String string2 = conditionalUserProperty.origin;
        if (string2 != null) {
            if (string2.isEmpty()) {
                return false;
            }
            if (conditionalUserProperty.value != null && zzkd.zzf(conditionalUserProperty.value) == null) {
                return false;
            }
            if (!zzc.zzff(string2)) {
                return false;
            }
            if (!zzc.zzw(string2, conditionalUserProperty.name)) {
                return false;
            }
            if (conditionalUserProperty.expiredEventName != null) {
                if (!zzc.zza(conditionalUserProperty.expiredEventName, conditionalUserProperty.expiredEventParams)) {
                    return false;
                }
                if (!zzc.zzb(string2, conditionalUserProperty.expiredEventName, conditionalUserProperty.expiredEventParams)) {
                    return false;
                }
            }
            if (conditionalUserProperty.triggeredEventName != null) {
                if (!zzc.zza(conditionalUserProperty.triggeredEventName, conditionalUserProperty.triggeredEventParams)) {
                    return false;
                }
                if (!zzc.zzb(string2, conditionalUserProperty.triggeredEventName, conditionalUserProperty.triggeredEventParams)) {
                    return false;
                }
            }
            if (conditionalUserProperty.timedOutEventName != null) {
                if (!zzc.zza(conditionalUserProperty.timedOutEventName, conditionalUserProperty.timedOutEventParams)) {
                    return false;
                }
                if (!zzc.zzb(string2, conditionalUserProperty.timedOutEventName, conditionalUserProperty.timedOutEventParams)) {
                    return false;
                }
            }
            return true;
        }
        return false;
    }

    public static boolean zza(@NonNull String object, @Nullable Bundle bundle) {
        if (zzbqm.contains(object)) {
            return false;
        }
        if (bundle != null) {
            object = zzbqo.iterator();
            while (object.hasNext()) {
                if (!bundle.containsKey((String)object.next())) continue;
                return false;
            }
        }
        return true;
    }

    public static AppMeasurement.ConditionalUserProperty zzb(AnalyticsConnector.ConditionalUserProperty conditionalUserProperty) {
        AppMeasurement.ConditionalUserProperty conditionalUserProperty2 = new AppMeasurement.ConditionalUserProperty();
        conditionalUserProperty2.mOrigin = conditionalUserProperty.origin;
        conditionalUserProperty2.mActive = conditionalUserProperty.active;
        conditionalUserProperty2.mCreationTimestamp = conditionalUserProperty.creationTimestamp;
        conditionalUserProperty2.mExpiredEventName = conditionalUserProperty.expiredEventName;
        if (conditionalUserProperty.expiredEventParams != null) {
            conditionalUserProperty2.mExpiredEventParams = new Bundle(conditionalUserProperty.expiredEventParams);
        }
        conditionalUserProperty2.mName = conditionalUserProperty.name;
        conditionalUserProperty2.mTimedOutEventName = conditionalUserProperty.timedOutEventName;
        if (conditionalUserProperty.timedOutEventParams != null) {
            conditionalUserProperty2.mTimedOutEventParams = new Bundle(conditionalUserProperty.timedOutEventParams);
        }
        conditionalUserProperty2.mTimeToLive = conditionalUserProperty.timeToLive;
        conditionalUserProperty2.mTriggeredEventName = conditionalUserProperty.triggeredEventName;
        if (conditionalUserProperty.triggeredEventParams != null) {
            conditionalUserProperty2.mTriggeredEventParams = new Bundle(conditionalUserProperty.triggeredEventParams);
        }
        conditionalUserProperty2.mTriggeredTimestamp = conditionalUserProperty.triggeredTimestamp;
        conditionalUserProperty2.mTriggerEventName = conditionalUserProperty.triggerEventName;
        conditionalUserProperty2.mTriggerTimeout = conditionalUserProperty.triggerTimeout;
        if (conditionalUserProperty.value != null) {
            conditionalUserProperty2.mValue = zzkd.zzf(conditionalUserProperty.value);
        }
        return conditionalUserProperty2;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    public static boolean zzb(@NonNull String var0, @NonNull String var1_1, @Nullable Bundle var2_2) {
        block13 : {
            block11 : {
                block12 : {
                    if (!"_cmp".equals(var1_1)) {
                        return true;
                    }
                    if (!zzc.zzff(var0)) {
                        return false;
                    }
                    if (var2_2 == null) {
                        return false;
                    }
                    var1_1 = zzc.zzbqo.iterator();
                    while (var1_1.hasNext()) {
                        if (!var2_2.containsKey(var1_1.next())) continue;
                        return false;
                    }
                    var3_3 = var0.hashCode();
                    if (var3_3 == 101200) break block11;
                    if (var3_3 == 101230) break block12;
                    if (var3_3 != 3142703 || !var0.equals("fiam")) ** GOTO lbl-1000
                    var3_3 = 2;
                    break block13;
                }
                if (!var0.equals("fdl")) ** GOTO lbl-1000
                var3_3 = 1;
                break block13;
            }
            if (var0.equals("fcm")) {
                var3_3 = 0;
            } else lbl-1000: // 3 sources:
            {
                var3_3 = -1;
            }
        }
        switch (var3_3) {
            default: {
                return false;
            }
            case 2: {
                var0 = "fiam_integration";
                break;
            }
            case 1: {
                var0 = "fdl_integration";
                break;
            }
            case 0: {
                var0 = "fcm_integration";
            }
        }
        var2_2.putString("_cis", var0);
        return true;
    }

    public static AnalyticsConnector.ConditionalUserProperty zzd(AppMeasurement.ConditionalUserProperty conditionalUserProperty) {
        AnalyticsConnector.ConditionalUserProperty conditionalUserProperty2 = new AnalyticsConnector.ConditionalUserProperty();
        conditionalUserProperty2.origin = conditionalUserProperty.mOrigin;
        conditionalUserProperty2.active = conditionalUserProperty.mActive;
        conditionalUserProperty2.creationTimestamp = conditionalUserProperty.mCreationTimestamp;
        conditionalUserProperty2.expiredEventName = conditionalUserProperty.mExpiredEventName;
        if (conditionalUserProperty.mExpiredEventParams != null) {
            conditionalUserProperty2.expiredEventParams = new Bundle(conditionalUserProperty.mExpiredEventParams);
        }
        conditionalUserProperty2.name = conditionalUserProperty.mName;
        conditionalUserProperty2.timedOutEventName = conditionalUserProperty.mTimedOutEventName;
        if (conditionalUserProperty.mTimedOutEventParams != null) {
            conditionalUserProperty2.timedOutEventParams = new Bundle(conditionalUserProperty.mTimedOutEventParams);
        }
        conditionalUserProperty2.timeToLive = conditionalUserProperty.mTimeToLive;
        conditionalUserProperty2.triggeredEventName = conditionalUserProperty.mTriggeredEventName;
        if (conditionalUserProperty.mTriggeredEventParams != null) {
            conditionalUserProperty2.triggeredEventParams = new Bundle(conditionalUserProperty.mTriggeredEventParams);
        }
        conditionalUserProperty2.triggeredTimestamp = conditionalUserProperty.mTriggeredTimestamp;
        conditionalUserProperty2.triggerEventName = conditionalUserProperty.mTriggerEventName;
        conditionalUserProperty2.triggerTimeout = conditionalUserProperty.mTriggerTimeout;
        if (conditionalUserProperty.mValue != null) {
            conditionalUserProperty2.value = zzkd.zzf(conditionalUserProperty.mValue);
        }
        return conditionalUserProperty2;
    }

    public static boolean zzff(@NonNull String string2) {
        if (!zzbqn.contains(string2)) {
            return true;
        }
        return false;
    }

    public static boolean zzfg(String string2) {
        int n;
        if (string2 == null) {
            return false;
        }
        if (string2.length() == 0) {
            return false;
        }
        int n2 = string2.codePointAt(0);
        if (!Character.isLetter(n2)) {
            return false;
        }
        int n3 = string2.length();
        for (n2 = Character.charCount((int)n2); n2 < n3; n2 += Character.charCount((int)n)) {
            n = string2.codePointAt(n2);
            if (n == 95 || Character.isLetterOrDigit(n)) continue;
            return false;
        }
        return true;
    }

    public static boolean zzfh(String string2) {
        int n;
        if (string2 == null) {
            return false;
        }
        if (string2.length() == 0) {
            return false;
        }
        int n2 = string2.codePointAt(0);
        if (!Character.isLetter(n2) && n2 != 95) {
            return false;
        }
        int n3 = string2.length();
        for (n2 = Character.charCount((int)n2); n2 < n3; n2 += Character.charCount((int)n)) {
            n = string2.codePointAt(n2);
            if (n == 95 || Character.isLetterOrDigit(n)) continue;
            return false;
        }
        return true;
    }

    public static String zzfi(String string2) {
        String string3 = AppMeasurement.Event.zzak(string2);
        if (string3 != null) {
            return string3;
        }
        return string2;
    }

    public static String zzfj(String string2) {
        String string3 = AppMeasurement.Event.zzal(string2);
        if (string3 != null) {
            return string3;
        }
        return string2;
    }

    public static boolean zzw(@NonNull String object, @NonNull String string2) {
        if (!"_ce1".equals(string2) && !"_ce2".equals(string2)) {
            if ("_ln".equals(string2)) {
                return object.equals("fcm");
            }
            if (zzbqp.contains(string2)) {
                return false;
            }
            object = zzbqq.iterator();
            while (object.hasNext()) {
                if (!string2.matches((String)object.next())) continue;
                return false;
            }
            return true;
        }
        if (!object.equals("fcm")) {
            if (object.equals("frc")) {
                return true;
            }
            return false;
        }
        return true;
    }
}

