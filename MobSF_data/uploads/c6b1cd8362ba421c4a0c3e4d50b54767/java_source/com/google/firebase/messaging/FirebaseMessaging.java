/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.PendingIntent
 *  android.content.Context
 *  android.content.Intent
 *  android.os.Bundle
 *  android.os.Parcelable
 *  android.text.TextUtils
 *  android.util.Log
 */
package com.google.firebase.messaging;

import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Parcelable;
import android.text.TextUtils;
import android.util.Log;
import com.google.android.gms.tasks.Task;
import com.google.firebase.FirebaseApp;
import com.google.firebase.iid.FirebaseInstanceId;
import com.google.firebase.messaging.RemoteMessage;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class FirebaseMessaging {
    public static final String INSTANCE_ID_SCOPE = "FCM";
    private static final Pattern zzdj = Pattern.compile("[a-zA-Z0-9-_.~%]{1,900}");
    private static FirebaseMessaging zzdk;
    private final FirebaseInstanceId zzda;

    private FirebaseMessaging(FirebaseInstanceId firebaseInstanceId) {
        this.zzda = firebaseInstanceId;
    }

    public static FirebaseMessaging getInstance() {
        synchronized (FirebaseMessaging.class) {
            if (zzdk == null) {
                zzdk = new FirebaseMessaging(FirebaseInstanceId.getInstance());
            }
            FirebaseMessaging firebaseMessaging = zzdk;
            return firebaseMessaging;
        }
    }

    public boolean isAutoInitEnabled() {
        return this.zzda.zzs();
    }

    public void send(RemoteMessage remoteMessage) {
        if (TextUtils.isEmpty((CharSequence)remoteMessage.getTo())) {
            throw new IllegalArgumentException("Missing 'to'");
        }
        Context context = FirebaseApp.getInstance().getApplicationContext();
        Intent intent = new Intent("com.google.android.gcm.intent.SEND");
        Intent intent2 = new Intent();
        intent2.setPackage("com.google.example.invalidpackage");
        intent.putExtra("app", (Parcelable)PendingIntent.getBroadcast((Context)context, (int)0, (Intent)intent2, (int)0));
        intent.setPackage("com.google.android.gms");
        intent.putExtras(remoteMessage.zzdm);
        context.sendOrderedBroadcast(intent, "com.google.android.gtalkservice.permission.GTALK_SERVICE");
    }

    public void setAutoInitEnabled(boolean bl) {
        this.zzda.zzb(bl);
    }

    public Task<Void> subscribeToTopic(String charSequence) {
        String string2 = charSequence;
        if (charSequence != null) {
            string2 = charSequence;
            if (charSequence.startsWith("/topics/")) {
                Log.w((String)"FirebaseMessaging", (String)"Format /topics/topic-name is deprecated. Only 'topic-name' should be used in subscribeToTopic.");
                string2 = charSequence.substring(8);
            }
        }
        if (string2 != null && zzdj.matcher(string2).matches()) {
            FirebaseInstanceId firebaseInstanceId = this.zzda;
            charSequence = String.valueOf("S!");
            charSequence = (string2 = String.valueOf(string2)).length() != 0 ? charSequence.concat(string2) : new String((String)charSequence);
            return firebaseInstanceId.zza((String)charSequence);
        }
        charSequence = new StringBuilder(String.valueOf(string2).length() + 78);
        charSequence.append("Invalid topic name: ");
        charSequence.append(string2);
        charSequence.append(" does not match the allowed format [a-zA-Z0-9-_.~%]{1,900}");
        throw new IllegalArgumentException(charSequence.toString());
    }

    public Task<Void> unsubscribeFromTopic(String charSequence) {
        String string2 = charSequence;
        if (charSequence != null) {
            string2 = charSequence;
            if (charSequence.startsWith("/topics/")) {
                Log.w((String)"FirebaseMessaging", (String)"Format /topics/topic-name is deprecated. Only 'topic-name' should be used in unsubscribeFromTopic.");
                string2 = charSequence.substring(8);
            }
        }
        if (string2 != null && zzdj.matcher(string2).matches()) {
            FirebaseInstanceId firebaseInstanceId = this.zzda;
            charSequence = String.valueOf("U!");
            charSequence = (string2 = String.valueOf(string2)).length() != 0 ? charSequence.concat(string2) : new String((String)charSequence);
            return firebaseInstanceId.zza((String)charSequence);
        }
        charSequence = new StringBuilder(String.valueOf(string2).length() + 78);
        charSequence.append("Invalid topic name: ");
        charSequence.append(string2);
        charSequence.append(" does not match the allowed format [a-zA-Z0-9-_.~%]{1,900}");
        throw new IllegalArgumentException(charSequence.toString());
    }
}

