/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.text.TextUtils
 */
package com.google.firebase;

import android.content.Context;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import com.google.android.gms.common.internal.Objects;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.internal.StringResourceValueReader;
import com.google.android.gms.common.util.Strings;

public final class FirebaseOptions {
    private final String zza;
    private final String zzb;
    private final String zzc;
    private final String zzd;
    private final String zze;
    private final String zzf;
    private final String zzg;

    private FirebaseOptions(@NonNull String string2, @NonNull String string3, @Nullable String string4, @Nullable String string5, @Nullable String string6, @Nullable String string7, @Nullable String string8) {
        Preconditions.checkState(Strings.isEmptyOrWhitespace(string2) ^ true, "ApplicationId must be set.");
        this.zzb = string2;
        this.zza = string3;
        this.zzc = string4;
        this.zzd = string5;
        this.zze = string6;
        this.zzf = string7;
        this.zzg = string8;
    }

    /* synthetic */ FirebaseOptions(String string2, String string3, String string4, String string5, String string6, String string7, String string8, byte by) {
        this(string2, string3, string4, string5, string6, string7, string8);
    }

    public static FirebaseOptions fromResource(Context object) {
        String string2 = (object = new StringResourceValueReader((Context)object)).getString("google_app_id");
        if (TextUtils.isEmpty((CharSequence)string2)) {
            return null;
        }
        return new FirebaseOptions(string2, object.getString("google_api_key"), object.getString("firebase_database_url"), object.getString("ga_trackingId"), object.getString("gcm_defaultSenderId"), object.getString("google_storage_bucket"), object.getString("project_id"));
    }

    public final boolean equals(Object object) {
        if (!(object instanceof FirebaseOptions)) {
            return false;
        }
        object = (FirebaseOptions)object;
        if (Objects.equal(this.zzb, object.zzb) && Objects.equal(this.zza, object.zza) && Objects.equal(this.zzc, object.zzc) && Objects.equal(this.zzd, object.zzd) && Objects.equal(this.zze, object.zze) && Objects.equal(this.zzf, object.zzf) && Objects.equal(this.zzg, object.zzg)) {
            return true;
        }
        return false;
    }

    public final String getApiKey() {
        return this.zza;
    }

    public final String getApplicationId() {
        return this.zzb;
    }

    public final String getDatabaseUrl() {
        return this.zzc;
    }

    public final String getGaTrackingId() {
        return this.zzd;
    }

    public final String getGcmSenderId() {
        return this.zze;
    }

    public final String getProjectId() {
        return this.zzg;
    }

    public final String getStorageBucket() {
        return this.zzf;
    }

    public final int hashCode() {
        return Objects.hashCode(this.zzb, this.zza, this.zzc, this.zzd, this.zze, this.zzf, this.zzg);
    }

    public final String toString() {
        return Objects.toStringHelper(this).add("applicationId", this.zzb).add("apiKey", this.zza).add("databaseUrl", this.zzc).add("gcmSenderId", this.zze).add("storageBucket", this.zzf).add("projectId", this.zzg).toString();
    }

    public static final class Builder {
        private String zza;
        private String zzb;
        private String zzc;
        private String zzd;
        private String zze;
        private String zzf;
        private String zzg;

        public Builder() {
        }

        public Builder(FirebaseOptions firebaseOptions) {
            this.zzb = firebaseOptions.zzb;
            this.zza = firebaseOptions.zza;
            this.zzc = firebaseOptions.zzc;
            this.zzd = firebaseOptions.zzd;
            this.zze = firebaseOptions.zze;
            this.zzf = firebaseOptions.zzf;
            this.zzg = firebaseOptions.zzg;
        }

        public final FirebaseOptions build() {
            return new FirebaseOptions(this.zzb, this.zza, this.zzc, this.zzd, this.zze, this.zzf, this.zzg, 0);
        }

        public final Builder setApiKey(@NonNull String string2) {
            this.zza = Preconditions.checkNotEmpty(string2, "ApiKey must be set.");
            return this;
        }

        public final Builder setApplicationId(@NonNull String string2) {
            this.zzb = Preconditions.checkNotEmpty(string2, "ApplicationId must be set.");
            return this;
        }

        public final Builder setDatabaseUrl(@Nullable String string2) {
            this.zzc = string2;
            return this;
        }

        public final Builder setGaTrackingId(@Nullable String string2) {
            this.zzd = string2;
            return this;
        }

        public final Builder setGcmSenderId(@Nullable String string2) {
            this.zze = string2;
            return this;
        }

        public final Builder setProjectId(@Nullable String string2) {
            this.zzg = string2;
            return this;
        }

        public final Builder setStorageBucket(@Nullable String string2) {
            this.zzf = string2;
            return this;
        }
    }

}

