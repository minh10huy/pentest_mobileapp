/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Intent
 *  android.os.Bundle
 *  android.os.IBinder
 *  android.os.IInterface
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  android.os.RemoteException
 */
package com.google.android.gms.dynamic;

import android.content.Intent;
import android.os.Bundle;
import android.os.IBinder;
import android.os.IInterface;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.RemoteException;
import com.google.android.gms.dynamic.IObjectWrapper;
import com.google.android.gms.internal.stable.zza;
import com.google.android.gms.internal.stable.zzb;
import com.google.android.gms.internal.stable.zzc;

public interface IFragmentWrapper
extends IInterface {
    public IObjectWrapper getActivity() throws RemoteException;

    public Bundle getArguments() throws RemoteException;

    public int getId() throws RemoteException;

    public IFragmentWrapper getParentFragment() throws RemoteException;

    public IObjectWrapper getResources() throws RemoteException;

    public boolean getRetainInstance() throws RemoteException;

    public String getTag() throws RemoteException;

    public IFragmentWrapper getTargetFragment() throws RemoteException;

    public int getTargetRequestCode() throws RemoteException;

    public boolean getUserVisibleHint() throws RemoteException;

    public IObjectWrapper getView() throws RemoteException;

    public boolean isAdded() throws RemoteException;

    public boolean isDetached() throws RemoteException;

    public boolean isHidden() throws RemoteException;

    public boolean isInLayout() throws RemoteException;

    public boolean isRemoving() throws RemoteException;

    public boolean isResumed() throws RemoteException;

    public boolean isVisible() throws RemoteException;

    public void registerForContextMenu(IObjectWrapper var1) throws RemoteException;

    public void setHasOptionsMenu(boolean var1) throws RemoteException;

    public void setMenuVisibility(boolean var1) throws RemoteException;

    public void setRetainInstance(boolean var1) throws RemoteException;

    public void setUserVisibleHint(boolean var1) throws RemoteException;

    public void startActivity(Intent var1) throws RemoteException;

    public void startActivityForResult(Intent var1, int var2) throws RemoteException;

    public void unregisterForContextMenu(IObjectWrapper var1) throws RemoteException;

    public static abstract class Stub
    extends zzb
    implements IFragmentWrapper {
        public Stub() {
            super("com.google.android.gms.dynamic.IFragmentWrapper");
        }

        public static IFragmentWrapper asInterface(IBinder iBinder) {
            if (iBinder == null) {
                return null;
            }
            IInterface iInterface = iBinder.queryLocalInterface("com.google.android.gms.dynamic.IFragmentWrapper");
            if (iInterface instanceof IFragmentWrapper) {
                return (IFragmentWrapper)iInterface;
            }
            return new Proxy(iBinder);
        }

        /*
         * Unable to fully structure code
         * Enabled aggressive block sorting
         * Lifted jumps to return sites
         */
        @Override
        protected boolean dispatchTransaction(int var1_1, Parcel var2_2, Parcel var3_3, int var4_4) throws RemoteException {
            block28 : {
                switch (var1_1) {
                    default: {
                        return false;
                    }
                    case 27: {
                        this.unregisterForContextMenu(IObjectWrapper.Stub.asInterface(var2_2 /* !! */ .readStrongBinder()));
                        ** GOTO lbl27
                    }
                    case 26: {
                        this.startActivityForResult((Intent)zzc.zza(var2_2 /* !! */ , Intent.CREATOR), var2_2 /* !! */ .readInt());
                        ** GOTO lbl27
                    }
                    case 25: {
                        this.startActivity((Intent)zzc.zza(var2_2 /* !! */ , Intent.CREATOR));
                        ** GOTO lbl27
                    }
                    case 24: {
                        this.setUserVisibleHint(zzc.zza(var2_2 /* !! */ ));
                        ** GOTO lbl27
                    }
                    case 23: {
                        this.setRetainInstance(zzc.zza(var2_2 /* !! */ ));
                        ** GOTO lbl27
                    }
                    case 22: {
                        this.setMenuVisibility(zzc.zza(var2_2 /* !! */ ));
                        ** GOTO lbl27
                    }
                    case 21: {
                        this.setHasOptionsMenu(zzc.zza(var2_2 /* !! */ ));
                        ** GOTO lbl27
                    }
                    case 20: {
                        this.registerForContextMenu(IObjectWrapper.Stub.asInterface(var2_2 /* !! */ .readStrongBinder()));
lbl27: // 8 sources:
                        var3_11.writeNoException();
                        return true;
                    }
                    case 19: {
                        var5_13 = this.isVisible();
                        ** GOTO lbl69
                    }
                    case 18: {
                        var5_13 = this.isResumed();
                        ** GOTO lbl69
                    }
                    case 17: {
                        var5_13 = this.isRemoving();
                        ** GOTO lbl69
                    }
                    case 16: {
                        var5_13 = this.isInLayout();
                        ** GOTO lbl69
                    }
                    case 15: {
                        var5_13 = this.isHidden();
                        ** GOTO lbl69
                    }
                    case 14: {
                        var5_13 = this.isDetached();
                        ** GOTO lbl69
                    }
                    case 13: {
                        var5_13 = this.isAdded();
                        ** GOTO lbl69
                    }
                    case 12: {
                        var2_3 = this.getView();
                        break block28;
                    }
                    case 11: {
                        var5_13 = this.getUserVisibleHint();
                        ** GOTO lbl69
                    }
                    case 10: {
                        var1_1 = this.getTargetRequestCode();
                        ** GOTO lbl80
                    }
                    case 9: {
                        var2_4 = this.getTargetFragment();
                        break block28;
                    }
                    case 8: {
                        var2_5 = this.getTag();
                        var3_11.writeNoException();
                        var3_11.writeString(var2_5);
                        return true;
                    }
                    case 7: {
                        var5_13 = this.getRetainInstance();
lbl69: // 9 sources:
                        var3_11.writeNoException();
                        zzc.zza((Parcel)var3_11, var5_13);
                        return true;
                    }
                    case 6: {
                        var2_6 = this.getResources();
                        break block28;
                    }
                    case 5: {
                        var2_7 = this.getParentFragment();
                        break block28;
                    }
                    case 4: {
                        var1_1 = this.getId();
lbl80: // 2 sources:
                        var3_11.writeNoException();
                        var3_11.writeInt(var1_1);
                        return true;
                    }
                    case 3: {
                        var2_8 = this.getArguments();
                        var3_11.writeNoException();
                        zzc.zzb((Parcel)var3_11, (Parcelable)var2_8);
                        return true;
                    }
                    case 2: 
                }
                var2_9 = this.getActivity();
            }
            var3_11.writeNoException();
            zzc.zza((Parcel)var3_11, (IInterface)var2_10);
            return true;
        }

        public static class Proxy
        extends zza
        implements IFragmentWrapper {
            Proxy(IBinder iBinder) {
                super(iBinder, "com.google.android.gms.dynamic.IFragmentWrapper");
            }

            @Override
            public IObjectWrapper getActivity() throws RemoteException {
                Parcel parcel = this.transactAndReadException(2, this.obtainAndWriteInterfaceToken());
                IObjectWrapper iObjectWrapper = IObjectWrapper.Stub.asInterface(parcel.readStrongBinder());
                parcel.recycle();
                return iObjectWrapper;
            }

            @Override
            public Bundle getArguments() throws RemoteException {
                Parcel parcel = this.transactAndReadException(3, this.obtainAndWriteInterfaceToken());
                Bundle bundle = (Bundle)zzc.zza(parcel, Bundle.CREATOR);
                parcel.recycle();
                return bundle;
            }

            @Override
            public int getId() throws RemoteException {
                Parcel parcel = this.transactAndReadException(4, this.obtainAndWriteInterfaceToken());
                int n = parcel.readInt();
                parcel.recycle();
                return n;
            }

            @Override
            public IFragmentWrapper getParentFragment() throws RemoteException {
                Parcel parcel = this.transactAndReadException(5, this.obtainAndWriteInterfaceToken());
                IFragmentWrapper iFragmentWrapper = Stub.asInterface(parcel.readStrongBinder());
                parcel.recycle();
                return iFragmentWrapper;
            }

            @Override
            public IObjectWrapper getResources() throws RemoteException {
                Parcel parcel = this.transactAndReadException(6, this.obtainAndWriteInterfaceToken());
                IObjectWrapper iObjectWrapper = IObjectWrapper.Stub.asInterface(parcel.readStrongBinder());
                parcel.recycle();
                return iObjectWrapper;
            }

            @Override
            public boolean getRetainInstance() throws RemoteException {
                Parcel parcel = this.transactAndReadException(7, this.obtainAndWriteInterfaceToken());
                boolean bl = zzc.zza(parcel);
                parcel.recycle();
                return bl;
            }

            @Override
            public String getTag() throws RemoteException {
                Parcel parcel = this.transactAndReadException(8, this.obtainAndWriteInterfaceToken());
                String string2 = parcel.readString();
                parcel.recycle();
                return string2;
            }

            @Override
            public IFragmentWrapper getTargetFragment() throws RemoteException {
                Parcel parcel = this.transactAndReadException(9, this.obtainAndWriteInterfaceToken());
                IFragmentWrapper iFragmentWrapper = Stub.asInterface(parcel.readStrongBinder());
                parcel.recycle();
                return iFragmentWrapper;
            }

            @Override
            public int getTargetRequestCode() throws RemoteException {
                Parcel parcel = this.transactAndReadException(10, this.obtainAndWriteInterfaceToken());
                int n = parcel.readInt();
                parcel.recycle();
                return n;
            }

            @Override
            public boolean getUserVisibleHint() throws RemoteException {
                Parcel parcel = this.transactAndReadException(11, this.obtainAndWriteInterfaceToken());
                boolean bl = zzc.zza(parcel);
                parcel.recycle();
                return bl;
            }

            @Override
            public IObjectWrapper getView() throws RemoteException {
                Parcel parcel = this.transactAndReadException(12, this.obtainAndWriteInterfaceToken());
                IObjectWrapper iObjectWrapper = IObjectWrapper.Stub.asInterface(parcel.readStrongBinder());
                parcel.recycle();
                return iObjectWrapper;
            }

            @Override
            public boolean isAdded() throws RemoteException {
                Parcel parcel = this.transactAndReadException(13, this.obtainAndWriteInterfaceToken());
                boolean bl = zzc.zza(parcel);
                parcel.recycle();
                return bl;
            }

            @Override
            public boolean isDetached() throws RemoteException {
                Parcel parcel = this.transactAndReadException(14, this.obtainAndWriteInterfaceToken());
                boolean bl = zzc.zza(parcel);
                parcel.recycle();
                return bl;
            }

            @Override
            public boolean isHidden() throws RemoteException {
                Parcel parcel = this.transactAndReadException(15, this.obtainAndWriteInterfaceToken());
                boolean bl = zzc.zza(parcel);
                parcel.recycle();
                return bl;
            }

            @Override
            public boolean isInLayout() throws RemoteException {
                Parcel parcel = this.transactAndReadException(16, this.obtainAndWriteInterfaceToken());
                boolean bl = zzc.zza(parcel);
                parcel.recycle();
                return bl;
            }

            @Override
            public boolean isRemoving() throws RemoteException {
                Parcel parcel = this.transactAndReadException(17, this.obtainAndWriteInterfaceToken());
                boolean bl = zzc.zza(parcel);
                parcel.recycle();
                return bl;
            }

            @Override
            public boolean isResumed() throws RemoteException {
                Parcel parcel = this.transactAndReadException(18, this.obtainAndWriteInterfaceToken());
                boolean bl = zzc.zza(parcel);
                parcel.recycle();
                return bl;
            }

            @Override
            public boolean isVisible() throws RemoteException {
                Parcel parcel = this.transactAndReadException(19, this.obtainAndWriteInterfaceToken());
                boolean bl = zzc.zza(parcel);
                parcel.recycle();
                return bl;
            }

            @Override
            public void registerForContextMenu(IObjectWrapper iObjectWrapper) throws RemoteException {
                Parcel parcel = this.obtainAndWriteInterfaceToken();
                zzc.zza(parcel, iObjectWrapper);
                this.transactAndReadExceptionReturnVoid(20, parcel);
            }

            @Override
            public void setHasOptionsMenu(boolean bl) throws RemoteException {
                Parcel parcel = this.obtainAndWriteInterfaceToken();
                zzc.zza(parcel, bl);
                this.transactAndReadExceptionReturnVoid(21, parcel);
            }

            @Override
            public void setMenuVisibility(boolean bl) throws RemoteException {
                Parcel parcel = this.obtainAndWriteInterfaceToken();
                zzc.zza(parcel, bl);
                this.transactAndReadExceptionReturnVoid(22, parcel);
            }

            @Override
            public void setRetainInstance(boolean bl) throws RemoteException {
                Parcel parcel = this.obtainAndWriteInterfaceToken();
                zzc.zza(parcel, bl);
                this.transactAndReadExceptionReturnVoid(23, parcel);
            }

            @Override
            public void setUserVisibleHint(boolean bl) throws RemoteException {
                Parcel parcel = this.obtainAndWriteInterfaceToken();
                zzc.zza(parcel, bl);
                this.transactAndReadExceptionReturnVoid(24, parcel);
            }

            @Override
            public void startActivity(Intent intent) throws RemoteException {
                Parcel parcel = this.obtainAndWriteInterfaceToken();
                zzc.zza(parcel, (Parcelable)intent);
                this.transactAndReadExceptionReturnVoid(25, parcel);
            }

            @Override
            public void startActivityForResult(Intent intent, int n) throws RemoteException {
                Parcel parcel = this.obtainAndWriteInterfaceToken();
                zzc.zza(parcel, (Parcelable)intent);
                parcel.writeInt(n);
                this.transactAndReadExceptionReturnVoid(26, parcel);
            }

            @Override
            public void unregisterForContextMenu(IObjectWrapper iObjectWrapper) throws RemoteException {
                Parcel parcel = this.obtainAndWriteInterfaceToken();
                zzc.zza(parcel, iObjectWrapper);
                this.transactAndReadExceptionReturnVoid(27, parcel);
            }
        }

    }

}

