/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.IBinder
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  android.os.RemoteException
 */
package com.google.android.gms.internal.measurement;

import android.os.IBinder;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.RemoteException;
import com.google.android.gms.internal.measurement.zzeb;
import com.google.android.gms.internal.measurement.zzef;
import com.google.android.gms.internal.measurement.zzex;
import com.google.android.gms.internal.measurement.zzfa;
import com.google.android.gms.internal.measurement.zzka;
import com.google.android.gms.internal.measurement.zzn;
import com.google.android.gms.internal.measurement.zzp;
import java.util.ArrayList;
import java.util.List;

public final class zzfc
extends zzn
implements zzfa {
    zzfc(IBinder iBinder) {
        super(iBinder, "com.google.android.gms.measurement.internal.IMeasurementService");
    }

    @Override
    public final List<zzka> zza(zzeb zzeb2, boolean bl) throws RemoteException {
        Object object = this.obtainAndWriteInterfaceToken();
        zzp.zza(object, zzeb2);
        zzp.writeBoolean(object, bl);
        zzeb2 = this.transactAndReadException(7, (Parcel)object);
        object = zzeb2.createTypedArrayList(zzka.CREATOR);
        zzeb2.recycle();
        return object;
    }

    @Override
    public final List<zzef> zza(String string2, String object, zzeb zzeb2) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        parcel.writeString(string2);
        parcel.writeString((String)object);
        zzp.zza(parcel, zzeb2);
        string2 = this.transactAndReadException(16, parcel);
        object = string2.createTypedArrayList(zzef.CREATOR);
        string2.recycle();
        return object;
    }

    @Override
    public final List<zzka> zza(String string2, String object, String string3, boolean bl) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        parcel.writeString(string2);
        parcel.writeString((String)object);
        parcel.writeString(string3);
        zzp.writeBoolean(parcel, bl);
        string2 = this.transactAndReadException(15, parcel);
        object = string2.createTypedArrayList(zzka.CREATOR);
        string2.recycle();
        return object;
    }

    @Override
    public final List<zzka> zza(String string2, String object, boolean bl, zzeb zzeb2) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        parcel.writeString(string2);
        parcel.writeString((String)object);
        zzp.writeBoolean(parcel, bl);
        zzp.zza(parcel, zzeb2);
        string2 = this.transactAndReadException(14, parcel);
        object = string2.createTypedArrayList(zzka.CREATOR);
        string2.recycle();
        return object;
    }

    @Override
    public final void zza(long l, String string2, String string3, String string4) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        parcel.writeLong(l);
        parcel.writeString(string2);
        parcel.writeString(string3);
        parcel.writeString(string4);
        this.transactAndReadExceptionReturnVoid(10, parcel);
    }

    @Override
    public final void zza(zzeb zzeb2) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        zzp.zza(parcel, zzeb2);
        this.transactAndReadExceptionReturnVoid(4, parcel);
    }

    @Override
    public final void zza(zzef zzef2, zzeb zzeb2) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        zzp.zza(parcel, zzef2);
        zzp.zza(parcel, zzeb2);
        this.transactAndReadExceptionReturnVoid(12, parcel);
    }

    @Override
    public final void zza(zzex zzex2, zzeb zzeb2) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        zzp.zza(parcel, zzex2);
        zzp.zza(parcel, zzeb2);
        this.transactAndReadExceptionReturnVoid(1, parcel);
    }

    @Override
    public final void zza(zzex zzex2, String string2, String string3) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        zzp.zza(parcel, zzex2);
        parcel.writeString(string2);
        parcel.writeString(string3);
        this.transactAndReadExceptionReturnVoid(5, parcel);
    }

    @Override
    public final void zza(zzka zzka2, zzeb zzeb2) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        zzp.zza(parcel, zzka2);
        zzp.zza(parcel, zzeb2);
        this.transactAndReadExceptionReturnVoid(2, parcel);
    }

    @Override
    public final byte[] zza(zzex zzex2, String arrby) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        zzp.zza(parcel, zzex2);
        parcel.writeString((String)arrby);
        zzex2 = this.transactAndReadException(9, parcel);
        arrby = zzex2.createByteArray();
        zzex2.recycle();
        return arrby;
    }

    @Override
    public final void zzb(zzeb zzeb2) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        zzp.zza(parcel, zzeb2);
        this.transactAndReadExceptionReturnVoid(6, parcel);
    }

    @Override
    public final void zzb(zzef zzef2) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        zzp.zza(parcel, zzef2);
        this.transactAndReadExceptionReturnVoid(13, parcel);
    }

    @Override
    public final String zzc(zzeb zzeb2) throws RemoteException {
        Object object = this.obtainAndWriteInterfaceToken();
        zzp.zza(object, zzeb2);
        zzeb2 = this.transactAndReadException(11, (Parcel)object);
        object = zzeb2.readString();
        zzeb2.recycle();
        return object;
    }

    @Override
    public final void zzd(zzeb zzeb2) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        zzp.zza(parcel, zzeb2);
        this.transactAndReadExceptionReturnVoid(18, parcel);
    }

    @Override
    public final List<zzef> zze(String string2, String object, String string3) throws RemoteException {
        Parcel parcel = this.obtainAndWriteInterfaceToken();
        parcel.writeString(string2);
        parcel.writeString((String)object);
        parcel.writeString(string3);
        string2 = this.transactAndReadException(17, parcel);
        object = string2.createTypedArrayList(zzef.CREATOR);
        string2.recycle();
        return object;
    }
}

