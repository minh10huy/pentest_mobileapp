/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.SharedPreferences
 *  android.content.SharedPreferences$Editor
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.text.TextUtils
 *  android.util.Pair
 */
package com.google.android.gms.internal.measurement;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Build;
import android.support.annotation.NonNull;
import android.support.annotation.WorkerThread;
import android.text.TextUtils;
import android.util.Pair;
import com.google.android.gms.ads.identifier.AdvertisingIdClient;
import com.google.android.gms.common.util.Clock;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.internal.measurement.zzeh;
import com.google.android.gms.internal.measurement.zzer;
import com.google.android.gms.internal.measurement.zzez;
import com.google.android.gms.internal.measurement.zzfi;
import com.google.android.gms.internal.measurement.zzfk;
import com.google.android.gms.internal.measurement.zzfu;
import com.google.android.gms.internal.measurement.zzfv;
import com.google.android.gms.internal.measurement.zzfw;
import com.google.android.gms.internal.measurement.zzfx;
import com.google.android.gms.internal.measurement.zzfy;
import com.google.android.gms.internal.measurement.zzgn;
import com.google.android.gms.internal.measurement.zzhj;
import com.google.android.gms.internal.measurement.zzkd;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.util.Locale;

final class zzft
extends zzhj {
    @VisibleForTesting
    static final Pair<String, Long> zzalr = new Pair((Object)"", (Object)0L);
    private SharedPreferences zzabe;
    public zzfx zzals;
    public final zzfw zzalt = new zzfw(this, "last_upload", 0L);
    public final zzfw zzalu = new zzfw(this, "last_upload_attempt", 0L);
    public final zzfw zzalv = new zzfw(this, "backoff", 0L);
    public final zzfw zzalw = new zzfw(this, "last_delete_stale", 0L);
    public final zzfw zzalx = new zzfw(this, "midnight_offset", 0L);
    public final zzfw zzaly = new zzfw(this, "first_open_time", 0L);
    public final zzfw zzalz = new zzfw(this, "app_install_time", 0L);
    public final zzfy zzama = new zzfy(this, "app_instance_id", null);
    private String zzamb;
    private boolean zzamc;
    private long zzamd;
    private String zzame;
    private long zzamf;
    private final Object zzamg = new Object();
    public final zzfw zzamh = new zzfw(this, "time_before_start", 10000L);
    public final zzfw zzami = new zzfw(this, "session_timeout", 1800000L);
    public final zzfv zzamj = new zzfv(this, "start_new_session", true);
    public final zzfw zzamk = new zzfw(this, "last_pause_time", 0L);
    public final zzfw zzaml = new zzfw(this, "time_active", 0L);
    public boolean zzamm;

    zzft(zzgn zzgn2) {
        super(zzgn2);
    }

    static /* synthetic */ SharedPreferences zza(zzft zzft2) {
        return zzft2.zzji();
    }

    @WorkerThread
    private final SharedPreferences zzji() {
        this.zzab();
        this.zzch();
        return this.zzabe;
    }

    @WorkerThread
    final void setMeasurementEnabled(boolean bl) {
        this.zzab();
        this.zzgi().zzjc().zzg("Setting measurementEnabled", bl);
        SharedPreferences.Editor editor = this.zzji().edit();
        editor.putBoolean("measurement_enabled", bl);
        editor.apply();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @NonNull
    @WorkerThread
    final Pair<String, Boolean> zzbr(String object) {
        this.zzab();
        long l = this.zzbt().elapsedRealtime();
        if (this.zzamb != null && l < this.zzamd) {
            return new Pair((Object)this.zzamb, (Object)this.zzamc);
        }
        this.zzamd = l + this.zzgk().zza((String)object, zzez.zzaif);
        AdvertisingIdClient.setShouldSkipGmsCoreVersionCheck(true);
        try {
            object = AdvertisingIdClient.getAdvertisingIdInfo(this.getContext());
            if (object != null) {
                this.zzamb = object.getId();
                this.zzamc = object.isLimitAdTrackingEnabled();
            }
            if (this.zzamb == null) {
                this.zzamb = "";
            }
        }
        catch (Exception exception) {
            this.zzgi().zzjb().zzg("Unable to get advertising id", exception);
            this.zzamb = "";
        }
        AdvertisingIdClient.setShouldSkipGmsCoreVersionCheck(false);
        return new Pair((Object)this.zzamb, (Object)this.zzamc);
    }

    @WorkerThread
    final String zzbs(String string2) {
        this.zzab();
        string2 = (String)this.zzbr((String)string2).first;
        MessageDigest messageDigest = zzkd.getMessageDigest();
        if (messageDigest == null) {
            return null;
        }
        return String.format(Locale.US, "%032X", new BigInteger(1, messageDigest.digest(string2.getBytes())));
    }

    @WorkerThread
    final void zzbt(String string2) {
        this.zzab();
        SharedPreferences.Editor editor = this.zzji().edit();
        editor.putString("gmp_app_id", string2);
        editor.apply();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    final void zzbu(String string2) {
        Object object = this.zzamg;
        synchronized (object) {
            this.zzame = string2;
            this.zzamf = this.zzbt().elapsedRealtime();
            return;
        }
    }

    @WorkerThread
    final void zzf(boolean bl) {
        this.zzab();
        this.zzgi().zzjc().zzg("Setting useService", bl);
        SharedPreferences.Editor editor = this.zzji().edit();
        editor.putBoolean("use_service", bl);
        editor.apply();
    }

    @WorkerThread
    final boolean zzg(boolean bl) {
        this.zzab();
        return this.zzji().getBoolean("measurement_enabled", bl);
    }

    @Override
    protected final boolean zzgn() {
        return true;
    }

    @WorkerThread
    @Override
    protected final void zzgo() {
        this.zzabe = this.getContext().getSharedPreferences("com.google.android.gms.measurement.prefs", 0);
        this.zzamm = this.zzabe.getBoolean("has_been_opened", false);
        if (!this.zzamm) {
            SharedPreferences.Editor editor = this.zzabe.edit();
            editor.putBoolean("has_been_opened", true);
            editor.apply();
        }
        this.zzals = new zzfx(this, "health_monitor", Math.max(0L, zzez.zzaig.get()), null);
    }

    @WorkerThread
    final void zzh(boolean bl) {
        this.zzab();
        this.zzgi().zzjc().zzg("Updating deferred analytics collection", bl);
        SharedPreferences.Editor editor = this.zzji().edit();
        editor.putBoolean("deferred_analytics_collection", bl);
        editor.apply();
    }

    @WorkerThread
    final String zzjj() {
        this.zzab();
        return this.zzji().getString("gmp_app_id", null);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    final String zzjk() {
        Object object = this.zzamg;
        synchronized (object) {
            if (Math.abs(this.zzbt().elapsedRealtime() - this.zzamf) >= 1000L) return null;
            return this.zzame;
        }
    }

    @WorkerThread
    final Boolean zzjl() {
        this.zzab();
        if (!this.zzji().contains("use_service")) {
            return null;
        }
        return this.zzji().getBoolean("use_service", false);
    }

    @WorkerThread
    final void zzjm() {
        this.zzab();
        this.zzgi().zzjc().log("Clearing collection preferences.");
        boolean bl = this.zzji().contains("measurement_enabled");
        boolean bl2 = true;
        if (bl) {
            bl2 = this.zzg(true);
        }
        SharedPreferences.Editor editor = this.zzji().edit();
        editor.clear();
        editor.apply();
        if (bl) {
            this.setMeasurementEnabled(bl2);
        }
    }

    @WorkerThread
    protected final String zzjn() {
        this.zzab();
        String string2 = this.zzji().getString("previous_os_version", null);
        this.zzge().zzch();
        String string3 = Build.VERSION.RELEASE;
        if (!TextUtils.isEmpty((CharSequence)string3) && !string3.equals(string2)) {
            SharedPreferences.Editor editor = this.zzji().edit();
            editor.putString("previous_os_version", string3);
            editor.apply();
        }
        return string2;
    }

    @WorkerThread
    final boolean zzjo() {
        this.zzab();
        return this.zzji().getBoolean("deferred_analytics_collection", false);
    }

    @WorkerThread
    final boolean zzjp() {
        return this.zzabe.contains("deferred_analytics_collection");
    }
}

