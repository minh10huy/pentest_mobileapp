/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Bundle
 */
package com.google.android.gms.common.api.internal;

import android.os.Bundle;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.common.api.internal.BaseImplementation;
import com.google.android.gms.common.api.internal.zzav;
import com.google.android.gms.common.api.internal.zzbc;
import com.google.android.gms.common.api.internal.zzbd;
import java.util.Collection;
import java.util.Collections;
import java.util.Iterator;
import java.util.Map;
import java.util.Queue;
import java.util.Set;

public final class zzau
implements zzbc {
    private final zzbd zzhf;

    public zzau(zzbd zzbd2) {
        this.zzhf = zzbd2;
    }

    @Override
    public final void begin() {
        Iterator<Api.Client> iterator = this.zzhf.zzil.values().iterator();
        while (iterator.hasNext()) {
            iterator.next().disconnect();
        }
        this.zzhf.zzfq.zzim = Collections.emptySet();
    }

    @Override
    public final void connect() {
        this.zzhf.zzbc();
    }

    @Override
    public final boolean disconnect() {
        return true;
    }

    @Override
    public final <A extends Api.AnyClient, R extends Result, T extends BaseImplementation.ApiMethodImpl<R, A>> T enqueue(T t) {
        this.zzhf.zzfq.zzgo.add((BaseImplementation.ApiMethodImpl<?, ?>)t);
        return t;
    }

    @Override
    public final <A extends Api.AnyClient, T extends BaseImplementation.ApiMethodImpl<? extends Result, A>> T execute(T t) {
        throw new IllegalStateException("GoogleApiClient is not connected yet.");
    }

    @Override
    public final void onConnected(Bundle bundle) {
    }

    @Override
    public final void onConnectionSuspended(int n) {
    }

    @Override
    public final void zza(ConnectionResult connectionResult, Api<?> api, boolean bl) {
    }
}

