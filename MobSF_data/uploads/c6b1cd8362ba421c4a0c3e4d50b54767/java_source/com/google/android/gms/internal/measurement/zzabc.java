/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal.measurement;

import com.google.android.gms.internal.measurement.zzabo;
import com.google.android.gms.internal.measurement.zzabq;
import com.google.android.gms.internal.measurement.zzzv;
import java.lang.reflect.Constructor;

final class zzabc {
    private static final Class<?> zzbwa = zzabc.zzuw();
    private static final zzabo<?, ?> zzbwb = zzabc.zzu(false);
    private static final zzabo<?, ?> zzbwc = zzabc.zzu(true);
    private static final zzabo<?, ?> zzbwd = new zzabq();

    public static void zzh(Class<?> class_) {
        if (!zzzv.class.isAssignableFrom(class_) && zzbwa != null && !zzbwa.isAssignableFrom(class_)) {
            throw new IllegalArgumentException("Message classes must extend GeneratedMessage or GeneratedMessageLite");
        }
    }

    private static zzabo<?, ?> zzu(boolean bl) {
        Object object;
        block3 : {
            try {
                object = zzabc.zzux();
                if (object != null) break block3;
                return null;
            }
            catch (Throwable throwable) {
                return null;
            }
        }
        object = (zzabo)object.getConstructor(Boolean.TYPE).newInstance(bl);
        return object;
    }

    public static zzabo<?, ?> zzut() {
        return zzbwb;
    }

    public static zzabo<?, ?> zzuu() {
        return zzbwc;
    }

    public static zzabo<?, ?> zzuv() {
        return zzbwd;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private static Class<?> zzuw() {
        try {
            return Class.forName("com.google.protobuf.GeneratedMessage");
        }
        catch (Throwable throwable) {
            return null;
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private static Class<?> zzux() {
        try {
            return Class.forName("com.google.protobuf.UnknownFieldSetSchema");
        }
        catch (Throwable throwable) {
            return null;
        }
    }
}

