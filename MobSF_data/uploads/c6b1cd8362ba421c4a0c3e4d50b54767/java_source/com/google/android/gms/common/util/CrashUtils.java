/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.ContentResolver
 *  android.content.Context
 *  android.content.pm.PackageInfo
 *  android.os.Build
 *  android.os.Debug
 *  android.os.DropBoxManager
 *  android.provider.Settings
 *  android.provider.Settings$Secure
 *  android.text.TextUtils
 *  android.util.Log
 *  javax.annotation.concurrent.GuardedBy
 */
package com.google.android.gms.common.util;

import android.content.ContentResolver;
import android.content.Context;
import android.content.pm.PackageInfo;
import android.os.Build;
import android.os.Debug;
import android.os.DropBoxManager;
import android.provider.Settings;
import android.text.TextUtils;
import android.util.Log;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.util.ProcessUtils;
import com.google.android.gms.common.util.Strings;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.common.wrappers.Wrappers;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.lang.annotation.Annotation;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.util.ArrayList;
import java.util.LinkedList;
import javax.annotation.concurrent.GuardedBy;

public final class CrashUtils {
    private static final String[] zzzc = new String[]{"android.", "com.android.", "dalvik.", "java.", "javax."};
    private static DropBoxManager zzzd;
    private static boolean zzze = false;
    private static boolean zzzf = false;
    private static boolean zzzg = false;
    private static int zzzh = -1;
    @GuardedBy(value="CrashUtils.class")
    private static int zzzi;
    @GuardedBy(value="CrashUtils.class")
    private static int zzzj;

    public static boolean addDynamiteErrorToDropBox(Context context, Throwable throwable) {
        return CrashUtils.addErrorToDropBoxInternal(context, throwable, 536870912);
    }

    @Deprecated
    public static boolean addErrorToDropBox(Context context, Throwable throwable) {
        return CrashUtils.addDynamiteErrorToDropBox(context, throwable);
    }

    public static boolean addErrorToDropBoxInternal(Context context, String string2, String string3, int n) {
        return CrashUtils.zza(context, string2, string3, n, null);
    }

    public static boolean addErrorToDropBoxInternal(Context context, Throwable throwable, int n) {
        Throwable throwable2;
        block8 : {
            try {
                Preconditions.checkNotNull(context);
                Preconditions.checkNotNull(throwable);
                if (!CrashUtils.isPackageSide()) {
                    return false;
                }
                throwable2 = throwable;
            }
            catch (Exception exception) {
                boolean bl;
                try {
                    bl = CrashUtils.zzdb();
                }
                catch (Exception exception2) {
                    Log.e((String)"CrashUtils", (String)"Error determining which process we're running in!", (Throwable)exception2);
                    bl = false;
                }
                if (bl) {
                    throw exception;
                }
                Log.e((String)"CrashUtils", (String)"Error adding exception to DropBox!", (Throwable)exception);
                return false;
            }
            if (CrashUtils.zzdb()) break block8;
            throwable2 = throwable = CrashUtils.zza(throwable);
            if (throwable != null) break block8;
            return false;
        }
        boolean bl = CrashUtils.zza(context, Log.getStackTraceString((Throwable)throwable2), ProcessUtils.getMyProcessName(), n, throwable2);
        return bl;
    }

    private static boolean isPackageSide() {
        if (zzze) {
            return zzzf;
        }
        return false;
    }

    public static boolean isSystemClassPrefixInternal(String string2) {
        if (TextUtils.isEmpty((CharSequence)string2)) {
            return false;
        }
        String[] arrstring = zzzc;
        int n = arrstring.length;
        for (int i = 0; i < n; ++i) {
            if (!string2.startsWith(arrstring[i])) continue;
            return true;
        }
        return false;
    }

    @VisibleForTesting
    public static void setTestVariables(DropBoxManager dropBoxManager, boolean bl, boolean bl2, int n) {
        synchronized (CrashUtils.class) {
            zzze = true;
            zzzd = dropBoxManager;
            zzzg = bl;
            zzzf = bl2;
            zzzh = n;
            zzzi = 0;
            zzzj = 0;
            return;
        }
    }

    /*
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    @VisibleForTesting
    private static String zza(Context object, String object2, String object3, int n) {
        StringBuilder stringBuilder;
        block42 : {
            int n2;
            Object object4;
            block36 : {
                // MONITORENTER : com.google.android.gms.common.util.CrashUtils.class
                stringBuilder = new StringBuilder(1024);
                stringBuilder.append("Process: ");
                stringBuilder.append(Strings.nullToEmpty((String)object3));
                stringBuilder.append("\n");
                stringBuilder.append("Package: com.google.android.gms");
                int n3 = 12451009;
                object4 = "12.4.51 (020308-{{cl}})";
                boolean bl = CrashUtils.zzdb();
                object3 = object4;
                n2 = n3;
                if (bl) {
                    block37 : {
                        PackageInfo packageInfo = Wrappers.packageManager((Context)object).getPackageInfo(object.getPackageName(), 0);
                        n2 = packageInfo.versionCode;
                        object3 = object4;
                        try {
                            if (packageInfo.versionName != null) {
                                object3 = packageInfo.versionName;
                            }
                            break block36;
                        }
                        catch (Exception exception) {
                            break block37;
                        }
                        catch (Exception exception) {
                            n2 = n3;
                        }
                    }
                    Log.w((String)"CrashUtils", (String)"Error while trying to get the package information! Using static version.", (Throwable)object3);
                    object3 = object4;
                }
            }
            stringBuilder.append(" v");
            stringBuilder.append(n2);
            if (!TextUtils.isEmpty((CharSequence)object3)) {
                object4 = object3;
                if (object3.contains("(")) {
                    object4 = object3;
                    if (!object3.contains(")")) {
                        object4 = object3;
                        if (object3.endsWith("-")) {
                            object4 = String.valueOf(object3).concat("111111111");
                        }
                        object4 = String.valueOf(object4).concat(")");
                    }
                }
                stringBuilder.append(" (");
                stringBuilder.append((String)object4);
                stringBuilder.append(")");
            }
            stringBuilder.append("\n");
            stringBuilder.append("Build: ");
            stringBuilder.append(Build.FINGERPRINT);
            stringBuilder.append("\n");
            if (Debug.isDebuggerConnected()) {
                stringBuilder.append("Debugger: Connected\n");
            }
            if (n != 0) {
                stringBuilder.append("DD-EDD: ");
                stringBuilder.append(n);
                stringBuilder.append("\n");
            }
            stringBuilder.append("\n");
            if (!TextUtils.isEmpty((CharSequence)object2)) {
                stringBuilder.append((String)object2);
            }
            n = CrashUtils.zzdb() ? (zzzh >= 0 ? zzzh : Settings.Secure.getInt((ContentResolver)object.getContentResolver(), (String)"logcat_for_system_app_crash", (int)0)) : 0;
            if (n > 0) {
                block40 : {
                    stringBuilder.append("\n");
                    object3 = null;
                    object = object2 = null;
                    try {
                        block41 : {
                            object4 = new ProcessBuilder("/system/bin/logcat", "-v", "time", "-b", "events", "-b", "system", "-b", "main", "-b", "crash", "-t", String.valueOf(n)).redirectErrorStream(true).start();
                            object = object2;
                            try {
                                object4.getOutputStream().close();
                            }
                            catch (IOException iOException) {}
                            object = object2;
                            try {
                                object4.getErrorStream().close();
                            }
                            catch (IOException iOException) {}
                            object = object2;
                            object2 = new InputStreamReader(object4.getInputStream());
                            object = new char[8192];
                            while ((n = object2.read((char[])object)) > 0) {
                                stringBuilder.append((char[])object, 0, n);
                            }
                            object2.close();
                            catch (Throwable throwable) {
                                object = object2;
                                object2 = throwable;
                                break block40;
                            }
                            catch (IOException iOException) {
                                break block41;
                            }
                            catch (IOException iOException) {
                                object2 = object3;
                                object3 = iOException;
                            }
                        }
                        object = object2;
                        Log.e((String)"CrashUtils", (String)"Error running logcat", (Throwable)object3);
                        if (object2 == null) break block42;
                    }
                    catch (Throwable throwable) {
                        break block40;
                    }
                    try {
                        object2.close();
                        break block42;
                    }
                    catch (IOException iOException) {}
                }
                if (object == null) throw object2;
                object.close();
                throw object2;
            }
        }
        object = stringBuilder.toString();
        // MONITOREXIT : com.google.android.gms.common.util.CrashUtils.class
        return object;
        catch (IOException iOException) {
            throw object2;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @VisibleForTesting
    private static Throwable zza(Throwable throwable) {
        synchronized (CrashUtils.class) {
            LinkedList<Throwable> linkedList = new LinkedList<Throwable>();
            while (throwable != null) {
                linkedList.push(throwable);
                throwable = throwable.getCause();
            }
            throwable = null;
            boolean bl = false;
            while (!linkedList.isEmpty()) {
                Object object = (Throwable)linkedList.pop();
                StackTraceElement[] arrstackTraceElement = object.getStackTrace();
                ArrayList<Object> arrayList = new ArrayList<Object>();
                arrayList.add(new StackTraceElement(object.getClass().getName(), "<filtered>", "<filtered>", 1));
                for (StackTraceElement stackTraceElement : arrstackTraceElement) {
                    String string2 = stackTraceElement.getClassName();
                    object = stackTraceElement.getFileName();
                    boolean bl2 = !TextUtils.isEmpty((CharSequence)object) && object.startsWith(":com.google.android.gms");
                    bl |= bl2;
                    object = stackTraceElement;
                    if (!bl2) {
                        object = stackTraceElement;
                        if (!CrashUtils.isSystemClassPrefixInternal(string2)) {
                            object = new StackTraceElement("<filtered>", "<filtered>", "<filtered>", 1);
                        }
                    }
                    arrayList.add(object);
                }
                throwable = throwable == null ? new Throwable("<filtered>") : new Throwable("<filtered>", throwable);
                throwable.setStackTrace(arrayList.toArray(new StackTraceElement[0]));
            }
            return null;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static boolean zza(Context context, String string2, String string3, int n, Throwable throwable) {
        synchronized (CrashUtils.class) {
            void var1_1;
            Preconditions.checkNotNull(context);
            if (CrashUtils.isPackageSide() && !Strings.isEmptyOrWhitespace((String)var1_1)) {
                int n2;
                DropBoxManager dropBoxManager;
                int n3 = var1_1.hashCode();
                int n4 = dropBoxManager == null ? zzzj : dropBoxManager.hashCode();
                if (zzzi == n3 && (n2 = zzzj) == n4) {
                    return false;
                }
                zzzi = n3;
                zzzj = n4;
                dropBoxManager = zzzd != null ? zzzd : (DropBoxManager)context.getSystemService("dropbox");
                if (dropBoxManager != null && dropBoxManager.isTagEnabled("system_app_crash")) {
                    void var3_3;
                    void var2_2;
                    dropBoxManager.addText("system_app_crash", CrashUtils.zza(context, (String)var1_1, (String)var2_2, (int)var3_3));
                    return true;
                }
                return false;
            }
            return false;
        }
    }

    private static boolean zzdb() {
        if (zzze) {
            return zzzg;
        }
        return false;
    }

    @Retention(value=RetentionPolicy.SOURCE)
    public static @interface ErrorDialogData {
        public static final int AVG_CRASH_FREQ = 2;
        public static final int BINDER_CRASH = 268435456;
        public static final int DYNAMITE_CRASH = 536870912;
        public static final int FORCED_SHUSHED_BY_WRAPPER = 4;
        public static final int NONE = 0;
        public static final int POPUP_FREQ = 1;
        public static final int SUPPRESSED = 1073741824;
    }

}

