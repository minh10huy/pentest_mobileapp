/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.app.ActivityManager
 *  android.content.Context
 *  android.content.pm.PackageManager
 *  android.content.res.Configuration
 *  android.content.res.Resources
 *  android.os.Build
 *  android.os.Build$VERSION
 */
package com.google.android.gms.common.util;

import android.annotation.TargetApi;
import android.app.ActivityManager;
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.os.Build;
import com.google.android.gms.common.GooglePlayServicesUtilLight;
import com.google.android.gms.common.internal.Objects;
import com.google.android.gms.common.util.PlatformVersion;
import com.google.android.gms.common.util.VisibleForTesting;

public final class DeviceProperties {
    public static final String FEATURE_AUTO = "android.hardware.type.automotive";
    public static final String FEATURE_CHROME_OS = "org.chromium.arc";
    public static final String FEATURE_EMBEDDED = "android.hardware.type.embedded";
    public static final String FEATURE_IOT = "android.hardware.type.iot";
    public static final String FEATURE_LATCHSKY = "cn.google.services";
    public static final String FEATURE_PIXEL = "com.google.android.feature.PIXEL_EXPERIENCE";
    public static final String FEATURE_SIDEWINDER = "cn.google";
    public static final String FEATURE_TV_1 = "com.google.android.tv";
    public static final String FEATURE_TV_2 = "android.hardware.type.television";
    public static final String FEATURE_TV_3 = "android.software.leanback";
    private static Boolean zzzl;
    private static Boolean zzzm;
    private static Boolean zzzn;
    private static Boolean zzzo;
    private static Boolean zzzp;
    private static Boolean zzzq;
    private static Boolean zzzr;
    private static Boolean zzzs;
    private static Boolean zzzt;
    private static Boolean zzzu;
    private static Boolean zzzv;

    private DeviceProperties() {
    }

    public static boolean isAuto(Context context) {
        if (zzzt == null) {
            boolean bl = PlatformVersion.isAtLeastO() && context.getPackageManager().hasSystemFeature(FEATURE_AUTO);
            zzzt = bl;
        }
        return zzzt;
    }

    public static boolean isChromeOsDevice(Context context) {
        if (zzzs == null) {
            zzzs = context.getPackageManager().hasSystemFeature(FEATURE_CHROME_OS);
        }
        return zzzs;
    }

    public static boolean isIoT(Context context) {
        if (zzzr == null) {
            boolean bl = context.getPackageManager().hasSystemFeature(FEATURE_IOT) || context.getPackageManager().hasSystemFeature(FEATURE_EMBEDDED);
            zzzr = bl;
        }
        return zzzr;
    }

    public static boolean isLatchsky(Context context) {
        if (zzzp == null) {
            boolean bl = PlatformVersion.isAtLeastM() && context.getPackageManager().hasSystemFeature(FEATURE_LATCHSKY);
            zzzp = bl;
        }
        return zzzp;
    }

    public static boolean isLowRamOrPreKitKat(Context context) {
        if (Build.VERSION.SDK_INT < 19) {
            return true;
        }
        if (zzzq == null && (context = (ActivityManager)context.getSystemService("activity")) != null) {
            zzzq = context.isLowRamDevice();
        }
        return Objects.equal(zzzq, Boolean.TRUE);
    }

    public static boolean isPixelDevice(Context context) {
        if (zzzv == null) {
            zzzv = context.getPackageManager().hasSystemFeature(FEATURE_PIXEL);
        }
        return zzzv;
    }

    @TargetApi(value=21)
    public static boolean isSidewinder(Context context) {
        if (zzzo == null) {
            boolean bl = PlatformVersion.isAtLeastLollipop() && context.getPackageManager().hasSystemFeature(FEATURE_SIDEWINDER);
            zzzo = bl;
        }
        return zzzo;
    }

    public static boolean isTablet(Resources resources) {
        block5 : {
            boolean bl;
            block7 : {
                block6 : {
                    boolean bl2 = false;
                    if (resources == null) {
                        return false;
                    }
                    if (zzzl != null) break block5;
                    boolean bl3 = (resources.getConfiguration().screenLayout & 15) > 3;
                    if (bl3) break block6;
                    if (zzzm == null) {
                        resources = resources.getConfiguration();
                        bl = (resources.screenLayout & 15) <= 3 && resources.smallestScreenWidthDp >= 600;
                        zzzm = bl;
                    }
                    bl = bl2;
                    if (!zzzm.booleanValue()) break block7;
                }
                bl = true;
            }
            zzzl = bl;
        }
        return zzzl;
    }

    public static boolean isTv(Context context) {
        if (zzzu == null) {
            boolean bl = (context = context.getPackageManager()).hasSystemFeature(FEATURE_TV_1) || context.hasSystemFeature(FEATURE_TV_2) || context.hasSystemFeature(FEATURE_TV_3);
            zzzu = bl;
        }
        return zzzu;
    }

    public static boolean isUserBuild() {
        if (GooglePlayServicesUtilLight.sIsTestMode) {
            return GooglePlayServicesUtilLight.sTestIsUserBuild;
        }
        return "user".equals(Build.TYPE);
    }

    @TargetApi(value=20)
    public static boolean isWearable(Context context) {
        if (zzzn == null) {
            boolean bl = PlatformVersion.isAtLeastKitKatWatch() && context.getPackageManager().hasSystemFeature("android.hardware.type.watch");
            zzzn = bl;
        }
        return zzzn;
    }

    @TargetApi(value=24)
    public static boolean isWearableWithoutPlayStore(Context context) {
        if ((!PlatformVersion.isAtLeastN() || DeviceProperties.isSidewinder(context)) && DeviceProperties.isWearable(context)) {
            return true;
        }
        return false;
    }

    @VisibleForTesting
    public static void resetForTest() {
        zzzm = null;
        zzzl = null;
        zzzn = null;
        zzzo = null;
        zzzp = null;
        zzzq = null;
        zzzr = null;
        zzzs = null;
        zzzt = null;
        zzzu = null;
        zzzv = null;
    }

    @VisibleForTesting
    public static void setIsAutoForTest(boolean bl) {
        zzzt = bl;
    }

    @VisibleForTesting
    public static void setIsIoTForTest(boolean bl) {
        zzzr = bl;
    }

    @VisibleForTesting
    public static void setIsLatchskyForTest(boolean bl) {
        zzzp = bl;
    }

    @VisibleForTesting
    public static void setIsLowRamForTest(boolean bl) {
        zzzq = bl;
    }

    @VisibleForTesting
    public static void setIsPixelForTest(boolean bl) {
        zzzv = bl;
    }

    @VisibleForTesting
    public static void setIsSideWinderForTest(boolean bl) {
        zzzo = bl;
    }

    @VisibleForTesting
    public static void setIsTvForTest(boolean bl) {
        zzzu = bl;
    }

    @VisibleForTesting
    public static void setIsWearableForTest(boolean bl) {
        zzzn = bl;
    }
}

