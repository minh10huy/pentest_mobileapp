/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.net.Uri
 *  android.text.TextUtils
 */
package com.google.android.gms.common.server;

import android.net.Uri;
import android.text.TextUtils;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.util.DeviceProperties;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BaseApi {
    /*
     * Enabled aggressive block sorting
     */
    @Deprecated
    public static String append(String string2, String string3, String string4) {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(string2);
        char c = string2.indexOf("?") != -1 ? (char)'&' : '?';
        stringBuilder.append(c);
        stringBuilder.append(string3);
        stringBuilder.append('=');
        stringBuilder.append(string4);
        return stringBuilder.toString();
    }

    /*
     * Enabled aggressive block sorting
     */
    public static void append(StringBuilder stringBuilder, String string2, String string3) {
        char c = stringBuilder.indexOf("?") != -1 ? (char)'&' : '?';
        stringBuilder.append(c);
        stringBuilder.append(string2);
        stringBuilder.append('=');
        stringBuilder.append(string3);
    }

    public static String enc(String string2) {
        Preconditions.checkNotNull(string2, "Encoding a null parameter!");
        return Uri.encode((String)string2);
    }

    protected static List<String> enc(List<String> list) {
        int n = list.size();
        ArrayList<String> arrayList = new ArrayList<String>(n);
        for (int i = 0; i < n; ++i) {
            arrayList.add(BaseApi.enc(list.get(i)));
        }
        return arrayList;
    }

    public static class BaseApiaryOptions<DerivedClassType extends BaseApiaryOptions<DerivedClassType>> {
        private final ArrayList<String> zzvt = new ArrayList();
        private final HashMap<String, String> zzvu = new HashMap();
        private String zzvv;
        private final BaseApiaryOptions<DerivedClassType> zzvw = new Collector();

        private static String zzcy() {
            return String.valueOf(DeviceProperties.isUserBuild() ^ true);
        }

        public final DerivedClassType addField(String string2) {
            this.zzvt.add(string2);
            return (DerivedClassType)this;
        }

        @Deprecated
        public final String appendParametersToUrl(String string2) {
            String string3;
            string2 = string3 = BaseApi.append(string2, "prettyPrint", BaseApiaryOptions.zzcy());
            if (this.zzvv != null) {
                string2 = BaseApi.append(string3, "trace", this.getTrace());
            }
            string3 = string2;
            if (!this.zzvt.isEmpty()) {
                string3 = BaseApi.append(string2, "fields", TextUtils.join((CharSequence)",", (Object[])this.getFields().toArray()));
            }
            return string3;
        }

        public void appendParametersToUrl(StringBuilder stringBuilder) {
            BaseApi.append(stringBuilder, "prettyPrint", BaseApiaryOptions.zzcy());
            if (this.zzvv != null) {
                BaseApi.append(stringBuilder, "trace", this.getTrace());
            }
            if (!this.zzvt.isEmpty()) {
                BaseApi.append(stringBuilder, "fields", TextUtils.join((CharSequence)",", (Object[])this.getFields().toArray()));
            }
        }

        public final DerivedClassType buildFrom(BaseApiaryOptions<?> baseApiaryOptions) {
            if (baseApiaryOptions.zzvv != null) {
                this.zzvv = baseApiaryOptions.zzvv;
            }
            if (!baseApiaryOptions.zzvt.isEmpty()) {
                this.zzvt.clear();
                this.zzvt.addAll(baseApiaryOptions.zzvt);
            }
            return (DerivedClassType)this;
        }

        protected final BaseApiaryOptions<DerivedClassType> getCollector() {
            return this.zzvw;
        }

        public final List<String> getFields() {
            return this.zzvt;
        }

        public final Map<String, String> getHeaders() {
            return this.zzvu;
        }

        public final String getTrace() {
            return this.zzvv;
        }

        public final DerivedClassType setEtag(String string2) {
            return this.setHeader("ETag", string2);
        }

        public final DerivedClassType setHeader(String string2, String string3) {
            this.zzvu.put(string2, string3);
            return (DerivedClassType)this;
        }

        public final DerivedClassType setTraceByLdap(String string2) {
            String string3 = String.valueOf("email:");
            string2 = (string2 = String.valueOf(string2)).length() != 0 ? string3.concat(string2) : new String(string3);
            this.zzvv = string2;
            return (DerivedClassType)this;
        }

        public final DerivedClassType setTraceByToken(String string2) {
            String string3 = String.valueOf("token:");
            string2 = (string2 = String.valueOf(string2)).length() != 0 ? string3.concat(string2) : new String(string3);
            this.zzvv = string2;
            return (DerivedClassType)this;
        }

        public final class Collector {
            private boolean zzvx;
            private boolean zzvy;
            private int zzvz;
            private StringBuilder zzwa = new StringBuilder();

            /*
             * Enabled aggressive block sorting
             */
            private final void append(String string2) {
                block4 : {
                    String string3;
                    StringBuilder stringBuilder;
                    block3 : {
                        block2 : {
                            if (!this.zzvx) break block2;
                            this.zzvx = false;
                            stringBuilder = this.zzwa;
                            string3 = ",";
                            break block3;
                        }
                        if (!this.zzvy) break block4;
                        this.zzvy = false;
                        stringBuilder = this.zzwa;
                        string3 = "/";
                    }
                    stringBuilder.append(string3);
                }
                this.zzwa.append(string2);
            }

            public final void addPiece(String string2) {
                this.append(string2);
                this.zzvy = true;
            }

            public final void beginSubCollection(String string2) {
                this.append(string2);
                this.zzwa.append("(");
                ++this.zzvz;
            }

            public final void endSubCollection() {
                this.zzwa.append(")");
                --this.zzvz;
                if (this.zzvz == 0) {
                    BaseApiaryOptions.this.addField(this.zzwa.toString());
                    this.zzwa.setLength(0);
                    this.zzvx = false;
                    this.zzvy = false;
                    return;
                }
                this.zzvx = true;
            }

            public final void finishPiece(String string2) {
                this.append(string2);
                if (this.zzvz == 0) {
                    BaseApiaryOptions.this.addField(this.zzwa.toString());
                    this.zzwa.setLength(0);
                    return;
                }
                this.zzvx = true;
            }
        }

    }

    public static class FieldCollection<Parent> {
        private final BaseApiaryOptions<?> zzvw;
        private final Parent zzwc;

        protected FieldCollection(Parent Parent, BaseApiaryOptions<?> baseApiaryOptions) {
            Object object = Parent;
            if (Parent == null) {
                object = this;
            }
            this.zzwc = object;
            this.zzvw = baseApiaryOptions;
        }

        protected BaseApiaryOptions<?> getCollector() {
            return this.zzvw;
        }

        protected Parent getParent() {
            return this.zzwc;
        }
    }

}

