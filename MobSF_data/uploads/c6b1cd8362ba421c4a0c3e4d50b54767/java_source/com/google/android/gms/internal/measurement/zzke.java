/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal.measurement;

import com.google.android.gms.internal.measurement.zzkf;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;

final class zzke
extends SSLSocketFactory {
    private final SSLSocketFactory zzatb;

    zzke() {
        this(HttpsURLConnection.getDefaultSSLSocketFactory());
    }

    private zzke(SSLSocketFactory sSLSocketFactory) {
        this.zzatb = sSLSocketFactory;
    }

    private final SSLSocket zza(SSLSocket sSLSocket) {
        return new zzkf(this, sSLSocket);
    }

    @Override
    public final Socket createSocket() throws IOException {
        return this.zza((SSLSocket)this.zzatb.createSocket());
    }

    @Override
    public final Socket createSocket(String string2, int n) throws IOException {
        return this.zza((SSLSocket)this.zzatb.createSocket(string2, n));
    }

    @Override
    public final Socket createSocket(String string2, int n, InetAddress inetAddress, int n2) throws IOException {
        return this.zza((SSLSocket)this.zzatb.createSocket(string2, n, inetAddress, n2));
    }

    @Override
    public final Socket createSocket(InetAddress inetAddress, int n) throws IOException {
        return this.zza((SSLSocket)this.zzatb.createSocket(inetAddress, n));
    }

    @Override
    public final Socket createSocket(InetAddress inetAddress, int n, InetAddress inetAddress2, int n2) throws IOException {
        return this.zza((SSLSocket)this.zzatb.createSocket(inetAddress, n, inetAddress2, n2));
    }

    @Override
    public final Socket createSocket(Socket socket, String string2, int n, boolean bl) throws IOException {
        return this.zza((SSLSocket)this.zzatb.createSocket(socket, string2, n, bl));
    }

    @Override
    public final String[] getDefaultCipherSuites() {
        return this.zzatb.getDefaultCipherSuites();
    }

    @Override
    public final String[] getSupportedCipherSuites() {
        return this.zzatb.getSupportedCipherSuites();
    }
}

