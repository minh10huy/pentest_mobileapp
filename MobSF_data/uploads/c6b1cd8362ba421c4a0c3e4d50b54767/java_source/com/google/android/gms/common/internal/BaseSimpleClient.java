/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.DeadObjectException
 *  android.os.IInterface
 */
package com.google.android.gms.common.internal;

import android.content.Context;
import android.os.DeadObjectException;
import android.os.IInterface;
import com.google.android.gms.common.Feature;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.internal.Preconditions;

public abstract class BaseSimpleClient<T extends IInterface>
implements Api.SimpleClient<T> {
    private final Context mContext;
    private final Object mLock = new Object();
    private int mState = 1;
    private T zzrj = null;

    public BaseSimpleClient(Context context) {
        this.mContext = context;
    }

    public Context getContext() {
        return this.mContext;
    }

    public Feature[] getRequiredFeatures() {
        return new Feature[0];
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public T getService() throws DeadObjectException {
        Object object = this.mLock;
        synchronized (object) {
            if (this.mState == 5) {
                throw new DeadObjectException();
            }
            if (this.mState != 4) {
                throw new IllegalStateException("Not connected. Call connect() and wait for onConnected() to be called.");
            }
            boolean bl = this.zzrj != null;
            Preconditions.checkState(bl, "Client is connected but service is null");
            T t = this.zzrj;
            return t;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public void setState(int n, T t) {
        Object object = this.mLock;
        synchronized (object) {
            this.mState = n;
            this.zzrj = t;
            return;
        }
    }
}

