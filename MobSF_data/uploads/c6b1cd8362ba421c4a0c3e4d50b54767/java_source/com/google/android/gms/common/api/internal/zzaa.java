/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.common.api.internal;

import com.google.android.gms.common.api.ApiException;
import com.google.android.gms.common.api.PendingResult;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.api.internal.BasePendingResult;
import com.google.android.gms.common.api.internal.GoogleApiManager;
import com.google.android.gms.common.api.internal.zzab;
import com.google.android.gms.common.api.internal.zzac;
import com.google.android.gms.common.api.internal.zzck;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.android.gms.tasks.TaskCompletionSource;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;

public final class zzaa {
    private final Map<BasePendingResult<?>, Boolean> zzgw = Collections.synchronizedMap(new WeakHashMap());
    private final Map<TaskCompletionSource<?>, Boolean> zzgx = Collections.synchronizedMap(new WeakHashMap());

    static /* synthetic */ Map zza(zzaa zzaa2) {
        return zzaa2.zzgw;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void zza(boolean bl, Status status) {
        Object object;
        Object object2 = this.zzgw;
        synchronized (object2) {
            object = new HashMap(this.zzgw);
        }
        Object object32 = this.zzgx;
        synchronized (object32) {
            object2 = new HashMap(this.zzgx);
        }
        for (Object object32 : object.entrySet()) {
            if (!bl && !((Boolean)object32.getValue()).booleanValue()) continue;
            ((BasePendingResult)object32.getKey()).zzb(status);
        }
        object2 = object2.entrySet().iterator();
        while (object2.hasNext()) {
            object = (Map.Entry)object2.next();
            if (!bl && !((Boolean)object.getValue()).booleanValue()) continue;
            ((TaskCompletionSource)object.getKey()).trySetException(new ApiException(status));
        }
        return;
    }

    static /* synthetic */ Map zzb(zzaa zzaa2) {
        return zzaa2.zzgx;
    }

    final void zza(BasePendingResult<? extends Result> basePendingResult, boolean bl) {
        this.zzgw.put(basePendingResult, bl);
        basePendingResult.addStatusListener(new zzab(this, basePendingResult));
    }

    final <TResult> void zza(TaskCompletionSource<TResult> taskCompletionSource, boolean bl) {
        this.zzgx.put(taskCompletionSource, bl);
        taskCompletionSource.getTask().addOnCompleteListener(new zzac(this, taskCompletionSource));
    }

    final boolean zzaj() {
        if (this.zzgw.isEmpty() && this.zzgx.isEmpty()) {
            return false;
        }
        return true;
    }

    public final void zzak() {
        this.zza(false, GoogleApiManager.zzjj);
    }

    public final void zzal() {
        this.zza(true, zzck.zzmm);
    }
}

