/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.ComponentName
 *  android.content.Context
 *  android.content.Intent
 *  android.content.ServiceConnection
 *  android.os.IBinder
 *  android.os.Message
 */
package com.google.android.gms.common.internal;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.IBinder;
import android.os.Message;
import com.google.android.gms.common.internal.GmsClientSupervisor;
import com.google.android.gms.common.internal.zzh;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

final class zzi
implements ServiceConnection {
    private ComponentName mComponentName;
    private int mState;
    private IBinder zzry;
    private final Set<ServiceConnection> zztv;
    private boolean zztw;
    private final GmsClientSupervisor.ConnectionStatusConfig zztx;
    private final /* synthetic */ zzh zzty;

    public zzi(zzh zzh2, GmsClientSupervisor.ConnectionStatusConfig connectionStatusConfig) {
        this.zzty = zzh2;
        this.zztx = connectionStatusConfig;
        this.zztv = new HashSet<ServiceConnection>();
        this.mState = 2;
    }

    static /* synthetic */ GmsClientSupervisor.ConnectionStatusConfig zza(zzi zzi2) {
        return zzi2.zztx;
    }

    public final IBinder getBinder() {
        return this.zzry;
    }

    public final ComponentName getComponentName() {
        return this.mComponentName;
    }

    public final int getState() {
        return this.mState;
    }

    public final boolean isBound() {
        return this.zztw;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void onServiceConnected(ComponentName componentName, IBinder iBinder) {
        HashMap hashMap = zzh.zza(this.zzty);
        synchronized (hashMap) {
            zzh.zzb(this.zzty).removeMessages(1, (Object)this.zztx);
            this.zzry = iBinder;
            this.mComponentName = componentName;
            Iterator<ServiceConnection> iterator = this.zztv.iterator();
            do {
                if (!iterator.hasNext()) {
                    this.mState = 1;
                    return;
                }
                iterator.next().onServiceConnected(componentName, iBinder);
            } while (true);
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void onServiceDisconnected(ComponentName componentName) {
        HashMap hashMap = zzh.zza(this.zzty);
        synchronized (hashMap) {
            zzh.zzb(this.zzty).removeMessages(1, (Object)this.zztx);
            this.zzry = null;
            this.mComponentName = componentName;
            Iterator<ServiceConnection> iterator = this.zztv.iterator();
            do {
                if (!iterator.hasNext()) {
                    this.mState = 2;
                    return;
                }
                iterator.next().onServiceDisconnected(componentName);
            } while (true);
        }
    }

    public final void zza(ServiceConnection serviceConnection, String string2) {
        zzh.zzd(this.zzty).logConnectService(zzh.zzc(this.zzty), serviceConnection, string2, this.zztx.getStartServiceIntent(zzh.zzc(this.zzty)));
        this.zztv.add(serviceConnection);
    }

    public final boolean zza(ServiceConnection serviceConnection) {
        return this.zztv.contains((Object)serviceConnection);
    }

    public final void zzb(ServiceConnection serviceConnection, String string2) {
        zzh.zzd(this.zzty).logDisconnectService(zzh.zzc(this.zzty), serviceConnection);
        this.zztv.remove((Object)serviceConnection);
    }

    public final boolean zzcv() {
        return this.zztv.isEmpty();
    }

    public final void zzj(String string2) {
        this.mState = 3;
        this.zztw = zzh.zzd(this.zzty).bindService(zzh.zzc(this.zzty), string2, this.zztx.getStartServiceIntent(zzh.zzc(this.zzty)), this, this.zztx.getBindFlags());
        if (this.zztw) {
            string2 = zzh.zzb(this.zzty).obtainMessage(1, (Object)this.zztx);
            zzh.zzb(this.zzty).sendMessageDelayed((Message)string2, zzh.zze(this.zzty));
            return;
        }
        this.mState = 2;
        try {
            zzh.zzd(this.zzty).unbindService(zzh.zzc(this.zzty), this);
            return;
        }
        catch (IllegalArgumentException illegalArgumentException) {
            return;
        }
    }

    public final void zzk(String string2) {
        zzh.zzb(this.zzty).removeMessages(1, (Object)this.zztx);
        zzh.zzd(this.zzty).unbindService(zzh.zzc(this.zzty), this);
        this.zztw = false;
        this.mState = 2;
    }
}

