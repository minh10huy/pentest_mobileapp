/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.common.data;

import com.google.android.gms.common.data.DataBufferObserver;
import java.util.HashSet;
import java.util.Iterator;

public final class DataBufferObserverSet
implements DataBufferObserver,
DataBufferObserver.Observable {
    private HashSet<DataBufferObserver> zzni = new HashSet();

    @Override
    public final void addObserver(DataBufferObserver dataBufferObserver) {
        this.zzni.add(dataBufferObserver);
    }

    public final void clear() {
        this.zzni.clear();
    }

    public final boolean hasObservers() {
        if (!this.zzni.isEmpty()) {
            return true;
        }
        return false;
    }

    @Override
    public final void onDataChanged() {
        Iterator<DataBufferObserver> iterator = this.zzni.iterator();
        while (iterator.hasNext()) {
            iterator.next().onDataChanged();
        }
    }

    @Override
    public final void onDataRangeChanged(int n, int n2) {
        Iterator<DataBufferObserver> iterator = this.zzni.iterator();
        while (iterator.hasNext()) {
            iterator.next().onDataRangeChanged(n, n2);
        }
    }

    @Override
    public final void onDataRangeInserted(int n, int n2) {
        Iterator<DataBufferObserver> iterator = this.zzni.iterator();
        while (iterator.hasNext()) {
            iterator.next().onDataRangeInserted(n, n2);
        }
    }

    @Override
    public final void onDataRangeMoved(int n, int n2, int n3) {
        Iterator<DataBufferObserver> iterator = this.zzni.iterator();
        while (iterator.hasNext()) {
            iterator.next().onDataRangeMoved(n, n2, n3);
        }
    }

    @Override
    public final void onDataRangeRemoved(int n, int n2) {
        Iterator<DataBufferObserver> iterator = this.zzni.iterator();
        while (iterator.hasNext()) {
            iterator.next().onDataRangeRemoved(n, n2);
        }
    }

    @Override
    public final void removeObserver(DataBufferObserver dataBufferObserver) {
        this.zzni.remove(dataBufferObserver);
    }
}

