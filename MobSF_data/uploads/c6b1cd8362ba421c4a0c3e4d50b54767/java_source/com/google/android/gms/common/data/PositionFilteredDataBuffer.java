/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.common.data;

import com.google.android.gms.common.data.AbstractDataBuffer;
import com.google.android.gms.common.data.DataBuffer;
import com.google.android.gms.common.data.FilteredDataBuffer;
import java.util.ArrayList;
import java.util.HashSet;

public final class PositionFilteredDataBuffer<T>
extends FilteredDataBuffer<T> {
    private final ArrayList<Integer> zzob = new ArrayList();
    private final HashSet<Integer> zzoe = new HashSet();

    public PositionFilteredDataBuffer(AbstractDataBuffer<T> abstractDataBuffer) {
        super(abstractDataBuffer);
        this.zzcl();
    }

    private final void zzcl() {
        this.zzob.clear();
        int n = this.mDataBuffer.getCount();
        for (int i = 0; i < n; ++i) {
            if (this.zzoe.contains(i)) continue;
            this.zzob.add(i);
        }
    }

    public final void clearFilters() {
        this.zzoe.clear();
        this.zzcl();
    }

    @Override
    public final int computeRealPosition(int n) {
        if (n >= 0 && n < this.getCount()) {
            return this.zzob.get(n);
        }
        StringBuilder stringBuilder = new StringBuilder(53);
        stringBuilder.append("Position ");
        stringBuilder.append(n);
        stringBuilder.append(" is out of bounds for this buffer");
        throw new IllegalArgumentException(stringBuilder.toString());
    }

    public final void filterOut(int n) {
        if (n >= 0 && n <= this.mDataBuffer.getCount()) {
            this.zzoe.add(n);
            this.zzcl();
        }
    }

    @Override
    public final int getCount() {
        return this.mDataBuffer.getCount() - this.zzoe.size();
    }

    public final void unfilter(int n) {
        this.zzoe.remove(n);
        this.zzcl();
    }
}

