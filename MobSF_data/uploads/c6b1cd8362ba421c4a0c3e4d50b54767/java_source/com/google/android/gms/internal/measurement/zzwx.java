/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.SuppressLint
 *  android.annotation.TargetApi
 *  android.content.ContentResolver
 *  android.content.Context
 *  android.content.SharedPreferences
 *  android.os.Binder
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.util.Log
 *  javax.annotation.Nullable
 */
package com.google.android.gms.internal.measurement;

import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.content.ContentResolver;
import android.content.Context;
import android.content.SharedPreferences;
import android.os.Binder;
import android.os.Build;
import android.support.v4.content.PermissionChecker;
import android.util.Log;
import com.google.android.gms.internal.measurement.zzws;
import com.google.android.gms.internal.measurement.zzwu;
import com.google.android.gms.internal.measurement.zzwy;
import com.google.android.gms.internal.measurement.zzwz;
import com.google.android.gms.internal.measurement.zzxa;
import com.google.android.gms.internal.measurement.zzxb;
import com.google.android.gms.internal.measurement.zzxc;
import com.google.android.gms.internal.measurement.zzxd;
import com.google.android.gms.internal.measurement.zzxe;
import com.google.android.gms.internal.measurement.zzxf;
import com.google.android.gms.internal.measurement.zzxg;
import com.google.android.gms.internal.measurement.zzxh;
import javax.annotation.Nullable;

public abstract class zzwx<T> {
    private static final Object zzbpg = new Object();
    private static boolean zzbph = false;
    private static volatile Boolean zzbpi;
    @SuppressLint(value={"StaticFieldLeak"})
    private static Context zzqx;
    private final zzxh zzbpj;
    final String zzbpk;
    private final String zzbpl;
    private final T zzbpm;
    private T zzbpn = null;
    private volatile zzwu zzbpo = null;
    private volatile SharedPreferences zzbpp = null;

    private zzwx(zzxh object, String string2, T t) {
        if (zzxh.zza((zzxh)object) == null) {
            throw new IllegalArgumentException("Must pass a valid SharedPreferences file name or ContentProvider URI");
        }
        this.zzbpj = object;
        String string3 = String.valueOf(zzxh.zzb((zzxh)object));
        String string4 = String.valueOf(string2);
        string3 = string4.length() != 0 ? string3.concat(string4) : new String(string3);
        this.zzbpl = string3;
        object = String.valueOf(zzxh.zzc((zzxh)object));
        string2 = String.valueOf(string2);
        object = string2.length() != 0 ? object.concat(string2) : new String((String)object);
        this.zzbpk = object;
        this.zzbpm = t;
    }

    /* synthetic */ zzwx(zzxh zzxh2, String string2, Object object, zzxb zzxb2) {
        this(zzxh2, string2, object);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static void init(Context context) {
        Object object = zzbpg;
        synchronized (object) {
            Context context2;
            if (!(Build.VERSION.SDK_INT >= 24 && context.isDeviceProtectedStorage() || (context2 = context.getApplicationContext()) == null)) {
                context = context2;
            }
            if (zzqx != context) {
                zzbpi = null;
            }
            zzqx = context;
        }
        zzbph = false;
    }

    private static zzwx<Double> zza(zzxh zzxh2, String string2, double d) {
        return new zzxe(zzxh2, string2, d);
    }

    private static zzwx<Integer> zza(zzxh zzxh2, String string2, int n) {
        return new zzxc(zzxh2, string2, n);
    }

    private static zzwx<Long> zza(zzxh zzxh2, String string2, long l) {
        return new zzxb(zzxh2, string2, l);
    }

    private static zzwx<String> zza(zzxh zzxh2, String string2, String string3) {
        return new zzxf(zzxh2, string2, string3);
    }

    private static zzwx<Boolean> zza(zzxh zzxh2, String string2, boolean bl) {
        return new zzxd(zzxh2, string2, bl);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static <V> V zza(zzxg<V> zzxg2) {
        V v;
        try {
            v = zzxg2.zzsq();
        }
        catch (SecurityException securityException) {}
        return v;
        long l = Binder.clearCallingIdentity();
        try {
            V v2 = zzxg2.zzsq();
            return v2;
        }
        finally {
            Binder.restoreCallingIdentity((long)l);
        }
    }

    static /* synthetic */ zzwx zzb(zzxh zzxh2, String string2, double d) {
        return zzwx.zza(zzxh2, string2, d);
    }

    static /* synthetic */ zzwx zzb(zzxh zzxh2, String string2, int n) {
        return zzwx.zza(zzxh2, string2, n);
    }

    static /* synthetic */ zzwx zzb(zzxh zzxh2, String string2, long l) {
        return zzwx.zza(zzxh2, string2, l);
    }

    static /* synthetic */ zzwx zzb(zzxh zzxh2, String string2, String string3) {
        return zzwx.zza(zzxh2, string2, string3);
    }

    static /* synthetic */ zzwx zzb(zzxh zzxh2, String string2, boolean bl) {
        return zzwx.zza(zzxh2, string2, bl);
    }

    static boolean zzd(String string2, boolean bl) {
        try {
            if (zzwx.zzso()) {
                bl = (Boolean)zzwx.zza(new zzxa(string2, false));
                return bl;
            }
            return false;
        }
        catch (SecurityException securityException) {
            Log.e((String)"PhenotypeFlag", (String)"Unable to read GServices, returning default value.", (Throwable)securityException);
            return false;
        }
    }

    static final /* synthetic */ Boolean zze(String string2, boolean bl) {
        return zzws.zza(zzqx.getContentResolver(), string2, bl);
    }

    @Nullable
    @TargetApi(value=24)
    private final T zzsm() {
        if (!zzwx.zzd("gms:phenotype:phenotype_flag:debug_bypass_phenotype", false)) {
            if (zzxh.zza(this.zzbpj) != null) {
                String string2;
                if (this.zzbpo == null) {
                    this.zzbpo = zzwu.zza(zzqx.getContentResolver(), zzxh.zza(this.zzbpj));
                }
                if ((string2 = (String)zzwx.zza(new zzwy(this, this.zzbpo))) != null) {
                    return this.zzfa(string2);
                }
            } else {
                zzxh zzxh2 = this.zzbpj;
            }
        } else {
            String string3 = String.valueOf(this.zzbpk);
            string3 = string3.length() != 0 ? "Bypass reading Phenotype values for flag: ".concat(string3) : new String("Bypass reading Phenotype values for flag: ");
            Log.w((String)"PhenotypeFlag", (String)string3);
        }
        return null;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @Nullable
    private final T zzsn() {
        Object object = this.zzbpj;
        if (!zzwx.zzso()) return null;
        object = (String)zzwx.zza(new zzwz(this));
        if (object == null) return null;
        try {
            object = this.zzfa((String)object);
        }
        catch (SecurityException securityException) {
            object = String.valueOf(this.zzbpk);
            object = object.length() != 0 ? "Unable to read GServices for flag: ".concat((String)object) : new String("Unable to read GServices for flag: ");
            Log.e((String)"PhenotypeFlag", (String)object, (Throwable)securityException);
        }
        return (T)object;
        return null;
    }

    private static boolean zzso() {
        if (zzbpi == null) {
            Context context = zzqx;
            boolean bl = false;
            if (context != null) {
                if (PermissionChecker.checkSelfPermission(zzqx, "com.google.android.providers.gsf.permission.READ_GSERVICES") == 0) {
                    bl = true;
                }
                zzbpi = bl;
            } else {
                return false;
            }
        }
        return zzbpi;
    }

    public final T get() {
        if (zzqx == null) {
            throw new IllegalStateException("Must call PhenotypeFlag.init() first");
        }
        zzxh zzxh2 = this.zzbpj;
        zzxh2 = this.zzsm();
        if (zzxh2 != null) {
            return (T)zzxh2;
        }
        zzxh2 = this.zzsn();
        if (zzxh2 != null) {
            return (T)zzxh2;
        }
        return this.zzbpm;
    }

    protected abstract T zzfa(String var1);

    final /* synthetic */ String zzsp() {
        return zzws.zza(zzqx.getContentResolver(), this.zzbpl, null);
    }
}

