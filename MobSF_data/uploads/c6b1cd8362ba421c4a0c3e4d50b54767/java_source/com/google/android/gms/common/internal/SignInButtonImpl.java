/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.res.ColorStateList
 *  android.content.res.Resources
 *  android.graphics.PorterDuff
 *  android.graphics.PorterDuff$Mode
 *  android.graphics.Typeface
 *  android.graphics.drawable.Drawable
 *  android.text.method.TransformationMethod
 *  android.util.AttributeSet
 *  android.util.DisplayMetrics
 *  android.widget.Button
 */
package com.google.android.gms.common.internal;

import android.content.Context;
import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.graphics.PorterDuff;
import android.graphics.Typeface;
import android.graphics.drawable.Drawable;
import android.support.v4.graphics.drawable.DrawableCompat;
import android.text.method.TransformationMethod;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.widget.Button;
import com.google.android.gms.base.R;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.internal.SignInButtonConfig;
import com.google.android.gms.common.util.DeviceProperties;

public final class SignInButtonImpl
extends Button {
    public SignInButtonImpl(Context context) {
        this(context, null);
    }

    public SignInButtonImpl(Context context, AttributeSet attributeSet) {
        super(context, attributeSet, 16842824);
    }

    private static int zza(int n, int n2, int n3, int n4) {
        switch (n) {
            default: {
                StringBuilder stringBuilder = new StringBuilder(33);
                stringBuilder.append("Unknown color scheme: ");
                stringBuilder.append(n);
                throw new IllegalStateException(stringBuilder.toString());
            }
            case 2: {
                return n4;
            }
            case 1: {
                return n3;
            }
            case 0: 
        }
        return n2;
    }

    public final void configure(Resources object, int n, int n2) {
        block10 : {
            this.setTypeface(Typeface.DEFAULT_BOLD);
            this.setTextSize(14.0f);
            int n3 = (int)(object.getDisplayMetrics().density * 48.0f + 0.5f);
            this.setMinHeight(n3);
            this.setMinWidth(n3);
            n3 = SignInButtonImpl.zza(n2, R.drawable.common_google_signin_btn_icon_dark, R.drawable.common_google_signin_btn_icon_light, R.drawable.common_google_signin_btn_icon_light);
            int n4 = SignInButtonImpl.zza(n2, R.drawable.common_google_signin_btn_text_dark, R.drawable.common_google_signin_btn_text_light, R.drawable.common_google_signin_btn_text_light);
            switch (n) {
                default: {
                    object = new StringBuilder(32);
                    object.append("Unknown button size: ");
                    object.append(n);
                    throw new IllegalStateException(object.toString());
                }
                case 0: 
                case 1: {
                    n3 = n4;
                }
                case 2: 
            }
            Drawable drawable2 = DrawableCompat.wrap(object.getDrawable(n3));
            DrawableCompat.setTintList(drawable2, object.getColorStateList(R.color.common_google_signin_btn_tint));
            DrawableCompat.setTintMode(drawable2, PorterDuff.Mode.SRC_ATOP);
            this.setBackgroundDrawable(drawable2);
            this.setTextColor(Preconditions.checkNotNull(object.getColorStateList(SignInButtonImpl.zza(n2, R.color.common_google_signin_btn_text_dark, R.color.common_google_signin_btn_text_light, R.color.common_google_signin_btn_text_light))));
            switch (n) {
                default: {
                    object = new StringBuilder(32);
                    object.append("Unknown button size: ");
                    object.append(n);
                    throw new IllegalStateException(object.toString());
                }
                case 2: {
                    this.setText(null);
                    break block10;
                }
                case 1: {
                    n = R.string.common_signin_button_text_long;
                    break;
                }
                case 0: {
                    n = R.string.common_signin_button_text;
                }
            }
            this.setText((CharSequence)object.getString(n));
        }
        this.setTransformationMethod(null);
        if (DeviceProperties.isWearable(this.getContext())) {
            this.setGravity(19);
        }
    }

    public final void configure(Resources resources, SignInButtonConfig signInButtonConfig) {
        this.configure(resources, signInButtonConfig.getButtonSize(), signInButtonConfig.getColorScheme());
    }
}

