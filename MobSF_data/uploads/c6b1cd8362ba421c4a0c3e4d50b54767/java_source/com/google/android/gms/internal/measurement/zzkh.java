/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal.measurement;

import com.google.android.gms.internal.measurement.zzaca;
import com.google.android.gms.internal.measurement.zzacb;
import com.google.android.gms.internal.measurement.zzacd;
import com.google.android.gms.internal.measurement.zzacf;
import com.google.android.gms.internal.measurement.zzach;
import com.google.android.gms.internal.measurement.zzacj;
import com.google.android.gms.internal.measurement.zzacm;
import com.google.android.gms.internal.measurement.zzki;
import com.google.android.gms.internal.measurement.zzkj;
import java.io.IOException;

public final class zzkh
extends zzacd<zzkh> {
    private static volatile zzkh[] zzatj;
    public Integer zzatk = null;
    public String zzatl = null;
    public zzki[] zzatm = zzki.zzls();
    private Boolean zzatn = null;
    public zzkj zzato = null;

    public zzkh() {
        this.zzbzd = null;
        this.zzbzo = -1;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static zzkh[] zzlr() {
        if (zzatj != null) return zzatj;
        Object object = zzach.zzbzn;
        synchronized (object) {
            if (zzatj != null) return zzatj;
            zzatj = new zzkh[0];
            return zzatj;
        }
    }

    public final boolean equals(Object object) {
        if (object == this) {
            return true;
        }
        if (!(object instanceof zzkh)) {
            return false;
        }
        object = (zzkh)object;
        if (this.zzatk == null ? object.zzatk != null : !this.zzatk.equals(object.zzatk)) {
            return false;
        }
        if (this.zzatl == null ? object.zzatl != null : !this.zzatl.equals(object.zzatl)) {
            return false;
        }
        if (!zzach.equals(this.zzatm, object.zzatm)) {
            return false;
        }
        if (this.zzatn == null ? object.zzatn != null : !this.zzatn.equals(object.zzatn)) {
            return false;
        }
        if (this.zzato == null ? object.zzato != null : !this.zzato.equals(object.zzato)) {
            return false;
        }
        if (this.zzbzd != null && !this.zzbzd.isEmpty()) {
            return this.zzbzd.equals(object.zzbzd);
        }
        if (object.zzbzd != null) {
            if (object.zzbzd.isEmpty()) {
                return true;
            }
            return false;
        }
        return true;
    }

    public final int hashCode() {
        int n = this.getClass().getName().hashCode();
        Object object = this.zzatk;
        int n2 = 0;
        int n3 = object == null ? 0 : this.zzatk.hashCode();
        int n4 = this.zzatl == null ? 0 : this.zzatl.hashCode();
        int n5 = zzach.hashCode(this.zzatm);
        int n6 = this.zzatn == null ? 0 : this.zzatn.hashCode();
        object = this.zzato;
        int n7 = object == null ? 0 : object.hashCode();
        int n8 = n2;
        if (this.zzbzd != null) {
            n8 = this.zzbzd.isEmpty() ? n2 : this.zzbzd.hashCode();
        }
        return ((((((n + 527) * 31 + n3) * 31 + n4) * 31 + n5) * 31 + n6) * 31 + n7) * 31 + n8;
    }

    @Override
    protected final int zza() {
        int n;
        int n2 = n = super.zza();
        if (this.zzatk != null) {
            n2 = n + zzacb.zzf(1, this.zzatk);
        }
        n = n2;
        if (this.zzatl != null) {
            n = n2 + zzacb.zzc(2, this.zzatl);
        }
        n2 = n;
        if (this.zzatm != null) {
            n2 = n;
            if (this.zzatm.length > 0) {
                int n3 = 0;
                do {
                    n2 = n;
                    if (n3 >= this.zzatm.length) break;
                    zzki zzki2 = this.zzatm[n3];
                    n2 = n;
                    if (zzki2 != null) {
                        n2 = n + zzacb.zzb(3, zzki2);
                    }
                    ++n3;
                    n = n2;
                } while (true);
            }
        }
        n = n2;
        if (this.zzatn != null) {
            this.zzatn.booleanValue();
            n = n2 + (zzacb.zzaq(4) + 1);
        }
        n2 = n;
        if (this.zzato != null) {
            n2 = n + zzacb.zzb(5, this.zzato);
        }
        return n2;
    }

    @Override
    public final void zza(zzacb zzacb2) throws IOException {
        if (this.zzatk != null) {
            zzacb2.zze(1, this.zzatk);
        }
        if (this.zzatl != null) {
            zzacb2.zzb(2, this.zzatl);
        }
        if (this.zzatm != null && this.zzatm.length > 0) {
            for (int i = 0; i < this.zzatm.length; ++i) {
                zzki zzki2 = this.zzatm[i];
                if (zzki2 == null) continue;
                zzacb2.zza(3, zzki2);
            }
        }
        if (this.zzatn != null) {
            zzacb2.zza(4, this.zzatn);
        }
        if (this.zzato != null) {
            zzacb2.zza(5, this.zzato);
        }
        super.zza(zzacb2);
    }

    @Override
    public final /* synthetic */ zzacj zzb(zzaca zzaca2) throws IOException {
        int n;
        while ((n = zzaca2.zzvl()) != 0) {
            if (n != 8) {
                if (n != 18) {
                    if (n != 26) {
                        if (n != 32) {
                            if (n != 42) {
                                if (super.zza(zzaca2, n)) continue;
                                return this;
                            }
                            if (this.zzato == null) {
                                this.zzato = new zzkj();
                            }
                            zzaca2.zza(this.zzato);
                            continue;
                        }
                        this.zzatn = zzaca2.zzvm();
                        continue;
                    }
                    int n2 = zzacm.zzb(zzaca2, 26);
                    n = this.zzatm == null ? 0 : this.zzatm.length;
                    zzki[] arrzzki = new zzki[n2 + n];
                    n2 = n;
                    if (n != 0) {
                        System.arraycopy(this.zzatm, 0, arrzzki, 0, n);
                        n2 = n;
                    }
                    while (n2 < arrzzki.length - 1) {
                        arrzzki[n2] = new zzki();
                        zzaca2.zza(arrzzki[n2]);
                        zzaca2.zzvl();
                        ++n2;
                    }
                    arrzzki[n2] = new zzki();
                    zzaca2.zza(arrzzki[n2]);
                    this.zzatm = arrzzki;
                    continue;
                }
                this.zzatl = zzaca2.readString();
                continue;
            }
            this.zzatk = zzaca2.zzvn();
        }
        return this;
    }
}

