/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.res.Resources
 *  android.content.res.Resources$Theme
 *  android.content.res.TypedArray
 *  android.util.AttributeSet
 *  android.util.Log
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.widget.FrameLayout
 */
package com.google.android.gms.common;

import android.content.Context;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.util.AttributeSet;
import android.util.Log;
import android.view.View;
import android.widget.FrameLayout;
import com.google.android.gms.base.R;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.common.internal.SignInButtonCreator;
import com.google.android.gms.common.internal.SignInButtonImpl;
import com.google.android.gms.dynamic.RemoteCreator;
import java.lang.annotation.Annotation;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

public final class SignInButton
extends FrameLayout
implements View.OnClickListener {
    public static final int COLOR_AUTO = 2;
    public static final int COLOR_DARK = 0;
    public static final int COLOR_LIGHT = 1;
    public static final int SIZE_ICON_ONLY = 2;
    public static final int SIZE_STANDARD = 0;
    public static final int SIZE_WIDE = 1;
    private int mColor;
    private int mSize;
    private View zzbw;
    private View.OnClickListener zzbx = null;

    public SignInButton(Context context) {
        this(context, null);
    }

    public SignInButton(Context context, AttributeSet attributeSet) {
        this(context, attributeSet, 0);
    }

    public SignInButton(Context context, AttributeSet attributeSet, int n) {
        super(context, attributeSet, n);
        context = context.getTheme().obtainStyledAttributes(attributeSet, R.styleable.SignInButton, 0, 0);
        try {
            this.mSize = context.getInt(R.styleable.SignInButton_buttonSize, 0);
            this.mColor = context.getInt(R.styleable.SignInButton_colorScheme, 2);
            this.setStyle(this.mSize, this.mColor);
            return;
        }
        finally {
            context.recycle();
        }
    }

    public final void onClick(View view) {
        if (this.zzbx != null && view == this.zzbw) {
            this.zzbx.onClick((View)this);
        }
    }

    public final void setColorScheme(int n) {
        this.setStyle(this.mSize, n);
    }

    public final void setEnabled(boolean bl) {
        super.setEnabled(bl);
        this.zzbw.setEnabled(bl);
    }

    public final void setOnClickListener(View.OnClickListener onClickListener) {
        this.zzbx = onClickListener;
        if (this.zzbw != null) {
            this.zzbw.setOnClickListener((View.OnClickListener)this);
        }
    }

    @Deprecated
    public final void setScopes(Scope[] arrscope) {
        this.setStyle(this.mSize, this.mColor);
    }

    public final void setSize(int n) {
        this.setStyle(n, this.mColor);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final void setStyle(int n, int n2) {
        block3 : {
            this.mSize = n;
            this.mColor = n2;
            Context context = this.getContext();
            if (this.zzbw != null) {
                this.removeView(this.zzbw);
            }
            try {
                this.zzbw = SignInButtonCreator.createView(context, this.mSize, this.mColor);
                break block3;
            }
            catch (RemoteCreator.RemoteCreatorException remoteCreatorException) {}
            Log.w((String)"SignInButton", (String)"Sign in button not found, using placeholder instead");
            n = this.mSize;
            n2 = this.mColor;
            SignInButtonImpl signInButtonImpl = new SignInButtonImpl(context);
            signInButtonImpl.configure(context.getResources(), n, n2);
            this.zzbw = signInButtonImpl;
        }
        this.addView(this.zzbw);
        this.zzbw.setEnabled(this.isEnabled());
        this.zzbw.setOnClickListener((View.OnClickListener)this);
    }

    @Deprecated
    public final void setStyle(int n, int n2, Scope[] arrscope) {
        this.setStyle(n, n2);
    }

    @Retention(value=RetentionPolicy.SOURCE)
    public static @interface ButtonSize {
    }

    @Retention(value=RetentionPolicy.SOURCE)
    public static @interface ColorScheme {
    }

}

