/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.Activity
 */
package com.google.android.gms.common.api.internal;

import android.app.Activity;
import android.support.annotation.MainThread;
import android.support.annotation.VisibleForTesting;
import com.google.android.gms.common.api.internal.ActivityLifecycleObserver;
import com.google.android.gms.common.api.internal.LifecycleCallback;
import com.google.android.gms.common.api.internal.LifecycleFragment;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public final class zza
extends ActivityLifecycleObserver {
    private final WeakReference<zza> zzds;

    public zza(Activity activity) {
        this(zza.zza(activity));
    }

    @VisibleForTesting(otherwise=2)
    private zza(zza zza2) {
        this.zzds = new WeakReference<zza>(zza2);
    }

    @Override
    public final ActivityLifecycleObserver onStopCallOnce(Runnable runnable) {
        zza zza2 = this.zzds.get();
        if (zza2 == null) {
            throw new IllegalStateException("The target activity has already been GC'd");
        }
        zza2.zza(runnable);
        return this;
    }

    @VisibleForTesting(otherwise=2)
    static class zza
    extends LifecycleCallback {
        private List<Runnable> zzdt = new ArrayList<Runnable>();

        private zza(LifecycleFragment lifecycleFragment) {
            super(lifecycleFragment);
            this.mLifecycleFragment.addCallback("LifecycleObserverOnStop", this);
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        private static zza zza(Activity activity) {
            synchronized (activity) {
                zza zza2;
                LifecycleFragment lifecycleFragment = zza.getFragment(activity);
                zza zza3 = zza2 = lifecycleFragment.getCallbackOrNull("LifecycleObserverOnStop", zza.class);
                if (zza2 != null) return zza3;
                return new zza(lifecycleFragment);
            }
        }

        private final void zza(Runnable runnable) {
            synchronized (this) {
                this.zzdt.add(runnable);
                return;
            }
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        @MainThread
        @Override
        public void onStop() {
            Object object;
            synchronized (this) {
                object = this.zzdt;
                this.zzdt = new ArrayList<Runnable>();
            }
            object = object.iterator();
            while (object.hasNext()) {
                ((Runnable)object.next()).run();
            }
            return;
        }
    }

}

