/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Parcel
 */
package com.google.android.gms.common.server.response;

import android.os.Parcel;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import com.google.android.gms.common.server.response.FastJsonResponse;
import com.google.android.gms.common.util.VisibleForTesting;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;

public abstract class FastSafeParcelableJsonResponse
extends FastJsonResponse
implements SafeParcelable {
    public final int describeContents() {
        return 0;
    }

    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!this.getClass().isInstance(object)) {
            return false;
        }
        object = (FastJsonResponse)object;
        for (FastJsonResponse.Field<?, ?> field : this.getFieldMappings().values()) {
            if (!(this.isFieldSet(field) ? !object.isFieldSet(field) || !this.getFieldValue(field).equals(object.getFieldValue(field)) : object.isFieldSet(field))) continue;
            return false;
        }
        return true;
    }

    @VisibleForTesting
    @Override
    public Object getValueObject(String string2) {
        return null;
    }

    public int hashCode() {
        Iterator<FastJsonResponse.Field<?, ?>> iterator = this.getFieldMappings().values().iterator();
        int n = 0;
        while (iterator.hasNext()) {
            FastJsonResponse.Field<?, ?> field = iterator.next();
            if (!this.isFieldSet(field)) continue;
            n = n * 31 + this.getFieldValue(field).hashCode();
        }
        return n;
    }

    @VisibleForTesting
    @Override
    public boolean isPrimitiveFieldSet(String string2) {
        return false;
    }

    public byte[] toByteArray() {
        Parcel parcel = Parcel.obtain();
        this.writeToParcel(parcel, 0);
        byte[] arrby = parcel.marshall();
        parcel.recycle();
        return arrby;
    }
}

