/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.AbstractThreadedSyncAdapter
 *  android.content.Context
 *  android.content.Intent
 *  android.os.PowerManager
 *  android.os.PowerManager$WakeLock
 *  android.os.Process
 *  android.text.TextUtils
 */
package com.google.android.gms.common.stats;

import android.content.AbstractThreadedSyncAdapter;
import android.content.Context;
import android.content.Intent;
import android.os.PowerManager;
import android.os.Process;
import android.text.TextUtils;
import com.google.android.gms.common.stats.LoggingConstants;
import com.google.android.gms.common.stats.StatisticalEventTrackerProvider;
import com.google.android.gms.common.stats.StatsEvent;

public class StatsUtils {
    public static String getEventKey(AbstractThreadedSyncAdapter object, String string2) {
        String string3 = String.valueOf(String.valueOf((long)Process.myPid() << 32 | (long)System.identityHashCode(object)));
        object = string2;
        if (TextUtils.isEmpty((CharSequence)string2)) {
            object = "";
        }
        if ((object = String.valueOf(object)).length() != 0) {
            return string3.concat((String)object);
        }
        return new String(string3);
    }

    public static String getEventKey(Context context, Intent intent) {
        return String.valueOf((long)System.identityHashCode((Object)context) << 32 | (long)System.identityHashCode((Object)intent));
    }

    public static String getEventKey(PowerManager.WakeLock object, String string2) {
        String string3 = String.valueOf(String.valueOf((long)Process.myPid() << 32 | (long)System.identityHashCode(object)));
        object = string2;
        if (TextUtils.isEmpty((CharSequence)string2)) {
            object = "";
        }
        if ((object = String.valueOf(object)).length() != 0) {
            return string3.concat((String)object);
        }
        return new String(string3);
    }

    public static boolean isLoggingEnabled() {
        StatisticalEventTrackerProvider.StatisticalEventTracker statisticalEventTracker = StatisticalEventTrackerProvider.getImpl();
        if (statisticalEventTracker != null && statisticalEventTracker.isEnabled() && (StatsUtils.zza(statisticalEventTracker.getLogLevel(3)) || StatsUtils.zza(statisticalEventTracker.getLogLevel(2)) || StatsUtils.zza(statisticalEventTracker.getLogLevel(1)))) {
            return true;
        }
        return false;
    }

    public static boolean isTimeOutEvent(StatsEvent statsEvent) {
        int n = statsEvent.getEventType();
        if (n != 6 && n != 9 && n != 12) {
            return false;
        }
        return true;
    }

    private static boolean zza(Integer n) {
        if (!n.equals(LoggingConstants.LOG_LEVEL_OFF)) {
            return true;
        }
        return false;
    }
}

