/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.ContentResolver
 *  android.database.ContentObserver
 *  android.database.Cursor
 *  android.net.Uri
 *  android.os.Handler
 *  android.util.Log
 */
package com.google.android.gms.internal.measurement;

import android.content.ContentResolver;
import android.database.ContentObserver;
import android.database.Cursor;
import android.net.Uri;
import android.os.Handler;
import android.util.Log;
import com.google.android.gms.internal.measurement.zzwt;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class zzws {
    private static final Uri CONTENT_URI = Uri.parse((String)"content://com.google.android.gsf.gservices");
    private static final Uri zzbol = Uri.parse((String)"content://com.google.android.gsf.gservices/prefix");
    public static final Pattern zzbom = Pattern.compile("^(1|true|t|on|yes|y)$", 2);
    public static final Pattern zzbon = Pattern.compile("^(0|false|f|off|no|n)$", 2);
    private static final AtomicBoolean zzboo = new AtomicBoolean();
    private static HashMap<String, String> zzbop;
    private static final HashMap<String, Boolean> zzboq;
    private static final HashMap<String, Integer> zzbor;
    private static final HashMap<String, Long> zzbos;
    private static final HashMap<String, Float> zzbot;
    private static Object zzbou;
    private static boolean zzbov;
    private static String[] zzbow;

    static {
        zzboq = new HashMap();
        zzbor = new HashMap();
        zzbos = new HashMap();
        zzbot = new HashMap();
        zzbow = new String[0];
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static <T> T zza(HashMap<String, T> hashMap, String string2, T t) {
        synchronized (zzws.class) {
            if (!hashMap.containsKey(string2)) {
                return null;
            }
            if ((hashMap = hashMap.get(string2)) == null) {
                hashMap = t;
            }
            return (T)hashMap;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static String zza(ContentResolver object, String string2, String object2) {
        synchronized (zzws.class) {
            zzws.zza((ContentResolver)object);
            Object object3 = zzbou;
            if (zzbop.containsKey(string2)) {
                object = zzbop.get(string2);
                if (object == null) return null;
                return object;
            }
            object2 = zzbow;
            int n = ((String[])object2).length;
            int n2 = 0;
            do {
                block15 : {
                    block16 : {
                        Cursor cursor;
                        block13 : {
                            block14 : {
                                if (n2 >= n) break block14;
                                if (!string2.startsWith(object2[n2])) break block15;
                                if (zzbov) {
                                    if (!zzbop.isEmpty()) return null;
                                }
                                break block16;
                            }
                            cursor = object.query(CONTENT_URI, null, null, new String[]{string2}, null);
                            if (cursor == null) {
                                if (cursor == null) return null;
                                cursor.close();
                                return null;
                            }
                            try {
                                if (cursor.moveToFirst()) break block13;
                                zzws.zza(object3, string2, null);
                                if (cursor == null) return null;
                            }
                            catch (Throwable throwable) {
                                if (cursor == null) throw throwable;
                                cursor.close();
                                throw throwable;
                            }
                            cursor.close();
                            return null;
                        }
                        object = object2 = cursor.getString(1);
                        if (object2 != null) {
                            object = object2;
                            if (object2.equals(null)) {
                                object = null;
                            }
                        }
                        zzws.zza(object3, string2, (String)object);
                        if (object == null) {
                            object = null;
                        }
                        if (cursor == null) return object;
                        cursor.close();
                        return object;
                    }
                    object2 = zzbow;
                    zzbop.putAll(zzws.zza((ContentResolver)object, (String[])object2));
                    zzbov = true;
                    if (!zzbop.containsKey(string2)) return null;
                    object = zzbop.get(string2);
                    if (object == null) return null;
                    return object;
                }
                ++n2;
            } while (true);
        }
    }

    private static /* varargs */ Map<String, String> zza(ContentResolver contentResolver, String ... object) {
        contentResolver = contentResolver.query(zzbol, null, null, (String[])object, null);
        object = new TreeMap();
        if (contentResolver == null) {
            return object;
        }
        try {
            while (contentResolver.moveToNext()) {
                object.put(contentResolver.getString(0), contentResolver.getString(1));
            }
            return object;
        }
        finally {
            contentResolver.close();
        }
    }

    private static void zza(ContentResolver contentResolver) {
        if (zzbop == null) {
            zzboo.set(false);
            zzbop = new HashMap();
            zzbou = new Object();
            zzbov = false;
            contentResolver.registerContentObserver(CONTENT_URI, true, (ContentObserver)new zzwt(null));
            return;
        }
        if (zzboo.getAndSet(false)) {
            zzbop.clear();
            zzboq.clear();
            zzbor.clear();
            zzbos.clear();
            zzbot.clear();
            zzbou = new Object();
            zzbov = false;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static void zza(Object object, String string2, String string3) {
        synchronized (zzws.class) {
            if (object == zzbou) {
                zzbop.put(string2, string3);
            }
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static <T> void zza(Object object, HashMap<String, T> hashMap, String string2, T t) {
        synchronized (zzws.class) {
            if (object == zzbou) {
                hashMap.put(string2, t);
                zzbop.remove(string2);
            }
            return;
        }
    }

    public static boolean zza(ContentResolver object, String string2, boolean bl) {
        Object object2 = zzws.zzb((ContentResolver)object);
        Boolean bl2 = zzws.zza(zzboq, string2, Boolean.valueOf(bl));
        if (bl2 != null) {
            return bl2;
        }
        String string3 = zzws.zza((ContentResolver)object, string2, null);
        object = bl2;
        boolean bl3 = bl;
        if (string3 != null) {
            if (string3.equals("")) {
                object = bl2;
                bl3 = bl;
            } else if (zzbom.matcher(string3).matches()) {
                object = true;
                bl3 = true;
            } else if (zzbon.matcher(string3).matches()) {
                object = false;
                bl3 = false;
            } else {
                object = new StringBuilder("attempt to read gservices key ");
                object.append(string2);
                object.append(" (value \"");
                object.append(string3);
                object.append("\") as boolean");
                Log.w((String)"Gservices", (String)object.toString());
                bl3 = bl;
                object = bl2;
            }
        }
        zzws.zza(object2, zzboq, string2, object);
        return bl3;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static Object zzb(ContentResolver object) {
        synchronized (zzws.class) {
            zzws.zza(object);
            return zzbou;
        }
    }

    static /* synthetic */ AtomicBoolean zzsg() {
        return zzboo;
    }
}

