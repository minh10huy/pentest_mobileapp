/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Bundle
 *  android.os.Handler
 *  android.os.Looper
 *  android.util.Log
 */
package com.google.android.gms.common.api.internal;

import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.support.annotation.BinderThread;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.annotation.WorkerThread;
import android.util.Log;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.common.api.internal.zzbz;
import com.google.android.gms.common.api.internal.zzca;
import com.google.android.gms.common.api.internal.zzcb;
import com.google.android.gms.common.internal.ClientSettings;
import com.google.android.gms.common.internal.IAccountAccessor;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.internal.ResolveAccountResponse;
import com.google.android.gms.signin.SignIn;
import com.google.android.gms.signin.SignInClient;
import com.google.android.gms.signin.SignInOptions;
import com.google.android.gms.signin.internal.BaseSignInCallbacks;
import com.google.android.gms.signin.internal.ISignInCallbacks;
import com.google.android.gms.signin.internal.SignInClientImpl;
import com.google.android.gms.signin.internal.SignInResponse;
import java.util.Set;

public final class zzby
extends BaseSignInCallbacks
implements GoogleApiClient.ConnectionCallbacks,
GoogleApiClient.OnConnectionFailedListener {
    private static Api.AbstractClientBuilder<? extends SignInClient, SignInOptions> zzlv = SignIn.CLIENT_BUILDER;
    private final Context mContext;
    private final Handler mHandler;
    private Set<Scope> mScopes;
    private final Api.AbstractClientBuilder<? extends SignInClient, SignInOptions> zzby;
    private ClientSettings zzgf;
    private SignInClient zzhn;
    private zzcb zzlw;

    @WorkerThread
    public zzby(Context context, Handler handler, @NonNull ClientSettings clientSettings) {
        this(context, handler, clientSettings, zzlv);
    }

    @WorkerThread
    public zzby(Context context, Handler handler, @NonNull ClientSettings clientSettings, Api.AbstractClientBuilder<? extends SignInClient, SignInOptions> abstractClientBuilder) {
        this.mContext = context;
        this.mHandler = handler;
        this.zzgf = Preconditions.checkNotNull(clientSettings, "ClientSettings must not be null");
        this.mScopes = clientSettings.getRequiredScopes();
        this.zzby = abstractClientBuilder;
    }

    static /* synthetic */ zzcb zza(zzby zzby2) {
        return zzby2.zzlw;
    }

    static /* synthetic */ void zza(zzby zzby2, SignInResponse signInResponse) {
        zzby2.zzb(signInResponse);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    @WorkerThread
    private final void zzb(SignInResponse var1_1) {
        var3_2 = var1_1.getConnectionResult();
        var2_3 = var3_2;
        if (!var3_2.isSuccess()) ** GOTO lbl11
        var2_3 = (var1_1 = var1_1.getResolveAccountResponse()).getConnectionResult();
        if (!var2_3.isSuccess()) {
            var1_1 = String.valueOf(var2_3);
            var3_2 = new StringBuilder(String.valueOf(var1_1).length() + 48);
            var3_2.append("Sign-in succeeded with resolve account failure: ");
            var3_2.append((String)var1_1);
            Log.wtf((String)"SignInCoordinator", (String)var3_2.toString(), (Throwable)new Exception());
lbl11: // 2 sources:
            this.zzlw.zzg(var2_3);
        } else {
            this.zzlw.zza(var1_1.getAccountAccessor(), this.mScopes);
        }
        this.zzhn.disconnect();
    }

    @WorkerThread
    @Override
    public final void onConnected(@Nullable Bundle bundle) {
        this.zzhn.signIn(this);
    }

    @WorkerThread
    @Override
    public final void onConnectionFailed(@NonNull ConnectionResult connectionResult) {
        this.zzlw.zzg(connectionResult);
    }

    @WorkerThread
    @Override
    public final void onConnectionSuspended(int n) {
        this.zzhn.disconnect();
    }

    @BinderThread
    @Override
    public final void onSignInComplete(SignInResponse signInResponse) {
        this.mHandler.post((Runnable)new zzca(this, signInResponse));
    }

    @WorkerThread
    public final void zza(zzcb zzcb2) {
        if (this.zzhn != null) {
            this.zzhn.disconnect();
        }
        this.zzgf.setClientSessionId(System.identityHashCode(this));
        this.zzhn = this.zzby.buildClient(this.mContext, this.mHandler.getLooper(), this.zzgf, this.zzgf.getSignInOptions(), this, this);
        this.zzlw = zzcb2;
        if (this.mScopes != null && !this.mScopes.isEmpty()) {
            this.zzhn.connect();
            return;
        }
        this.mHandler.post((Runnable)new zzbz(this));
    }

    public final SignInClient zzbt() {
        return this.zzhn;
    }

    public final void zzbz() {
        if (this.zzhn != null) {
            this.zzhn.disconnect();
        }
    }
}

