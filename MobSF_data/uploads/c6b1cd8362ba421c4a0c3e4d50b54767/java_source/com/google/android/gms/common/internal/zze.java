/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.common.internal;

import android.support.v4.util.LruCache;
import com.google.android.gms.common.internal.ExpirableLruCache;

final class zze
extends LruCache<K, V> {
    private final /* synthetic */ ExpirableLruCache zzss;

    zze(ExpirableLruCache expirableLruCache, int n) {
        this.zzss = expirableLruCache;
        super(n);
    }

    @Override
    protected final V create(K k) {
        return this.zzss.create(k);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Converted monitor instructions to comments
     * Lifted jumps to return sites
     */
    @Override
    protected final void entryRemoved(boolean var1_1, K var2_2, V var3_4, V var4_5) {
        this.zzss.entryRemoved(var1_1, var2_2, var3_4 /* !! */ , var4_6);
        var3_5 = ExpirableLruCache.zza(this.zzss);
        // MONITORENTER : var3_5
        if (var4_6 != null) ** GOTO lbl8
        if (ExpirableLruCache.zzb(this.zzss)) {
            ExpirableLruCache.zzc(this.zzss).remove(var2_2);
        }
lbl8: // 4 sources:
        if (var4_6 == null && ExpirableLruCache.zzd(this.zzss)) {
            ExpirableLruCache.zze(this.zzss).remove(var2_2);
        }
        // MONITOREXIT : var3_5
        return;
    }

    @Override
    protected final int sizeOf(K k, V v) {
        return this.zzss.sizeOf(k, v);
    }
}

