/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.annotation.TargetApi
 *  android.app.AlarmManager
 *  android.app.PendingIntent
 *  android.app.job.JobInfo
 *  android.app.job.JobInfo$Builder
 *  android.app.job.JobScheduler
 *  android.content.ComponentName
 *  android.content.Context
 *  android.content.Intent
 *  android.os.Build
 *  android.os.Build$VERSION
 *  android.os.PersistableBundle
 */
package com.google.android.gms.internal.measurement;

import android.annotation.TargetApi;
import android.app.AlarmManager;
import android.app.PendingIntent;
import android.app.job.JobInfo;
import android.app.job.JobScheduler;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.os.Build;
import android.os.PersistableBundle;
import com.google.android.gms.common.util.Clock;
import com.google.android.gms.internal.measurement.zzed;
import com.google.android.gms.internal.measurement.zzee;
import com.google.android.gms.internal.measurement.zzeh;
import com.google.android.gms.internal.measurement.zzek;
import com.google.android.gms.internal.measurement.zzep;
import com.google.android.gms.internal.measurement.zzer;
import com.google.android.gms.internal.measurement.zzez;
import com.google.android.gms.internal.measurement.zzfg;
import com.google.android.gms.internal.measurement.zzfi;
import com.google.android.gms.internal.measurement.zzfk;
import com.google.android.gms.internal.measurement.zzft;
import com.google.android.gms.internal.measurement.zzgd;
import com.google.android.gms.internal.measurement.zzgi;
import com.google.android.gms.internal.measurement.zzgn;
import com.google.android.gms.internal.measurement.zzhk;
import com.google.android.gms.internal.measurement.zzjq;
import com.google.android.gms.internal.measurement.zzjs;
import com.google.android.gms.internal.measurement.zzjt;
import com.google.android.gms.internal.measurement.zzjz;
import com.google.android.gms.internal.measurement.zzkd;

public final class zzjp
extends zzjs {
    private final zzep zzarp;
    private final AlarmManager zzyh = (AlarmManager)this.getContext().getSystemService("alarm");
    private Integer zzyi;

    protected zzjp(zzjt zzjt2) {
        super(zzjt2);
        this.zzarp = new zzjq(this, zzjt2.zzlm(), zzjt2);
    }

    private final int getJobId() {
        if (this.zzyi == null) {
            String string2 = String.valueOf(this.getContext().getPackageName());
            string2 = string2.length() != 0 ? "measurement".concat(string2) : new String("measurement");
            this.zzyi = string2.hashCode();
        }
        return this.zzyi;
    }

    private final PendingIntent zzek() {
        Intent intent = new Intent().setClassName(this.getContext(), "com.google.android.gms.measurement.AppMeasurementReceiver");
        intent.setAction("com.google.android.gms.measurement.UPLOAD");
        return PendingIntent.getBroadcast((Context)this.getContext(), (int)0, (Intent)intent, (int)0);
    }

    @TargetApi(value=24)
    private final void zzkx() {
        JobScheduler jobScheduler = (JobScheduler)this.getContext().getSystemService("jobscheduler");
        this.zzgi().zzjc().zzg("Cancelling job. JobID", this.getJobId());
        jobScheduler.cancel(this.getJobId());
    }

    public final void cancel() {
        this.zzch();
        this.zzyh.cancel(this.zzek());
        this.zzarp.cancel();
        if (Build.VERSION.SDK_INT >= 24) {
            this.zzkx();
        }
    }

    @Override
    protected final boolean zzgn() {
        this.zzyh.cancel(this.zzek());
        if (Build.VERSION.SDK_INT >= 24) {
            this.zzkx();
        }
        return false;
    }

    public final void zzh(long l) {
        this.zzch();
        this.zzgl();
        if (!zzgd.zza(this.getContext())) {
            this.zzgi().zzjb().log("Receiver not registered/enabled");
        }
        this.zzgl();
        if (!zzkd.zza(this.getContext(), false)) {
            this.zzgi().zzjb().log("Service not registered/enabled");
        }
        this.cancel();
        long l2 = this.zzbt().elapsedRealtime();
        if (l < Math.max(0L, zzez.zzajb.get()) && !this.zzarp.zzef()) {
            this.zzgi().zzjc().log("Scheduling upload with DelayedRunnable");
            this.zzarp.zzh(l);
        }
        this.zzgl();
        if (Build.VERSION.SDK_INT >= 24) {
            this.zzgi().zzjc().log("Scheduling upload with JobScheduler");
            ComponentName componentName = new ComponentName(this.getContext(), "com.google.android.gms.measurement.AppMeasurementJobService");
            JobScheduler jobScheduler = (JobScheduler)this.getContext().getSystemService("jobscheduler");
            componentName = new JobInfo.Builder(this.getJobId(), componentName);
            componentName.setMinimumLatency(l);
            componentName.setOverrideDeadline(l << 1);
            PersistableBundle persistableBundle = new PersistableBundle();
            persistableBundle.putString("action", "com.google.android.gms.measurement.UPLOAD");
            componentName.setExtras(persistableBundle);
            componentName = componentName.build();
            this.zzgi().zzjc().zzg("Scheduling job. JobID", this.getJobId());
            jobScheduler.schedule((JobInfo)componentName);
            return;
        }
        this.zzgi().zzjc().log("Scheduling upload with AlarmManager");
        this.zzyh.setInexactRepeating(2, l2 + l, Math.max(zzez.zzaiw.get(), l), this.zzek());
    }
}

