/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.IBinder
 *  android.os.RemoteException
 */
package com.google.android.gms.common.net;

import android.content.Context;
import android.os.IBinder;
import android.os.RemoteException;
import com.google.android.gms.common.net.ISocketFactoryCreator;
import com.google.android.gms.dynamic.IObjectWrapper;
import com.google.android.gms.dynamic.ObjectWrapper;
import com.google.android.gms.dynamic.RemoteCreator;
import javax.net.ssl.KeyManager;
import javax.net.ssl.SSLSocketFactory;
import javax.net.ssl.TrustManager;

public class SocketFactoryCreator
extends RemoteCreator<ISocketFactoryCreator> {
    private static SocketFactoryCreator zzvr;

    protected SocketFactoryCreator() {
        super("com.google.android.gms.common.net.SocketFactoryCreatorImpl");
    }

    public static SocketFactoryCreator getInstance() {
        if (zzvr == null) {
            zzvr = new SocketFactoryCreator();
        }
        return zzvr;
    }

    @Override
    protected ISocketFactoryCreator getRemoteCreator(IBinder iBinder) {
        return ISocketFactoryCreator.Stub.asInterface(iBinder);
    }

    public SSLSocketFactory makeSocketFactory(Context object, KeyManager[] arrkeyManager, TrustManager[] arrtrustManager, boolean bl) {
        try {
            object = (SSLSocketFactory)ObjectWrapper.unwrap(((ISocketFactoryCreator)this.getRemoteCreatorInstance((Context)object)).newSocketFactory(ObjectWrapper.wrap(object), ObjectWrapper.wrap(arrkeyManager), ObjectWrapper.wrap(arrtrustManager), bl));
            return object;
        }
        catch (RemoteException | RemoteCreator.RemoteCreatorException remoteCreatorException) {
            throw new RuntimeException(remoteCreatorException);
        }
    }

    public SSLSocketFactory makeSocketFactoryWithCacheDir(Context object, KeyManager[] arrkeyManager, TrustManager[] arrtrustManager, String string2) {
        try {
            object = (SSLSocketFactory)ObjectWrapper.unwrap(((ISocketFactoryCreator)this.getRemoteCreatorInstance((Context)object)).newSocketFactoryWithCacheDir(ObjectWrapper.wrap(object), ObjectWrapper.wrap(arrkeyManager), ObjectWrapper.wrap(arrtrustManager), string2));
            return object;
        }
        catch (RemoteException | RemoteCreator.RemoteCreatorException object2) {
            throw new RuntimeException((Throwable)object2);
        }
    }
}

