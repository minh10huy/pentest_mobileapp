/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.IBinder
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  android.os.RemoteException
 *  android.util.Log
 *  javax.annotation.Nullable
 */
package com.google.android.gms.common;

import android.os.IBinder;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.RemoteException;
import android.util.Log;
import com.google.android.gms.common.GoogleCertificates;
import com.google.android.gms.common.GoogleCertificatesQueryCreator;
import com.google.android.gms.common.internal.ICertData;
import com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable;
import com.google.android.gms.common.internal.safeparcel.SafeParcelWriter;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import com.google.android.gms.common.zzb;
import com.google.android.gms.dynamic.IObjectWrapper;
import com.google.android.gms.dynamic.ObjectWrapper;
import javax.annotation.Nullable;

@SafeParcelable.Class(creator="GoogleCertificatesQueryCreator")
public class GoogleCertificatesQuery
extends AbstractSafeParcelable {
    public static final Parcelable.Creator<GoogleCertificatesQuery> CREATOR = new GoogleCertificatesQueryCreator();
    @SafeParcelable.Field(getter="getCallingPackage", id=1)
    private final String zzbh;
    @Nullable
    @SafeParcelable.Field(getter="getCallingCertificateBinder", id=2, type="android.os.IBinder")
    private final GoogleCertificates.CertData zzbi;
    @SafeParcelable.Field(getter="getAllowTestKeys", id=3)
    private final boolean zzbj;

    @SafeParcelable.Constructor
    GoogleCertificatesQuery(@SafeParcelable.Param(id=1) String string2, @Nullable @SafeParcelable.Param(id=2) IBinder iBinder, @SafeParcelable.Param(id=3) boolean bl) {
        this.zzbh = string2;
        this.zzbi = GoogleCertificatesQuery.zza(iBinder);
        this.zzbj = bl;
    }

    GoogleCertificatesQuery(String string2, @Nullable GoogleCertificates.CertData certData, boolean bl) {
        this.zzbh = string2;
        this.zzbi = certData;
        this.zzbj = bl;
    }

    @Nullable
    private static GoogleCertificates.CertData zza(@Nullable IBinder object) {
        if (object == null) {
            return null;
        }
        try {
            object = ICertData.Stub.asInterface((IBinder)object).getBytesWrapped();
            object = object == null ? null : (byte[])ObjectWrapper.unwrap((IObjectWrapper)object);
        }
        catch (RemoteException remoteException) {
            Log.e((String)"GoogleCertificatesQuery", (String)"Could not unwrap certificate", (Throwable)remoteException);
            return null;
        }
        if (object != null) {
            return new zzb((byte[])object);
        }
        Log.e((String)"GoogleCertificatesQuery", (String)"Could not unwrap certificate");
        return null;
    }

    public boolean getAllowTestKeys() {
        return this.zzbj;
    }

    @Nullable
    public IBinder getCallingCertificateBinder() {
        if (this.zzbi == null) {
            Log.w((String)"GoogleCertificatesQuery", (String)"certificate binder is null");
            return null;
        }
        return this.zzbi.asBinder();
    }

    public String getCallingPackage() {
        return this.zzbh;
    }

    @Nullable
    public GoogleCertificates.CertData getCertificate() {
        return this.zzbi;
    }

    public void writeToParcel(Parcel parcel, int n) {
        n = SafeParcelWriter.beginObjectHeader(parcel);
        SafeParcelWriter.writeString(parcel, 1, this.getCallingPackage(), false);
        SafeParcelWriter.writeIBinder(parcel, 2, this.getCallingCertificateBinder(), false);
        SafeParcelWriter.writeBoolean(parcel, 3, this.getAllowTestKeys());
        SafeParcelWriter.finishObjectHeader(parcel, n);
    }
}

