/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.util.Log
 */
package com.google.android.gms.common.api.internal;

import android.support.annotation.NonNull;
import android.support.v4.util.ArrayMap;
import android.util.Log;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.api.AvailabilityException;
import com.google.android.gms.common.api.GoogleApi;
import com.google.android.gms.common.api.internal.SignInConnectionListener;
import com.google.android.gms.common.api.internal.zzh;
import com.google.android.gms.common.api.internal.zzv;
import com.google.android.gms.common.api.internal.zzw;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import java.util.Collection;
import java.util.Collections;
import java.util.Iterator;
import java.util.Map;

final class zzz
implements OnCompleteListener<Map<zzh<?>, String>> {
    private final /* synthetic */ zzw zzgu;
    private SignInConnectionListener zzgv;

    zzz(zzw zzw2, SignInConnectionListener signInConnectionListener) {
        this.zzgu = zzw2;
        this.zzgv = signInConnectionListener;
    }

    final void cancel() {
        this.zzgv.onComplete();
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    @Override
    public final void onComplete(@NonNull Task<Map<zzh<?>, String>> var1_1) {
        zzw.zza(this.zzgu).lock();
        try {
            block14 : {
                block17 : {
                    block12 : {
                        block15 : {
                            block16 : {
                                block13 : {
                                    block11 : {
                                        if (zzw.zzb(this.zzgu)) break block11;
                                        var1_1 = this.zzgv;
                                        break block12;
                                    }
                                    if (!var1_1.isSuccessful()) break block13;
                                    zzw.zzb(this.zzgu, new ArrayMap<K, V>(zzw.zzm(this.zzgu).size()));
                                    for (zzv var2_3 : zzw.zzm(this.zzgu).values()) {
                                        zzw.zzg(this.zzgu).put(var2_3.zzm(), ConnectionResult.RESULT_SUCCESS);
                                    }
                                    break block14;
                                }
                                if (!(var1_1.getException() instanceof AvailabilityException)) break block15;
                                var3_5 = (AvailabilityException)var1_1.getException();
                                if (!zzw.zze(this.zzgu)) break block16;
                                zzw.zzb(this.zzgu, new ArrayMap<K, V>(zzw.zzm(this.zzgu).size()));
                                var4_6 = zzw.zzm(this.zzgu).values().iterator();
                                break block17;
                            }
                            zzw.zzb(this.zzgu, var3_5.zzl());
                            break block14;
                        }
                        Log.e((String)"ConnectionlessGAC", (String)"Unexpected availability exception", (Throwable)var1_1.getException());
                        zzw.zzb(this.zzgu, Collections.<K, V>emptyMap());
                        break block14;
                    }
lbl28: // 2 sources:
                    do {
                        var1_1.onComplete();
                        return;
                        break;
                    } while (true);
                }
                while (var4_6.hasNext()) {
                    var1_1 = (zzv)var4_6.next();
                    var5_7 = var1_1.zzm();
                    var2_4 = var3_5.getConnectionResult((GoogleApi<? extends Api.ApiOptions>)var1_1);
                    if (zzw.zza(this.zzgu, (zzv)var1_1, var2_4)) {
                        var1_1 = zzw.zzg(this.zzgu);
                        var2_4 = new ConnectionResult(16);
                    } else {
                        var1_1 = zzw.zzg(this.zzgu);
                    }
                    var1_1.put(var5_7, var2_4);
                }
            }
            if (this.zzgu.isConnected()) {
                zzw.zzd(this.zzgu).putAll(zzw.zzg(this.zzgu));
                if (zzw.zzf(this.zzgu) == null) {
                    zzw.zzi(this.zzgu);
                    zzw.zzj(this.zzgu);
                    zzw.zzl(this.zzgu).signalAll();
                }
            }
            var1_1 = this.zzgv;
            ** continue;
        }
        finally {
            zzw.zza(this.zzgu).unlock();
        }
    }
}

