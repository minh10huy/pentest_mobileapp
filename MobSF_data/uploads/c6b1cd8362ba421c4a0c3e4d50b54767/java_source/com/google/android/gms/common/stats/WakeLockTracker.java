/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.AbstractThreadedSyncAdapter
 *  android.content.ComponentName
 *  android.content.Context
 *  android.content.Intent
 *  android.os.Parcelable
 *  android.os.SystemClock
 *  android.text.TextUtils
 *  android.util.Log
 */
package com.google.android.gms.common.stats;

import android.content.AbstractThreadedSyncAdapter;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.os.Parcelable;
import android.os.SystemClock;
import android.text.TextUtils;
import android.util.Log;
import com.google.android.gms.common.stats.LoggingConstants;
import com.google.android.gms.common.stats.StatsUtils;
import com.google.android.gms.common.stats.WakeLockEvent;
import com.google.android.gms.common.util.DeviceStateUtils;
import com.google.android.gms.common.util.VisibleForTesting;
import java.util.Arrays;
import java.util.List;

public class WakeLockTracker {
    @VisibleForTesting
    private static boolean zzyh = false;
    private static WakeLockTracker zzyz = new WakeLockTracker();
    private static Boolean zzza;

    public static WakeLockTracker getInstance() {
        return zzyz;
    }

    public void registerAcquireEvent(Context context, Intent intent, String string2, String string3, String string4, int n, String string5) {
        this.registerAcquireEvent(context, intent, string2, string3, string4, n, Arrays.asList(string5));
    }

    public void registerAcquireEvent(Context context, Intent intent, String string2, String string3, String string4, int n, List<String> list) {
        this.registerEvent(context, intent.getStringExtra("WAKE_LOCK_KEY"), 7, string2, string3, string4, n, list);
    }

    public void registerEvent(Context context, String string2, int n, String string3, String string4, String string5, int n2, List<String> list) {
        this.registerEvent(context, string2, n, string3, string4, string5, n2, list, 0L);
    }

    public void registerEvent(Context object, String object2, int n, String string2, String string3, String string4, int n2, List<String> object3, long l) {
        List<String> list = object3;
        if (zzza == null) {
            zzza = false;
        }
        if (!zzza.booleanValue()) {
            return;
        }
        if (TextUtils.isEmpty((CharSequence)object2)) {
            object = String.valueOf(object2);
            object = object.length() != 0 ? "missing wakeLock key. ".concat((String)object) : new String("missing wakeLock key. ");
            Log.e((String)"WakeLockTracker", (String)object);
            return;
        }
        long l2 = System.currentTimeMillis();
        if (7 == n || 8 == n || 10 == n || 11 == n) {
            List<String> list2 = list;
            if (list != null) {
                list2 = list;
                if (object3.size() == 1) {
                    list2 = list;
                    if ("com.google.android.gms".equals(list.get(0))) {
                        list2 = null;
                    }
                }
            }
            long l3 = SystemClock.elapsedRealtime();
            int n3 = DeviceStateUtils.getDeviceState((Context)object);
            object3 = object.getPackageName();
            if ("com.google.android.gms".equals(object3)) {
                object3 = null;
            }
            object2 = new WakeLockEvent(l2, n, string2, n2, list2, (String)object2, l3, n3, string3, (String)object3, DeviceStateUtils.getPowerPercentage((Context)object), l, string4);
            try {
                object.startService(new Intent().setComponent(LoggingConstants.STATS_SERVICE_COMPONENT_NAME).putExtra("com.google.android.gms.common.stats.EXTRA_LOG_EVENT", (Parcelable)object2));
                return;
            }
            catch (Exception exception) {
                Log.wtf((String)"WakeLockTracker", (Throwable)exception);
            }
        }
    }

    public void registerReleaseEvent(Context context, Intent intent) {
        this.registerEvent(context, intent.getStringExtra("WAKE_LOCK_KEY"), 8, null, null, null, 0, null);
    }

    public void registerSyncEnd(Context context, AbstractThreadedSyncAdapter abstractThreadedSyncAdapter, String string2, String string3, boolean bl) {
        this.registerEvent(context, StatsUtils.getEventKey(abstractThreadedSyncAdapter, string2), 11, string2, string3, null, 0, null);
    }

    public void registerSyncStart(Context context, AbstractThreadedSyncAdapter abstractThreadedSyncAdapter, String string2, String string3) {
        this.registerEvent(context, StatsUtils.getEventKey(abstractThreadedSyncAdapter, string2), 10, string2, string3, null, 0, null);
    }
}

