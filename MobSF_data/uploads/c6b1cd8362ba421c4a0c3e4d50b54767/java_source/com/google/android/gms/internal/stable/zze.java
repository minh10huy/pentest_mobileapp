/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.ContentResolver
 *  android.database.ContentObserver
 *  android.database.Cursor
 *  android.database.SQLException
 *  android.net.Uri
 *  android.os.Handler
 *  android.provider.BaseColumns
 *  android.util.Log
 */
package com.google.android.gms.internal.stable;

import android.content.ContentResolver;
import android.database.ContentObserver;
import android.database.Cursor;
import android.database.SQLException;
import android.net.Uri;
import android.os.Handler;
import android.provider.BaseColumns;
import android.util.Log;
import com.google.android.gms.internal.stable.zzf;
import com.google.android.gms.internal.stable.zzh;
import java.util.HashMap;
import java.util.concurrent.atomic.AtomicBoolean;

public final class zze {

    public static class zza
    implements BaseColumns {
        private static HashMap<Uri, zzh> zzagq = new HashMap();

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        private static zzh zza(ContentResolver contentResolver, Uri uri) {
            zzh zzh2 = zzagq.get((Object)uri);
            if (zzh2 == null) {
                zzh2 = new zzh();
                zzagq.put(uri, zzh2);
                contentResolver.registerContentObserver(uri, true, (ContentObserver)new zzf(null, zzh2));
                return zzh2;
            }
            if (zzh2.zzagu.getAndSet(false)) {
                synchronized (zzh2) {
                    zzh2.zzags.clear();
                    zzh2.zzagt = new Object();
                    return zzh2;
                }
            }
            return zzh2;
        }

        /*
         * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
         * Loose catch block
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         * Converted monitor instructions to comments
         * Lifted jumps to return sites
         */
        protected static String zza(ContentResolver object, Uri object2, String string2) {
            void var0_5;
            Object object3;
            block21 : {
                StringBuilder stringBuilder;
                Object cursor;
                String string3;
                block22 : {
                    block20 : {
                        block19 : {
                            zzh zzh2;
                            Object object4;
                            block18 : {
                                // MONITORENTER : com.google.android.gms.internal.stable.zze$zza.class
                                zzh2 = zza.zza((ContentResolver)object, (Uri)object2);
                                // MONITOREXIT : com.google.android.gms.internal.stable.zze$zza.class
                                // MONITORENTER : zzh2
                                object4 = zzh2.zzagt;
                                if (zzh2.zzags.containsKey(string2)) {
                                    object = zzh2.zzags.get(string2);
                                    // MONITOREXIT : zzh2
                                    return object;
                                }
                                // MONITOREXIT : zzh2
                                stringBuilder = null;
                                object3 = null;
                                cursor = object.query((Uri)object2, new String[]{"value"}, "name=?", new String[]{string2}, null);
                                if (cursor == null) break block18;
                                try {
                                    if (!cursor.moveToFirst()) break block18;
                                    string3 = cursor.getString(0);
                                    try {
                                        zza.zza(zzh2, object4, string2, string3);
                                        object2 = string3;
                                        if (cursor == null) return object2;
                                    }
                                    catch (SQLException sQLException) {
                                        break block19;
                                    }
                                    cursor.close();
                                    return string3;
                                }
                                catch (Throwable throwable) {
                                    object3 = cursor;
                                    break block21;
                                }
                            }
                            try {
                                zza.zza(zzh2, object4, string2, null);
                                if (cursor == null) return null;
                                break block20;
                            }
                            catch (SQLException sQLException) {
                                string3 = null;
                            }
                        }
                        object3 = cursor;
                        cursor = object;
                        object = object3;
                        break block22;
                    }
                    cursor.close();
                    return null;
                    catch (Throwable throwable) {
                        break block21;
                    }
                    catch (SQLException sQLException) {
                        string3 = null;
                        object = stringBuilder;
                    }
                }
                object3 = object;
                {
                    stringBuilder = new StringBuilder("Can't get key ");
                    object3 = object;
                    stringBuilder.append(string2);
                    object3 = object;
                    stringBuilder.append(" from ");
                    object3 = object;
                    stringBuilder.append(object2);
                    object3 = object;
                    Log.e((String)"GoogleSettings", (String)stringBuilder.toString(), (Throwable)cursor);
                    object2 = string3;
                    if (object == null) return object2;
                }
                object.close();
                return string3;
            }
            if (object3 == null) throw var0_5;
            object3.close();
            throw var0_5;
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        private static void zza(zzh zzh2, Object object, String string2, String string3) {
            synchronized (zzh2) {
                if (object == zzh2.zzagt) {
                    zzh2.zzags.put(string2, string3);
                }
                return;
            }
        }
    }

}

