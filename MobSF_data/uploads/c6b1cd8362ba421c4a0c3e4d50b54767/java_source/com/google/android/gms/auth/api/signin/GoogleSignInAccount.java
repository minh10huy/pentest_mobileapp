/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.accounts.Account
 *  android.net.Uri
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  android.text.TextUtils
 *  org.json.JSONArray
 *  org.json.JSONException
 *  org.json.JSONObject
 */
package com.google.android.gms.auth.api.signin;

import android.accounts.Account;
import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import com.google.android.gms.auth.api.signin.GoogleSignInAccountCreator;
import com.google.android.gms.auth.api.signin.zza;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.internal.ReflectedParcelable;
import com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable;
import com.google.android.gms.common.internal.safeparcel.SafeParcelWriter;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import com.google.android.gms.common.util.Clock;
import com.google.android.gms.common.util.DefaultClock;
import com.google.android.gms.common.util.VisibleForTesting;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

@SafeParcelable.Class(creator="GoogleSignInAccountCreator")
public class GoogleSignInAccount
extends AbstractSafeParcelable
implements ReflectedParcelable {
    public static final Parcelable.Creator<GoogleSignInAccount> CREATOR = new GoogleSignInAccountCreator();
    @VisibleForTesting
    public static Clock sClock = DefaultClock.getInstance();
    @SafeParcelable.VersionField(id=1)
    private final int versionCode;
    @SafeParcelable.Field(getter="getId", id=2)
    private String zze;
    @SafeParcelable.Field(getter="getIdToken", id=3)
    private String zzf;
    @SafeParcelable.Field(getter="getEmail", id=4)
    private String zzg;
    @SafeParcelable.Field(getter="getDisplayName", id=5)
    private String zzh;
    @SafeParcelable.Field(getter="getPhotoUrl", id=6)
    private Uri zzi;
    @SafeParcelable.Field(getter="getServerAuthCode", id=7)
    private String zzj;
    @SafeParcelable.Field(getter="getExpirationTimeSecs", id=8)
    private long zzk;
    @SafeParcelable.Field(getter="getObfuscatedIdentifier", id=9)
    private String zzl;
    @SafeParcelable.Field(id=10)
    private List<Scope> zzm;
    @SafeParcelable.Field(getter="getGivenName", id=11)
    private String zzn;
    @SafeParcelable.Field(getter="getFamilyName", id=12)
    private String zzo;
    private Set<Scope> zzp = new HashSet<Scope>();

    @SafeParcelable.Constructor
    GoogleSignInAccount(@SafeParcelable.Param(id=1) int n, @SafeParcelable.Param(id=2) String string2, @SafeParcelable.Param(id=3) String string3, @SafeParcelable.Param(id=4) String string4, @SafeParcelable.Param(id=5) String string5, @SafeParcelable.Param(id=6) Uri uri, @SafeParcelable.Param(id=7) String string6, @SafeParcelable.Param(id=8) long l, @SafeParcelable.Param(id=9) String string7, @SafeParcelable.Param(id=10) List<Scope> list, @SafeParcelable.Param(id=11) String string8, @SafeParcelable.Param(id=12) String string9) {
        this.versionCode = n;
        this.zze = string2;
        this.zzf = string3;
        this.zzg = string4;
        this.zzh = string5;
        this.zzi = uri;
        this.zzj = string6;
        this.zzk = l;
        this.zzl = string7;
        this.zzm = list;
        this.zzn = string8;
        this.zzo = string9;
    }

    public static GoogleSignInAccount create(@Nullable String string2, @Nullable String string3, @Nullable String string4, @Nullable String string5, @Nullable Uri uri, @Nullable Long l, @NonNull String string6, @NonNull Set<Scope> set) {
        return GoogleSignInAccount.create(string2, string3, string4, string5, null, null, uri, l, string6, set);
    }

    public static GoogleSignInAccount create(@Nullable String string2, @Nullable String string3, @Nullable String string4, @Nullable String string5, @Nullable String string6, @Nullable String string7, @Nullable Uri uri, @Nullable Long l, @NonNull String string8, @NonNull Set<Scope> set) {
        if (l == null) {
            l = sClock.currentTimeMillis() / 1000L;
        }
        return new GoogleSignInAccount(3, string2, string3, string4, string5, uri, null, l, Preconditions.checkNotEmpty(string8), new ArrayList<Scope>((Collection)Preconditions.checkNotNull(set)), string6, string7);
    }

    public static GoogleSignInAccount createDefault() {
        return GoogleSignInAccount.zza(new Account("<<default account>>", "com.google"), new HashSet<Scope>());
    }

    public static /* varargs */ GoogleSignInAccount fromAccountAndScopes(@NonNull Account account, @NonNull Scope scope, Scope ... arrscope) {
        Preconditions.checkNotNull(account);
        Preconditions.checkNotNull(scope);
        HashSet<Scope> hashSet = new HashSet<Scope>();
        hashSet.add(scope);
        hashSet.addAll(Arrays.asList(arrscope));
        return GoogleSignInAccount.zza(account, hashSet);
    }

    @Nullable
    public static GoogleSignInAccount fromJsonString(@Nullable String string2) throws JSONException {
        if (TextUtils.isEmpty((CharSequence)string2)) {
            return null;
        }
        JSONObject jSONObject = new JSONObject(string2);
        string2 = jSONObject.optString("photoUrl", null);
        string2 = !TextUtils.isEmpty((CharSequence)string2) ? Uri.parse((String)string2) : null;
        long l = Long.parseLong(jSONObject.getString("expirationTime"));
        HashSet<Scope> hashSet = new HashSet<Scope>();
        JSONArray jSONArray = jSONObject.getJSONArray("grantedScopes");
        int n = jSONArray.length();
        for (int i = 0; i < n; ++i) {
            hashSet.add(new Scope(jSONArray.getString(i)));
        }
        return GoogleSignInAccount.create(jSONObject.optString("id"), jSONObject.optString("tokenId", null), jSONObject.optString("email", null), jSONObject.optString("displayName", null), jSONObject.optString("givenName", null), jSONObject.optString("familyName", null), (Uri)string2, l, jSONObject.getString("obfuscatedIdentifier"), hashSet).setServerAuthCode(jSONObject.optString("serverAuthCode", null));
    }

    static final /* synthetic */ int zza(Scope scope, Scope scope2) {
        return scope.getScopeUri().compareTo(scope2.getScopeUri());
    }

    private static GoogleSignInAccount zza(Account account, Set<Scope> set) {
        return GoogleSignInAccount.create(null, null, account.name, null, null, null, null, 0L, account.name, set);
    }

    private final JSONObject zza() {
        JSONObject jSONObject = new JSONObject();
        if (this.getId() != null) {
            jSONObject.put("id", (Object)this.getId());
        }
        if (this.getIdToken() != null) {
            jSONObject.put("tokenId", (Object)this.getIdToken());
        }
        if (this.getEmail() != null) {
            jSONObject.put("email", (Object)this.getEmail());
        }
        if (this.getDisplayName() != null) {
            jSONObject.put("displayName", (Object)this.getDisplayName());
        }
        if (this.getGivenName() != null) {
            jSONObject.put("givenName", (Object)this.getGivenName());
        }
        if (this.getFamilyName() != null) {
            jSONObject.put("familyName", (Object)this.getFamilyName());
        }
        if (this.getPhotoUrl() != null) {
            jSONObject.put("photoUrl", (Object)this.getPhotoUrl().toString());
        }
        if (this.getServerAuthCode() != null) {
            jSONObject.put("serverAuthCode", (Object)this.getServerAuthCode());
        }
        jSONObject.put("expirationTime", this.zzk);
        jSONObject.put("obfuscatedIdentifier", (Object)this.getObfuscatedIdentifier());
        JSONArray jSONArray = new JSONArray();
        Scope[] arrscope = this.zzm.toArray(new Scope[this.zzm.size()]);
        Arrays.sort(arrscope, zza.zzq);
        int n = arrscope.length;
        for (int i = 0; i < n; ++i) {
            jSONArray.put((Object)arrscope[i].getScopeUri());
            continue;
        }
        try {
            jSONObject.put("grantedScopes", (Object)jSONArray);
            return jSONObject;
        }
        catch (JSONException jSONException) {
            throw new RuntimeException((Throwable)jSONException);
        }
    }

    public boolean equals(Object object) {
        if (object == this) {
            return true;
        }
        if (!(object instanceof GoogleSignInAccount)) {
            return false;
        }
        if ((object = (GoogleSignInAccount)object).getObfuscatedIdentifier().equals(this.getObfuscatedIdentifier()) && object.getRequestedScopes().equals(this.getRequestedScopes())) {
            return true;
        }
        return false;
    }

    @Nullable
    public Account getAccount() {
        if (this.zzg == null) {
            return null;
        }
        return new Account(this.zzg, "com.google");
    }

    @Nullable
    public String getDisplayName() {
        return this.zzh;
    }

    @Nullable
    public String getEmail() {
        return this.zzg;
    }

    public long getExpirationTimeSecs() {
        return this.zzk;
    }

    @Nullable
    public String getFamilyName() {
        return this.zzo;
    }

    @Nullable
    public String getGivenName() {
        return this.zzn;
    }

    @NonNull
    public Set<Scope> getGrantedScopes() {
        return new HashSet<Scope>(this.zzm);
    }

    @Nullable
    public String getId() {
        return this.zze;
    }

    @Nullable
    public String getIdToken() {
        return this.zzf;
    }

    @NonNull
    public String getObfuscatedIdentifier() {
        return this.zzl;
    }

    @Nullable
    public Uri getPhotoUrl() {
        return this.zzi;
    }

    @NonNull
    public Set<Scope> getRequestedScopes() {
        HashSet<Scope> hashSet = new HashSet<Scope>(this.zzm);
        hashSet.addAll(this.zzp);
        return hashSet;
    }

    @Nullable
    public String getServerAuthCode() {
        return this.zzj;
    }

    public int hashCode() {
        return (this.getObfuscatedIdentifier().hashCode() + 527) * 31 + this.getRequestedScopes().hashCode();
    }

    public boolean isExpired() {
        if (sClock.currentTimeMillis() / 1000L >= this.zzk - 300L) {
            return true;
        }
        return false;
    }

    public /* varargs */ GoogleSignInAccount requestExtraScopes(Scope ... arrscope) {
        if (arrscope != null) {
            Collections.addAll(this.zzp, arrscope);
        }
        return this;
    }

    public GoogleSignInAccount setServerAuthCode(String string2) {
        this.zzj = string2;
        return this;
    }

    public String toJson() {
        return this.zza().toString();
    }

    public String toJsonForStorage() {
        JSONObject jSONObject = this.zza();
        jSONObject.remove("serverAuthCode");
        return jSONObject.toString();
    }

    public void writeToParcel(Parcel parcel, int n) {
        int n2 = SafeParcelWriter.beginObjectHeader(parcel);
        SafeParcelWriter.writeInt(parcel, 1, this.versionCode);
        SafeParcelWriter.writeString(parcel, 2, this.getId(), false);
        SafeParcelWriter.writeString(parcel, 3, this.getIdToken(), false);
        SafeParcelWriter.writeString(parcel, 4, this.getEmail(), false);
        SafeParcelWriter.writeString(parcel, 5, this.getDisplayName(), false);
        SafeParcelWriter.writeParcelable(parcel, 6, (Parcelable)this.getPhotoUrl(), n, false);
        SafeParcelWriter.writeString(parcel, 7, this.getServerAuthCode(), false);
        SafeParcelWriter.writeLong(parcel, 8, this.getExpirationTimeSecs());
        SafeParcelWriter.writeString(parcel, 9, this.getObfuscatedIdentifier(), false);
        SafeParcelWriter.writeTypedList(parcel, 10, this.zzm, false);
        SafeParcelWriter.writeString(parcel, 11, this.getGivenName(), false);
        SafeParcelWriter.writeString(parcel, 12, this.getFamilyName(), false);
        SafeParcelWriter.finishObjectHeader(parcel, n2);
    }
}

