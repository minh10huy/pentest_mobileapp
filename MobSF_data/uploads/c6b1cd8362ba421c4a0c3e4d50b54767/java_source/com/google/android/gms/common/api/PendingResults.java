/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Looper
 */
package com.google.android.gms.common.api;

import android.os.Looper;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.OptionalPendingResult;
import com.google.android.gms.common.api.PendingResult;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.api.internal.BasePendingResult;
import com.google.android.gms.common.api.internal.OptionalPendingResultImpl;
import com.google.android.gms.common.api.internal.StatusPendingResult;
import com.google.android.gms.common.internal.Preconditions;

@KeepForSdk
public final class PendingResults {
    @KeepForSdk
    private PendingResults() {
    }

    public static PendingResult<Status> canceledPendingResult() {
        StatusPendingResult statusPendingResult = new StatusPendingResult(Looper.getMainLooper());
        statusPendingResult.cancel();
        return statusPendingResult;
    }

    public static <R extends Result> PendingResult<R> canceledPendingResult(R object) {
        Preconditions.checkNotNull(object, "Result must not be null");
        boolean bl = object.getStatus().getStatusCode() == 16;
        Preconditions.checkArgument(bl, "Status code must be CommonStatusCodes.CANCELED");
        object = new zza<R>(object);
        object.cancel();
        return object;
    }

    @KeepForSdk
    public static <R extends Result> PendingResult<R> immediateFailedResult(R r, GoogleApiClient object) {
        Preconditions.checkNotNull(r, "Result must not be null");
        Preconditions.checkArgument(r.getStatus().isSuccess() ^ true, "Status code must not be SUCCESS");
        object = new zzb<R>((GoogleApiClient)object, r);
        object.setResult(r);
        return object;
    }

    @KeepForSdk
    public static <R extends Result> OptionalPendingResult<R> immediatePendingResult(R r) {
        Preconditions.checkNotNull(r, "Result must not be null");
        zzc<R> zzc2 = new zzc<R>(null);
        zzc2.setResult(r);
        return new OptionalPendingResultImpl(zzc2);
    }

    @KeepForSdk
    public static <R extends Result> OptionalPendingResult<R> immediatePendingResult(R r, GoogleApiClient object) {
        Preconditions.checkNotNull(r, "Result must not be null");
        object = new zzc((GoogleApiClient)object);
        object.setResult(r);
        return new OptionalPendingResultImpl(object);
    }

    @KeepForSdk
    public static PendingResult<Status> immediatePendingResult(Status status) {
        Preconditions.checkNotNull(status, "Result must not be null");
        StatusPendingResult statusPendingResult = new StatusPendingResult(Looper.getMainLooper());
        statusPendingResult.setResult(status);
        return statusPendingResult;
    }

    @KeepForSdk
    public static PendingResult<Status> immediatePendingResult(Status status, GoogleApiClient object) {
        Preconditions.checkNotNull(status, "Result must not be null");
        object = new StatusPendingResult((GoogleApiClient)object);
        object.setResult(status);
        return object;
    }

    private static final class zza<R extends Result>
    extends BasePendingResult<R> {
        private final R zzdl;

        public zza(R r) {
            super(Looper.getMainLooper());
            this.zzdl = r;
        }

        @Override
        protected final R createFailedResult(Status status) {
            if (status.getStatusCode() != this.zzdl.getStatus().getStatusCode()) {
                throw new UnsupportedOperationException("Creating failed results is not supported");
            }
            return this.zzdl;
        }
    }

    private static final class zzb<R extends Result>
    extends BasePendingResult<R> {
        private final R zzdm;

        public zzb(GoogleApiClient googleApiClient, R r) {
            super(googleApiClient);
            this.zzdm = r;
        }

        @Override
        protected final R createFailedResult(Status status) {
            return this.zzdm;
        }
    }

    private static final class zzc<R extends Result>
    extends BasePendingResult<R> {
        public zzc(GoogleApiClient googleApiClient) {
            super(googleApiClient);
        }

        @Override
        protected final R createFailedResult(Status status) {
            throw new UnsupportedOperationException("Creating failed results is not supported");
        }
    }

}

