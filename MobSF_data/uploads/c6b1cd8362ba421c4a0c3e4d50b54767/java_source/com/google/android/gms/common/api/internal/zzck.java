/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.IBinder
 *  android.os.IBinder$DeathRecipient
 *  android.os.RemoteException
 */
package com.google.android.gms.common.api.internal;

import android.os.IBinder;
import android.os.RemoteException;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.ResultCallback;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.api.internal.BaseImplementation;
import com.google.android.gms.common.api.internal.BasePendingResult;
import com.google.android.gms.common.api.internal.zzcl;
import com.google.android.gms.common.api.internal.zzcm;
import com.google.android.gms.common.api.internal.zzcn;
import com.google.android.gms.common.api.zzc;
import com.google.android.gms.common.util.VisibleForTesting;
import java.util.Collections;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;

public final class zzck {
    public static final Status zzmm = new Status(8, "The connection to Google Play services was lost");
    private static final BasePendingResult<?>[] zzmn = new BasePendingResult[0];
    private final Map<Api.AnyClientKey<?>, Api.Client> zzil;
    @VisibleForTesting
    final Set<BasePendingResult<?>> zzmo = Collections.synchronizedSet(Collections.newSetFromMap(new WeakHashMap()));
    private final zzcn zzmp = new zzcl(this);

    public zzck(Map<Api.AnyClientKey<?>, Api.Client> map) {
        this.zzil = map;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public final void release() {
        block5 : {
            var4_1 = this.zzmo.toArray(zzck.zzmn);
            var2_3 = var4_1.length;
            var1_4 = 0;
            while (var1_4 < var2_3) {
                block7 : {
                    block8 : {
                        block6 : {
                            var3_5 = var4_1[var1_4];
                            var3_5.zza(null);
                            if (var3_5.zzo() != null) break block6;
                            if (!var3_5.zzw()) break block7;
                            ** GOTO lbl22
                        }
                        var3_5.setResultCallback(null);
                        var5_6 = this.zzil.get(((BaseImplementation.ApiMethodImpl)var3_5).getClientKey()).getServiceBrokerBinder();
                        if (!var3_5.isReady()) break block8;
                        var3_5.zza(new zzcm(var3_5, null, var5_6, null));
                        ** GOTO lbl22
                    }
                    if (var5_6 != null && var5_6.isBinderAlive()) {
                        var6_7 = new zzcm(var3_5, null, var5_6, null);
                        var3_5.zza(var6_7);
                        var5_6.linkToDeath((IBinder.DeathRecipient)var6_7, 0);
lbl22: // 3 sources:
                        this.zzmo.remove(var3_5);
                    } else {
                        var3_5.zza(null);
                        break block5;
                    }
                }
                ++var1_4;
            }
            return;
            catch (RemoteException var4_2) {}
        }
        var3_5.cancel();
        var3_5.zzo().intValue();
        throw new NullPointerException();
    }

    final void zzb(BasePendingResult<? extends Result> basePendingResult) {
        this.zzmo.add(basePendingResult);
        basePendingResult.zza(this.zzmp);
    }

    public final void zzce() {
        BasePendingResult<?>[] arrbasePendingResult = this.zzmo.toArray(zzmn);
        int n = arrbasePendingResult.length;
        for (int i = 0; i < n; ++i) {
            arrbasePendingResult[i].zzb(zzmm);
        }
    }
}

