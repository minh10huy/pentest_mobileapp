/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.Activity
 *  android.app.PendingIntent
 *  android.content.Intent
 *  android.content.IntentSender
 *  android.content.IntentSender$SendIntentException
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 */
package com.google.android.gms.common.api;

import android.app.Activity;
import android.app.PendingIntent;
import android.content.Intent;
import android.content.IntentSender;
import android.os.Parcel;
import android.os.Parcelable;
import android.support.annotation.Nullable;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.api.CommonStatusCodes;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.zze;
import com.google.android.gms.common.internal.Objects;
import com.google.android.gms.common.internal.ReflectedParcelable;
import com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable;
import com.google.android.gms.common.internal.safeparcel.SafeParcelWriter;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import com.google.android.gms.common.util.VisibleForTesting;

@KeepForSdk
@SafeParcelable.Class(creator="StatusCreator")
public final class Status
extends AbstractSafeParcelable
implements Result,
ReflectedParcelable {
    public static final Parcelable.Creator<Status> CREATOR;
    @KeepForSdk
    public static final Status RESULT_CANCELED;
    @KeepForSdk
    public static final Status RESULT_DEAD_CLIENT;
    @KeepForSdk
    public static final Status RESULT_INTERNAL_ERROR;
    @KeepForSdk
    public static final Status RESULT_INTERRUPTED;
    @KeepForSdk
    @VisibleForTesting
    public static final Status RESULT_SUCCESS;
    @KeepForSdk
    public static final Status RESULT_TIMEOUT;
    private static final Status zzdq;
    @SafeParcelable.VersionField(id=1000)
    private final int zzal;
    @SafeParcelable.Field(getter="getStatusCode", id=1)
    private final int zzam;
    @Nullable
    @SafeParcelable.Field(getter="getPendingIntent", id=3)
    private final PendingIntent zzan;
    @Nullable
    @SafeParcelable.Field(getter="getStatusMessage", id=2)
    private final String zzao;

    static {
        RESULT_SUCCESS = new Status(0);
        RESULT_INTERRUPTED = new Status(14);
        RESULT_INTERNAL_ERROR = new Status(8);
        RESULT_TIMEOUT = new Status(15);
        RESULT_CANCELED = new Status(16);
        zzdq = new Status(17);
        RESULT_DEAD_CLIENT = new Status(18);
        CREATOR = new zze();
    }

    @KeepForSdk
    public Status(int n) {
        this(n, null);
    }

    @KeepForSdk
    @SafeParcelable.Constructor
    Status(@SafeParcelable.Param(id=1000) int n, @SafeParcelable.Param(id=1) int n2, @Nullable @SafeParcelable.Param(id=2) String string2, @Nullable @SafeParcelable.Param(id=3) PendingIntent pendingIntent) {
        this.zzal = n;
        this.zzam = n2;
        this.zzao = string2;
        this.zzan = pendingIntent;
    }

    @KeepForSdk
    public Status(int n, @Nullable String string2) {
        this(1, n, string2, null);
    }

    @KeepForSdk
    public Status(int n, @Nullable String string2, @Nullable PendingIntent pendingIntent) {
        this(1, n, string2, pendingIntent);
    }

    public final boolean equals(Object object) {
        if (!(object instanceof Status)) {
            return false;
        }
        object = (Status)object;
        if (this.zzal == object.zzal && this.zzam == object.zzam && Objects.equal(this.zzao, object.zzao) && Objects.equal((Object)this.zzan, (Object)object.zzan)) {
            return true;
        }
        return false;
    }

    public final PendingIntent getResolution() {
        return this.zzan;
    }

    @KeepForSdk
    @Override
    public final Status getStatus() {
        return this;
    }

    public final int getStatusCode() {
        return this.zzam;
    }

    @Nullable
    public final String getStatusMessage() {
        return this.zzao;
    }

    @VisibleForTesting
    public final boolean hasResolution() {
        if (this.zzan != null) {
            return true;
        }
        return false;
    }

    public final int hashCode() {
        return Objects.hashCode(new Object[]{this.zzal, this.zzam, this.zzao, this.zzan});
    }

    public final boolean isCanceled() {
        if (this.zzam == 16) {
            return true;
        }
        return false;
    }

    public final boolean isInterrupted() {
        if (this.zzam == 14) {
            return true;
        }
        return false;
    }

    public final boolean isSuccess() {
        if (this.zzam <= 0) {
            return true;
        }
        return false;
    }

    public final void startResolutionForResult(Activity activity, int n) throws IntentSender.SendIntentException {
        if (!this.hasResolution()) {
            return;
        }
        activity.startIntentSenderForResult(this.zzan.getIntentSender(), n, null, 0, 0, 0);
    }

    public final String toString() {
        return Objects.toStringHelper(this).add("statusCode", this.zzp()).add("resolution", (Object)this.zzan).toString();
    }

    @KeepForSdk
    public final void writeToParcel(Parcel parcel, int n) {
        int n2 = SafeParcelWriter.beginObjectHeader(parcel);
        SafeParcelWriter.writeInt(parcel, 1, this.getStatusCode());
        SafeParcelWriter.writeString(parcel, 2, this.getStatusMessage(), false);
        SafeParcelWriter.writeParcelable(parcel, 3, (Parcelable)this.zzan, n, false);
        SafeParcelWriter.writeInt(parcel, 1000, this.zzal);
        SafeParcelWriter.finishObjectHeader(parcel, n2);
    }

    public final String zzp() {
        if (this.zzao != null) {
            return this.zzao;
        }
        return CommonStatusCodes.getStatusCodeString(this.zzam);
    }
}

