/*
 * Decompiled with CFR 0_132.
 */
package com.google.android.gms.internal.measurement;

import com.google.android.gms.internal.measurement.zzaac;
import com.google.android.gms.internal.measurement.zzaaq;
import com.google.android.gms.internal.measurement.zzabd;
import com.google.android.gms.internal.measurement.zzabu;
import com.google.android.gms.internal.measurement.zzabz;
import com.google.android.gms.internal.measurement.zzzb;
import com.google.android.gms.internal.measurement.zzzs;
import com.google.android.gms.internal.measurement.zzzt;
import com.google.android.gms.internal.measurement.zzzw;
import com.google.android.gms.internal.measurement.zzzx;
import com.google.android.gms.internal.measurement.zzzz;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

final class zzzr<FieldDescriptorType extends zzzt<FieldDescriptorType>> {
    private static final zzzr zzbub = new zzzr<FieldDescriptorType>(true);
    private boolean zzbnw;
    private final zzabd<FieldDescriptorType, Object> zzbtz;
    private boolean zzbua = false;

    private zzzr() {
        this.zzbtz = zzabd.zzag(16);
    }

    private zzzr(boolean bl) {
        this.zzbtz = zzabd.zzag(0);
        if (!this.zzbnw) {
            this.zzbtz.zzru();
            this.zzbnw = true;
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private static void zza(zzabu zzabu2, Object object) {
        boolean bl;
        block17 : {
            zzzw.checkNotNull(object);
            int n = zzzs.zzbuc[zzabu2.zzvk().ordinal()];
            bl = false;
            switch (n) {
                default: {
                    break block17;
                }
                case 9: {
                    if (object instanceof zzaaq || object instanceof zzzz) {
                        return;
                    }
                    break block17;
                }
                case 8: {
                    if (object instanceof Integer || object instanceof zzzx) {
                        do {
                            return;
                            break;
                        } while (true);
                    }
                    break block17;
                }
                case 7: {
                    if (object instanceof zzzb || object instanceof byte[]) {
                        return;
                    }
                    break block17;
                }
                case 6: {
                    bl = object instanceof String;
                    break block17;
                }
                case 5: {
                    bl = object instanceof Boolean;
                    break block17;
                }
                case 4: {
                    bl = object instanceof Double;
                    break block17;
                }
                case 3: {
                    bl = object instanceof Float;
                    break block17;
                }
                case 2: {
                    bl = object instanceof Long;
                    break block17;
                }
                case 1: 
            }
            bl = object instanceof Integer;
        }
        if (bl) return;
        throw new IllegalArgumentException("Wrong object type used with protocol message reflection.");
    }

    private final void zza(FieldDescriptorType FieldDescriptorType, Object arrayList) {
        if (FieldDescriptorType.zztz()) {
            if (!(arrayList instanceof List)) {
                throw new IllegalArgumentException("Wrong object type used with protocol message reflection.");
            }
            ArrayList arrayList2 = new ArrayList();
            arrayList2.addAll(arrayList);
            arrayList = arrayList2;
            int n = arrayList.size();
            for (int i = 0; i < n; ++i) {
                Object e = arrayList.get(i);
                zzzr.zza(FieldDescriptorType.zzty(), e);
            }
            arrayList = arrayList2;
        } else {
            zzzr.zza(FieldDescriptorType.zzty(), arrayList);
        }
        if (arrayList instanceof zzzz) {
            this.zzbua = true;
        }
        this.zzbtz.zza(FieldDescriptorType, arrayList);
    }

    public static <T extends zzzt<T>> zzzr<T> zztx() {
        return zzbub;
    }

    public final /* synthetic */ Object clone() throws CloneNotSupportedException {
        zzzr<FieldDescriptorType> zzzr2 = new zzzr<FieldDescriptorType>();
        for (int i = 0; i < this.zzbtz.zzuy(); ++i) {
            Map.Entry<FieldDescriptorType, Object> entry = this.zzbtz.zzah(i);
            zzzr.super.zza((zzzt)entry.getKey(), entry.getValue());
        }
        for (Map.Entry entry : this.zzbtz.zzuz()) {
            zzzr.super.zza((zzzt)entry.getKey(), entry.getValue());
        }
        zzzr2.zzbua = this.zzbua;
        return zzzr2;
    }

    public final boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof zzzr)) {
            return false;
        }
        object = (zzzr)object;
        return this.zzbtz.equals(object.zzbtz);
    }

    public final int hashCode() {
        return this.zzbtz.hashCode();
    }

    public final Iterator<Map.Entry<FieldDescriptorType, Object>> iterator() {
        if (this.zzbua) {
            return new zzaac(this.zzbtz.entrySet().iterator());
        }
        return this.zzbtz.entrySet().iterator();
    }
}

