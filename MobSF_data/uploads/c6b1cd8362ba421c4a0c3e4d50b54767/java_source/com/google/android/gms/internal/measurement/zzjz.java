/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  android.text.TextUtils
 */
package com.google.android.gms.internal.measurement;

import android.content.Context;
import android.os.Parcel;
import android.os.Parcelable;
import android.support.annotation.WorkerThread;
import android.text.TextUtils;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.internal.safeparcel.SafeParcelReader;
import com.google.android.gms.common.util.Clock;
import com.google.android.gms.internal.measurement.zzacb;
import com.google.android.gms.internal.measurement.zzacd;
import com.google.android.gms.internal.measurement.zzeb;
import com.google.android.gms.internal.measurement.zzed;
import com.google.android.gms.internal.measurement.zzee;
import com.google.android.gms.internal.measurement.zzeh;
import com.google.android.gms.internal.measurement.zzek;
import com.google.android.gms.internal.measurement.zzer;
import com.google.android.gms.internal.measurement.zzex;
import com.google.android.gms.internal.measurement.zzfg;
import com.google.android.gms.internal.measurement.zzfi;
import com.google.android.gms.internal.measurement.zzfk;
import com.google.android.gms.internal.measurement.zzft;
import com.google.android.gms.internal.measurement.zzgi;
import com.google.android.gms.internal.measurement.zzjs;
import com.google.android.gms.internal.measurement.zzjt;
import com.google.android.gms.internal.measurement.zzkd;
import com.google.android.gms.internal.measurement.zzkh;
import com.google.android.gms.internal.measurement.zzki;
import com.google.android.gms.internal.measurement.zzkj;
import com.google.android.gms.internal.measurement.zzkk;
import com.google.android.gms.internal.measurement.zzkl;
import com.google.android.gms.internal.measurement.zzkp;
import com.google.android.gms.internal.measurement.zzkr;
import com.google.android.gms.internal.measurement.zzks;
import com.google.android.gms.internal.measurement.zzkt;
import com.google.android.gms.internal.measurement.zzku;
import com.google.android.gms.internal.measurement.zzkv;
import com.google.android.gms.internal.measurement.zzkx;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.BitSet;
import java.util.zip.GZIPInputStream;
import java.util.zip.GZIPOutputStream;

public final class zzjz
extends zzjs {
    zzjz(zzjt zzjt2) {
        super(zzjt2);
    }

    static zzks zza(zzkr arrzzks, String string2) {
        for (zzks zzks2 : arrzzks.zzava) {
            if (!zzks2.name.equals(string2)) continue;
            return zzks2;
        }
        return null;
    }

    private static void zza(StringBuilder stringBuilder, int n) {
        for (int i = 0; i < n; ++i) {
            stringBuilder.append("  ");
        }
    }

    private final void zza(StringBuilder stringBuilder, int n, zzki zzki2) {
        if (zzki2 == null) {
            return;
        }
        zzjz.zza(stringBuilder, n);
        stringBuilder.append("filter {\n");
        zzjz.zza(stringBuilder, n, "complement", zzki2.zzats);
        zzjz.zza(stringBuilder, n, "param_name", this.zzgf().zzbn(zzki2.zzatt));
        int n2 = n + 1;
        zzkl object2 = zzki2.zzatq;
        if (object2 != null) {
            zzjz.zza(stringBuilder, n2);
            stringBuilder.append("string_filter");
            stringBuilder.append(" {\n");
            if (object2.zzaue != null) {
                String[] arrstring = "UNKNOWN_MATCH_TYPE";
                switch (object2.zzaue) {
                    default: {
                        break;
                    }
                    case 6: {
                        arrstring = "IN_LIST";
                        break;
                    }
                    case 5: {
                        arrstring = "EXACT";
                        break;
                    }
                    case 4: {
                        arrstring = "PARTIAL";
                        break;
                    }
                    case 3: {
                        arrstring = "ENDS_WITH";
                        break;
                    }
                    case 2: {
                        arrstring = "BEGINS_WITH";
                        break;
                    }
                    case 1: {
                        arrstring = "REGEXP";
                    }
                }
                zzjz.zza(stringBuilder, n2, "match_type", arrstring);
            }
            zzjz.zza(stringBuilder, n2, "expression", object2.zzauf);
            zzjz.zza(stringBuilder, n2, "case_sensitive", object2.zzaug);
            if (object2.zzauh.length > 0) {
                zzjz.zza(stringBuilder, n2 + 1);
                stringBuilder.append("expression_list {\n");
                for (String string2 : object2.zzauh) {
                    zzjz.zza(stringBuilder, n2 + 2);
                    stringBuilder.append(string2);
                    stringBuilder.append("\n");
                }
                stringBuilder.append("}\n");
            }
            zzjz.zza(stringBuilder, n2);
            stringBuilder.append("}\n");
        }
        this.zza(stringBuilder, n2, "number_filter", zzki2.zzatr);
        zzjz.zza(stringBuilder, n);
        stringBuilder.append("}\n");
    }

    private final void zza(StringBuilder stringBuilder, int n, String string2, zzkj zzkj2) {
        if (zzkj2 == null) {
            return;
        }
        zzjz.zza(stringBuilder, n);
        stringBuilder.append(string2);
        stringBuilder.append(" {\n");
        if (zzkj2.zzatw != null) {
            string2 = "UNKNOWN_COMPARISON_TYPE";
            switch (zzkj2.zzatw) {
                default: {
                    break;
                }
                case 4: {
                    string2 = "BETWEEN";
                    break;
                }
                case 3: {
                    string2 = "EQUAL";
                    break;
                }
                case 2: {
                    string2 = "GREATER_THAN";
                    break;
                }
                case 1: {
                    string2 = "LESS_THAN";
                }
            }
            zzjz.zza(stringBuilder, n, "comparison_type", string2);
        }
        zzjz.zza(stringBuilder, n, "match_as_float", zzkj2.zzatx);
        zzjz.zza(stringBuilder, n, "comparison_value", zzkj2.zzaty);
        zzjz.zza(stringBuilder, n, "min_comparison_value", zzkj2.zzatz);
        zzjz.zza(stringBuilder, n, "max_comparison_value", zzkj2.zzaua);
        zzjz.zza(stringBuilder, n);
        stringBuilder.append("}\n");
    }

    private static void zza(StringBuilder stringBuilder, int n, String arrl, zzkv zzkv2) {
        int n2;
        long l;
        int n3;
        if (zzkv2 == null) {
            return;
        }
        zzjz.zza(stringBuilder, 3);
        stringBuilder.append((String)arrl);
        stringBuilder.append(" {\n");
        arrl = zzkv2.zzawm;
        int n4 = 0;
        if (arrl != null) {
            zzjz.zza(stringBuilder, 4);
            stringBuilder.append("results: ");
            arrl = zzkv2.zzawm;
            n2 = arrl.length;
            n3 = 0;
            n = 0;
            while (n3 < n2) {
                l = arrl[n3];
                if (n != 0) {
                    stringBuilder.append(", ");
                }
                stringBuilder.append((Object)l);
                ++n3;
                ++n;
            }
            stringBuilder.append('\n');
        }
        if (zzkv2.zzawl != null) {
            zzjz.zza(stringBuilder, 4);
            stringBuilder.append("status: ");
            arrl = zzkv2.zzawl;
            n2 = arrl.length;
            n = 0;
            n3 = n4;
            while (n3 < n2) {
                l = arrl[n3];
                if (n != 0) {
                    stringBuilder.append(", ");
                }
                stringBuilder.append((Object)l);
                ++n3;
                ++n;
            }
            stringBuilder.append('\n');
        }
        zzjz.zza(stringBuilder, 3);
        stringBuilder.append("}\n");
    }

    private static void zza(StringBuilder stringBuilder, int n, String string2, Object object) {
        if (object == null) {
            return;
        }
        zzjz.zza(stringBuilder, n + 1);
        stringBuilder.append(string2);
        stringBuilder.append(": ");
        stringBuilder.append(object);
        stringBuilder.append('\n');
    }

    static boolean zza(long[] arrl, int n) {
        if (n >= arrl.length << 6) {
            return false;
        }
        if ((arrl[n / 64] & 1L << n % 64) != 0L) {
            return true;
        }
        return false;
    }

    static long[] zza(BitSet bitSet) {
        int n = (bitSet.length() + 63) / 64;
        long[] arrl = new long[n];
        for (int i = 0; i < n; ++i) {
            int n2;
            arrl[i] = 0L;
            for (int j = 0; j < 64 && (n2 = (i << 6) + j) < bitSet.length(); ++j) {
                if (!bitSet.get(n2)) continue;
                arrl[i] = arrl[i] | 1L << j;
            }
        }
        return arrl;
    }

    static zzks[] zza(zzks[] arrzzks, String string2, Object object) {
        zzks[] arrzzks2;
        int n = arrzzks.length;
        for (int i = 0; i < n; ++i) {
            arrzzks2 = arrzzks[i];
            if (!string2.equals(arrzzks2.name)) continue;
            arrzzks2.zzave = null;
            arrzzks2.zzale = null;
            arrzzks2.zzasw = null;
            if (object instanceof Long) {
                arrzzks2.zzave = (Long)object;
                return arrzzks;
            }
            if (object instanceof String) {
                arrzzks2.zzale = (String)object;
                return arrzzks;
            }
            if (object instanceof Double) {
                arrzzks2.zzasw = (Double)object;
            }
            return arrzzks;
        }
        arrzzks2 = new zzks[arrzzks.length + 1];
        System.arraycopy(arrzzks, 0, arrzzks2, 0, arrzzks.length);
        zzks zzks2 = new zzks();
        zzks2.name = string2;
        if (object instanceof Long) {
            zzks2.zzave = (Long)object;
        } else if (object instanceof String) {
            zzks2.zzale = (String)object;
        } else if (object instanceof Double) {
            zzks2.zzasw = (Double)object;
        }
        arrzzks2[arrzzks.length] = zzks2;
        return arrzzks2;
    }

    static Object zzb(zzkr zzacd2, String string2) {
        if ((zzacd2 = zzjz.zza(zzacd2, string2)) != null) {
            if (zzacd2.zzale != null) {
                return zzacd2.zzale;
            }
            if (zzacd2.zzave != null) {
                return zzacd2.zzave;
            }
            if (zzacd2.zzasw != null) {
                return zzacd2.zzasw;
            }
        }
        return null;
    }

    static boolean zzcf(String string2) {
        if (string2 != null && string2.matches("([+-])?([0-9]+\\.?[0-9]*|[0-9]*\\.?[0-9]+)") && string2.length() <= 310) {
            return true;
        }
        return false;
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    final <T extends Parcelable> T zza(byte[] parcelable, Parcelable.Creator<T> creator) {
        if (parcelable == null) {
            return null;
        }
        Parcel parcel = Parcel.obtain();
        try {
            parcel.unmarshall((byte[])parcelable, 0, ((Parcelable)parcelable).length);
            parcel.setDataPosition(0);
            parcelable = (Parcelable)creator.createFromParcel(parcel);
        }
        catch (Throwable throwable) {}
        parcel.recycle();
        return (T)parcelable;
        parcel.recycle();
        throw throwable;
        catch (SafeParcelReader.ParseException parseException) {}
        {
            this.zzgi().zziv().log("Failed to load parcelable from buffer");
        }
        parcel.recycle();
        return null;
    }

    final String zza(zzkh arrzzki) {
        if (arrzzki == null) {
            return "null";
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("\nevent_filter {\n");
        Integer n = arrzzki.zzatk;
        zzjz.zza(stringBuilder, 0, "filter_id", n);
        zzjz.zza(stringBuilder, 0, "event_name", this.zzgf().zzbm(arrzzki.zzatl));
        this.zza(stringBuilder, 1, "event_count_filter", arrzzki.zzato);
        stringBuilder.append("  filters {\n");
        arrzzki = arrzzki.zzatm;
        int n2 = arrzzki.length;
        for (int i = 0; i < n2; ++i) {
            this.zza(stringBuilder, 2, arrzzki[i]);
        }
        zzjz.zza(stringBuilder, 1);
        stringBuilder.append("}\n}\n");
        return stringBuilder.toString();
    }

    final String zza(zzkk zzkk2) {
        if (zzkk2 == null) {
            return "null";
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("\nproperty_filter {\n");
        zzjz.zza(stringBuilder, 0, "filter_id", zzkk2.zzatk);
        zzjz.zza(stringBuilder, 0, "property_name", this.zzgf().zzbo(zzkk2.zzauc));
        this.zza(stringBuilder, 1, zzkk2.zzaud);
        stringBuilder.append("}\n");
        return stringBuilder.toString();
    }

    final void zza(zzks zzks2, Object object) {
        Preconditions.checkNotNull(object);
        zzks2.zzale = null;
        zzks2.zzave = null;
        zzks2.zzasw = null;
        if (object instanceof String) {
            zzks2.zzale = (String)object;
            return;
        }
        if (object instanceof Long) {
            zzks2.zzave = (Long)object;
            return;
        }
        if (object instanceof Double) {
            zzks2.zzasw = (Double)object;
            return;
        }
        this.zzgi().zziv().zzg("Ignoring invalid (type) event param value", object);
    }

    final void zza(zzkx zzkx2, Object object) {
        Preconditions.checkNotNull(object);
        zzkx2.zzale = null;
        zzkx2.zzave = null;
        zzkx2.zzasw = null;
        if (object instanceof String) {
            zzkx2.zzale = (String)object;
            return;
        }
        if (object instanceof Long) {
            zzkx2.zzave = (Long)object;
            return;
        }
        if (object instanceof Double) {
            zzkx2.zzasw = (Double)object;
            return;
        }
        this.zzgi().zziv().zzg("Ignoring invalid (type) user attribute value", object);
    }

    final boolean zza(long l, long l2) {
        if (l != 0L) {
            if (l2 <= 0L) {
                return true;
            }
            if (Math.abs(this.zzbt().currentTimeMillis() - l) > l2) {
                return true;
            }
            return false;
        }
        return true;
    }

    final byte[] zza(zzkt zzkt2) {
        try {
            byte[] arrby = new byte[zzkt2.zzwb()];
            zzacb zzacb2 = zzacb.zzb(arrby, 0, arrby.length);
            zzkt2.zza(zzacb2);
            zzacb2.zzvt();
            return arrby;
        }
        catch (IOException iOException) {
            this.zzgi().zziv().zzg("Data loss. Failed to serialize batch", iOException);
            return null;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    final byte[] zza(byte[] object) throws IOException {
        try {
            object = new ByteArrayInputStream((byte[])object);
            GZIPInputStream gZIPInputStream = new GZIPInputStream((InputStream)object);
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            byte[] arrby = new byte[1024];
            do {
                int n;
                if ((n = gZIPInputStream.read(arrby)) <= 0) {
                    gZIPInputStream.close();
                    object.close();
                    return byteArrayOutputStream.toByteArray();
                }
                byteArrayOutputStream.write(arrby, 0, n);
            } while (true);
        }
        catch (IOException iOException) {
            this.zzgi().zziv().zzg("Failed to ungzip content", iOException);
            throw iOException;
        }
    }

    final String zzb(zzkt arrzzku) {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("\nbatch {\n");
        if (arrzzku.zzavf != null) {
            for (zzku zzku2 : arrzzku.zzavf) {
                zzkr[] arrzzkr;
                Object object;
                int n;
                int n2;
                zzacd zzacd2;
                if (zzku2 == null || zzku2 == null) continue;
                zzjz.zza(stringBuilder, 1);
                stringBuilder.append("bundle {\n");
                zzjz.zza(stringBuilder, 1, "protocol_version", zzku2.zzavh);
                zzjz.zza(stringBuilder, 1, "platform", zzku2.zzavp);
                zzjz.zza(stringBuilder, 1, "gmp_version", zzku2.zzavt);
                zzjz.zza(stringBuilder, 1, "uploading_gmp_version", zzku2.zzavu);
                zzjz.zza(stringBuilder, 1, "config_version", zzku2.zzawf);
                zzjz.zza(stringBuilder, 1, "gmp_app_id", zzku2.zzafa);
                zzjz.zza(stringBuilder, 1, "app_id", zzku2.zzth);
                zzjz.zza(stringBuilder, 1, "app_version", zzku2.zztg);
                zzjz.zza(stringBuilder, 1, "app_version_major", zzku2.zzawb);
                zzjz.zza(stringBuilder, 1, "firebase_instance_id", zzku2.zzafc);
                zzjz.zza(stringBuilder, 1, "dev_cert_hash", zzku2.zzavx);
                zzjz.zza(stringBuilder, 1, "app_store", zzku2.zzafh);
                zzjz.zza(stringBuilder, 1, "upload_timestamp_millis", zzku2.zzavk);
                zzjz.zza(stringBuilder, 1, "start_timestamp_millis", zzku2.zzavl);
                zzjz.zza(stringBuilder, 1, "end_timestamp_millis", zzku2.zzavm);
                zzjz.zza(stringBuilder, 1, "previous_bundle_start_timestamp_millis", zzku2.zzavn);
                zzjz.zza(stringBuilder, 1, "previous_bundle_end_timestamp_millis", zzku2.zzavo);
                zzjz.zza(stringBuilder, 1, "app_instance_id", zzku2.zzaez);
                zzjz.zza(stringBuilder, 1, "resettable_device_id", zzku2.zzavv);
                zzjz.zza(stringBuilder, 1, "device_id", zzku2.zzawe);
                zzjz.zza(stringBuilder, 1, "ds_id", zzku2.zzawh);
                zzjz.zza(stringBuilder, 1, "limited_ad_tracking", zzku2.zzavw);
                zzjz.zza(stringBuilder, 1, "os_version", zzku2.zzavq);
                zzjz.zza(stringBuilder, 1, "device_model", zzku2.zzavr);
                zzjz.zza(stringBuilder, 1, "user_default_language", zzku2.zzahd);
                zzjz.zza(stringBuilder, 1, "time_zone_offset_minutes", zzku2.zzavs);
                zzjz.zza(stringBuilder, 1, "bundle_sequential_index", zzku2.zzavy);
                zzjz.zza(stringBuilder, 1, "service_upload", zzku2.zzavz);
                zzjz.zza(stringBuilder, 1, "health_monitor", zzku2.zzafy);
                if (zzku2.zzawg != null && zzku2.zzawg != 0L) {
                    zzjz.zza(stringBuilder, 1, "android_id", zzku2.zzawg);
                }
                if (zzku2.zzawj != null) {
                    zzjz.zza(stringBuilder, 1, "retry_counter", zzku2.zzawj);
                }
                if ((object = zzku2.zzavj) != null) {
                    n2 = ((zzkx[])object).length;
                    for (n = 0; n < n2; ++n) {
                        zzacd2 = object[n];
                        if (zzacd2 == null) continue;
                        zzjz.zza(stringBuilder, 2);
                        stringBuilder.append("user_property {\n");
                        zzjz.zza(stringBuilder, 2, "set_timestamp_millis", zzacd2.zzaws);
                        zzjz.zza(stringBuilder, 2, "name", this.zzgf().zzbo(zzacd2.name));
                        zzjz.zza(stringBuilder, 2, "string_value", zzacd2.zzale);
                        zzjz.zza(stringBuilder, 2, "int_value", zzacd2.zzave);
                        zzjz.zza(stringBuilder, 2, "double_value", zzacd2.zzasw);
                        zzjz.zza(stringBuilder, 2);
                        stringBuilder.append("}\n");
                    }
                }
                if ((object = zzku2.zzawa) != null) {
                    n2 = ((zzacd[])object).length;
                    for (n = 0; n < n2; ++n) {
                        zzacd2 = object[n];
                        if (zzacd2 == null) continue;
                        zzjz.zza(stringBuilder, 2);
                        stringBuilder.append("audience_membership {\n");
                        zzjz.zza(stringBuilder, 2, "audience_id", zzacd2.zzate);
                        zzjz.zza(stringBuilder, 2, "new_audience", zzacd2.zzauv);
                        zzjz.zza(stringBuilder, 2, "current_data", zzacd2.zzaut);
                        zzjz.zza(stringBuilder, 2, "previous_data", zzacd2.zzauu);
                        zzjz.zza(stringBuilder, 2);
                        stringBuilder.append("}\n");
                    }
                }
                if ((arrzzkr = zzku2.zzavi) != null) {
                    int n3 = arrzzkr.length;
                    for (n = 0; n < n3; ++n) {
                        object = arrzzkr[n];
                        if (object == null) continue;
                        zzjz.zza(stringBuilder, 2);
                        stringBuilder.append("event {\n");
                        zzjz.zza(stringBuilder, 2, "name", this.zzgf().zzbm(object.name));
                        zzjz.zza(stringBuilder, 2, "timestamp_millis", object.zzavb);
                        zzjz.zza(stringBuilder, 2, "previous_timestamp_millis", object.zzavc);
                        zzjz.zza(stringBuilder, 2, "count", object.count);
                        object = object.zzava;
                        if (object != null) {
                            int n4 = ((zzacd[])object).length;
                            for (n2 = 0; n2 < n4; ++n2) {
                                zzacd2 = object[n2];
                                if (zzacd2 == null) continue;
                                zzjz.zza(stringBuilder, 3);
                                stringBuilder.append("param {\n");
                                zzjz.zza(stringBuilder, 3, "name", this.zzgf().zzbn(zzacd2.name));
                                zzjz.zza(stringBuilder, 3, "string_value", zzacd2.zzale);
                                zzjz.zza(stringBuilder, 3, "int_value", zzacd2.zzave);
                                zzjz.zza(stringBuilder, 3, "double_value", zzacd2.zzasw);
                                zzjz.zza(stringBuilder, 3);
                                stringBuilder.append("}\n");
                            }
                        }
                        zzjz.zza(stringBuilder, 2);
                        stringBuilder.append("}\n");
                    }
                }
                zzjz.zza(stringBuilder, 1);
                stringBuilder.append("}\n");
            }
        }
        stringBuilder.append("}\n");
        return stringBuilder.toString();
    }

    final byte[] zzb(byte[] arrby) throws IOException {
        try {
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            GZIPOutputStream gZIPOutputStream = new GZIPOutputStream(byteArrayOutputStream);
            gZIPOutputStream.write(arrby);
            gZIPOutputStream.close();
            byteArrayOutputStream.close();
            arrby = byteArrayOutputStream.toByteArray();
            return arrby;
        }
        catch (IOException iOException) {
            this.zzgi().zziv().zzg("Failed to gzip content", iOException);
            throw iOException;
        }
    }

    @WorkerThread
    final boolean zzd(zzex zzex2, zzeb zzeb2) {
        Preconditions.checkNotNull(zzex2);
        Preconditions.checkNotNull(zzeb2);
        if (TextUtils.isEmpty((CharSequence)zzeb2.zzafa)) {
            this.zzgl();
            return false;
        }
        return true;
    }

    @Override
    protected final boolean zzgn() {
        return false;
    }
}

