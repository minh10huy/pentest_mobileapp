/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.accounts.Account
 *  android.os.IBinder
 *  android.os.IInterface
 *  android.os.Parcel
 *  android.os.Parcelable
 *  android.os.Parcelable$Creator
 *  android.os.RemoteException
 */
package com.google.android.gms.common.internal;

import android.accounts.Account;
import android.os.IBinder;
import android.os.IInterface;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.RemoteException;
import com.google.android.gms.internal.stable.zza;
import com.google.android.gms.internal.stable.zzb;
import com.google.android.gms.internal.stable.zzc;

public interface IAccountAccessor
extends IInterface {
    public Account getAccount() throws RemoteException;

    public static abstract class Stub
    extends zzb
    implements IAccountAccessor {
        public Stub() {
            super("com.google.android.gms.common.internal.IAccountAccessor");
        }

        public static IAccountAccessor asInterface(IBinder iBinder) {
            if (iBinder == null) {
                return null;
            }
            IInterface iInterface = iBinder.queryLocalInterface("com.google.android.gms.common.internal.IAccountAccessor");
            if (iInterface instanceof IAccountAccessor) {
                return (IAccountAccessor)iInterface;
            }
            return new Proxy(iBinder);
        }

        @Override
        protected boolean dispatchTransaction(int n, Parcel parcel, Parcel parcel2, int n2) throws RemoteException {
            if (n == 2) {
                parcel = this.getAccount();
                parcel2.writeNoException();
                zzc.zzb(parcel2, (Parcelable)parcel);
                return true;
            }
            return false;
        }

        public static class Proxy
        extends zza
        implements IAccountAccessor {
            Proxy(IBinder iBinder) {
                super(iBinder, "com.google.android.gms.common.internal.IAccountAccessor");
            }

            @Override
            public Account getAccount() throws RemoteException {
                Parcel parcel = this.transactAndReadException(2, this.obtainAndWriteInterfaceToken());
                Account account = (Account)zzc.zza(parcel, Account.CREATOR);
                parcel.recycle();
                return account;
            }
        }

    }

}

