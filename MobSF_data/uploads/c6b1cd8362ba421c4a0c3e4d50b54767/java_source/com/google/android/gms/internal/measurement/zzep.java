/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Handler
 *  android.os.Looper
 */
package com.google.android.gms.internal.measurement;

import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.util.Clock;
import com.google.android.gms.internal.measurement.zzeq;
import com.google.android.gms.internal.measurement.zzfi;
import com.google.android.gms.internal.measurement.zzfk;
import com.google.android.gms.internal.measurement.zzhk;

abstract class zzep {
    private static volatile Handler handler;
    private final zzhk zzagz;
    private final Runnable zzyc;
    private volatile long zzyd;

    zzep(zzhk zzhk2) {
        Preconditions.checkNotNull(zzhk2);
        this.zzagz = zzhk2;
        this.zzyc = new zzeq(this, zzhk2);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final Handler getHandler() {
        if (handler != null) {
            return handler;
        }
        synchronized (zzep.class) {
            if (handler != null) return handler;
            handler = new Handler(this.zzagz.getContext().getMainLooper());
            return handler;
        }
    }

    static /* synthetic */ long zza(zzep zzep2, long l) {
        zzep2.zzyd = 0L;
        return 0L;
    }

    final void cancel() {
        this.zzyd = 0L;
        this.getHandler().removeCallbacks(this.zzyc);
    }

    public abstract void run();

    public final boolean zzef() {
        if (this.zzyd != 0L) {
            return true;
        }
        return false;
    }

    public final void zzh(long l) {
        this.cancel();
        if (l >= 0L) {
            this.zzyd = this.zzagz.zzbt().currentTimeMillis();
            if (!this.getHandler().postDelayed(this.zzyc, l)) {
                this.zzagz.zzgi().zziv().zzg("Failed to schedule delayed post. time", l);
            }
        }
    }
}

