/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.os.Looper
 */
package com.google.android.gms.common.api.internal;

import android.os.Looper;
import android.support.annotation.NonNull;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.api.internal.zzaj;
import com.google.android.gms.common.api.internal.zzav;
import com.google.android.gms.common.api.internal.zzbd;
import com.google.android.gms.common.internal.BaseGmsClient;
import com.google.android.gms.common.internal.Preconditions;
import java.lang.ref.WeakReference;

final class zzal
implements BaseGmsClient.ConnectionProgressReportCallbacks {
    private final Api<?> mApi;
    private final boolean zzfo;
    private final WeakReference<zzaj> zzhw;

    public zzal(zzaj zzaj2, Api<?> api, boolean bl) {
        this.zzhw = new WeakReference<zzaj>(zzaj2);
        this.mApi = api;
        this.zzfo = bl;
    }

    static /* synthetic */ boolean zza(zzal zzal2) {
        return zzal2.zzfo;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void onReportServiceBinding(@NonNull ConnectionResult connectionResult) {
        zzaj zzaj2 = this.zzhw.get();
        if (zzaj2 == null) {
            return;
        }
        boolean bl = Looper.myLooper() == zzaj.zzd((zzaj)zzaj2).zzfq.getLooper();
        Preconditions.checkState(bl, "onReportServiceBinding must be called on the GoogleApiClient handler thread");
        zzaj.zzc(zzaj2).lock();
        try {
            bl = zzaj.zza(zzaj2, 0);
            if (!bl) {
                return;
            }
            if (!connectionResult.isSuccess()) {
                zzaj.zza(zzaj2, connectionResult, this.mApi, this.zzfo);
            }
            if (!zzaj.zzk(zzaj2)) return;
            zzaj.zzj(zzaj2);
            return;
        }
        catch (Throwable throwable) {}
        throw throwable;
    }
}

