/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.Intent
 *  android.os.Bundle
 *  android.os.Parcelable
 */
package com.google.android.gms.common.internal;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Parcelable;
import com.google.android.gms.common.internal.ReflectedParcelable;
import com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable;
import java.lang.reflect.Field;

public abstract class DowngradeableSafeParcel
extends AbstractSafeParcelable
implements ReflectedParcelable {
    private static final Object zzsj = new Object();
    private static ClassLoader zzsk;
    private static Integer zzsl;
    private boolean zzsm = false;

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    protected static boolean canUnparcelSafely(String string2) {
        ClassLoader classLoader = DowngradeableSafeParcel.getUnparcelClassLoader();
        if (classLoader == null) {
            return true;
        }
        try {
            return DowngradeableSafeParcel.zza(classLoader.loadClass(string2));
        }
        catch (Exception exception) {
            return false;
        }
    }

    static Bundle getExtras(Intent intent, Context context, Integer n) {
        block4 : {
            block3 : {
                if (context != null) {
                    try {
                        DowngradeableSafeParcel.zza(context.getClassLoader(), n);
                        if (intent.getExtras() == null) break block3;
                        context = new Bundle();
                        context.putAll(intent.getExtras());
                        intent = context;
                        break block4;
                    }
                    catch (Throwable throwable) {
                        DowngradeableSafeParcel.zza(null, null);
                        throw throwable;
                    }
                }
            }
            intent = null;
        }
        DowngradeableSafeParcel.zza(null, null);
        return intent;
    }

    static <T extends Parcelable> T getParcelable(Intent intent, String string2, Context context, Integer n) {
        if (context != null) {
            try {
                DowngradeableSafeParcel.zza(context.getClassLoader(), n);
                intent = intent.getParcelableExtra(string2);
            }
            finally {
                DowngradeableSafeParcel.zza(null, null);
            }
        } else {
            intent = null;
        }
        return (T)intent;
    }

    static <T extends Parcelable> T getParcelable(Bundle bundle, String string2, Context context, Integer n) {
        if (context != null) {
            try {
                DowngradeableSafeParcel.zza(context.getClassLoader(), n);
                bundle = bundle.getParcelable(string2);
            }
            finally {
                DowngradeableSafeParcel.zza(null, null);
            }
        } else {
            bundle = null;
        }
        return (T)bundle;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    protected static ClassLoader getUnparcelClassLoader() {
        Object object = zzsj;
        synchronized (object) {
            return zzsk;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    protected static Integer getUnparcelClientVersion() {
        Object object = zzsj;
        synchronized (object) {
            return zzsl;
        }
    }

    static boolean putParcelable(Bundle bundle, String string2, DowngradeableSafeParcel downgradeableSafeParcel, Context context, Integer n) {
        boolean bl = false;
        if (context == null && n == null) {
            return false;
        }
        if (downgradeableSafeParcel.zza(context, n)) {
            bundle.putParcelable(string2, (Parcelable)downgradeableSafeParcel);
            bl = true;
        }
        return bl;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private static void zza(ClassLoader classLoader, Integer n) {
        Object object = zzsj;
        synchronized (object) {
            zzsk = classLoader;
            zzsl = n;
            return;
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private final boolean zza(Context context, Integer n) {
        if (n != null) {
            return this.prepareForClientVersion(n);
        }
        try {
            this.setShouldDowngrade(DowngradeableSafeParcel.zza(context.getClassLoader().loadClass(this.getClass().getCanonicalName())) ^ true);
            return true;
        }
        catch (Exception exception) {
            return false;
        }
    }

    private static boolean zza(Class<?> class_) {
        try {
            boolean bl = "SAFE_PARCELABLE_NULL_STRING".equals(class_.getField("NULL").get(null));
            return bl;
        }
        catch (IllegalAccessException | NoSuchFieldException reflectiveOperationException) {
            return false;
        }
    }

    protected abstract boolean prepareForClientVersion(int var1);

    public void setShouldDowngrade(boolean bl) {
        this.zzsm = bl;
    }

    protected boolean shouldDowngrade() {
        return this.zzsm;
    }

    public static final class DowngradeableSafeParcelHelper {
        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        public static Bundle getExtras(Intent intent, Context context, Integer n) {
            Object object = zzsj;
            synchronized (object) {
                return DowngradeableSafeParcel.getExtras(intent, context, n);
            }
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        public static <T extends Parcelable> T getParcelable(Intent object, String string2, Context context, Integer n) {
            Object object2 = zzsj;
            synchronized (object2) {
                object = DowngradeableSafeParcel.getParcelable(object, string2, context, n);
                return (T)object;
            }
        }

        /*
         * Enabled aggressive block sorting
         * Enabled unnecessary exception pruning
         * Enabled aggressive exception aggregation
         */
        public static <T extends Parcelable> T getParcelable(Bundle object, String string2, Context context, Integer n) {
            Object object2 = zzsj;
            synchronized (object2) {
                object = DowngradeableSafeParcel.getParcelable(object, string2, context, n);
                return (T)object;
            }
        }

        public static boolean putParcelable(Bundle bundle, String string2, DowngradeableSafeParcel downgradeableSafeParcel, Context context, Integer n) {
            return DowngradeableSafeParcel.putParcelable(bundle, string2, downgradeableSafeParcel, context, n);
        }
    }

}

