/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  javax.annotation.concurrent.GuardedBy
 */
package com.google.android.gms.tasks;

import android.support.annotation.NonNull;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.gms.tasks.Task;
import com.google.android.gms.tasks.zzn;
import com.google.android.gms.tasks.zzq;
import java.util.concurrent.Executor;
import javax.annotation.concurrent.GuardedBy;

final class zzm<TResult>
implements zzq<TResult> {
    private final Object mLock = new Object();
    private final Executor zzafk;
    @GuardedBy(value="mLock")
    private OnSuccessListener<? super TResult> zzafw;

    public zzm(@NonNull Executor executor, @NonNull OnSuccessListener<? super TResult> onSuccessListener) {
        this.zzafk = executor;
        this.zzafw = onSuccessListener;
    }

    static /* synthetic */ Object zza(zzm zzm2) {
        return zzm2.mLock;
    }

    static /* synthetic */ OnSuccessListener zzb(zzm zzm2) {
        return zzm2.zzafw;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void cancel() {
        Object object = this.mLock;
        synchronized (object) {
            this.zzafw = null;
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public final void onComplete(@NonNull Task<TResult> task) {
        if (!task.isSuccessful()) {
            return;
        }
        Object object = this.mLock;
        synchronized (object) {
            if (this.zzafw == null) {
                return;
            }
        }
        this.zzafk.execute(new zzn(this, task));
    }
}

