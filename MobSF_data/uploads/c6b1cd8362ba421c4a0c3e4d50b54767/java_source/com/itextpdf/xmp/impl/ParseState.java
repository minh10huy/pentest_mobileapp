/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.xmp.impl;

import com.itextpdf.xmp.XMPException;

class ParseState {
    private int pos = 0;
    private String str;

    public ParseState(String string2) {
        this.str = string2;
    }

    public char ch() {
        if (this.pos < this.str.length()) {
            return this.str.charAt(this.pos);
        }
        return '\u0000';
    }

    public char ch(int n) {
        if (n < this.str.length()) {
            return this.str.charAt(n);
        }
        return '\u0000';
    }

    public int gatherInt(String string2, int n) throws XMPException {
        char c = this.ch(this.pos);
        boolean bl = false;
        int n2 = 0;
        while ('0' <= c && c <= '9') {
            n2 = n2 * 10 + (c - 48);
            ++this.pos;
            c = this.ch(this.pos);
            bl = true;
        }
        if (bl) {
            if (n2 > n) {
                return n;
            }
            if (n2 < 0) {
                return 0;
            }
            return n2;
        }
        throw new XMPException(string2, 5);
    }

    public boolean hasNext() {
        if (this.pos < this.str.length()) {
            return true;
        }
        return false;
    }

    public int length() {
        return this.str.length();
    }

    public int pos() {
        return this.pos;
    }

    public void skip() {
        ++this.pos;
    }
}

