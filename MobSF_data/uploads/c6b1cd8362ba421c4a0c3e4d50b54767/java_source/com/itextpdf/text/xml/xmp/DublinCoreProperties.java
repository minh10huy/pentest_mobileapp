/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.xml.xmp;

import com.itextpdf.xmp.XMPException;
import com.itextpdf.xmp.XMPMeta;
import com.itextpdf.xmp.XMPUtils;
import com.itextpdf.xmp.options.PropertyOptions;

public class DublinCoreProperties {
    public static final String CONTRIBUTOR = "contributor";
    public static final String COVERAGE = "coverage";
    public static final String CREATOR = "creator";
    public static final String DATE = "date";
    public static final String DESCRIPTION = "description";
    public static final String FORMAT = "format";
    public static final String IDENTIFIER = "identifier";
    public static final String LANGUAGE = "language";
    public static final String PUBLISHER = "publisher";
    public static final String RELATION = "relation";
    public static final String RIGHTS = "rights";
    public static final String SOURCE = "source";
    public static final String SUBJECT = "subject";
    public static final String TITLE = "title";
    public static final String TYPE = "type";

    public static void addAuthor(XMPMeta xMPMeta, String string2) throws XMPException {
        xMPMeta.appendArrayItem("http://purl.org/dc/elements/1.1/", CREATOR, new PropertyOptions(1024), string2, null);
    }

    public static void addDescription(XMPMeta xMPMeta, String string2) throws XMPException {
        xMPMeta.appendArrayItem("http://purl.org/dc/elements/1.1/", DESCRIPTION, new PropertyOptions(2048), string2, null);
    }

    public static void addPublisher(XMPMeta xMPMeta, String string2) throws XMPException {
        xMPMeta.appendArrayItem("http://purl.org/dc/elements/1.1/", PUBLISHER, new PropertyOptions(1024), string2, null);
    }

    public static void addSubject(XMPMeta xMPMeta, String string2) throws XMPException {
        xMPMeta.appendArrayItem("http://purl.org/dc/elements/1.1/", SUBJECT, new PropertyOptions(512), string2, null);
    }

    public static void addTitle(XMPMeta xMPMeta, String string2) throws XMPException {
        xMPMeta.appendArrayItem("http://purl.org/dc/elements/1.1/", TITLE, new PropertyOptions(2048), string2, null);
    }

    public static void setAuthor(XMPMeta xMPMeta, String[] arrstring) throws XMPException {
        XMPUtils.removeProperties(xMPMeta, "http://purl.org/dc/elements/1.1/", CREATOR, true, true);
        for (int i = 0; i < arrstring.length; ++i) {
            xMPMeta.appendArrayItem("http://purl.org/dc/elements/1.1/", CREATOR, new PropertyOptions(1024), arrstring[i], null);
        }
    }

    public static void setDescription(XMPMeta xMPMeta, String string2, String string3, String string4) throws XMPException {
        xMPMeta.setLocalizedText("http://purl.org/dc/elements/1.1/", DESCRIPTION, string3, string4, string2);
    }

    public static void setPublisher(XMPMeta xMPMeta, String[] arrstring) throws XMPException {
        XMPUtils.removeProperties(xMPMeta, "http://purl.org/dc/elements/1.1/", PUBLISHER, true, true);
        for (int i = 0; i < arrstring.length; ++i) {
            xMPMeta.appendArrayItem("http://purl.org/dc/elements/1.1/", PUBLISHER, new PropertyOptions(1024), arrstring[i], null);
        }
    }

    public static void setSubject(XMPMeta xMPMeta, String[] arrstring) throws XMPException {
        XMPUtils.removeProperties(xMPMeta, "http://purl.org/dc/elements/1.1/", SUBJECT, true, true);
        for (int i = 0; i < arrstring.length; ++i) {
            xMPMeta.appendArrayItem("http://purl.org/dc/elements/1.1/", SUBJECT, new PropertyOptions(512), arrstring[i], null);
        }
    }

    public static void setTitle(XMPMeta xMPMeta, String string2, String string3, String string4) throws XMPException {
        xMPMeta.setLocalizedText("http://purl.org/dc/elements/1.1/", TITLE, string3, string4, string2);
    }
}

