/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.io;

import com.itextpdf.text.io.RandomAccessSource;
import java.io.IOException;

public class WindowRandomAccessSource
implements RandomAccessSource {
    private final long length;
    private final long offset;
    private final RandomAccessSource source;

    public WindowRandomAccessSource(RandomAccessSource randomAccessSource, long l) {
        this(randomAccessSource, l, randomAccessSource.length() - l);
    }

    public WindowRandomAccessSource(RandomAccessSource randomAccessSource, long l, long l2) {
        this.source = randomAccessSource;
        this.offset = l;
        this.length = l2;
    }

    @Override
    public void close() throws IOException {
        this.source.close();
    }

    @Override
    public int get(long l) throws IOException {
        if (l >= this.length) {
            return -1;
        }
        return this.source.get(this.offset + l);
    }

    @Override
    public int get(long l, byte[] arrby, int n, int n2) throws IOException {
        if (l >= this.length) {
            return -1;
        }
        long l2 = Math.min((long)n2, this.length - l);
        return this.source.get(this.offset + l, arrby, n, (int)l2);
    }

    @Override
    public long length() {
        return this.length;
    }
}

