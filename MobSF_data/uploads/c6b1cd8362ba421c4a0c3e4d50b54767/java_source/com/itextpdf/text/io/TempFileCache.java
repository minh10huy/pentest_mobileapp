/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.io;

import com.itextpdf.text.pdf.PdfObject;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.RandomAccessFile;

public class TempFileCache {
    private ByteArrayOutputStream baos;
    private byte[] buf;
    private RandomAccessFile cache;
    private String filename;

    public TempFileCache(String string2) throws IOException {
        this.filename = string2;
        File file = new File(string2).getParentFile();
        if (file != null) {
            file.mkdirs();
        }
        this.cache = new RandomAccessFile(string2, "rw");
        this.baos = new ByteArrayOutputStream();
    }

    private byte[] getBuffer(int n) {
        if (this.buf == null || this.buf.length < n) {
            this.buf = new byte[n];
        }
        return this.buf;
    }

    public void close() throws IOException {
        this.cache.close();
        this.cache = null;
        new File(this.filename).delete();
    }

    public PdfObject get(ObjectPosition object) throws IOException, ClassNotFoundException {
        if (object != null) {
            this.cache.seek(object.offset);
            this.cache.read(this.getBuffer(object.length), 0, object.length);
            object = new ObjectInputStream(new ByteArrayInputStream(this.getBuffer(object.length)));
            try {
                PdfObject pdfObject = (PdfObject)object.readObject();
                return pdfObject;
            }
            finally {
                object.close();
            }
        }
        return null;
    }

    public ObjectPosition put(PdfObject pdfObject) throws IOException {
        this.baos.reset();
        ObjectOutputStream objectOutputStream = new ObjectOutputStream(this.baos);
        long l = this.cache.length();
        objectOutputStream.writeObject(pdfObject);
        this.cache.seek(l);
        this.cache.write(this.baos.toByteArray());
        return new ObjectPosition(l, (int)(this.cache.length() - l));
    }

    public class ObjectPosition {
        int length;
        long offset;

        ObjectPosition(long l, int n) {
            this.offset = l;
            this.length = n;
        }
    }

}

