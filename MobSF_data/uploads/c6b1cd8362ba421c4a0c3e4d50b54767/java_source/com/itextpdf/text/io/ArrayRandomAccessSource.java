/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.io;

import com.itextpdf.text.io.RandomAccessSource;
import java.io.IOException;

class ArrayRandomAccessSource
implements RandomAccessSource {
    private byte[] array;

    public ArrayRandomAccessSource(byte[] arrby) {
        if (arrby == null) {
            throw new NullPointerException();
        }
        this.array = arrby;
    }

    @Override
    public void close() throws IOException {
        this.array = null;
    }

    @Override
    public int get(long l) {
        if (l >= (long)this.array.length) {
            return -1;
        }
        return this.array[(int)l] & 255;
    }

    @Override
    public int get(long l, byte[] arrby, int n, int n2) {
        if (this.array == null) {
            throw new IllegalStateException("Already closed");
        }
        if (l >= (long)this.array.length) {
            return -1;
        }
        int n3 = n2;
        if (l + (long)n2 > (long)this.array.length) {
            n3 = (int)((long)this.array.length - l);
        }
        System.arraycopy(this.array, (int)l, arrby, n, n3);
        return n3;
    }

    @Override
    public long length() {
        return this.array.length;
    }
}

