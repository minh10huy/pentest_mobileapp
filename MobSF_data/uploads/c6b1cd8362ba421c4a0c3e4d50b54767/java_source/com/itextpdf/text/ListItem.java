/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.Font;
import com.itextpdf.text.ListBody;
import com.itextpdf.text.ListLabel;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfName;
import java.util.List;

public class ListItem
extends Paragraph {
    private static final long serialVersionUID = 1970670787169329006L;
    private ListBody listBody = null;
    private ListLabel listLabel = null;
    protected Chunk symbol;

    public ListItem() {
        this.setRole(PdfName.LI);
    }

    public ListItem(float f) {
        super(f);
        this.setRole(PdfName.LI);
    }

    public ListItem(float f, Chunk chunk) {
        super(f, chunk);
        this.setRole(PdfName.LI);
    }

    public ListItem(float f, String string2) {
        super(f, string2);
        this.setRole(PdfName.LI);
    }

    public ListItem(float f, String string2, Font font) {
        super(f, string2, font);
        this.setRole(PdfName.LI);
    }

    public ListItem(Chunk chunk) {
        super(chunk);
        this.setRole(PdfName.LI);
    }

    public ListItem(Phrase phrase) {
        super(phrase);
        this.setRole(PdfName.LI);
    }

    public ListItem(String string2) {
        super(string2);
        this.setRole(PdfName.LI);
    }

    public ListItem(String string2, Font font) {
        super(string2, font);
        this.setRole(PdfName.LI);
    }

    public void adjustListSymbolFont() {
        List<Chunk> list = this.getChunks();
        if (!list.isEmpty() && this.symbol != null) {
            this.symbol.setFont(list.get(0).getFont());
        }
    }

    @Override
    public Paragraph cloneShallow(boolean bl) {
        ListItem listItem = new ListItem();
        this.populateProperties(listItem, bl);
        return listItem;
    }

    public ListBody getListBody() {
        if (this.listBody == null) {
            this.listBody = new ListBody(this);
        }
        return this.listBody;
    }

    public ListLabel getListLabel() {
        if (this.listLabel == null) {
            this.listLabel = new ListLabel(this);
        }
        return this.listLabel;
    }

    public Chunk getListSymbol() {
        return this.symbol;
    }

    public void setIndentationLeft(float f, boolean bl) {
        if (bl) {
            this.setIndentationLeft(this.getListSymbol().getWidthPoint());
            return;
        }
        this.setIndentationLeft(f);
    }

    public void setListSymbol(Chunk chunk) {
        if (this.symbol == null) {
            this.symbol = chunk;
            if (this.symbol.getFont().isStandardFont()) {
                this.symbol.setFont(this.font);
            }
        }
    }

    @Override
    public int type() {
        return 15;
    }
}

