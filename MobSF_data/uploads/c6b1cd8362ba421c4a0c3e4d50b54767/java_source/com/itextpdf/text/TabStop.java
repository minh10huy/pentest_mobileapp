/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text;

import com.itextpdf.text.pdf.draw.DrawInterface;

public class TabStop {
    protected Alignment alignment = Alignment.LEFT;
    protected char anchorChar = (char)46;
    protected DrawInterface leader;
    protected float position;

    public TabStop(float f) {
        this(f, Alignment.LEFT);
    }

    public TabStop(float f, Alignment alignment) {
        this(f, null, alignment);
    }

    public TabStop(float f, Alignment alignment, char c) {
        this(f, null, alignment, c);
    }

    public TabStop(float f, DrawInterface drawInterface) {
        this(f, drawInterface, Alignment.LEFT);
    }

    public TabStop(float f, DrawInterface drawInterface, Alignment alignment) {
        this(f, drawInterface, alignment, '.');
    }

    public TabStop(float f, DrawInterface drawInterface, Alignment alignment, char c) {
        this.position = f;
        this.leader = drawInterface;
        this.alignment = alignment;
        this.anchorChar = c;
    }

    public TabStop(TabStop tabStop) {
        this(tabStop.getPosition(), tabStop.getLeader(), tabStop.getAlignment(), tabStop.getAnchorChar());
    }

    public static TabStop newInstance(float f, float f2) {
        f = (float)Math.round(f * 1000.0f) / 1000.0f;
        f2 = (float)Math.round(f2 * 1000.0f) / 1000.0f;
        return new TabStop(f + f2 - f % f2);
    }

    public Alignment getAlignment() {
        return this.alignment;
    }

    public char getAnchorChar() {
        return this.anchorChar;
    }

    public DrawInterface getLeader() {
        return this.leader;
    }

    public float getPosition() {
        return this.position;
    }

    public float getPosition(float f, float f2, float f3) {
        float f4 = this.position;
        float f5 = f2 - f;
        switch (.$SwitchMap$com$itextpdf$text$TabStop$Alignment[this.alignment.ordinal()]) {
            default: {
                return f4;
            }
            case 3: {
                if (!Float.isNaN(f3)) {
                    f2 = f;
                    if (f3 >= this.position) break;
                    return this.position - (f3 - f);
                }
                f2 = f;
                if (f + f5 >= this.position) break;
                return this.position - f5;
            }
            case 2: {
                f3 = f5 / 2.0f;
                f2 = f;
                if (f + f3 >= this.position) break;
                return this.position - f3;
            }
            case 1: {
                f2 = f;
                if (f + f5 >= this.position) break;
                f2 = this.position - f5;
            }
        }
        return f2;
    }

    public void setAlignment(Alignment alignment) {
        this.alignment = alignment;
    }

    public void setAnchorChar(char c) {
        this.anchorChar = c;
    }

    public void setLeader(DrawInterface drawInterface) {
        this.leader = drawInterface;
    }

    public void setPosition(float f) {
        this.position = f;
    }

    public static enum Alignment {
        LEFT,
        RIGHT,
        CENTER,
        ANCHOR;
        

        private Alignment() {
        }
    }

}

