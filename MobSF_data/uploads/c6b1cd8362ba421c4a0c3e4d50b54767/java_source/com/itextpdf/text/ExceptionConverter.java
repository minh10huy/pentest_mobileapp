/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text;

import java.io.PrintStream;
import java.io.PrintWriter;

public class ExceptionConverter
extends RuntimeException {
    private static final long serialVersionUID = 8657630363395849399L;
    private Exception ex;
    private String prefix;

    public ExceptionConverter(Exception object) {
        super((Throwable)object);
        this.ex = object;
        object = object instanceof RuntimeException ? "" : "ExceptionConverter: ";
        this.prefix = object;
    }

    public static final RuntimeException convertException(Exception exception) {
        if (exception instanceof RuntimeException) {
            return (RuntimeException)exception;
        }
        return new ExceptionConverter(exception);
    }

    @Override
    public Throwable fillInStackTrace() {
        return this;
    }

    public Exception getException() {
        return this.ex;
    }

    @Override
    public String getLocalizedMessage() {
        return this.ex.getLocalizedMessage();
    }

    @Override
    public String getMessage() {
        return this.ex.getMessage();
    }

    @Override
    public void printStackTrace() {
        this.printStackTrace(System.err);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public void printStackTrace(PrintStream printStream) {
        synchronized (printStream) {
            printStream.print(this.prefix);
            this.ex.printStackTrace(printStream);
            return;
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @Override
    public void printStackTrace(PrintWriter printWriter) {
        synchronized (printWriter) {
            printWriter.print(this.prefix);
            this.ex.printStackTrace(printWriter);
            return;
        }
    }

    @Override
    public String toString() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(this.prefix);
        stringBuilder.append(this.ex);
        return stringBuilder.toString();
    }
}

