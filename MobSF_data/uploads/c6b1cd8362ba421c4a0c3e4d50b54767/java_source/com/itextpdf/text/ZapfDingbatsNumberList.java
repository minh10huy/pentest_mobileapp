/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import java.util.ArrayList;
import java.util.HashMap;

public class ZapfDingbatsNumberList
extends List {
    protected int type;

    public ZapfDingbatsNumberList(int n) {
        super(true);
        this.type = n;
        float f = this.symbol.getFont().getSize();
        this.symbol.setFont(FontFactory.getFont("ZapfDingbats", f, 0));
        this.postSymbol = " ";
    }

    public ZapfDingbatsNumberList(int n, int n2) {
        super(true, n2);
        this.type = n;
        float f = this.symbol.getFont().getSize();
        this.symbol.setFont(FontFactory.getFont("ZapfDingbats", f, 0));
        this.postSymbol = " ";
    }

    @Override
    public boolean add(Element element) {
        if (element instanceof ListItem) {
            element = (ListItem)element;
            Chunk chunk = new Chunk(this.preSymbol, this.symbol.getFont());
            chunk.setAttributes(this.symbol.getAttributes());
            switch (this.type) {
                default: {
                    chunk.append(String.valueOf((char)(this.first + this.list.size() + 201)));
                    break;
                }
                case 2: {
                    chunk.append(String.valueOf((char)(this.first + this.list.size() + 191)));
                    break;
                }
                case 1: {
                    chunk.append(String.valueOf((char)(this.first + this.list.size() + 181)));
                    break;
                }
                case 0: {
                    chunk.append(String.valueOf((char)(this.first + this.list.size() + 171)));
                }
            }
            chunk.append(this.postSymbol);
            element.setListSymbol(chunk);
            element.setIndentationLeft(this.symbolIndent, this.autoindent);
            element.setIndentationRight(0.0f);
            this.list.add(element);
        } else if (element instanceof List) {
            element = (List)element;
            element.setIndentationLeft(element.getIndentationLeft() + this.symbolIndent);
            --this.first;
            return this.list.add(element);
        }
        return false;
    }

    @Override
    public List cloneShallow() {
        ZapfDingbatsNumberList zapfDingbatsNumberList = new ZapfDingbatsNumberList(this.type);
        this.populateProperties(zapfDingbatsNumberList);
        return zapfDingbatsNumberList;
    }

    public int getType() {
        return this.type;
    }

    public void setType(int n) {
        this.type = n;
    }
}

