/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  org.spongycastle.crypto.BlockCipher
 *  org.spongycastle.crypto.CipherParameters
 *  org.spongycastle.crypto.engines.AESFastEngine
 *  org.spongycastle.crypto.modes.CBCBlockCipher
 *  org.spongycastle.crypto.params.KeyParameter
 */
package com.itextpdf.text.pdf.crypto;

import org.spongycastle.crypto.BlockCipher;
import org.spongycastle.crypto.CipherParameters;
import org.spongycastle.crypto.engines.AESFastEngine;
import org.spongycastle.crypto.modes.CBCBlockCipher;
import org.spongycastle.crypto.params.KeyParameter;

public class AESCipherCBCnoPad {
    private BlockCipher cbc = new CBCBlockCipher((BlockCipher)new AESFastEngine());

    public AESCipherCBCnoPad(boolean bl, byte[] keyParameter) {
        keyParameter = new KeyParameter((byte[])keyParameter);
        this.cbc.init(bl, (CipherParameters)keyParameter);
    }

    public byte[] processBlock(byte[] object, int n, int n2) {
        if (n2 % this.cbc.getBlockSize() != 0) {
            object = new StringBuilder();
            object.append("Not multiple of block: ");
            object.append(n2);
            throw new IllegalArgumentException(object.toString());
        }
        byte[] arrby = new byte[n2];
        int n3 = 0;
        int n4 = n2;
        n2 = n3;
        while (n4 > 0) {
            this.cbc.processBlock((byte[])object, n, arrby, n2);
            n4 -= this.cbc.getBlockSize();
            n2 += this.cbc.getBlockSize();
            n += this.cbc.getBlockSize();
        }
        return arrby;
    }
}

