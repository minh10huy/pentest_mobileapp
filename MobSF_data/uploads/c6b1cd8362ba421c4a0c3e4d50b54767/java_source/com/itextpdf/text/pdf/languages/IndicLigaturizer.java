/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.languages;

import com.itextpdf.text.pdf.languages.LanguageProcessor;

public abstract class IndicLigaturizer
implements LanguageProcessor {
    public static final int HALANTA = 10;
    public static final int LETTER_A = 6;
    public static final int LETTER_AU = 7;
    public static final int LETTER_HA = 9;
    public static final int LETTER_KA = 8;
    public static final int MATRA_AA = 0;
    public static final int MATRA_AI = 3;
    public static final int MATRA_E = 2;
    public static final int MATRA_HLR = 4;
    public static final int MATRA_HLRR = 5;
    public static final int MATRA_I = 1;
    protected char[] langTable;

    private static void swap(StringBuilder stringBuilder, int n, int n2) {
        char c = stringBuilder.charAt(n);
        stringBuilder.setCharAt(n, stringBuilder.charAt(n2));
        stringBuilder.setCharAt(n2, c);
    }

    protected boolean IsSwaraLetter(char c) {
        if (c >= this.langTable[6] && c <= this.langTable[7]) {
            return true;
        }
        return false;
    }

    protected boolean IsSwaraMatra(char c) {
        char[] arrc = this.langTable;
        boolean bl = false;
        if (c >= arrc[0] && c <= this.langTable[3] || c == this.langTable[4] || c == this.langTable[5]) {
            bl = true;
        }
        return bl;
    }

    protected boolean IsVyanjana(char c) {
        if (c >= this.langTable[8] && c <= this.langTable[9]) {
            return true;
        }
        return false;
    }

    @Override
    public boolean isRTL() {
        return false;
    }

    @Override
    public String process(String string2) {
        if (string2 != null && string2.length() != 0) {
            StringBuilder stringBuilder = new StringBuilder();
            for (int i = 0; i < string2.length(); ++i) {
                char c = string2.charAt(i);
                if (!this.IsVyanjana(c) && !this.IsSwaraLetter(c)) {
                    if (this.IsSwaraMatra(c)) {
                        int n = stringBuilder.length() - 1;
                        if (n >= 0) {
                            if (stringBuilder.charAt(n) == this.langTable[10]) {
                                stringBuilder.deleteCharAt(n);
                            }
                            stringBuilder.append(c);
                            n = stringBuilder.length() - 2;
                            if (c != this.langTable[1] || n < 0) continue;
                            IndicLigaturizer.swap(stringBuilder, n, stringBuilder.length() - 1);
                            continue;
                        }
                        stringBuilder.append(c);
                        continue;
                    }
                    stringBuilder.append(c);
                    continue;
                }
                stringBuilder.append(c);
            }
            return stringBuilder.toString();
        }
        return "";
    }
}

