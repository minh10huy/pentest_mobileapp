/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.security;

import com.itextpdf.text.ExceptionConverter;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.security.KeyStore;

public class KeyStoreUtil {
    public static KeyStore loadCacertsKeyStore() {
        return KeyStoreUtil.loadCacertsKeyStore(null);
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public static KeyStore loadCacertsKeyStore(String var0) {
        block11 : {
            block12 : {
                var2_6 = new File(new File(new File(System.getProperty("java.home"), "lib"), "security"), "cacerts");
                var3_7 = null;
                var1_8 = null;
                var2_6 = new FileInputStream((File)var2_6);
                if (var0 != null) ** GOTO lbl10
                var0 = KeyStore.getInstance("JKS");
                break block12;
lbl10: // 1 sources:
                var0 = KeyStore.getInstance("JKS", (String)var0);
            }
            var0.load((InputStream)var2_6, null);
            if (var2_6 == null) return var0;
            try {
                var2_6.close();
                return var0;
            }
            catch (Exception var1_9) {
                return var0;
            }
            catch (Throwable var0_4) {
                var1_8 = var2_6;
                break block11;
            }
            catch (Exception var0_5) {
                var1_8 = var2_6;
                throw new ExceptionConverter((Exception)var0);
            }
            {
                catch (Throwable var0_1) {
                }
                catch (Exception var0_2) {}
                var1_8 = var3_7;
                {
                    throw new ExceptionConverter((Exception)var0);
                }
            }
        }
        if (var1_8 == null) throw var0_3;
        try {
            var1_8.close();
        }
        catch (Exception var1_10) {
            throw var0_3;
        }
        throw var0_3;
    }
}

