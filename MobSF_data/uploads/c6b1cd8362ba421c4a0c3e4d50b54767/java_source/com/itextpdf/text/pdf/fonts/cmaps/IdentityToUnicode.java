/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.fonts.cmaps;

import com.itextpdf.text.pdf.fonts.cmaps.CMapCache;
import com.itextpdf.text.pdf.fonts.cmaps.CMapToUnicode;
import java.io.IOException;

public class IdentityToUnicode {
    private static CMapToUnicode identityCNS;
    private static CMapToUnicode identityGB;
    private static CMapToUnicode identityH;
    private static CMapToUnicode identityJapan;
    private static CMapToUnicode identityKorea;

    public static CMapToUnicode GetMapFromOrdering(String object) throws IOException {
        if (object.equals("CNS1")) {
            if (identityCNS == null) {
                object = CMapCache.getCachedCMapUniCid("UniCNS-UTF16-H");
                if (object == null) {
                    return null;
                }
                identityCNS = object.exportToUnicode();
            }
            return identityCNS;
        }
        if (object.equals("Japan1")) {
            if (identityJapan == null) {
                object = CMapCache.getCachedCMapUniCid("UniJIS-UTF16-H");
                if (object == null) {
                    return null;
                }
                identityJapan = object.exportToUnicode();
            }
            return identityJapan;
        }
        if (object.equals("Korea1")) {
            if (identityKorea == null) {
                object = CMapCache.getCachedCMapUniCid("UniKS-UTF16-H");
                if (object == null) {
                    return null;
                }
                identityKorea = object.exportToUnicode();
            }
            return identityKorea;
        }
        if (object.equals("GB1")) {
            if (identityGB == null) {
                object = CMapCache.getCachedCMapUniCid("UniGB-UTF16-H");
                if (object == null) {
                    return null;
                }
                identityGB = object.exportToUnicode();
            }
            return identityGB;
        }
        if (object.equals("Identity")) {
            if (identityH == null) {
                identityH = CMapToUnicode.getIdentity();
            }
            return identityH;
        }
        return null;
    }
}

