/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf;

import com.itextpdf.text.pdf.PdfEncodings;
import com.itextpdf.text.pdf.PdfIndirectReference;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.IOException;
import java.io.OutputStream;

public class PRIndirectReference
extends PdfIndirectReference {
    protected PdfReader reader;

    public PRIndirectReference(PdfReader pdfReader, int n) {
        this(pdfReader, n, 0);
    }

    public PRIndirectReference(PdfReader pdfReader, int n, int n2) {
        this.type = 10;
        this.number = n;
        this.generation = n2;
        this.reader = pdfReader;
    }

    public PdfReader getReader() {
        return this.reader;
    }

    public void setNumber(int n, int n2) {
        this.number = n;
        this.generation = n2;
    }

    @Override
    public void toPdf(PdfWriter object, OutputStream outputStream) throws IOException {
        if (object != null) {
            int n = object.getNewObjectNumber(this.reader, this.number, this.generation);
            object = new StringBuffer();
            object.append(n);
            object.append(" ");
            n = this.reader.isAppendable() ? this.generation : 0;
            object.append(n);
            object.append(" R");
            outputStream.write(PdfEncodings.convertToBytes(object.toString(), null));
            return;
        }
        super.toPdf(null, outputStream);
    }
}

