/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf;

import com.itextpdf.text.pdf.PdfString;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.SimpleTimeZone;
import java.util.TimeZone;

public class PdfDate
extends PdfString {
    private static final int[] DATE_SPACE = new int[]{1, 4, 0, 2, 2, -1, 5, 2, 0, 11, 2, 0, 12, 2, 0, 13, 2, 0};

    public PdfDate() {
        this(new GregorianCalendar());
    }

    public PdfDate(Calendar calendar) {
        StringBuffer stringBuffer = new StringBuffer("D:");
        stringBuffer.append(this.setLength(calendar.get(1), 4));
        stringBuffer.append(this.setLength(calendar.get(2) + 1, 2));
        stringBuffer.append(this.setLength(calendar.get(5), 2));
        stringBuffer.append(this.setLength(calendar.get(11), 2));
        stringBuffer.append(this.setLength(calendar.get(12), 2));
        stringBuffer.append(this.setLength(calendar.get(13), 2));
        int n = (calendar.get(15) + calendar.get(16)) / 3600000;
        if (n == 0) {
            stringBuffer.append('Z');
        } else if (n < 0) {
            stringBuffer.append('-');
            n = - n;
        } else {
            stringBuffer.append('+');
        }
        if (n != 0) {
            stringBuffer.append(this.setLength(n, 2));
            stringBuffer.append('\'');
            stringBuffer.append(this.setLength(Math.abs((calendar.get(15) + calendar.get(16)) / 60000) - n * 60, 2));
            stringBuffer.append('\'');
        }
        this.value = stringBuffer.toString();
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public static Calendar decode(String var0) {
        var7_2 = var0;
        try {
            if (var0.startsWith("D:")) {
                var7_2 = var0.substring(2);
            }
            var3_3 = var7_2.length();
            var1_4 = var7_2.indexOf(90);
            var4_5 = 0;
            if (var1_4 >= 0) {
                var0 = new GregorianCalendar(new SimpleTimeZone(0, "ZPDF"));
            } else {
                var6_6 = var7_2.indexOf(43);
                var5_7 = 1;
                var1_4 = var6_6;
                var2_8 = var5_7;
                if (var6_6 < 0) {
                    var1_4 = var6_6 = var7_2.indexOf(45);
                    var2_8 = var5_7;
                    if (var6_6 >= 0) {
                        var2_8 = -1;
                        var1_4 = var6_6;
                    }
                }
                if (var1_4 < 0) {
                    var0 = new GregorianCalendar();
                    var1_4 = var3_3;
                } else {
                    var3_3 = var5_7 = Integer.parseInt(var7_2.substring(var1_4 + 1, var1_4 + 3)) * 60;
                    if (var1_4 + 5 < var7_2.length()) {
                        var3_3 = var5_7 + Integer.parseInt(var7_2.substring(var1_4 + 4, var1_4 + 6));
                    }
                    var0 = new GregorianCalendar(new SimpleTimeZone(var3_3 * var2_8 * 60000, "ZPDF"));
                }
            }
            var0.clear();
            var3_3 = 0;
            for (var2_8 = var4_5; var2_8 < PdfDate.DATE_SPACE.length; var2_8 += 3) {
                if (var3_3 >= var1_4) {
                    return var0;
                }
                var4_5 = PdfDate.DATE_SPACE[var2_8];
                var8_9 = PdfDate.DATE_SPACE;
            }
        }
        catch (Exception var0_1) {
            ** continue;
        }
        {
            var5_7 = var2_8 + 1;
            var0.set(var4_5, Integer.parseInt(var7_2.substring(var3_3, var8_9[var5_7] + var3_3)) + PdfDate.DATE_SPACE[var2_8 + 2]);
            var4_5 = PdfDate.DATE_SPACE[var5_7];
            var3_3 += var4_5;
            continue;
        }
        return var0;
lbl45: // 1 sources:
        do {
            return null;
            break;
        } while (true);
    }

    public static String getW3CDate(String string2) {
        String string3 = string2;
        if (string2.startsWith("D:")) {
            string3 = string2.substring(2);
        }
        StringBuffer stringBuffer = new StringBuffer();
        if (string3.length() < 4) {
            return "0000";
        }
        stringBuffer.append(string3.substring(0, 4));
        string2 = string3.substring(4);
        if (string2.length() < 2) {
            return stringBuffer.toString();
        }
        stringBuffer.append('-');
        stringBuffer.append(string2.substring(0, 2));
        string2 = string2.substring(2);
        if (string2.length() < 2) {
            return stringBuffer.toString();
        }
        stringBuffer.append('-');
        stringBuffer.append(string2.substring(0, 2));
        string2 = string2.substring(2);
        if (string2.length() < 2) {
            return stringBuffer.toString();
        }
        stringBuffer.append('T');
        stringBuffer.append(string2.substring(0, 2));
        string2 = string2.substring(2);
        if (string2.length() < 2) {
            stringBuffer.append(":00Z");
            return stringBuffer.toString();
        }
        stringBuffer.append(':');
        stringBuffer.append(string2.substring(0, 2));
        string2 = string2.substring(2);
        if (string2.length() < 2) {
            stringBuffer.append('Z');
            return stringBuffer.toString();
        }
        stringBuffer.append(':');
        stringBuffer.append(string2.substring(0, 2));
        string2 = string2.substring(2);
        if (string2.startsWith("-") || string2.startsWith("+")) {
            String string4 = string2.substring(0, 1);
            String string5 = string2.substring(1);
            string3 = "00";
            if (string5.length() >= 2) {
                String string6 = string5.substring(0, 2);
                string2 = string3;
                if (string5.length() > 2) {
                    string5 = string5.substring(3);
                    string2 = string3;
                    if (string5.length() >= 2) {
                        string2 = string5.substring(0, 2);
                    }
                }
                stringBuffer.append(string4);
                stringBuffer.append(string6);
                stringBuffer.append(':');
                stringBuffer.append(string2);
                return stringBuffer.toString();
            }
        }
        stringBuffer.append('Z');
        return stringBuffer.toString();
    }

    private String setLength(int n, int n2) {
        StringBuffer stringBuffer = new StringBuffer();
        stringBuffer.append(n);
        while (stringBuffer.length() < n2) {
            stringBuffer.insert(0, "0");
        }
        stringBuffer.setLength(n2);
        return stringBuffer.toString();
    }

    public String getW3CDate() {
        return PdfDate.getW3CDate(this.value);
    }
}

