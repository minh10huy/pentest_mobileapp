/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf.parser;

import com.itextpdf.text.pdf.parser.ImageRenderInfo;
import com.itextpdf.text.pdf.parser.RenderFilter;
import com.itextpdf.text.pdf.parser.RenderListener;
import com.itextpdf.text.pdf.parser.TextRenderInfo;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class MultiFilteredRenderListener
implements RenderListener {
    private final List<RenderListener> delegates = new ArrayList<RenderListener>();
    private final List<RenderFilter[]> filters = new ArrayList<RenderFilter[]>();

    public /* varargs */ <E extends RenderListener> E attachRenderListener(E e, RenderFilter ... arrrenderFilter) {
        this.delegates.add((RenderListener)e);
        this.filters.add(arrrenderFilter);
        return e;
    }

    @Override
    public void beginTextBlock() {
        Iterator<RenderListener> iterator = this.delegates.iterator();
        while (iterator.hasNext()) {
            iterator.next().beginTextBlock();
        }
    }

    @Override
    public void endTextBlock() {
        Iterator<RenderListener> iterator = this.delegates.iterator();
        while (iterator.hasNext()) {
            iterator.next().endTextBlock();
        }
    }

    @Override
    public void renderImage(ImageRenderInfo imageRenderInfo) {
        for (int i = 0; i < this.delegates.size(); ++i) {
            int n;
            block2 : {
                RenderFilter[] arrrenderFilter = this.filters.get(i);
                int n2 = arrrenderFilter.length;
                for (n = 0; n < n2; ++n) {
                    if (arrrenderFilter[n].allowImage(imageRenderInfo)) continue;
                    n = 0;
                    break block2;
                }
                n = 1;
            }
            if (n == 0) continue;
            this.delegates.get(i).renderImage(imageRenderInfo);
        }
    }

    @Override
    public void renderText(TextRenderInfo textRenderInfo) {
        for (int i = 0; i < this.delegates.size(); ++i) {
            int n;
            block2 : {
                RenderFilter[] arrrenderFilter = this.filters.get(i);
                int n2 = arrrenderFilter.length;
                for (n = 0; n < n2; ++n) {
                    if (arrrenderFilter[n].allowText(textRenderInfo)) continue;
                    n = 0;
                    break block2;
                }
                n = 1;
            }
            if (n == 0) continue;
            this.delegates.get(i).renderText(textRenderInfo);
        }
    }
}

