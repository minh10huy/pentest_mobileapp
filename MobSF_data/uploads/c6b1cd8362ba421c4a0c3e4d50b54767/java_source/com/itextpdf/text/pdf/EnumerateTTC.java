/*
 * Decompiled with CFR 0_132.
 */
package com.itextpdf.text.pdf;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.error_messages.MessageLocalization;
import com.itextpdf.text.pdf.RandomAccessFileOrArray;
import com.itextpdf.text.pdf.TrueTypeFont;
import java.io.IOException;
import java.util.HashMap;

class EnumerateTTC
extends TrueTypeFont {
    protected String[] names;

    EnumerateTTC(String string2) throws DocumentException, IOException {
        this.fileName = string2;
        this.rf = new RandomAccessFileOrArray(string2);
        this.findNames();
    }

    EnumerateTTC(byte[] arrby) throws DocumentException, IOException {
        this.fileName = "Byte array TTC";
        this.rf = new RandomAccessFileOrArray(arrby);
        this.findNames();
    }

    void findNames() throws DocumentException, IOException {
        int n;
        int n2;
        this.tables = new HashMap();
        try {
            if (!this.readStandardString(4).equals("ttcf")) {
                throw new DocumentException(MessageLocalization.getComposedMessage("1.is.not.a.valid.ttc.file", this.fileName));
            }
            this.rf.skipBytes(4);
            n2 = this.rf.readInt();
            this.names = new String[n2];
            n = (int)this.rf.getFilePointer();
        }
        catch (Throwable throwable) {
            if (this.rf != null) {
                this.rf.close();
            }
            throw throwable;
        }
        for (int i = 0; i < n2; ++i) {
            this.tables.clear();
            this.rf.seek(n);
            this.rf.skipBytes(i * 4);
            this.directoryOffset = this.rf.readInt();
            this.rf.seek(this.directoryOffset);
            if (this.rf.readInt() != 65536) {
                throw new DocumentException(MessageLocalization.getComposedMessage("1.is.not.a.valid.ttf.file", this.fileName));
            }
            int n3 = this.rf.readUnsignedShort();
            this.rf.skipBytes(6);
            for (int j = 0; j < n3; ++j) {
                String string2 = this.readStandardString(4);
                this.rf.skipBytes(4);
                int n4 = this.rf.readInt();
                int n5 = this.rf.readInt();
                this.tables.put(string2, new int[]{n4, n5});
            }
            this.names[i] = this.getBaseFont();
        }
        if (this.rf != null) {
            this.rf.close();
        }
        return;
    }

    String[] getNames() {
        return this.names;
    }
}

