/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.Intent
 *  android.os.Bundle
 *  android.support.v7.app.AppCompatActivity
 *  android.view.View
 *  android.widget.TextView
 *  com.google.firebase.FirebaseApp
 *  kotlin.Metadata
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.activity;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.TextView;
import com.google.firebase.FirebaseApp;
import java.util.HashMap;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.activity.DetailNotificationActivity;
import ntb.mafc.mobile.activity.HomePageActivity;
import ntb.mafc.mobile.activity.LoginActivity;
import ntb.mafc.mobile.entity.User;
import ntb.mafc.mobile.manager.ConfigManager;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import ntb.mafc.mobile.model.UserModel;
import ntb.mafc.mobile.view.UserView;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000H\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0002\b\u0006\u0018\u00002\u00020\u00012\u00020\u0002B\u0005\u00a2\u0006\u0002\u0010\u0003J\b\u0010\u0016\u001a\u00020\u0017H\u0016J\b\u0010\u0018\u001a\u00020\u0017H\u0016J\b\u0010\u0019\u001a\u00020\u0017H\u0002J\u0010\u0010\u001a\u001a\u00020\u00172\u0006\u0010\u001b\u001a\u00020\u001cH\u0002J\b\u0010\u001d\u001a\u00020\u0017H\u0002J\u0012\u0010\u001e\u001a\u00020\u00172\b\u0010\u001f\u001a\u0004\u0018\u00010 H\u0016J!\u0010!\u001a\u00020\u00172\b\u0010\"\u001a\u0004\u0018\u00010#2\b\u0010$\u001a\u0004\u0018\u00010 H\u0016\u00a2\u0006\u0002\u0010%J\u0012\u0010&\u001a\u00020\u00172\b\u0010'\u001a\u0004\u0018\u00010\u001cH\u0014J\b\u0010(\u001a\u00020\u0017H\u0014R\u001c\u0010\u0004\u001a\u0004\u0018\u00010\u0005X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0006\u0010\u0007\"\u0004\b\b\u0010\tR\u001c\u0010\n\u001a\u0004\u0018\u00010\u000bX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\f\u0010\r\"\u0004\b\u000e\u0010\u000fR\u001c\u0010\u0010\u001a\u0004\u0018\u00010\u0011X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0012\u0010\u0013\"\u0004\b\u0014\u0010\u0015\u00a8\u0006)"}, d2={"Lntb/mafc/mobile/activity/SplashScreen;", "Landroid/support/v7/app/AppCompatActivity;", "Lntb/mafc/mobile/view/UserView;", "()V", "configManager", "Lntb/mafc/mobile/manager/ConfigManager;", "getConfigManager", "()Lntb/mafc/mobile/manager/ConfigManager;", "setConfigManager", "(Lntb/mafc/mobile/manager/ConfigManager;)V", "user", "Lntb/mafc/mobile/entity/User;", "getUser", "()Lntb/mafc/mobile/entity/User;", "setUser", "(Lntb/mafc/mobile/entity/User;)V", "userModel", "Lntb/mafc/mobile/model/UserModel;", "getUserModel", "()Lntb/mafc/mobile/model/UserModel;", "setUserModel", "(Lntb/mafc/mobile/model/UserModel;)V", "changePasswordFail", "", "changePasswordSuccess", "checkLogin", "getNotification", "data", "Landroid/os/Bundle;", "goToHomePage", "loginFail", "message", "", "loginSuccess", "isChangePass", "", "channel", "(Ljava/lang/Boolean;Ljava/lang/String;)V", "onCreate", "savedInstanceState", "onStop", "app_release"}, k=1, mv={1, 1, 11})
public final class SplashScreen
extends AppCompatActivity
implements UserView {
    private HashMap _$_findViewCache;
    @Nullable
    private ConfigManager configManager;
    @Nullable
    private User user;
    @Nullable
    private UserModel userModel;

    private final void checkLogin() {
        Object object = this.configManager;
        Object var2_2 = null;
        object = object != null ? Boolean.valueOf(object.isConnectedInternet()) : null;
        if (object == null) {
            Intrinsics.throwNpe();
        }
        if (object.booleanValue()) {
            object = this.userModel;
            if (object != null) {
                object.checkLogined();
                return;
            }
        } else {
            object = this.user;
            object = object != null ? object.getFullname() : null;
            if (Intrinsics.areEqual((Object)object, (Object)"") ^ true) {
                User user = this.user;
                object = var2_2;
                if (user != null) {
                    object = user.getFullname();
                }
                if (object != null) {
                    this.goToHomePage();
                }
            }
        }
    }

    private final void getNotification(Bundle bundle) {
        try {
            Intent intent = new Intent((Context)this, DetailNotificationActivity.class);
            intent.putExtra("dulieu", bundle.getString("message"));
            intent.putExtra("isSplashScreen", true);
            this.startActivity(intent);
            this.finish();
            return;
        }
        catch (Exception exception) {
            return;
        }
    }

    private final void goToHomePage() {
        this.startActivity(new Intent((Context)this, HomePageActivity.class));
    }

    public void _$_clearFindViewByIdCache() {
        if (this._$_findViewCache != null) {
            this._$_findViewCache.clear();
        }
    }

    public View _$_findCachedViewById(int n) {
        View view;
        if (this._$_findViewCache == null) {
            this._$_findViewCache = new HashMap();
        }
        View view2 = view = (View)this._$_findViewCache.get(n);
        if (view == null) {
            view2 = this.findViewById(n);
            this._$_findViewCache.put(n, view2);
        }
        return view2;
    }

    @Override
    public void changePasswordFail() {
    }

    @Override
    public void changePasswordSuccess() {
    }

    @Nullable
    public final ConfigManager getConfigManager() {
        return this.configManager;
    }

    @Nullable
    public final User getUser() {
        return this.user;
    }

    @Nullable
    public final UserModel getUserModel() {
        return this.userModel;
    }

    @Override
    public void loginFail(@Nullable String string2) {
        this.startActivity(new Intent((Context)this, LoginActivity.class));
    }

    @Override
    public void loginSuccess(@Nullable Boolean bl, @Nullable String string2) {
        if (string2 != null) {
            switch (string2.hashCode()) {
                default: {
                    break;
                }
                case 49: {
                    if (!string2.equals("1")) break;
                    this.goToHomePage();
                    break;
                }
                case 48: {
                    if (!string2.equals("0")) break;
                    this.startActivity(new Intent((Context)this, LoginActivity.class));
                }
            }
        }
        this.finish();
    }

    protected void onCreate(@Nullable Bundle object) {
        super.onCreate((Bundle)object);
        FirebaseApp.initializeApp((Context)((Context)this));
        this.setContentView(2131427419);
        this.userModel = new UserModel(this);
        this.configManager = new ConfigManager();
        object = this.userModel;
        object = object != null ? object.getInfoUser() : null;
        this.user = object;
        object = (TextView)this._$_findCachedViewById(R.id.txtLabelSplashscreen);
        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"txtLabelSplashscreen");
        object.setText((CharSequence)MainApplication.Companion.getLocale().getCheckingautologin());
        object = this.getIntent();
        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"intent");
        object = object.getExtras();
        if (object != null) {
            String string2 = object.getString("message");
            if (string2 != null && Intrinsics.areEqual((Object)string2, (Object)"") ^ true) {
                this.getNotification((Bundle)object);
                return;
            }
            this.checkLogin();
            return;
        }
        this.checkLogin();
    }

    protected void onStop() {
        super.onStop();
        this.finish();
    }

    public final void setConfigManager(@Nullable ConfigManager configManager) {
        this.configManager = configManager;
    }

    public final void setUser(@Nullable User user) {
        this.user = user;
    }

    public final void setUserModel(@Nullable UserModel userModel) {
        this.userModel = userModel;
    }
}

