/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Bundle
 *  android.support.v7.app.AppCompatActivity
 *  android.text.Editable
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.widget.Button
 *  android.widget.EditText
 *  android.widget.ImageButton
 *  android.widget.TextView
 *  android.widget.Toast
 *  kotlin.Metadata
 *  kotlin.TypeCastException
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.activity.ChangePasswordUserActivity$onCreate
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.activity;

import android.content.Context;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.text.Editable;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import android.widget.Toast;
import java.util.HashMap;
import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import kotlin.text.StringsKt;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.activity.ChangePasswordUserActivity;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import ntb.mafc.mobile.model.UserModel;
import ntb.mafc.mobile.view.UserView;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u00008\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u0002\n\u0002\b\u0004\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\u0018\u00002\u00020\u00012\u00020\u0002B\u0005\u00a2\u0006\u0002\u0010\u0003J\b\u0010\n\u001a\u00020\u000bH\u0002J\b\u0010\f\u001a\u00020\u000bH\u0016J\b\u0010\r\u001a\u00020\u000bH\u0016J\u0012\u0010\u000e\u001a\u00020\u000b2\b\u0010\u000f\u001a\u0004\u0018\u00010\u0010H\u0016J!\u0010\u0011\u001a\u00020\u000b2\b\u0010\u0012\u001a\u0004\u0018\u00010\u00132\b\u0010\u0014\u001a\u0004\u0018\u00010\u0010H\u0016\u00a2\u0006\u0002\u0010\u0015J\u0012\u0010\u0016\u001a\u00020\u000b2\b\u0010\u0017\u001a\u0004\u0018\u00010\u0018H\u0014J\b\u0010\u0019\u001a\u00020\u000bH\u0014J\b\u0010\u001a\u001a\u00020\u000bH\u0002R\u001c\u0010\u0004\u001a\u0004\u0018\u00010\u0005X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0006\u0010\u0007\"\u0004\b\b\u0010\t\u00a8\u0006\u001b"}, d2={"Lntb/mafc/mobile/activity/ChangePasswordUserActivity;", "Landroid/support/v7/app/AppCompatActivity;", "Lntb/mafc/mobile/view/UserView;", "()V", "userModel", "Lntb/mafc/mobile/model/UserModel;", "getUserModel", "()Lntb/mafc/mobile/model/UserModel;", "setUserModel", "(Lntb/mafc/mobile/model/UserModel;)V", "changePassword", "", "changePasswordFail", "changePasswordSuccess", "loginFail", "message", "", "loginSuccess", "isChangePass", "", "channel", "(Ljava/lang/Boolean;Ljava/lang/String;)V", "onCreate", "savedInstanceState", "Landroid/os/Bundle;", "onResume", "setLanguage", "app_release"}, k=1, mv={1, 1, 11})
public final class ChangePasswordUserActivity
extends AppCompatActivity
implements UserView {
    private HashMap _$_findViewCache;
    @Nullable
    private UserModel userModel;

    public static final /* synthetic */ void access$changePassword(ChangePasswordUserActivity changePasswordUserActivity) {
        changePasswordUserActivity.changePassword();
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private final void changePassword() {
        Object object = (EditText)this._$_findCachedViewById(R.id.edNewPassword);
        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"edNewPassword");
        String string2 = object.getText().toString();
        object = (EditText)this._$_findCachedViewById(R.id.edReEnCurrentPassword);
        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"edReEnCurrentPassword");
        String string3 = object.getText().toString();
        object = (EditText)this._$_findCachedViewById(R.id.edCurrentPassword);
        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"edCurrentPassword");
        object = object.getText();
        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"edCurrentPassword.text");
        boolean bl = StringsKt.trim((CharSequence)((CharSequence)object)).length() > 0;
        if (bl) {
            Object object2;
            object = this.userModel;
            Object var3_5 = null;
            if (object != null) {
                object2 = (EditText)this._$_findCachedViewById(R.id.edCurrentPassword);
                Intrinsics.checkExpressionValueIsNotNull((Object)object2, (String)"edCurrentPassword");
                object = object.checkMatchCurrentPass(object2.getText().toString());
            } else {
                object = null;
            }
            if (object == null) {
                Intrinsics.throwNpe();
            }
            if (object.booleanValue()) {
                object2 = this.userModel;
                object = var3_5;
                if (object2 != null) {
                    object = object2.isValidPassword(string2);
                }
                if (object == null) {
                    Intrinsics.throwNpe();
                }
                if (object.booleanValue()) {
                    object = (EditText)this._$_findCachedViewById(R.id.edCurrentPassword);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"edCurrentPassword");
                    if (Intrinsics.areEqual((Object)object.getText().toString(), (Object)string2) ^ true) {
                        if (string2 == null) {
                            throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
                        }
                        if (StringsKt.isBlank((CharSequence)StringsKt.trim((CharSequence)string2).toString())) {
                            if (string3 == null) {
                                throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
                            }
                            if (StringsKt.isBlank((CharSequence)StringsKt.trim((CharSequence)string3).toString())) {
                                Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getEmptypassword(), (int)0).show();
                                return;
                            }
                        }
                        if (Intrinsics.areEqual((Object)string3, (Object)string2)) {
                            object = this.userModel;
                            if (object == null) return;
                            object.changePassword(string2, this);
                            return;
                        }
                        Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrorrepass(), (int)0).show();
                        return;
                    }
                    Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrormatcholdpass(), (int)0).show();
                    return;
                }
                Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrorpatternpassword(), (int)0).show();
                return;
            }
            Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErroldpassmatch(), (int)0).show();
            return;
        }
        Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrorinputoldpassword(), (int)0).show();
    }

    private final void setLanguage() {
        Button button = (Button)this._$_findCachedViewById(R.id.btnSavePassword);
        Intrinsics.checkExpressionValueIsNotNull((Object)button, (String)"btnSavePassword");
        button.setText((CharSequence)MainApplication.Companion.getLocale().getSave());
        button = (TextView)this._$_findCachedViewById(R.id.txtCurrentPassword);
        Intrinsics.checkExpressionValueIsNotNull((Object)button, (String)"txtCurrentPassword");
        button.setText((CharSequence)MainApplication.Companion.getLocale().getCurrentpassword());
        button = (TextView)this._$_findCachedViewById(R.id.txtReEnCurrentPassword);
        Intrinsics.checkExpressionValueIsNotNull((Object)button, (String)"txtReEnCurrentPassword");
        button.setText((CharSequence)MainApplication.Companion.getLocale().getReenternewpassword());
        button = (TextView)this._$_findCachedViewById(R.id.txtNewPassword);
        Intrinsics.checkExpressionValueIsNotNull((Object)button, (String)"txtNewPassword");
        button.setText((CharSequence)MainApplication.Companion.getLocale().getEnternewpassword());
        button = (TextView)this._$_findCachedViewById(R.id.txtTitle);
        Intrinsics.checkExpressionValueIsNotNull((Object)button, (String)"txtTitle");
        button.setText((CharSequence)MainApplication.Companion.getLocale().getChangepassword());
    }

    public void _$_clearFindViewByIdCache() {
        if (this._$_findViewCache != null) {
            this._$_findViewCache.clear();
        }
    }

    public View _$_findCachedViewById(int n) {
        View view;
        if (this._$_findViewCache == null) {
            this._$_findViewCache = new HashMap();
        }
        View view2 = view = (View)this._$_findViewCache.get(n);
        if (view == null) {
            view2 = this.findViewById(n);
            this._$_findViewCache.put(n, view2);
        }
        return view2;
    }

    @Override
    public void changePasswordFail() {
        Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrorchangepassword(), (int)0).show();
    }

    @Override
    public void changePasswordSuccess() {
        this.finish();
        Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getUpdatesuccess(), (int)0).show();
    }

    @Nullable
    public final UserModel getUserModel() {
        return this.userModel;
    }

    @Override
    public void loginFail(@Nullable String string2) {
    }

    @Override
    public void loginSuccess(@Nullable Boolean bl, @Nullable String string2) {
    }

    protected void onCreate(@Nullable Bundle bundle) {
        super.onCreate(bundle);
        this.setContentView(2131427396);
        this.userModel = new UserModel();
        ((Button)this._$_findCachedViewById(R.id.btnSavePassword)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ ChangePasswordUserActivity this$0;
            {
                this.this$0 = changePasswordUserActivity;
            }

            public final void onClick(View view) {
                ChangePasswordUserActivity.access$changePassword(this.this$0);
            }
        });
        ((ImageButton)this._$_findCachedViewById(R.id.btnBack)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ ChangePasswordUserActivity this$0;
            {
                this.this$0 = changePasswordUserActivity;
            }

            public final void onClick(View view) {
                this.this$0.finish();
            }
        });
    }

    protected void onResume() {
        super.onResume();
        this.setLanguage();
    }

    public final void setUserModel(@Nullable UserModel userModel) {
        this.userModel = userModel;
    }
}

