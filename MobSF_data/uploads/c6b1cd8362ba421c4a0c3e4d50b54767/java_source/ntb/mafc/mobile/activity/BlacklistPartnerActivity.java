/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Bundle
 *  android.os.IBinder
 *  android.support.v4.app.FragmentManager
 *  android.support.v7.app.AppCompatActivity
 *  android.text.Editable
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.view.inputmethod.InputMethodManager
 *  android.widget.Button
 *  android.widget.EditText
 *  android.widget.ImageButton
 *  android.widget.TextView
 *  android.widget.TextView$OnEditorActionListener
 *  android.widget.Toast
 *  kotlin.Metadata
 *  kotlin.TypeCastException
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.activity.BlacklistPartnerActivity$onCreate
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.activity;

import android.content.Context;
import android.os.Bundle;
import android.os.IBinder;
import android.support.v4.app.FragmentManager;
import android.support.v7.app.AppCompatActivity;
import android.text.Editable;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import android.widget.Toast;
import java.util.HashMap;
import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import kotlin.text.StringsKt;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.activity.BlacklistPartnerActivity;
import ntb.mafc.mobile.fragment.DialogFragment;
import ntb.mafc.mobile.manager.ConfigManager;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import ntb.mafc.mobile.model.BlacklistModel;
import ntb.mafc.mobile.view.BlacklistView;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000@\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u0002\n\u0002\b\u0003\n\u0002\u0010\u000e\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\u0018\u00002\u00020\u00012\u00020\u0002B\u0005\u00a2\u0006\u0002\u0010\u0003J\b\u0010\u0016\u001a\u00020\u0017H\u0002J\b\u0010\u0018\u001a\u00020\u0017H\u0002J\u0012\u0010\u0019\u001a\u00020\u00172\b\u0010\u001a\u001a\u0004\u0018\u00010\u001bH\u0016J\b\u0010\u001c\u001a\u00020\u0017H\u0002J\u0012\u0010\u001d\u001a\u00020\u00172\b\u0010\u001e\u001a\u0004\u0018\u00010\u001fH\u0014J\u0012\u0010 \u001a\u00020\u00172\b\u0010!\u001a\u0004\u0018\u00010\u001bH\u0016R\u001c\u0010\u0004\u001a\u0004\u0018\u00010\u0005X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0006\u0010\u0007\"\u0004\b\b\u0010\tR\u001c\u0010\n\u001a\u0004\u0018\u00010\u000bX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\f\u0010\r\"\u0004\b\u000e\u0010\u000fR\u001c\u0010\u0010\u001a\u0004\u0018\u00010\u0011X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0012\u0010\u0013\"\u0004\b\u0014\u0010\u0015\u00a8\u0006\""}, d2={"Lntb/mafc/mobile/activity/BlacklistPartnerActivity;", "Landroid/support/v7/app/AppCompatActivity;", "Lntb/mafc/mobile/view/BlacklistView;", "()V", "blacklistModel", "Lntb/mafc/mobile/model/BlacklistModel;", "getBlacklistModel", "()Lntb/mafc/mobile/model/BlacklistModel;", "setBlacklistModel", "(Lntb/mafc/mobile/model/BlacklistModel;)V", "configManager", "Lntb/mafc/mobile/manager/ConfigManager;", "getConfigManager", "()Lntb/mafc/mobile/manager/ConfigManager;", "setConfigManager", "(Lntb/mafc/mobile/manager/ConfigManager;)V", "dialogFragment", "Lntb/mafc/mobile/fragment/DialogFragment;", "getDialogFragment", "()Lntb/mafc/mobile/fragment/DialogFragment;", "setDialogFragment", "(Lntb/mafc/mobile/fragment/DialogFragment;)V", "checkBlacklist", "", "closeDialog", "errorBlackList", "error", "", "hideSoftKeyboard", "onCreate", "savedInstanceState", "Landroid/os/Bundle;", "showBlackList", "data", "app_release"}, k=1, mv={1, 1, 11})
public final class BlacklistPartnerActivity
extends AppCompatActivity
implements BlacklistView {
    private HashMap _$_findViewCache;
    @Nullable
    private BlacklistModel blacklistModel;
    @Nullable
    private ConfigManager configManager;
    @Nullable
    private DialogFragment dialogFragment;

    public static final /* synthetic */ void access$checkBlacklist(BlacklistPartnerActivity blacklistPartnerActivity) {
        blacklistPartnerActivity.checkBlacklist();
    }

    public static final /* synthetic */ void access$hideSoftKeyboard(BlacklistPartnerActivity blacklistPartnerActivity) {
        blacklistPartnerActivity.hideSoftKeyboard();
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private final void checkBlacklist() {
        Object object = (EditText)this._$_findCachedViewById(R.id.edSearch);
        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"edSearch");
        object = object.getText();
        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"edSearch.text");
        boolean bl = StringsKt.trim((CharSequence)((CharSequence)object)).length() > 0;
        if (bl) {
            object = this.configManager;
            object = object != null ? Boolean.valueOf(object.isConnectedInternet()) : null;
            if (object == null) {
                Intrinsics.throwNpe();
            }
            if (object.booleanValue()) {
                this.closeDialog();
                object = this.dialogFragment;
                if (object != null) {
                    object.show(this.getSupportFragmentManager(), "dialog");
                }
                if ((object = this.blacklistModel) == null) return;
                BlacklistView blacklistView = this;
                EditText editText = (EditText)this._$_findCachedViewById(R.id.edSearch);
                Intrinsics.checkExpressionValueIsNotNull((Object)editText, (String)"edSearch");
                object.getBlackList(blacklistView, editText.getText().toString());
                return;
            }
            Toast.makeText((Context)((Context)this), (CharSequence)MainApplication.Companion.getLocale().getCheckinternet(), (int)0).show();
            return;
        }
        Toast.makeText((Context)((Context)this), (CharSequence)MainApplication.Companion.getLocale().getErrorinputtax(), (int)0).show();
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private final void closeDialog() {
        DialogFragment dialogFragment;
        try {
            if (this.dialogFragment == null || (dialogFragment = this.dialogFragment) == null) return;
        }
        catch (Exception exception) {
            return;
        }
        dialogFragment.dismissAllowingStateLoss();
    }

    private final void hideSoftKeyboard() {
        Object object = this.getSystemService("input_method");
        if (object == null) {
            throw new TypeCastException("null cannot be cast to non-null type android.view.inputmethod.InputMethodManager");
        }
        InputMethodManager inputMethodManager = (InputMethodManager)object;
        object = this.getCurrentFocus();
        object = object != null ? object.getWindowToken() : null;
        inputMethodManager.hideSoftInputFromWindow((IBinder)object, 0);
    }

    public void _$_clearFindViewByIdCache() {
        if (this._$_findViewCache != null) {
            this._$_findViewCache.clear();
        }
    }

    public View _$_findCachedViewById(int n) {
        View view;
        if (this._$_findViewCache == null) {
            this._$_findViewCache = new HashMap();
        }
        View view2 = view = (View)this._$_findViewCache.get(n);
        if (view == null) {
            view2 = this.findViewById(n);
            this._$_findViewCache.put(n, view2);
        }
        return view2;
    }

    @Override
    public void errorBlackList(@Nullable String string2) {
        this.closeDialog();
        Toast.makeText((Context)((Context)this), (CharSequence)string2, (int)0).show();
    }

    @Nullable
    public final BlacklistModel getBlacklistModel() {
        return this.blacklistModel;
    }

    @Nullable
    public final ConfigManager getConfigManager() {
        return this.configManager;
    }

    @Nullable
    public final DialogFragment getDialogFragment() {
        return this.dialogFragment;
    }

    protected void onCreate(@Nullable Bundle bundle) {
        super.onCreate(bundle);
        this.setContentView(2131427391);
        this.configManager = new ConfigManager();
        this.blacklistModel = new BlacklistModel();
        this.dialogFragment = new DialogFragment();
        bundle = (Button)this._$_findCachedViewById(R.id.btnSearch);
        Intrinsics.checkExpressionValueIsNotNull((Object)bundle, (String)"btnSearch");
        bundle.setText((CharSequence)MainApplication.Companion.getLocale().getSearch());
        bundle = (TextView)this._$_findCachedViewById(R.id.txtNameFile);
        Intrinsics.checkExpressionValueIsNotNull((Object)bundle, (String)"txtNameFile");
        bundle.setText((CharSequence)"Blacklist/Partner");
        ((EditText)this._$_findCachedViewById(R.id.edSearch)).setOnEditorActionListener(new TextView.OnEditorActionListener(this){
            final /* synthetic */ BlacklistPartnerActivity this$0;
            {
                this.this$0 = blacklistPartnerActivity;
            }

            public final boolean onEditorAction(TextView textView, int n, android.view.KeyEvent keyEvent) {
                if (n == 3) {
                    BlacklistPartnerActivity.access$hideSoftKeyboard(this.this$0);
                    BlacklistPartnerActivity.access$checkBlacklist(this.this$0);
                }
                return true;
            }
        });
        ((ImageButton)this._$_findCachedViewById(R.id.btnBack)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ BlacklistPartnerActivity this$0;
            {
                this.this$0 = blacklistPartnerActivity;
            }

            public final void onClick(View view) {
                this.this$0.finish();
            }
        });
        ((Button)this._$_findCachedViewById(R.id.btnSearch)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ BlacklistPartnerActivity this$0;
            {
                this.this$0 = blacklistPartnerActivity;
            }

            public final void onClick(View view) {
                BlacklistPartnerActivity.access$checkBlacklist(this.this$0);
            }
        });
    }

    public final void setBlacklistModel(@Nullable BlacklistModel blacklistModel) {
        this.blacklistModel = blacklistModel;
    }

    public final void setConfigManager(@Nullable ConfigManager configManager) {
        this.configManager = configManager;
    }

    public final void setDialogFragment(@Nullable DialogFragment dialogFragment) {
        this.dialogFragment = dialogFragment;
    }

    @Override
    public void showBlackList(@Nullable String string2) {
        this.closeDialog();
        TextView textView = (TextView)this._$_findCachedViewById(R.id.txtResult);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"txtResult");
        textView.setText((CharSequence)string2);
    }
}

