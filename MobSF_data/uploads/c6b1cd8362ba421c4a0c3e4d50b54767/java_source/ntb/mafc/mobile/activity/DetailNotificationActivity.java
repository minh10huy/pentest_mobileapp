/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.Intent
 *  android.os.Bundle
 *  android.os.Parcelable
 *  android.support.v4.app.FragmentManager
 *  android.support.v7.app.AppCompatActivity
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.widget.Button
 *  android.widget.ImageButton
 *  android.widget.TextView
 *  android.widget.Toast
 *  com.google.gson.Gson
 *  kotlin.Metadata
 *  kotlin.TypeCastException
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.activity;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Parcelable;
import android.support.v4.app.FragmentManager;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import android.widget.Toast;
import com.google.gson.Gson;
import java.io.File;
import java.util.HashMap;
import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import kotlin.text.StringsKt;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.activity.DocumentActivity;
import ntb.mafc.mobile.activity.HomePageActivity;
import ntb.mafc.mobile.activity.SplashScreen;
import ntb.mafc.mobile.entity.Defer;
import ntb.mafc.mobile.entity.NotificationEntity;
import ntb.mafc.mobile.entity.User;
import ntb.mafc.mobile.fragment.DialogFragment;
import ntb.mafc.mobile.manager.FileManager;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import ntb.mafc.mobile.model.DashBoardModel;
import ntb.mafc.mobile.model.DeferModel;
import ntb.mafc.mobile.model.UserModel;
import ntb.mafc.mobile.view.DeferView;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000t\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u000b\n\u0002\b\u0007\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\b\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\b\u0018\u00002\u00020\u00012\u00020\u00022\u00020\u0003B\u0005\u00a2\u0006\u0002\u0010\u0004J\b\u00104\u001a\u000205H\u0016J\u0012\u00106\u001a\u0002052\b\u00107\u001a\u0004\u0018\u000108H\u0016J\b\u00109\u001a\u000205H\u0002J\u0012\u0010:\u001a\u0002052\b\u0010;\u001a\u0004\u0018\u00010\u0006H\u0002J\u0012\u0010<\u001a\u0002052\b\u0010=\u001a\u0004\u0018\u000108H\u0016J\b\u0010>\u001a\u000205H\u0016J\u0012\u0010?\u001a\u0002052\b\u0010@\u001a\u0004\u0018\u00010AH\u0016J\u0012\u0010B\u001a\u0002052\b\u0010C\u001a\u0004\u0018\u00010DH\u0014J\b\u0010E\u001a\u000205H\u0014J\b\u0010F\u001a\u000205H\u0016J!\u0010G\u001a\u0002052\b\u0010H\u001a\u0004\u0018\u00010,2\b\u0010\u000b\u001a\u0004\u0018\u00010\fH\u0016\u00a2\u0006\u0002\u0010IJ\u0010\u0010J\u001a\u0002052\u0006\u0010(\u001a\u00020\u0006H\u0002J\u0012\u0010K\u001a\u0002052\b\u00107\u001a\u0004\u0018\u000108H\u0002R\u001c\u0010\u0005\u001a\u0004\u0018\u00010\u0006X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0007\u0010\b\"\u0004\b\t\u0010\nR\u001c\u0010\u000b\u001a\u0004\u0018\u00010\fX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\r\u0010\u000e\"\u0004\b\u000f\u0010\u0010R\u001c\u0010\u0011\u001a\u0004\u0018\u00010\u0012X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0013\u0010\u0014\"\u0004\b\u0015\u0010\u0016R\u001c\u0010\u0017\u001a\u0004\u0018\u00010\u0018X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0019\u0010\u001a\"\u0004\b\u001b\u0010\u001cR\u001c\u0010\u001d\u001a\u0004\u0018\u00010\u001eX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u001f\u0010 \"\u0004\b!\u0010\"R\u001a\u0010#\u001a\u00020$X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b#\u0010%\"\u0004\b&\u0010'R\u001c\u0010(\u001a\u0004\u0018\u00010\u0006X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b)\u0010\b\"\u0004\b*\u0010\nR\u000e\u0010+\u001a\u00020,X\u0082D\u00a2\u0006\u0002\n\u0000R\u000e\u0010-\u001a\u00020,X\u0082D\u00a2\u0006\u0002\n\u0000R\u001c\u0010.\u001a\u0004\u0018\u00010/X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b0\u00101\"\u0004\b2\u00103\u00a8\u0006L"}, d2={"Lntb/mafc/mobile/activity/DetailNotificationActivity;", "Landroid/support/v7/app/AppCompatActivity;", "Landroid/view/View$OnClickListener;", "Lntb/mafc/mobile/view/DeferView;", "()V", "dataFromListQDE", "Lntb/mafc/mobile/entity/NotificationEntity;", "getDataFromListQDE", "()Lntb/mafc/mobile/entity/NotificationEntity;", "setDataFromListQDE", "(Lntb/mafc/mobile/entity/NotificationEntity;)V", "defer", "Lntb/mafc/mobile/entity/Defer;", "getDefer", "()Lntb/mafc/mobile/entity/Defer;", "setDefer", "(Lntb/mafc/mobile/entity/Defer;)V", "deferModel", "Lntb/mafc/mobile/model/DeferModel;", "getDeferModel", "()Lntb/mafc/mobile/model/DeferModel;", "setDeferModel", "(Lntb/mafc/mobile/model/DeferModel;)V", "dialogFragment", "Lntb/mafc/mobile/fragment/DialogFragment;", "getDialogFragment", "()Lntb/mafc/mobile/fragment/DialogFragment;", "setDialogFragment", "(Lntb/mafc/mobile/fragment/DialogFragment;)V", "fileManager", "Lntb/mafc/mobile/manager/FileManager;", "getFileManager", "()Lntb/mafc/mobile/manager/FileManager;", "setFileManager", "(Lntb/mafc/mobile/manager/FileManager;)V", "isSplashScreen", "", "()Z", "setSplashScreen", "(Z)V", "notificationEntity", "getNotificationEntity", "setNotificationEntity", "requestDeferCMND", "", "requestDeferIDF1", "userModel", "Lntb/mafc/mobile/model/UserModel;", "getUserModel", "()Lntb/mafc/mobile/model/UserModel;", "setUserModel", "(Lntb/mafc/mobile/model/UserModel;)V", "checkDeferCMNDSGBSuccess", "", "checkDeferFail", "message", "", "closeDialog", "editDeferDoc", "item", "errorDupCMNDSGB", "reason", "idf1CanDefer", "onClick", "v", "Landroid/view/View;", "onCreate", "savedInstanceState", "Landroid/os/Bundle;", "onStop", "passCMNDSGB", "showDataDefer", "requestCode", "(Ljava/lang/Integer;Lntb/mafc/mobile/entity/Defer;)V", "showDetailNotification", "showDialog", "app_release"}, k=1, mv={1, 1, 11})
public final class DetailNotificationActivity
extends AppCompatActivity
implements View.OnClickListener,
DeferView {
    private HashMap _$_findViewCache;
    @Nullable
    private NotificationEntity dataFromListQDE;
    @Nullable
    private Defer defer;
    @Nullable
    private DeferModel deferModel;
    @Nullable
    private DialogFragment dialogFragment;
    @Nullable
    private FileManager fileManager;
    private boolean isSplashScreen;
    @Nullable
    private NotificationEntity notificationEntity;
    private final int requestDeferCMND = 111;
    private final int requestDeferIDF1 = 112;
    @Nullable
    private UserModel userModel;

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private final void closeDialog() {
        DialogFragment dialogFragment;
        try {
            if (this.dialogFragment == null || (dialogFragment = this.dialogFragment) == null) return;
        }
        catch (Exception exception) {
            return;
        }
        dialogFragment.dismissAllowingStateLoss();
    }

    private final void editDeferDoc(NotificationEntity object) {
        int n;
        Object object2 = this.defer;
        Object var4_3 = null;
        if (object2 != null && (object2 = object2.getIdf1()) != null) {
            if (object2 == null) {
                throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
            }
            object2 = StringsKt.trim((CharSequence)((CharSequence)object2)).toString();
        } else {
            object2 = null;
        }
        if ((object2 == null || ((n = object2.hashCode()) != 0 ? n == 3392903 && object2.equals("null") : object2.equals(""))) && (object2 = this.defer) != null) {
            object2.setIdf1("-1");
        }
        Object object3 = new StringBuilder();
        object3.append(MainApplication.Companion.getNameFolderDefer());
        object3.append('/');
        object2 = object != null ? object.getClient_name() : null;
        object3.append((String)object2);
        object3.append('_');
        object2 = object != null ? object.getClient_id() : null;
        object3.append((String)object2);
        object3.append('_');
        object2 = this.userModel;
        object2 = object2 != null && (object2 = object2.getInfoUser()) != null ? object2.getChannel() : null;
        object3.append((String)object2);
        object2 = object3.toString();
        object3 = this.fileManager;
        if (object3 != null) {
            object3.CreateFile((String)object2);
        }
        object3 = new Intent((Context)this, DocumentActivity.class);
        object3.putExtra("nameFolderTwo", (String)object2);
        object2 = object != null ? object.getClient_id() : null;
        object3.putExtra("idcustomer", (String)object2);
        object2 = object != null ? object.getClient_name() : null;
        object3.putExtra("customername", (String)object2);
        object3.putExtra("defer", (Parcelable)this.defer);
        object3.putExtra("isdefer", true);
        StringBuilder stringBuilder = new StringBuilder();
        object2 = object != null ? object.getClient_name() : null;
        stringBuilder.append((String)object2);
        stringBuilder.append('_');
        object = object != null ? object.getClient_id() : null;
        stringBuilder.append((String)object);
        stringBuilder.append('_');
        object2 = this.userModel;
        object = var4_3;
        if (object2 != null) {
            object2 = object2.getInfoUser();
            object = var4_3;
            if (object2 != null) {
                object = object2.getChannel();
            }
        }
        stringBuilder.append((String)object);
        object3.putExtra("title", stringBuilder.toString());
        this.startActivity((Intent)object3);
    }

    private final void showDetailNotification(NotificationEntity object) {
        Object object2 = (TextView)this._$_findCachedViewById(R.id.txtTitle);
        Intrinsics.checkExpressionValueIsNotNull((Object)object2, (String)"txtTitle");
        object2.setText((CharSequence)MainApplication.Companion.getLocale().getDetailcustomer());
        object2 = (TextView)this._$_findCachedViewById(R.id.txtCustomerName);
        Intrinsics.checkExpressionValueIsNotNull((Object)object2, (String)"txtCustomerName");
        object2.setText((CharSequence)object.getClient_name());
        Object object3 = (TextView)this._$_findCachedViewById(R.id.txtIDF1);
        Intrinsics.checkExpressionValueIsNotNull((Object)object3, (String)"txtIDF1");
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(MainApplication.Companion.getLocale().getIdf1());
        stringBuilder.append(" : ");
        if (object == null || (object2 = object.getApp_id()) == null) {
            object2 = "";
        }
        stringBuilder.append((String)object2);
        object3.setText((CharSequence)stringBuilder.toString());
        object3 = (TextView)this._$_findCachedViewById(R.id.txtCustomerID);
        Intrinsics.checkExpressionValueIsNotNull((Object)object3, (String)"txtCustomerID");
        stringBuilder = new StringBuilder();
        stringBuilder.append(MainApplication.Companion.getLocale().getCustomerid());
        stringBuilder.append(" : ");
        if (object == null || (object2 = object.getClient_id()) == null) {
            object2 = "";
        }
        stringBuilder.append((String)object2);
        object3.setText((CharSequence)stringBuilder.toString());
        object3 = (TextView)this._$_findCachedViewById(R.id.txtPhoneCustomer);
        Intrinsics.checkExpressionValueIsNotNull((Object)object3, (String)"txtPhoneCustomer");
        stringBuilder = new StringBuilder();
        stringBuilder.append(MainApplication.Companion.getLocale().getPhone());
        stringBuilder.append(" : ");
        object2 = object.getCustomer_phone();
        if (object2 == null) {
            object2 = "";
        }
        stringBuilder.append((String)object2);
        object3.setText((CharSequence)stringBuilder.toString());
        object3 = (TextView)this._$_findCachedViewById(R.id.txtStartTime);
        Intrinsics.checkExpressionValueIsNotNull((Object)object3, (String)"txtStartTime");
        stringBuilder = new StringBuilder();
        stringBuilder.append(MainApplication.Companion.getLocale().getDate());
        stringBuilder.append(" : ");
        if (object == null || (object2 = object.getDate_app_creation()) == null) {
            object2 = "";
        }
        stringBuilder.append((String)object2);
        object3.setText((CharSequence)stringBuilder.toString());
        object3 = (TextView)this._$_findCachedViewById(R.id.txtLastStatus);
        Intrinsics.checkExpressionValueIsNotNull((Object)object3, (String)"txtLastStatus");
        stringBuilder = new StringBuilder();
        stringBuilder.append(MainApplication.Companion.getLocale().getStatus());
        stringBuilder.append(" : ");
        if (object == null || (object2 = object.getLast_cas_status()) == null) {
            object2 = "";
        }
        stringBuilder.append((String)object2);
        object3.setText((CharSequence)stringBuilder.toString());
        object3 = (TextView)this._$_findCachedViewById(R.id.txtReason);
        Intrinsics.checkExpressionValueIsNotNull((Object)object3, (String)"txtReason");
        stringBuilder = new StringBuilder();
        stringBuilder.append(MainApplication.Companion.getLocale().getReasonsgb());
        stringBuilder.append(" : ");
        if (object == null || (object2 = object.getReason_sgb()) == null) {
            object2 = "";
        }
        stringBuilder.append((String)object2);
        object3.setText((CharSequence)stringBuilder.toString());
        object2 = (TextView)this._$_findCachedViewById(R.id.txtReasonUND);
        Intrinsics.checkExpressionValueIsNotNull((Object)object2, (String)"txtReasonUND");
        object3 = new StringBuilder();
        object3.append(MainApplication.Companion.getLocale().getReasonmafc());
        object3.append(" : ");
        if (object == null || (object = object.getReason_mafc()) == null) {
            object = "";
        }
        object3.append((String)object);
        object2.setText((CharSequence)object3.toString());
        object = (Button)this._$_findCachedViewById(R.id.btnDefer);
        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"btnDefer");
        object.setText((CharSequence)MainApplication.Companion.getLocale().getQde());
    }

    private final void showDialog(String string2) {
        Toast.makeText((Context)this.getApplicationContext(), (CharSequence)string2, (int)0).show();
    }

    public void _$_clearFindViewByIdCache() {
        if (this._$_findViewCache != null) {
            this._$_findViewCache.clear();
        }
    }

    public View _$_findCachedViewById(int n) {
        View view;
        if (this._$_findViewCache == null) {
            this._$_findViewCache = new HashMap();
        }
        View view2 = view = (View)this._$_findViewCache.get(n);
        if (view == null) {
            view2 = this.findViewById(n);
            this._$_findViewCache.put(n, view2);
        }
        return view2;
    }

    @Override
    public void checkDeferCMNDSGBSuccess() {
        this.closeDialog();
        this.editDeferDoc(this.notificationEntity);
    }

    @Override
    public void checkDeferFail(@Nullable String string2) {
        this.closeDialog();
        this.showDialog(string2);
    }

    @Override
    public void errorDupCMNDSGB(@Nullable String string2) {
    }

    @Nullable
    public final NotificationEntity getDataFromListQDE() {
        return this.dataFromListQDE;
    }

    @Nullable
    public final Defer getDefer() {
        return this.defer;
    }

    @Nullable
    public final DeferModel getDeferModel() {
        return this.deferModel;
    }

    @Nullable
    public final DialogFragment getDialogFragment() {
        return this.dialogFragment;
    }

    @Nullable
    public final FileManager getFileManager() {
        return this.fileManager;
    }

    @Nullable
    public final NotificationEntity getNotificationEntity() {
        return this.notificationEntity;
    }

    @Nullable
    public final UserModel getUserModel() {
        return this.userModel;
    }

    @Override
    public void idf1CanDefer() {
        this.closeDialog();
        this.editDeferDoc(this.notificationEntity);
    }

    public final boolean isSplashScreen() {
        return this.isSplashScreen;
    }

    public void onClick(@Nullable View object) {
        DeferModel deferModel = null;
        DeferModel deferModel2 = null;
        object = object != null ? Integer.valueOf(object.getId()) : null;
        if (object != null && object.intValue() == 2131296319) {
            int n;
            object = this.notificationEntity;
            if (object != null && (object = object.getApp_id()) != null) {
                if (object == null) {
                    throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
                }
                object = StringsKt.trim((CharSequence)((CharSequence)object)).toString();
            } else {
                object = null;
            }
            if (object == null || ((n = object.hashCode()) != 0 ? n == 3392903 && object.equals("null") : object.equals(""))) {
                object = this.dialogFragment;
                if (object != null) {
                    object.show(this.getSupportFragmentManager(), "dialog");
                }
                if ((deferModel = this.deferModel) != null) {
                    DeferView deferView = this;
                    n = this.requestDeferCMND;
                    NotificationEntity notificationEntity = this.notificationEntity;
                    object = deferModel2;
                    if (notificationEntity != null) {
                        object = notificationEntity.getClient_id();
                    }
                    deferModel.getDeferByCMND(deferView, n, (String)object);
                    return;
                }
            } else {
                object = this.dialogFragment;
                if (object != null) {
                    object.show(this.getSupportFragmentManager(), "dialog");
                }
                if ((deferModel2 = this.deferModel) != null) {
                    DeferView deferView = this;
                    n = this.requestDeferIDF1;
                    NotificationEntity notificationEntity = this.notificationEntity;
                    object = deferModel;
                    if (notificationEntity != null) {
                        object = notificationEntity.getApp_id();
                    }
                    deferModel2.getDeferByIDF1(deferView, n, (String)object);
                    return;
                }
            }
        } else {
            if (object == null) {
                return;
            }
            if (object.intValue() == 2131296305) {
                if (this.dataFromListQDE != null) {
                    this.finish();
                    return;
                }
                if (this.isSplashScreen) {
                    this.startActivity(new Intent((Context)this, SplashScreen.class));
                    return;
                }
                this.startActivity(new Intent((Context)this, HomePageActivity.class));
            }
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    protected void onCreate(@Nullable Bundle object) {
        String string2;
        Object object2;
        block17 : {
            block14 : {
                block16 : {
                    block15 : {
                        super.onCreate((Bundle)object);
                        this.setContentView(2131427399);
                        this.dialogFragment = new DialogFragment();
                        object = (Context)this;
                        this.fileManager = new FileManager((Context)object);
                        this.deferModel = new DeferModel();
                        this.userModel = new UserModel();
                        string2 = this.getIntent().getStringExtra("dulieu");
                        this.isSplashScreen = this.getIntent().getBooleanExtra("isSplashScreen", false);
                        this.dataFromListQDE = (NotificationEntity)this.getIntent().getParcelableExtra("datanotifyfromlistqde");
                        try {
                            this.notificationEntity = (NotificationEntity)new Gson().fromJson(string2, NotificationEntity.class);
                        }
                        catch (Exception exception) {}
                        object2 = this.notificationEntity;
                        string2 = null;
                        if (object2 == null) break block14;
                        object = this.notificationEntity;
                        object = object != null ? object.getId() : null;
                        if (object == null || object.intValue() != 0) break block15;
                        object = this.notificationEntity;
                        object = object != null ? object.getId() : null;
                        if (object == null) break block16;
                    }
                    object2 = new DashBoardModel();
                    object = this.notificationEntity;
                    object = object != null ? object.getId() : null;
                    if (object == null) {
                        Intrinsics.throwNpe();
                    }
                    object2.updateViewerNotification("", "", object.intValue());
                }
                if ((object = this.notificationEntity) == null) {
                    Intrinsics.throwNpe();
                }
                this.showDetailNotification((NotificationEntity)object);
                break block17;
            }
            if (this.dataFromListQDE != null) {
                this.notificationEntity = this.dataFromListQDE;
                object = this.notificationEntity;
                if (object == null) {
                    Intrinsics.throwNpe();
                }
                this.showDetailNotification((NotificationEntity)object);
            } else {
                this.startActivity(new Intent((Context)object, SplashScreen.class));
            }
        }
        object2 = this.notificationEntity;
        object = string2;
        if (object2 != null) {
            object = object2.is_defer();
        }
        if (object != null && object.intValue() == 1) {
            object = (Button)this._$_findCachedViewById(R.id.btnDefer);
            Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"btnDefer");
            object.setVisibility(0);
            ((Button)this._$_findCachedViewById(R.id.btnDefer)).setOnClickListener((View.OnClickListener)this);
        } else {
            object = (Button)this._$_findCachedViewById(R.id.btnDefer);
            Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"btnDefer");
            object.setVisibility(8);
        }
        ((ImageButton)this._$_findCachedViewById(R.id.btnBack)).setOnClickListener((View.OnClickListener)this);
    }

    protected void onStop() {
        super.onStop();
        this.finish();
    }

    @Override
    public void passCMNDSGB() {
    }

    public final void setDataFromListQDE(@Nullable NotificationEntity notificationEntity) {
        this.dataFromListQDE = notificationEntity;
    }

    public final void setDefer(@Nullable Defer defer) {
        this.defer = defer;
    }

    public final void setDeferModel(@Nullable DeferModel deferModel) {
        this.deferModel = deferModel;
    }

    public final void setDialogFragment(@Nullable DialogFragment dialogFragment) {
        this.dialogFragment = dialogFragment;
    }

    public final void setFileManager(@Nullable FileManager fileManager) {
        this.fileManager = fileManager;
    }

    public final void setNotificationEntity(@Nullable NotificationEntity notificationEntity) {
        this.notificationEntity = notificationEntity;
    }

    public final void setSplashScreen(boolean bl) {
        this.isSplashScreen = bl;
    }

    public final void setUserModel(@Nullable UserModel userModel) {
        this.userModel = userModel;
    }

    @Override
    public void showDataDefer(@Nullable Integer object, @Nullable Defer object2) {
        this.defer = object2;
        int n = this.requestDeferCMND;
        DeferView deferView = null;
        DeferModel deferModel = null;
        if (object != null && object.intValue() == n) {
            object2 = this.deferModel;
            if (object2 != null) {
                deferView = this;
                NotificationEntity notificationEntity = this.notificationEntity;
                object = deferModel;
                if (notificationEntity != null) {
                    object = notificationEntity.getClient_id();
                }
                object2.checkDeferByCMNDSGB(deferView, (String)object);
                return;
            }
        } else {
            n = this.requestDeferIDF1;
            if (object == null) {
                return;
            }
            if (object.intValue() == n && (deferModel = this.deferModel) != null) {
                DeferView deferView2 = this;
                object = deferView;
                if (object2 != null) {
                    object = object2.getIdf1();
                }
                deferModel.checkDeferExpried(deferView2, (String)object);
            }
        }
    }
}

