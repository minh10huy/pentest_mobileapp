/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.Intent
 *  android.os.Bundle
 *  android.os.Handler
 *  android.support.design.widget.BottomNavigationView
 *  android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener
 *  android.support.v4.app.Fragment
 *  android.support.v4.app.FragmentManager
 *  android.support.v4.view.PagerAdapter
 *  android.support.v4.view.ViewPager
 *  android.support.v4.view.ViewPager$OnPageChangeListener
 *  android.support.v7.app.AppCompatActivity
 *  android.support.v7.widget.RecyclerView
 *  android.support.v7.widget.RecyclerView$Adapter
 *  android.view.View
 *  android.widget.Toast
 *  kotlin.Metadata
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.activity.HomePageActivity$findView
 *  ntb.mafc.mobile.activity.HomePageActivity$onBackPressed
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.activity;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.support.design.widget.BottomNavigationView;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.Toast;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.activity.HomePageActivity;
import ntb.mafc.mobile.customadapter.AdapterRecyclerListDashboard;
import ntb.mafc.mobile.customadapter.ViewPagerAdapter;
import ntb.mafc.mobile.entity.DashBoard;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import ntb.mafc.mobile.model.FileModel;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000D\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\t\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\u0018\u00002\u00020\u0001B\u0005\u00a2\u0006\u0002\u0010\u0002J\b\u0010\u0019\u001a\u00020\u001aH\u0002J\"\u0010\u001b\u001a\u00020\u001a2\u0006\u0010\u001c\u001a\u00020\u001d2\u0006\u0010\u001e\u001a\u00020\u001d2\b\u0010\u001f\u001a\u0004\u0018\u00010 H\u0014J\b\u0010!\u001a\u00020\u001aH\u0016J\u0012\u0010\"\u001a\u00020\u001a2\b\u0010#\u001a\u0004\u0018\u00010$H\u0014J\b\u0010%\u001a\u00020\u001aH\u0014R\u001a\u0010\u0003\u001a\u00020\u0004X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0005\u0010\u0006\"\u0004\b\u0007\u0010\bR\u001c\u0010\t\u001a\u0004\u0018\u00010\nX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u000b\u0010\f\"\u0004\b\r\u0010\u000eR\u001a\u0010\u000f\u001a\u00020\u0004X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u000f\u0010\u0006\"\u0004\b\u0010\u0010\bR\u001a\u0010\u0011\u001a\u00020\u0004X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0011\u0010\u0006\"\u0004\b\u0012\u0010\bR\u001c\u0010\u0013\u001a\u0004\u0018\u00010\u0014X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0015\u0010\u0016\"\u0004\b\u0017\u0010\u0018\u00a8\u0006&"}, d2={"Lntb/mafc/mobile/activity/HomePageActivity;", "Landroid/support/v7/app/AppCompatActivity;", "()V", "doubleBackToExitPressedOnce", "", "getDoubleBackToExitPressedOnce", "()Z", "setDoubleBackToExitPressedOnce", "(Z)V", "fileModel", "Lntb/mafc/mobile/model/FileModel;", "getFileModel", "()Lntb/mafc/mobile/model/FileModel;", "setFileModel", "(Lntb/mafc/mobile/model/FileModel;)V", "isDetail", "setDetail", "isUserInfo", "setUserInfo", "viewPagerAdapter", "Lntb/mafc/mobile/customadapter/ViewPagerAdapter;", "getViewPagerAdapter", "()Lntb/mafc/mobile/customadapter/ViewPagerAdapter;", "setViewPagerAdapter", "(Lntb/mafc/mobile/customadapter/ViewPagerAdapter;)V", "findView", "", "onActivityResult", "requestCode", "", "resultCode", "data", "Landroid/content/Intent;", "onBackPressed", "onCreate", "savedInstanceState", "Landroid/os/Bundle;", "onResume", "app_release"}, k=1, mv={1, 1, 11})
public final class HomePageActivity
extends AppCompatActivity {
    private HashMap _$_findViewCache;
    private boolean doubleBackToExitPressedOnce;
    @Nullable
    private FileModel fileModel;
    private boolean isDetail;
    private boolean isUserInfo;
    @Nullable
    private ViewPagerAdapter viewPagerAdapter;

    private final void findView() {
        FragmentManager fragmentManager = this.getSupportFragmentManager();
        Intrinsics.checkExpressionValueIsNotNull((Object)fragmentManager, (String)"supportFragmentManager");
        this.viewPagerAdapter = new ViewPagerAdapter(fragmentManager);
        fragmentManager = (ViewPager)this._$_findCachedViewById(R.id.viewPager);
        if (fragmentManager != null) {
            fragmentManager.setAdapter((PagerAdapter)this.viewPagerAdapter);
        }
        if ((fragmentManager = (ViewPager)this._$_findCachedViewById(R.id.viewPager)) != null) {
            fragmentManager.addOnPageChangeListener(new ViewPager.OnPageChangeListener(this){
                final /* synthetic */ HomePageActivity this$0;
                {
                    this.this$0 = homePageActivity;
                }

                public void onPageScrollStateChanged(int n) {
                }

                public void onPageScrolled(int n, float f, int n2) {
                }

                public void onPageSelected(int n) {
                    switch (n) {
                        default: {
                            return;
                        }
                        case 3: {
                            BottomNavigationView bottomNavigationView = (BottomNavigationView)this.this$0._$_findCachedViewById(R.id.btnBottomNavigationView);
                            if (bottomNavigationView == null) break;
                            bottomNavigationView.setSelectedItemId(2131296279);
                            return;
                        }
                        case 2: {
                            BottomNavigationView bottomNavigationView = (BottomNavigationView)this.this$0._$_findCachedViewById(R.id.btnBottomNavigationView);
                            if (bottomNavigationView == null) break;
                            bottomNavigationView.setSelectedItemId(2131296277);
                            return;
                        }
                        case 1: {
                            Object object = (BottomNavigationView)this.this$0._$_findCachedViewById(R.id.btnBottomNavigationView);
                            if (object != null) {
                                object.setSelectedItemId(2131296275);
                            }
                            if ((object = this.this$0.getViewPagerAdapter()) == null || (object = object.getListFragment()) == null || (object = (Fragment)object.get(1)) == null) break;
                            object.onStart();
                            return;
                        }
                        case 0: {
                            BottomNavigationView bottomNavigationView = (BottomNavigationView)this.this$0._$_findCachedViewById(R.id.btnBottomNavigationView);
                            if (bottomNavigationView == null) break;
                            bottomNavigationView.setSelectedItemId(2131296286);
                        }
                    }
                }
            });
        }
        if ((fragmentManager = (BottomNavigationView)this._$_findCachedViewById(R.id.btnBottomNavigationView)) != null) {
            fragmentManager.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener(this){
                final /* synthetic */ HomePageActivity this$0;
                {
                    this.this$0 = homePageActivity;
                }

                public final boolean onNavigationItemSelected(@org.jetbrains.annotations.NotNull android.view.MenuItem menuItem) {
                    Intrinsics.checkParameterIsNotNull((Object)menuItem, (String)"item");
                    int n = menuItem.getItemId();
                    if (n != 2131296275) {
                        if (n != 2131296277) {
                            if (n != 2131296279) {
                                if (n != 2131296286) {
                                    return true;
                                }
                                menuItem = (ViewPager)this.this$0._$_findCachedViewById(R.id.viewPager);
                                if (menuItem != null) {
                                    menuItem.setCurrentItem(0, true);
                                    return true;
                                }
                            } else {
                                menuItem = (ViewPager)this.this$0._$_findCachedViewById(R.id.viewPager);
                                if (menuItem != null) {
                                    menuItem.setCurrentItem(3, true);
                                    return true;
                                }
                            }
                        } else {
                            menuItem = (ViewPager)this.this$0._$_findCachedViewById(R.id.viewPager);
                            if (menuItem != null) {
                                menuItem.setCurrentItem(2, true);
                                return true;
                            }
                        }
                    } else {
                        menuItem = (ViewPager)this.this$0._$_findCachedViewById(R.id.viewPager);
                        if (menuItem != null) {
                            menuItem.setCurrentItem(1, true);
                        }
                    }
                    return true;
                }
            });
        }
    }

    public void _$_clearFindViewByIdCache() {
        if (this._$_findViewCache != null) {
            this._$_findViewCache.clear();
        }
    }

    public View _$_findCachedViewById(int n) {
        View view;
        if (this._$_findViewCache == null) {
            this._$_findViewCache = new HashMap();
        }
        View view2 = view = (View)this._$_findViewCache.get(n);
        if (view == null) {
            view2 = this.findViewById(n);
            this._$_findViewCache.put(n, view2);
        }
        return view2;
    }

    public final boolean getDoubleBackToExitPressedOnce() {
        return this.doubleBackToExitPressedOnce;
    }

    @Nullable
    public final FileModel getFileModel() {
        return this.fileModel;
    }

    @Nullable
    public final ViewPagerAdapter getViewPagerAdapter() {
        return this.viewPagerAdapter;
    }

    public final boolean isDetail() {
        return this.isDetail;
    }

    public final boolean isUserInfo() {
        return this.isUserInfo;
    }

    protected void onActivityResult(int n, int n2, @Nullable Intent intent) {
        super.onActivityResult(n, n2, intent);
        switch (n) {
            default: {
                return;
            }
            case 123: {
                this.isDetail = true;
                return;
            }
            case 122: 
        }
        this.isUserInfo = true;
    }

    public void onBackPressed() {
        ViewPager viewPager = (ViewPager)this._$_findCachedViewById(R.id.viewPager);
        Intrinsics.checkExpressionValueIsNotNull((Object)viewPager, (String)"viewPager");
        if (viewPager.getCurrentItem() != 1) {
            viewPager = (ViewPager)this._$_findCachedViewById(R.id.viewPager);
            Intrinsics.checkExpressionValueIsNotNull((Object)viewPager, (String)"viewPager");
            viewPager.setCurrentItem(1);
            return;
        }
        if (this.doubleBackToExitPressedOnce) {
            this.finish();
            return;
        }
        this.doubleBackToExitPressedOnce = true;
        Toast.makeText((Context)((Context)this), (CharSequence)MainApplication.Companion.getLocale().getPressbackonemore(), (int)0).show();
        new Handler().postDelayed(new Runnable(this){
            final /* synthetic */ HomePageActivity this$0;
            {
                this.this$0 = homePageActivity;
            }

            public final void run() {
                this.this$0.setDoubleBackToExitPressedOnce(false);
            }
        }, 2000L);
    }

    protected void onCreate(@Nullable Bundle bundle) {
        super.onCreate(bundle);
        this.setContentView(2131427414);
        this.fileModel = new FileModel();
        this.findView();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    protected void onResume() {
        super.onResume();
        try {
            FileModel fileModel = this.fileModel;
            if (fileModel != null) {
                fileModel.saveCountDay();
            }
        }
        catch (Exception exception) {}
        if (this.isDetail) {
            ViewPager viewPager = (ViewPager)this._$_findCachedViewById(R.id.viewPager);
            Intrinsics.checkExpressionValueIsNotNull((Object)viewPager, (String)"viewPager");
            viewPager.setCurrentItem(3);
            this.isDetail = false;
        } else if (this.isUserInfo) {
            ViewPager viewPager = (ViewPager)this._$_findCachedViewById(R.id.viewPager);
            Intrinsics.checkExpressionValueIsNotNull((Object)viewPager, (String)"viewPager");
            viewPager.setCurrentItem(0);
            this.isDetail = false;
        } else {
            ViewPager viewPager = (ViewPager)this._$_findCachedViewById(R.id.viewPager);
            Intrinsics.checkExpressionValueIsNotNull((Object)viewPager, (String)"viewPager");
            viewPager.setCurrentItem(1);
        }
        AdapterRecyclerListDashboard adapterRecyclerListDashboard = new AdapterRecyclerListDashboard((Context)this, new ArrayList());
        Object object = this.viewPagerAdapter;
        if (object != null && (object = object.getListFragment()) != null && (object = (Fragment)object.get(1)) != null && (object = object.getView()) != null && (object = (RecyclerView)object.findViewById(2131296530)) != null) {
            object.setAdapter((RecyclerView.Adapter)adapterRecyclerListDashboard);
        }
    }

    public final void setDetail(boolean bl) {
        this.isDetail = bl;
    }

    public final void setDoubleBackToExitPressedOnce(boolean bl) {
        this.doubleBackToExitPressedOnce = bl;
    }

    public final void setFileModel(@Nullable FileModel fileModel) {
        this.fileModel = fileModel;
    }

    public final void setUserInfo(boolean bl) {
        this.isUserInfo = bl;
    }

    public final void setViewPagerAdapter(@Nullable ViewPagerAdapter viewPagerAdapter) {
        this.viewPagerAdapter = viewPagerAdapter;
    }
}

