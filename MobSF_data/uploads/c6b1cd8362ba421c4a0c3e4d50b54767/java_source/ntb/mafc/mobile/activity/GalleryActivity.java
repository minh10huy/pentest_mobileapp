/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.DialogInterface
 *  android.content.DialogInterface$OnClickListener
 *  android.content.Intent
 *  android.net.Uri
 *  android.os.Bundle
 *  android.support.v7.app.AlertDialog
 *  android.support.v7.app.AlertDialog$Builder
 *  android.support.v7.app.AppCompatActivity
 *  android.support.v7.widget.AppCompatButton
 *  android.support.v7.widget.AppCompatImageButton
 *  android.support.v7.widget.GridLayoutManager
 *  android.support.v7.widget.RecyclerView
 *  android.support.v7.widget.RecyclerView$Adapter
 *  android.support.v7.widget.RecyclerView$LayoutManager
 *  android.support.v7.widget.helper.ItemTouchHelper
 *  android.support.v7.widget.helper.ItemTouchHelper$Callback
 *  android.view.MenuItem
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.widget.ImageButton
 *  android.widget.TextView
 *  com.bumptech.glide.Glide
 *  kotlin.Metadata
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.activity.GalleryActivity$onCreate
 *  ntb.mafc.mobile.activity.GalleryActivity$onCreate$itemTouchHelper
 *  ntb.mafc.mobile.activity.GalleryActivity$showDialog
 *  ntb.mafc.mobile.activity.GalleryActivity$showDialogDeleteImage
 *  ntb.mafc.mobile.activity.GalleryActivity$showDialogHopDongDien
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.NotNull
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.activity;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.AppCompatButton;
import android.support.v7.widget.AppCompatImageButton;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.helper.ItemTouchHelper;
import android.view.MenuItem;
import android.view.View;
import android.widget.ImageButton;
import android.widget.TextView;
import com.bumptech.glide.Glide;
import java.io.File;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.activity.CIBActivity;
import ntb.mafc.mobile.activity.Camera2Activity;
import ntb.mafc.mobile.activity.GalleryActivity;
import ntb.mafc.mobile.customadapter.AdapterGallery;
import ntb.mafc.mobile.entity.GalleryEntity;
import ntb.mafc.mobile.manager.FileManager;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000H\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010!\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u000b\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u000e\n\u0002\b\b\n\u0002\u0010\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\t\u0018\u00002\u00020\u0001B\u0005\u00a2\u0006\u0002\u0010\u0002J\u0006\u0010\u001f\u001a\u00020 J\b\u0010!\u001a\u00020\u000bH\u0002J\u0006\u0010\"\u001a\u00020 J\b\u0010#\u001a\u00020 H\u0002J\u0012\u0010$\u001a\u00020 2\b\u0010%\u001a\u0004\u0018\u00010&H\u0014J\u0012\u0010'\u001a\u00020\u000b2\b\u0010(\u001a\u0004\u0018\u00010)H\u0016J\b\u0010*\u001a\u00020 H\u0014J\b\u0010+\u001a\u00020 H\u0014J\b\u0010,\u001a\u00020 H\u0002J\b\u0010-\u001a\u00020 H\u0002J\u0010\u0010.\u001a\u00020 2\u0006\u0010/\u001a\u00020&H\u0002J\u0016\u00100\u001a\u00020 2\f\u0010\u0003\u001a\b\u0012\u0004\u0012\u00020\u00050\u0004H\u0002J\u0010\u00101\u001a\u00020 2\u0006\u0010/\u001a\u00020&H\u0002R \u0010\u0003\u001a\b\u0012\u0004\u0012\u00020\u00050\u0004X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0006\u0010\u0007\"\u0004\b\b\u0010\tR\u001a\u0010\n\u001a\u00020\u000bX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\f\u0010\r\"\u0004\b\u000e\u0010\u000fR\u001c\u0010\u0010\u001a\u0004\u0018\u00010\u0011X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0012\u0010\u0013\"\u0004\b\u0014\u0010\u0015R\u001c\u0010\u0016\u001a\u0004\u0018\u00010\u0017X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0018\u0010\u0019\"\u0004\b\u001a\u0010\u001bR\u001c\u0010\u001c\u001a\u0004\u0018\u00010\u0017X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u001d\u0010\u0019\"\u0004\b\u001e\u0010\u001b\u00a8\u00062"}, d2={"Lntb/mafc/mobile/activity/GalleryActivity;", "Landroid/support/v7/app/AppCompatActivity;", "()V", "arrayFile", "", "Lntb/mafc/mobile/entity/GalleryEntity;", "getArrayFile", "()Ljava/util/List;", "setArrayFile", "(Ljava/util/List;)V", "checkAll", "", "getCheckAll", "()Z", "setCheckAll", "(Z)V", "fileManager", "Lntb/mafc/mobile/manager/FileManager;", "getFileManager", "()Lntb/mafc/mobile/manager/FileManager;", "setFileManager", "(Lntb/mafc/mobile/manager/FileManager;)V", "nameFolder", "", "getNameFolder", "()Ljava/lang/String;", "setNameFolder", "(Ljava/lang/String;)V", "parentFolder", "getParentFolder", "setParentFolder", "checkAllImage", "", "checkHasFileInHeathInsurance", "deleteFileSelected", "loadAdapter", "onCreate", "savedInstanceState", "Landroid/os/Bundle;", "onOptionsItemSelected", "item", "Landroid/view/MenuItem;", "onStart", "onStop", "openCamera", "openCameraFollowVersion", "showDialog", "bundle", "showDialogDeleteImage", "showDialogHopDongDien", "app_release"}, k=1, mv={1, 1, 11})
public final class GalleryActivity
extends AppCompatActivity {
    private HashMap _$_findViewCache;
    @NotNull
    private List<GalleryEntity> arrayFile = new ArrayList();
    private boolean checkAll;
    @Nullable
    private FileManager fileManager;
    @Nullable
    private String nameFolder;
    @Nullable
    private String parentFolder;

    public static final /* synthetic */ void access$loadAdapter(GalleryActivity galleryActivity) {
        galleryActivity.loadAdapter();
    }

    public static final /* synthetic */ void access$openCamera(GalleryActivity galleryActivity) {
        galleryActivity.openCamera();
    }

    public static final /* synthetic */ void access$openCameraFollowVersion(GalleryActivity galleryActivity) {
        galleryActivity.openCameraFollowVersion();
    }

    private final boolean checkHasFileInHeathInsurance() {
        boolean bl;
        Object object = this.fileManager;
        File[] arrfile = null;
        object = object != null ? object.CreateFile(String.valueOf(this.parentFolder)) : null;
        if (object != null) {
            arrfile = object.listFiles();
        }
        boolean bl2 = bl = false;
        if (arrfile != null) {
            boolean bl3 = arrfile.length == 0;
            bl2 = bl;
            if (bl3 ^ true) {
                bl2 = true;
            }
        }
        return bl2;
    }

    private final void loadAdapter() {
        Object object;
        this.arrayFile.clear();
        Object object3 = this.fileManager;
        if (object3 != null) {
            String object22 = this.parentFolder;
            if (object22 == null) {
                Intrinsics.throwNpe();
            }
            if ((object3 = object3.getChildFileInFolder(object22)) != null) {
                for (File file : object3) {
                    object = new GalleryEntity();
                    object.setName(file.getName());
                    object.setUri(Uri.fromFile((File)file));
                    object.setPath(file.getAbsolutePath());
                    this.arrayFile.add((GalleryEntity)object);
                }
            }
        }
        if (((Collection)this.arrayFile).isEmpty() ^ true) {
            Context context = (Context)this;
            object3 = new AdapterGallery(context, this.arrayFile);
            object = (RecyclerView)this._$_findCachedViewById(R.id.recyclerViewGrid);
            Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"recyclerViewGrid");
            object.setLayoutManager((RecyclerView.LayoutManager)new GridLayoutManager(context, 3));
            RecyclerView recyclerView = (RecyclerView)this._$_findCachedViewById(R.id.recyclerViewGrid);
            Intrinsics.checkExpressionValueIsNotNull((Object)recyclerView, (String)"recyclerViewGrid");
            recyclerView.setAdapter((RecyclerView.Adapter)object3);
        }
    }

    private final void openCamera() {
        Bundle bundle = new Bundle();
        bundle.putString("parentFolder", this.parentFolder);
        String string2 = this.nameFolder;
        if (string2 != null) {
            int n = string2.hashCode();
            if (n != 66716) {
                if (n == 2038241 && string2.equals("BHYT")) {
                    this.showDialog(bundle);
                    return;
                }
            } else if (string2.equals("CIB")) {
                this.startActivity(new Intent((Context)this, CIBActivity.class).putExtra("parentFolder", this.parentFolder));
                return;
            }
        }
        this.openCameraFollowVersion();
    }

    private final void openCameraFollowVersion() {
        this.startActivity(new Intent((Context)this, Camera2Activity.class).putExtra("namefolder", this.getIntent().getStringExtra("namefolder")).putExtra("parentfolder", this.parentFolder));
    }

    private final void showDialog(Bundle bundle) {
        AlertDialog.Builder builder2 = new AlertDialog.Builder((Context)this);
        builder2.setMessage((CharSequence)MainApplication.Companion.getLocale().getQuestionscreenshoot()).setTitle((CharSequence)MainApplication.Companion.getLocale().getNotification());
        builder2.setPositiveButton((CharSequence)MainApplication.Companion.getLocale().getOk(), new DialogInterface.OnClickListener(this, bundle){
            final /* synthetic */ Bundle $bundle;
            final /* synthetic */ GalleryActivity this$0;
            {
                this.this$0 = galleryActivity;
                this.$bundle = bundle;
            }

            public final void onClick(DialogInterface object, int n) {
                object = new ntb.mafc.mobile.fragment.DialogHeathFragment();
                object.setArguments(this.$bundle);
                object.show(this.this$0.getSupportFragmentManager(), "dialogHeath");
            }
        });
        builder2.setNegativeButton((CharSequence)MainApplication.Companion.getLocale().getNo(), new DialogInterface.OnClickListener(this){
            final /* synthetic */ GalleryActivity this$0;
            {
                this.this$0 = galleryActivity;
            }

            public final void onClick(DialogInterface dialogInterface, int n) {
                GalleryActivity.access$openCameraFollowVersion(this.this$0);
            }
        });
        builder2.create().show();
    }

    private final void showDialogDeleteImage(List<GalleryEntity> list) {
        AlertDialog alertDialog = null;
        alertDialog = new AlertDialog.Builder((Context)this);
        alertDialog.setMessage((CharSequence)MainApplication.Companion.getLocale().getMessagedelete()).setTitle((CharSequence)MainApplication.Companion.getLocale().getNotification());
        alertDialog.setPositiveButton((CharSequence)MainApplication.Companion.getLocale().getOk(), new DialogInterface.OnClickListener(this, list){
            final /* synthetic */ List $arrayFile;
            final /* synthetic */ GalleryActivity this$0;
            {
                this.this$0 = galleryActivity;
                this.$arrayFile = list;
            }

            public final void onClick(DialogInterface object, int n) {
                Object object22 = this.$arrayFile;
                object = new ArrayList<E>();
                object22 = object22.iterator();
                while (object22.hasNext()) {
                    E e = object22.next();
                    if (!((GalleryEntity)e).isChecked()) continue;
                    object.add(e);
                }
                for (Object object22 : (java.lang.Iterable)((List)object)) {
                    this.$arrayFile.remove(object22);
                    new File(object22.getPath()).delete();
                }
                object = (RecyclerView)this.this$0._$_findCachedViewById(R.id.recyclerViewGrid);
                Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"recyclerViewGrid");
                object.getAdapter().notifyDataSetChanged();
            }
        });
        alertDialog.setNegativeButton((CharSequence)MainApplication.Companion.getLocale().getCancel(), (DialogInterface.OnClickListener)showDialogDeleteImage.INSTANCE);
        alertDialog.create().show();
    }

    private final void showDialogHopDongDien(Bundle bundle) {
        AlertDialog.Builder builder2 = new AlertDialog.Builder((Context)this);
        builder2.setMessage((CharSequence)MainApplication.Companion.getLocale().getQuestionscreenshoot()).setTitle((CharSequence)MainApplication.Companion.getLocale().getNotification());
        builder2.setPositiveButton((CharSequence)MainApplication.Companion.getLocale().getOk(), new DialogInterface.OnClickListener(this, bundle){
            final /* synthetic */ Bundle $bundle;
            final /* synthetic */ GalleryActivity this$0;
            {
                this.this$0 = galleryActivity;
                this.$bundle = bundle;
            }

            public final void onClick(DialogInterface object, int n) {
                object = new ntb.mafc.mobile.fragment.DialogHeathFragment();
                object.setArguments(this.$bundle);
                object.show(this.this$0.getSupportFragmentManager(), "dialogHeath");
            }
        });
        builder2.setNegativeButton((CharSequence)MainApplication.Companion.getLocale().getNo(), new DialogInterface.OnClickListener(this){
            final /* synthetic */ GalleryActivity this$0;
            {
                this.this$0 = galleryActivity;
            }

            public final void onClick(DialogInterface dialogInterface, int n) {
                GalleryActivity.access$openCameraFollowVersion(this.this$0);
            }
        });
        builder2.create().show();
    }

    public void _$_clearFindViewByIdCache() {
        if (this._$_findViewCache != null) {
            this._$_findViewCache.clear();
        }
    }

    public View _$_findCachedViewById(int n) {
        View view;
        if (this._$_findViewCache == null) {
            this._$_findViewCache = new HashMap();
        }
        View view2 = view = (View)this._$_findViewCache.get(n);
        if (view == null) {
            view2 = this.findViewById(n);
            this._$_findViewCache.put(n, view2);
        }
        return view2;
    }

    public final void checkAllImage() {
        if (this.arrayFile.size() > 0) {
            Object object;
            if (this.checkAll) {
                object = (AppCompatButton)this._$_findCachedViewById(R.id.btnCheckAll);
                Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"btnCheckAll");
                object.setText((CharSequence)MainApplication.Companion.getLocale().getCheckall());
            } else {
                object = (AppCompatButton)this._$_findCachedViewById(R.id.btnCheckAll);
                Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"btnCheckAll");
                object.setText((CharSequence)MainApplication.Companion.getLocale().getUncheck());
            }
            object = this.arrayFile.iterator();
            while (object.hasNext()) {
                ((GalleryEntity)object.next()).setChecked(this.checkAll ^ true);
            }
            this.checkAll ^= true;
            object = (RecyclerView)this._$_findCachedViewById(R.id.recyclerViewGrid);
            Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"recyclerViewGrid");
            object.getAdapter().notifyDataSetChanged();
        }
    }

    public final void deleteFileSelected() {
        if (this.arrayFile.size() > 0) {
            this.showDialogDeleteImage(this.arrayFile);
        }
    }

    @NotNull
    public final List<GalleryEntity> getArrayFile() {
        return this.arrayFile;
    }

    public final boolean getCheckAll() {
        return this.checkAll;
    }

    @Nullable
    public final FileManager getFileManager() {
        return this.fileManager;
    }

    @Nullable
    public final String getNameFolder() {
        return this.nameFolder;
    }

    @Nullable
    public final String getParentFolder() {
        return this.parentFolder;
    }

    protected void onCreate(@Nullable Bundle bundle) {
        super.onCreate(bundle);
        this.setContentView(2131427411);
        this.fileManager = new FileManager((Context)this);
        this.nameFolder = this.getIntent().getStringExtra("namefolder");
        bundle = (AppCompatButton)this._$_findCachedViewById(R.id.btnCheckAll);
        Intrinsics.checkExpressionValueIsNotNull((Object)bundle, (String)"btnCheckAll");
        bundle.setText((CharSequence)MainApplication.Companion.getLocale().getCheckall());
        bundle = (TextView)this._$_findCachedViewById(R.id.txtNameFile);
        Intrinsics.checkExpressionValueIsNotNull((Object)bundle, (String)"txtNameFile");
        bundle.setText((CharSequence)this.nameFolder);
        new ItemTouchHelper(new ItemTouchHelper.Callback(this){
            final /* synthetic */ GalleryActivity this$0;
            {
                this.this$0 = galleryActivity;
            }

            public int getMovementFlags(@Nullable RecyclerView recyclerView, @Nullable android.support.v7.widget.RecyclerView$ViewHolder viewHolder) {
                return ItemTouchHelper.Callback.makeFlag((int)2, (int)51);
            }

            public boolean onMove(@Nullable RecyclerView object, @Nullable android.support.v7.widget.RecyclerView$ViewHolder object2, @Nullable android.support.v7.widget.RecyclerView$ViewHolder object3) {
                File file = null;
                object = object2 != null ? Integer.valueOf(object2.getAdapterPosition()) : null;
                if (object == null) {
                    Intrinsics.throwNpe();
                }
                int n = object.intValue();
                object = file;
                if (object3 != null) {
                    object = object3.getAdapterPosition();
                }
                if (object == null) {
                    Intrinsics.throwNpe();
                }
                int n2 = object.intValue();
                java.util.Collections.swap(this.this$0.getArrayFile(), n, n2);
                object = new File(this.this$0.getArrayFile().get(n).getPath());
                object2 = new File(this.this$0.getArrayFile().get(n2).getPath());
                object3 = new java.lang.StringBuilder();
                file = this.this$0.getFilesDir();
                Intrinsics.checkExpressionValueIsNotNull((Object)file, (String)"filesDir");
                object3.append(file.getPath());
                object3.append('/');
                object3.append(this.this$0.getArrayFile().get(n).getName());
                object3 = kotlin.io.FilesKt.copyTo$default((File)object, new File(object3.toString()), true, 0, 4, null);
                object2.renameTo((File)object);
                if (object.exists()) {
                    kotlin.io.FilesKt.copyTo$default((File)object3, new File(this.this$0.getArrayFile().get(n2).getPath()), true, 0, 4, null);
                }
                GalleryActivity.access$loadAdapter(this.this$0);
                return true;
            }

            public void onSwiped(@Nullable android.support.v7.widget.RecyclerView$ViewHolder viewHolder, int n) {
            }
        }).attachToRecyclerView((RecyclerView)this._$_findCachedViewById(R.id.recyclerViewGrid));
        ((AppCompatButton)this._$_findCachedViewById(R.id.btnCheckAll)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ GalleryActivity this$0;
            {
                this.this$0 = galleryActivity;
            }

            public final void onClick(View view) {
                this.this$0.checkAllImage();
            }
        });
        ((ImageButton)this._$_findCachedViewById(R.id.btnBack)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ GalleryActivity this$0;
            {
                this.this$0 = galleryActivity;
            }

            public final void onClick(View view) {
                this.this$0.finish();
            }
        });
        ((AppCompatImageButton)this._$_findCachedViewById(R.id.btnDeleteFile)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ GalleryActivity this$0;
            {
                this.this$0 = galleryActivity;
            }

            public final void onClick(View view) {
                this.this$0.deleteFileSelected();
            }
        });
        ((ImageButton)this._$_findCachedViewById(R.id.btnOpenCamera)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ GalleryActivity this$0;
            {
                this.this$0 = galleryActivity;
            }

            public final void onClick(View view) {
                GalleryActivity.access$openCamera(this.this$0);
            }
        });
    }

    public boolean onOptionsItemSelected(@Nullable MenuItem menuItem) {
        Integer n = menuItem != null ? Integer.valueOf(menuItem.getItemId()) : null;
        if (n != null && n == 16908332) {
            this.finish();
        }
        return super.onOptionsItemSelected(menuItem);
    }

    protected void onStart() {
        super.onStart();
        this.parentFolder = this.getIntent().getStringExtra("parentfolder");
        this.loadAdapter();
    }

    protected void onStop() {
        super.onStop();
        Glide.get((Context)((Context)this)).clearMemory();
    }

    public final void setArrayFile(@NotNull List<GalleryEntity> list) {
        Intrinsics.checkParameterIsNotNull(list, (String)"<set-?>");
        this.arrayFile = list;
    }

    public final void setCheckAll(boolean bl) {
        this.checkAll = bl;
    }

    public final void setFileManager(@Nullable FileManager fileManager) {
        this.fileManager = fileManager;
    }

    public final void setNameFolder(@Nullable String string2) {
        this.nameFolder = string2;
    }

    public final void setParentFolder(@Nullable String string2) {
        this.parentFolder = string2;
    }
}

