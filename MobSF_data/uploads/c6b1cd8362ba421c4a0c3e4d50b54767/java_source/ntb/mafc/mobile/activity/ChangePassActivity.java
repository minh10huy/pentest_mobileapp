/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.Intent
 *  android.graphics.drawable.Drawable
 *  android.os.Bundle
 *  android.support.v7.app.AppCompatActivity
 *  android.text.Editable
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.view.Window
 *  android.widget.Button
 *  android.widget.EditText
 *  android.widget.TextView
 *  android.widget.Toast
 *  kotlin.Metadata
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.activity.ChangePassActivity$onCreate
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.activity;

import android.content.Context;
import android.content.Intent;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.text.Editable;
import android.view.View;
import android.view.Window;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import java.util.HashMap;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import kotlin.text.StringsKt;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.activity.ChangePassActivity;
import ntb.mafc.mobile.activity.HomePageActivity;
import ntb.mafc.mobile.manager.ConfigManager;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import ntb.mafc.mobile.model.UserModel;
import ntb.mafc.mobile.view.UserView;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000@\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u0002\n\u0002\b\u0004\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0003\u0018\u00002\u00020\u00012\u00020\u0002B\u0005\u00a2\u0006\u0002\u0010\u0003J\u0006\u0010\u0010\u001a\u00020\u0011J\b\u0010\u0012\u001a\u00020\u0011H\u0016J\b\u0010\u0013\u001a\u00020\u0011H\u0016J\u0012\u0010\u0014\u001a\u00020\u00112\b\u0010\u0015\u001a\u0004\u0018\u00010\u0016H\u0016J!\u0010\u0017\u001a\u00020\u00112\b\u0010\u0018\u001a\u0004\u0018\u00010\u00192\b\u0010\u001a\u001a\u0004\u0018\u00010\u0016H\u0016\u00a2\u0006\u0002\u0010\u001bJ\b\u0010\u001c\u001a\u00020\u0011H\u0016J\u0012\u0010\u001d\u001a\u00020\u00112\b\u0010\u001e\u001a\u0004\u0018\u00010\u001fH\u0014J\b\u0010 \u001a\u00020\u0011H\u0014J\b\u0010!\u001a\u00020\u0011H\u0002R\u001c\u0010\u0004\u001a\u0004\u0018\u00010\u0005X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0006\u0010\u0007\"\u0004\b\b\u0010\tR\u001c\u0010\n\u001a\u0004\u0018\u00010\u000bX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\f\u0010\r\"\u0004\b\u000e\u0010\u000f\u00a8\u0006\""}, d2={"Lntb/mafc/mobile/activity/ChangePassActivity;", "Landroid/support/v7/app/AppCompatActivity;", "Lntb/mafc/mobile/view/UserView;", "()V", "configManager", "Lntb/mafc/mobile/manager/ConfigManager;", "getConfigManager", "()Lntb/mafc/mobile/manager/ConfigManager;", "setConfigManager", "(Lntb/mafc/mobile/manager/ConfigManager;)V", "userModel", "Lntb/mafc/mobile/model/UserModel;", "getUserModel", "()Lntb/mafc/mobile/model/UserModel;", "setUserModel", "(Lntb/mafc/mobile/model/UserModel;)V", "changePass", "", "changePasswordFail", "changePasswordSuccess", "loginFail", "message", "", "loginSuccess", "isChangePass", "", "channel", "(Ljava/lang/Boolean;Ljava/lang/String;)V", "onBackPressed", "onCreate", "savedInstanceState", "Landroid/os/Bundle;", "onDestroy", "setLangauge", "app_release"}, k=1, mv={1, 1, 11})
public final class ChangePassActivity
extends AppCompatActivity
implements UserView {
    private HashMap _$_findViewCache;
    @Nullable
    private ConfigManager configManager;
    @Nullable
    private UserModel userModel;

    private final void setLangauge() {
        TextView textView = (TextView)this._$_findCachedViewById(R.id.txtTitle);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"txtTitle");
        textView.setText((CharSequence)MainApplication.Companion.getLocale().getChangepass());
        textView = (TextView)this._$_findCachedViewById(R.id.txtSubTitle);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"txtSubTitle");
        textView.setText((CharSequence)MainApplication.Companion.getLocale().getSubtitlechangepass());
        textView = (EditText)this._$_findCachedViewById(R.id.edNewPassword);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"edNewPassword");
        textView.setHint((CharSequence)MainApplication.Companion.getLocale().getEnternewpassword());
        textView = (EditText)this._$_findCachedViewById(R.id.edReNewPassword);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"edReNewPassword");
        textView.setHint((CharSequence)MainApplication.Companion.getLocale().getReenternewpassword());
        textView = (Button)this._$_findCachedViewById(R.id.btnSavePassword);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"btnSavePassword");
        textView.setText((CharSequence)MainApplication.Companion.getLocale().getSave());
    }

    public void _$_clearFindViewByIdCache() {
        if (this._$_findViewCache != null) {
            this._$_findViewCache.clear();
        }
    }

    public View _$_findCachedViewById(int n) {
        View view;
        if (this._$_findViewCache == null) {
            this._$_findViewCache = new HashMap();
        }
        View view2 = view = (View)this._$_findViewCache.get(n);
        if (view == null) {
            view2 = this.findViewById(n);
            this._$_findViewCache.put(n, view2);
        }
        return view2;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public final void changePass() {
        Object object;
        Object object2 = this.userModel;
        EditText editText = null;
        if (object2 != null) {
            object = (EditText)this._$_findCachedViewById(R.id.edNewPassword);
            Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"edNewPassword");
            object2 = object2.isValidPassword(object.getText().toString());
        } else {
            object2 = null;
        }
        if (object2 == null) {
            Intrinsics.throwNpe();
        }
        if (object2.booleanValue()) {
            object = this.userModel;
            object2 = editText;
            if (object != null) {
                object2 = (EditText)this._$_findCachedViewById(R.id.edNewPassword);
                Intrinsics.checkExpressionValueIsNotNull((Object)object2, (String)"edNewPassword");
                object2 = object2.getText();
                Intrinsics.checkExpressionValueIsNotNull((Object)object2, (String)"edNewPassword.text");
                object2 = object.checkMatchCurrentPass(StringsKt.trim((CharSequence)((CharSequence)object2)).toString());
            }
            if (object2 == null) {
                Intrinsics.throwNpe();
            }
            if (!object2.booleanValue()) {
                object2 = this.configManager;
                if (object2 == null) {
                    Intrinsics.throwNpe();
                }
                if (object2.isConnectedInternet()) {
                    object2 = (EditText)this._$_findCachedViewById(R.id.edNewPassword);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object2, (String)"edNewPassword");
                    object2 = object2.getText();
                    Intrinsics.checkExpressionValueIsNotNull((Object)object2, (String)"edNewPassword.text");
                    object2 = StringsKt.trim((CharSequence)((CharSequence)object2)).toString();
                    editText = (EditText)this._$_findCachedViewById(R.id.edReNewPassword);
                    Intrinsics.checkExpressionValueIsNotNull((Object)editText, (String)"edReNewPassword");
                    editText = editText.getText();
                    Intrinsics.checkExpressionValueIsNotNull((Object)editText, (String)"edReNewPassword.text");
                    if (Intrinsics.areEqual((Object)object2, (Object)StringsKt.trim((CharSequence)((CharSequence)editText)).toString())) {
                        object2 = this.userModel;
                        if (object2 == null) return;
                        editText = (EditText)this._$_findCachedViewById(R.id.edNewPassword);
                        Intrinsics.checkExpressionValueIsNotNull((Object)editText, (String)"edNewPassword");
                        object2.changePassword(editText.getText().toString(), this);
                        return;
                    }
                    Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrorrepass(), (int)0).show();
                    return;
                }
                Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getCheckinternet(), (int)0).show();
                return;
            }
            Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrormatcholdpass(), (int)0).show();
            return;
        }
        Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrorpatternpassword(), (int)0).show();
    }

    @Override
    public void changePasswordFail() {
        Toast.makeText((Context)this.getApplicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrorchangepassword(), (int)0).show();
    }

    @Override
    public void changePasswordSuccess() {
        UserModel userModel = this.userModel;
        if (userModel != null) {
            EditText editText = (EditText)this._$_findCachedViewById(R.id.edNewPassword);
            Intrinsics.checkExpressionValueIsNotNull((Object)editText, (String)"edNewPassword");
            userModel.updatePassword(editText.getText().toString());
        }
        this.startActivity(new Intent((Context)this, HomePageActivity.class));
        this.finish();
    }

    @Nullable
    public final ConfigManager getConfigManager() {
        return this.configManager;
    }

    @Nullable
    public final UserModel getUserModel() {
        return this.userModel;
    }

    @Override
    public void loginFail(@Nullable String string2) {
    }

    @Override
    public void loginSuccess(@Nullable Boolean bl, @Nullable String string2) {
    }

    public void onBackPressed() {
    }

    protected void onCreate(@Nullable Bundle bundle) {
        super.onCreate(bundle);
        this.getWindow().setBackgroundDrawable(null);
        this.setContentView(2131427395);
        this.userModel = new UserModel(this);
        this.configManager = new ConfigManager();
        this.setLangauge();
        ((Button)this._$_findCachedViewById(R.id.btnSavePassword)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ ChangePassActivity this$0;
            {
                this.this$0 = changePassActivity;
            }

            public final void onClick(View view) {
                this.this$0.changePass();
            }
        });
    }

    protected void onDestroy() {
        super.onDestroy();
        UserModel userModel = this.userModel;
        if (userModel != null) {
            userModel.clearUserLogin();
        }
    }

    public final void setConfigManager(@Nullable ConfigManager configManager) {
        this.configManager = configManager;
    }

    public final void setUserModel(@Nullable UserModel userModel) {
        this.userModel = userModel;
    }
}

