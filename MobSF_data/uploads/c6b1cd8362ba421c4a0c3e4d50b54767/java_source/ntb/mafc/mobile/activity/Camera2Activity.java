/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.app.Activity
 *  android.content.Context
 *  android.content.Intent
 *  android.os.Bundle
 *  android.support.design.widget.FloatingActionButton
 *  android.support.v4.app.ActivityCompat
 *  android.support.v4.content.ContextCompat
 *  android.support.v7.app.AppCompatActivity
 *  android.support.v7.widget.AppCompatCheckBox
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.widget.CompoundButton
 *  android.widget.CompoundButton$OnCheckedChangeListener
 *  android.widget.ImageButton
 *  android.widget.TextView
 *  com.otaliastudios.cameraview.CameraListener
 *  com.otaliastudios.cameraview.CameraView
 *  com.otaliastudios.cameraview.Flash
 *  com.otaliastudios.cameraview.Gesture
 *  com.otaliastudios.cameraview.GestureAction
 *  kotlin.Metadata
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.activity.Camera2Activity$onCreate
 *  org.jetbrains.annotations.NotNull
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.activity;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.AppCompatCheckBox;
import android.view.View;
import android.widget.CompoundButton;
import android.widget.ImageButton;
import android.widget.TextView;
import com.otaliastudios.cameraview.CameraListener;
import com.otaliastudios.cameraview.CameraView;
import com.otaliastudios.cameraview.Flash;
import com.otaliastudios.cameraview.Gesture;
import com.otaliastudios.cameraview.GestureAction;
import java.util.HashMap;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.activity.Camera2Activity;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000:\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\b\n\u0002\b\u0003\n\u0002\u0010\u000e\n\u0002\b\b\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u0011\n\u0000\n\u0002\u0010\u0015\n\u0002\b\u0004\u0018\u00002\u00020\u0001B\u0005\u00a2\u0006\u0002\u0010\u0002J\b\u0010\u0010\u001a\u00020\u0011H\u0002J\u0012\u0010\u0012\u001a\u00020\u00112\b\u0010\u0013\u001a\u0004\u0018\u00010\u0014H\u0014J\b\u0010\u0015\u001a\u00020\u0011H\u0014J\b\u0010\u0016\u001a\u00020\u0011H\u0014J-\u0010\u0017\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00042\u000e\u0010\u0019\u001a\n\u0012\u0006\b\u0001\u0012\u00020\b0\u001a2\u0006\u0010\u001b\u001a\u00020\u001cH\u0016\u00a2\u0006\u0002\u0010\u001dJ\b\u0010\u001e\u001a\u00020\u0011H\u0014J\u0006\u0010\u001f\u001a\u00020\u0011R\u0014\u0010\u0003\u001a\u00020\u0004X\u0086D\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0005\u0010\u0006R\u001c\u0010\u0007\u001a\u0004\u0018\u00010\bX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\t\u0010\n\"\u0004\b\u000b\u0010\fR\u001c\u0010\r\u001a\u0004\u0018\u00010\bX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u000e\u0010\n\"\u0004\b\u000f\u0010\f\u00a8\u0006 "}, d2={"Lntb/mafc/mobile/activity/Camera2Activity;", "Landroid/support/v7/app/AppCompatActivity;", "()V", "REQUEST_PERMISSION_CAMERA", "", "getREQUEST_PERMISSION_CAMERA", "()I", "folderParent", "", "getFolderParent", "()Ljava/lang/String;", "setFolderParent", "(Ljava/lang/String;)V", "nameFolder", "getNameFolder", "setNameFolder", "checkPermission", "", "onCreate", "savedInstanceState", "Landroid/os/Bundle;", "onDestroy", "onPause", "onRequestPermissionsResult", "requestCode", "permissions", "", "grantResults", "", "(I[Ljava/lang/String;[I)V", "onResume", "takePhoto", "app_release"}, k=1, mv={1, 1, 11})
public final class Camera2Activity
extends AppCompatActivity {
    private final int REQUEST_PERMISSION_CAMERA = 222;
    private HashMap _$_findViewCache;
    @Nullable
    private String folderParent;
    @Nullable
    private String nameFolder;

    private final void checkPermission() {
        if (ContextCompat.checkSelfPermission((Context)((Context)this), (String)"android.permission.CAMERA") == 0) {
            ((CameraView)this._$_findCachedViewById(R.id.camera)).start();
            return;
        }
        Activity activity = (Activity)this;
        int n = this.REQUEST_PERMISSION_CAMERA;
        ActivityCompat.requestPermissions((Activity)activity, (String[])new String[]{"android.permission.CAMERA"}, (int)n);
    }

    public void _$_clearFindViewByIdCache() {
        if (this._$_findViewCache != null) {
            this._$_findViewCache.clear();
        }
    }

    public View _$_findCachedViewById(int n) {
        View view;
        if (this._$_findViewCache == null) {
            this._$_findViewCache = new HashMap();
        }
        View view2 = view = (View)this._$_findViewCache.get(n);
        if (view == null) {
            view2 = this.findViewById(n);
            this._$_findViewCache.put(n, view2);
        }
        return view2;
    }

    @Nullable
    public final String getFolderParent() {
        return this.folderParent;
    }

    @Nullable
    public final String getNameFolder() {
        return this.nameFolder;
    }

    public final int getREQUEST_PERMISSION_CAMERA() {
        return this.REQUEST_PERMISSION_CAMERA;
    }

    protected void onCreate(@Nullable Bundle bundle) {
        super.onCreate(bundle);
        this.setContentView(2131427393);
        this.folderParent = this.getIntent().getStringExtra("parentfolder");
        this.nameFolder = this.getIntent().getStringExtra("namefolder");
        bundle = (TextView)this._$_findCachedViewById(R.id.txtNameFile);
        Intrinsics.checkExpressionValueIsNotNull((Object)bundle, (String)"txtNameFile");
        bundle.setText((CharSequence)this.nameFolder);
        ((CameraView)this._$_findCachedViewById(R.id.camera)).mapGesture(Gesture.TAP, GestureAction.FOCUS);
        bundle = (CameraView)this._$_findCachedViewById(R.id.camera);
        Intrinsics.checkExpressionValueIsNotNull((Object)bundle, (String)"camera");
        bundle.setFlash(Flash.AUTO);
        ((CameraView)this._$_findCachedViewById(R.id.camera)).addCameraListener(new CameraListener(this){
            final /* synthetic */ Camera2Activity this$0;
            {
                this.this$0 = camera2Activity;
            }

            /*
             * Enabled aggressive block sorting
             * Enabled unnecessary exception pruning
             * Enabled aggressive exception aggregation
             */
            public void onPictureTaken(@Nullable byte[] intent) {
                Object object;
                block3 : {
                    super.onPictureTaken((byte[])intent);
                    object = new java.lang.StringBuilder();
                    object.append(this.this$0.getFolderParent());
                    object.append('/');
                    object.append(this.this$0.getNameFolder());
                    Object object2 = java.util.Calendar.getInstance();
                    Intrinsics.checkExpressionValueIsNotNull((Object)object2, (String)"Calendar.getInstance()");
                    object.append(object2.getTimeInMillis());
                    object.append(".jpeg");
                    object = object.toString();
                    object2 = new java.lang.StringBuilder();
                    object2.append(this.this$0.getFilesDir());
                    object2.append('/');
                    object2.append((String)object);
                    object = new java.io.File(object2.toString());
                    object2 = new java.io.FileOutputStream((java.io.File)object);
                    try {
                        object2.write((byte[])intent);
                        object2.flush();
                        object2.close();
                    }
                    catch (java.lang.Throwable throwable) {
                        object2 = new Intent((Context)this.this$0, ntb.mafc.mobile.activity.EditImageActivity.class);
                        object2.putExtra("uri", object.getAbsolutePath());
                        object2.putExtra("folderParent", this.this$0.getFolderParent());
                        object2.putExtra("nameFolder", this.this$0.getNameFolder());
                        this.this$0.startActivity((Intent)object2);
                        throw throwable;
                    }
                    catch (java.lang.Exception exception) {}
                    intent = new Intent((Context)this.this$0, ntb.mafc.mobile.activity.EditImageActivity.class);
                    break block3;
                    intent = new Intent((Context)this.this$0, ntb.mafc.mobile.activity.EditImageActivity.class);
                }
                intent.putExtra("uri", object.getAbsolutePath());
                intent.putExtra("folderParent", this.this$0.getFolderParent());
                intent.putExtra("nameFolder", this.this$0.getNameFolder());
                this.this$0.startActivity(intent);
            }
        });
        ((AppCompatCheckBox)this._$_findCachedViewById(R.id.cbFlash)).setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(this){
            final /* synthetic */ Camera2Activity this$0;
            {
                this.this$0 = camera2Activity;
            }

            /*
             * Enabled aggressive block sorting
             */
            public final void onCheckedChanged(CompoundButton compoundButton, boolean bl) {
                Flash flash;
                if (bl) {
                    compoundButton = (CameraView)this.this$0._$_findCachedViewById(R.id.camera);
                    Intrinsics.checkExpressionValueIsNotNull((Object)compoundButton, (String)"camera");
                    flash = Flash.ON;
                } else {
                    compoundButton = (CameraView)this.this$0._$_findCachedViewById(R.id.camera);
                    Intrinsics.checkExpressionValueIsNotNull((Object)compoundButton, (String)"camera");
                    flash = Flash.OFF;
                }
                compoundButton.setFlash(flash);
            }
        });
        ((AppCompatCheckBox)this._$_findCachedViewById(R.id.cbFrontCamera)).setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(this){
            final /* synthetic */ Camera2Activity this$0;
            {
                this.this$0 = camera2Activity;
            }

            public final void onCheckedChanged(CompoundButton compoundButton, boolean bl) {
                CameraView cameraView = (CameraView)this.this$0._$_findCachedViewById(R.id.camera);
                Intrinsics.checkExpressionValueIsNotNull((Object)cameraView, (String)"camera");
                compoundButton = bl ? com.otaliastudios.cameraview.Facing.FRONT : com.otaliastudios.cameraview.Facing.BACK;
                cameraView.setFacing((com.otaliastudios.cameraview.Facing)compoundButton);
            }
        });
        ((ImageButton)this._$_findCachedViewById(R.id.btnBack)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ Camera2Activity this$0;
            {
                this.this$0 = camera2Activity;
            }

            public final void onClick(View view) {
                this.this$0.finish();
            }
        });
        ((FloatingActionButton)this._$_findCachedViewById(R.id.btnTakePhoto)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ Camera2Activity this$0;
            {
                this.this$0 = camera2Activity;
            }

            public final void onClick(View view) {
                this.this$0.takePhoto();
            }
        });
    }

    protected void onDestroy() {
        super.onDestroy();
        ((CameraView)this._$_findCachedViewById(R.id.camera)).destroy();
    }

    protected void onPause() {
        super.onPause();
        ((CameraView)this._$_findCachedViewById(R.id.camera)).stop();
    }

    public void onRequestPermissionsResult(int n, @NotNull String[] arrstring, @NotNull int[] arrn) {
        Intrinsics.checkParameterIsNotNull((Object)arrstring, (String)"permissions");
        Intrinsics.checkParameterIsNotNull((Object)arrn, (String)"grantResults");
        super.onRequestPermissionsResult(n, arrstring, arrn);
        if (n == this.REQUEST_PERMISSION_CAMERA) {
            n = arrn.length == 0 ? 1 : 0;
            if ((n ^ 1) != 0 && arrn[0] == 0) {
                ((CameraView)this._$_findCachedViewById(R.id.camera)).start();
                return;
            }
            this.finish();
        }
    }

    protected void onResume() {
        super.onResume();
        this.checkPermission();
    }

    public final void setFolderParent(@Nullable String string2) {
        this.folderParent = string2;
    }

    public final void setNameFolder(@Nullable String string2) {
        this.nameFolder = string2;
    }

    public final void takePhoto() {
        ((CameraView)this._$_findCachedViewById(R.id.camera)).capturePicture();
    }
}

