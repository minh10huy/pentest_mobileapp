/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.Intent
 *  android.os.Bundle
 *  android.os.IBinder
 *  android.os.Parcelable
 *  android.support.v4.app.Fragment
 *  android.support.v4.app.FragmentActivity
 *  android.support.v4.app.FragmentManager
 *  android.text.Editable
 *  android.view.LayoutInflater
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.view.ViewGroup
 *  android.view.inputmethod.InputMethodManager
 *  android.widget.Button
 *  android.widget.EditText
 *  android.widget.LinearLayout
 *  android.widget.RadioButton
 *  android.widget.RadioGroup
 *  android.widget.RadioGroup$OnCheckedChangeListener
 *  android.widget.TextView
 *  android.widget.TextView$OnEditorActionListener
 *  android.widget.Toast
 *  kotlin.Metadata
 *  kotlin.TypeCastException
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.fragment.FragmentCreateFile$onActivityCreated
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.NotNull
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.fragment;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.IBinder;
import android.os.Parcelable;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.text.Editable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import android.widget.Toast;
import java.io.File;
import java.util.HashMap;
import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import kotlin.text.StringsKt;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.activity.DocumentActivity;
import ntb.mafc.mobile.entity.Defer;
import ntb.mafc.mobile.entity.User;
import ntb.mafc.mobile.fragment.DialogFragment;
import ntb.mafc.mobile.fragment.FragmentCreateFile;
import ntb.mafc.mobile.manager.ConfigManager;
import ntb.mafc.mobile.manager.FileManager;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import ntb.mafc.mobile.model.DeferModel;
import ntb.mafc.mobile.model.FileModel;
import ntb.mafc.mobile.model.UserModel;
import ntb.mafc.mobile.view.DeferView;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000\u0092\u0001\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u000b\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u000e\u0018\u00002\u00020\u00012\u00020\u00022\u00020\u00032\u00020\u0004B\u0005\u00a2\u0006\u0002\u0010\u0005J\b\u0010#\u001a\u00020$H\u0016J\u0012\u0010%\u001a\u00020$2\b\u0010&\u001a\u0004\u0018\u00010\u001dH\u0016J\b\u0010'\u001a\u00020$H\u0002J\b\u0010(\u001a\u00020$H\u0002J\b\u0010)\u001a\u00020$H\u0002J\u0012\u0010*\u001a\u00020$2\b\u0010+\u001a\u0004\u0018\u00010\u001dH\u0016J\b\u0010,\u001a\u00020$H\u0002J\b\u0010-\u001a\u00020$H\u0016J\u0012\u0010.\u001a\u00020$2\b\u0010/\u001a\u0004\u0018\u000100H\u0016J\u001a\u00101\u001a\u00020$2\b\u00102\u001a\u0004\u0018\u0001032\u0006\u00104\u001a\u00020\u001fH\u0016J\u0012\u00105\u001a\u00020$2\b\u00106\u001a\u0004\u0018\u000107H\u0016J&\u00108\u001a\u0004\u0018\u0001072\u0006\u00109\u001a\u00020:2\b\u0010;\u001a\u0004\u0018\u00010<2\b\u0010/\u001a\u0004\u0018\u000100H\u0016J\b\u0010=\u001a\u00020$H\u0016J\b\u0010>\u001a\u00020$H\u0016J\b\u0010?\u001a\u00020$H\u0002J\b\u0010@\u001a\u00020$H\u0016J\b\u0010A\u001a\u00020$H\u0002J!\u0010B\u001a\u00020$2\b\u0010C\u001a\u0004\u0018\u00010\u001f2\b\u0010\b\u001a\u0004\u0018\u00010\tH\u0016\u00a2\u0006\u0002\u0010DJ\u0012\u0010E\u001a\u00020$2\b\u0010&\u001a\u0004\u0018\u00010\u001dH\u0002J\u0012\u0010F\u001a\u00020\u00192\b\u0010G\u001a\u0004\u0018\u00010\u001dH\u0002J\u0012\u0010H\u001a\u00020\u00192\b\u0010I\u001a\u0004\u0018\u00010\u001dH\u0002R\u0010\u0010\u0006\u001a\u0004\u0018\u00010\u0007X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\b\u001a\u0004\u0018\u00010\tX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\n\u001a\u0004\u0018\u00010\u000bX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\f\u001a\u0004\u0018\u00010\rX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000e\u001a\u00020\u000fX\u0082.\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0010\u001a\u00020\u000fX\u0082.\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0011\u001a\u00020\u000fX\u0082.\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0012\u001a\u00020\u000fX\u0082.\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0013\u001a\u00020\u000fX\u0082.\u00a2\u0006\u0002\n\u0000R\u0010\u0010\u0014\u001a\u0004\u0018\u00010\u0015X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\u0016\u001a\u0004\u0018\u00010\u0017X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0018\u001a\u00020\u0019X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\u001a\u001a\u0004\u0018\u00010\u001bX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\u001c\u001a\u0004\u0018\u00010\u001dX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001e\u001a\u00020\u001fX\u0082D\u00a2\u0006\u0002\n\u0000R\u000e\u0010 \u001a\u00020\u001fX\u0082D\u00a2\u0006\u0002\n\u0000R\u0010\u0010!\u001a\u0004\u0018\u00010\"X\u0082\u000e\u00a2\u0006\u0002\n\u0000\u00a8\u0006J"}, d2={"Lntb/mafc/mobile/fragment/FragmentCreateFile;", "Landroid/support/v4/app/Fragment;", "Landroid/widget/RadioGroup$OnCheckedChangeListener;", "Landroid/view/View$OnClickListener;", "Lntb/mafc/mobile/view/DeferView;", "()V", "configManager", "Lntb/mafc/mobile/manager/ConfigManager;", "defer", "Lntb/mafc/mobile/entity/Defer;", "deferModel", "Lntb/mafc/mobile/model/DeferModel;", "dialogFragment", "Lntb/mafc/mobile/fragment/DialogFragment;", "edCustomerIDNew", "Landroid/widget/EditText;", "edCustomerIDQDE", "edCustomerNameNew", "edCustomerNameQDE", "edIDF1QDE", "fileManager", "Lntb/mafc/mobile/manager/FileManager;", "fileModel", "Lntb/mafc/mobile/model/FileModel;", "isNext", "", "locale", "Lntb/mafc/mobile/manager/LocaleManager;", "nameFolderTwo", "", "requestDeferCMND", "", "requestDeferIDF1", "userModel", "Lntb/mafc/mobile/model/UserModel;", "checkDeferCMNDSGBSuccess", "", "checkDeferFail", "message", "closeDialog", "createNewDoc", "editDeferDoc", "errorDupCMNDSGB", "reason", "hideSoftKeyboard", "idf1CanDefer", "onActivityCreated", "savedInstanceState", "Landroid/os/Bundle;", "onCheckedChanged", "group", "Landroid/widget/RadioGroup;", "checkedId", "onClick", "v", "Landroid/view/View;", "onCreateView", "inflater", "Landroid/view/LayoutInflater;", "container", "Landroid/view/ViewGroup;", "onResume", "onStop", "openDialog", "passCMNDSGB", "setLanguage", "showDataDefer", "requestCode", "(Ljava/lang/Integer;Lntb/mafc/mobile/entity/Defer;)V", "showDialog", "validateIDCustomer", "idCustomer", "validateNameCustomer", "nameCustomer", "app_release"}, k=1, mv={1, 1, 11})
public final class FragmentCreateFile
extends Fragment
implements RadioGroup.OnCheckedChangeListener,
View.OnClickListener,
DeferView {
    private HashMap _$_findViewCache;
    private ConfigManager configManager;
    private Defer defer;
    private DeferModel deferModel;
    private DialogFragment dialogFragment;
    private EditText edCustomerIDNew;
    private EditText edCustomerIDQDE;
    private EditText edCustomerNameNew;
    private EditText edCustomerNameQDE;
    private EditText edIDF1QDE;
    private FileManager fileManager;
    private FileModel fileModel;
    private boolean isNext;
    private LocaleManager locale;
    private String nameFolderTwo;
    private final int requestDeferCMND = 111;
    private final int requestDeferIDF1 = 112;
    private UserModel userModel;

    public static final /* synthetic */ void access$closeDialog(FragmentCreateFile fragmentCreateFile) {
        fragmentCreateFile.closeDialog();
    }

    @Nullable
    public static final /* synthetic */ ConfigManager access$getConfigManager$p(FragmentCreateFile fragmentCreateFile) {
        return fragmentCreateFile.configManager;
    }

    @Nullable
    public static final /* synthetic */ DeferModel access$getDeferModel$p(FragmentCreateFile fragmentCreateFile) {
        return fragmentCreateFile.deferModel;
    }

    @NotNull
    public static final /* synthetic */ EditText access$getEdCustomerIDQDE$p(FragmentCreateFile fragmentCreateFile) {
        fragmentCreateFile = fragmentCreateFile.edCustomerIDQDE;
        if (fragmentCreateFile == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDQDE");
        }
        return fragmentCreateFile;
    }

    @NotNull
    public static final /* synthetic */ EditText access$getEdCustomerNameQDE$p(FragmentCreateFile fragmentCreateFile) {
        fragmentCreateFile = fragmentCreateFile.edCustomerNameQDE;
        if (fragmentCreateFile == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameQDE");
        }
        return fragmentCreateFile;
    }

    @NotNull
    public static final /* synthetic */ EditText access$getEdIDF1QDE$p(FragmentCreateFile fragmentCreateFile) {
        fragmentCreateFile = fragmentCreateFile.edIDF1QDE;
        if (fragmentCreateFile == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edIDF1QDE");
        }
        return fragmentCreateFile;
    }

    @Nullable
    public static final /* synthetic */ LocaleManager access$getLocale$p(FragmentCreateFile fragmentCreateFile) {
        return fragmentCreateFile.locale;
    }

    public static final /* synthetic */ int access$getRequestDeferCMND$p(FragmentCreateFile fragmentCreateFile) {
        return fragmentCreateFile.requestDeferCMND;
    }

    public static final /* synthetic */ int access$getRequestDeferIDF1$p(FragmentCreateFile fragmentCreateFile) {
        return fragmentCreateFile.requestDeferIDF1;
    }

    public static final /* synthetic */ void access$hideSoftKeyboard(FragmentCreateFile fragmentCreateFile) {
        fragmentCreateFile.hideSoftKeyboard();
    }

    public static final /* synthetic */ void access$openDialog(FragmentCreateFile fragmentCreateFile) {
        fragmentCreateFile.openDialog();
    }

    public static final /* synthetic */ void access$setConfigManager$p(FragmentCreateFile fragmentCreateFile, @Nullable ConfigManager configManager) {
        fragmentCreateFile.configManager = configManager;
    }

    public static final /* synthetic */ void access$setDeferModel$p(FragmentCreateFile fragmentCreateFile, @Nullable DeferModel deferModel) {
        fragmentCreateFile.deferModel = deferModel;
    }

    public static final /* synthetic */ void access$setEdCustomerIDQDE$p(FragmentCreateFile fragmentCreateFile, @NotNull EditText editText) {
        fragmentCreateFile.edCustomerIDQDE = editText;
    }

    public static final /* synthetic */ void access$setEdCustomerNameQDE$p(FragmentCreateFile fragmentCreateFile, @NotNull EditText editText) {
        fragmentCreateFile.edCustomerNameQDE = editText;
    }

    public static final /* synthetic */ void access$setEdIDF1QDE$p(FragmentCreateFile fragmentCreateFile, @NotNull EditText editText) {
        fragmentCreateFile.edIDF1QDE = editText;
    }

    public static final /* synthetic */ void access$setLocale$p(FragmentCreateFile fragmentCreateFile, @Nullable LocaleManager localeManager) {
        fragmentCreateFile.locale = localeManager;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void closeDialog() {
        try {
            DialogFragment dialogFragment;
            if (this.dialogFragment != null && (dialogFragment = this.dialogFragment) != null) {
                dialogFragment.dismissAllowingStateLoss();
            }
            this.dialogFragment = null;
            return;
        }
        catch (Exception exception) {
            return;
        }
    }

    private final void createNewDoc() {
        Object object = this.edCustomerNameNew;
        if (object == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameNew");
        }
        String string2 = object.getText().toString();
        object = this.edCustomerIDNew;
        if (object == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDNew");
        }
        String string3 = object.getText().toString();
        object = this.userModel;
        if (object != null) {
            object.saveCustomerAndIdCustomer(string2, string3);
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(MainApplication.Companion.getNameFolderNewDocument());
        stringBuilder.append('/');
        stringBuilder.append(string2);
        stringBuilder.append('_');
        stringBuilder.append(string3);
        stringBuilder.append('_');
        object = this.userModel;
        FileManager fileManager = null;
        object = object != null && (object = object.getInfoUser()) != null ? object.getChannel() : null;
        stringBuilder.append((String)object);
        this.nameFolderTwo = stringBuilder.toString();
        stringBuilder = new StringBuilder();
        stringBuilder.append(string2);
        stringBuilder.append('_');
        stringBuilder.append(string3);
        stringBuilder.append('_');
        Object object2 = this.userModel;
        object = fileManager;
        if (object2 != null) {
            object2 = object2.getInfoUser();
            object = fileManager;
            if (object2 != null) {
                object = object2.getChannel();
            }
        }
        stringBuilder.append((String)object);
        object = stringBuilder.toString();
        fileManager = this.fileManager;
        if (fileManager != null) {
            fileManager.CreateFile(this.nameFolderTwo);
        }
        if ((fileManager = this.edCustomerNameNew) == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameNew");
        }
        fileManager = fileManager.getText();
        Intrinsics.checkExpressionValueIsNotNull((Object)fileManager, (String)"edCustomerNameNew.text");
        int n = StringsKt.trim((CharSequence)((CharSequence)((Object)fileManager))).length();
        int n2 = 1;
        n = n > 0 ? 1 : 0;
        if (n != 0) {
            fileManager = this.edCustomerIDNew;
            if (fileManager == null) {
                Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDNew");
            }
            fileManager = fileManager.getText();
            Intrinsics.checkExpressionValueIsNotNull((Object)fileManager, (String)"edCustomerIDNew.text");
            n = StringsKt.trim((CharSequence)((CharSequence)((Object)fileManager))).length() > 0 ? n2 : 0;
            if (n != 0) {
                this.startActivity(new Intent(this.getContext(), DocumentActivity.class).putExtra("isdefer", false).putExtra("title", (String)object).putExtra("nameFolderTwo", this.nameFolderTwo).putExtra("idcustomer", string3).putExtra("customername", string2));
                object = this.edCustomerNameNew;
                if (object == null) {
                    Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameNew");
                }
                object.setText((CharSequence)"");
                object = this.edCustomerIDNew;
                if (object == null) {
                    Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDNew");
                }
                object.setText((CharSequence)"");
            }
        }
    }

    private final void editDeferDoc() {
        Object object = this.defer;
        FileManager fileManager = null;
        object = object != null ? object.getCustomer_name() : null;
        Object object2 = this.defer;
        object2 = object2 != null ? object2.getCustomer_id() : null;
        Object object3 = this.edCustomerNameQDE;
        if (object3 == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameQDE");
        }
        object3.setText((CharSequence)object);
        object3 = this.edCustomerIDQDE;
        if (object3 == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDQDE");
        }
        object3.setText((CharSequence)object2);
        object3 = this.defer;
        if (object3 != null && (object3 = object3.getIdf1()) != null) {
            if (object3 == null) {
                throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
            }
            object3 = StringsKt.trim((CharSequence)((CharSequence)object3)).toString();
        } else {
            object3 = null;
        }
        if (object3 == null || object3.hashCode() == 0 && object3.equals("")) {
            object3 = this.defer;
            if (object3 != null) {
                object3.setIdf1("-1");
            }
        } else {
            object3 = this.defer;
            if (object3 != null) {
                object3.setManagement_id(null);
            }
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(MainApplication.Companion.getNameFolderDefer());
        stringBuilder.append('/');
        stringBuilder.append((String)object);
        stringBuilder.append('_');
        stringBuilder.append((String)object2);
        stringBuilder.append('_');
        object3 = this.userModel;
        object3 = object3 != null && (object3 = object3.getInfoUser()) != null ? object3.getChannel() : null;
        stringBuilder.append((String)object3);
        this.nameFolderTwo = stringBuilder.toString();
        stringBuilder = new StringBuilder();
        stringBuilder.append((String)object);
        stringBuilder.append('_');
        stringBuilder.append((String)object2);
        stringBuilder.append('_');
        Object object4 = this.userModel;
        object3 = fileManager;
        if (object4 != null) {
            object4 = object4.getInfoUser();
            object3 = fileManager;
            if (object4 != null) {
                object3 = object4.getChannel();
            }
        }
        stringBuilder.append((String)object3);
        object3 = stringBuilder.toString();
        if (this.validateIDCustomer((String)object2) && this.validateNameCustomer((String)object)) {
            fileManager = this.fileManager;
            if (fileManager != null) {
                fileManager.CreateFile(this.nameFolderTwo);
            }
            this.startActivity(new Intent(this.getContext(), DocumentActivity.class).putExtra("isdefer", true).putExtra("title", (String)object3).putExtra("nameFolderTwo", this.nameFolderTwo).putExtra("idcustomer", (String)object2).putExtra("defer", (Parcelable)this.defer).putExtra("customername", (String)object));
            object = this.edCustomerNameQDE;
            if (object == null) {
                Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameQDE");
            }
            if (object != null) {
                object.setText((CharSequence)"");
            }
            if ((object = this.edCustomerIDQDE) == null) {
                Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDQDE");
            }
            if (object != null) {
                object.setText((CharSequence)"");
            }
            if ((object = this.edIDF1QDE) == null) {
                Intrinsics.throwUninitializedPropertyAccessException((String)"edIDF1QDE");
            }
            if (object != null) {
                object.setText((CharSequence)"");
            }
        }
    }

    private final void hideSoftKeyboard() {
        Object object = this.getActivity();
        Object var2_2 = null;
        object = object != null ? object.getSystemService("input_method") : null;
        if (object == null) {
            throw new TypeCastException("null cannot be cast to non-null type android.view.inputmethod.InputMethodManager");
        }
        InputMethodManager inputMethodManager = (InputMethodManager)object;
        FragmentActivity fragmentActivity = this.getActivity();
        object = var2_2;
        if (fragmentActivity != null) {
            fragmentActivity = fragmentActivity.getCurrentFocus();
            object = var2_2;
            if (fragmentActivity != null) {
                object = fragmentActivity.getWindowToken();
            }
        }
        inputMethodManager.hideSoftInputFromWindow((IBinder)object, 0);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    private final void openDialog() {
        DialogFragment dialogFragment;
        DialogFragment dialogFragment2;
        this.closeDialog();
        try {
            dialogFragment2 = this.dialogFragment = new DialogFragment();
            if (dialogFragment2 != null) {
                dialogFragment2.setCancelable(false);
            }
            if ((dialogFragment = this.dialogFragment) == null) return;
            {
                dialogFragment2 = this.getActivity();
                dialogFragment2 = dialogFragment2 != null ? dialogFragment2.getSupportFragmentManager() : null;
            }
        }
        catch (Exception exception) {
            return;
        }
        dialogFragment.show((FragmentManager)dialogFragment2, "dialog");
    }

    private final void setLanguage() {
        LocaleManager localeManager = new LocaleManager();
        TextView textView = (TextView)this._$_findCachedViewById(R.id.txtCustomerName);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"txtCustomerName");
        textView.setText((CharSequence)localeManager.getCustomername());
        textView = (TextView)this._$_findCachedViewById(R.id.txtCustomerID);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"txtCustomerID");
        textView.setText((CharSequence)localeManager.getCustomerid());
        textView = (TextView)this._$_findCachedViewById(R.id.txtCustomerIDNew);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"txtCustomerIDNew");
        textView.setText((CharSequence)localeManager.getCustomerid());
        textView = (TextView)this._$_findCachedViewById(R.id.txtCustomerNameNew);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"txtCustomerNameNew");
        textView.setText((CharSequence)localeManager.getCustomername());
        textView = (Button)this._$_findCachedViewById(R.id.btnCreateFile);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"btnCreateFile");
        textView.setText((CharSequence)localeManager.getCreate());
        textView = (Button)this._$_findCachedViewById(R.id.btnEditFile);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"btnEditFile");
        textView.setText((CharSequence)localeManager.getEdit());
        textView = (RadioButton)this._$_findCachedViewById(R.id.rdNew);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"rdNew");
        textView.setText((CharSequence)localeManager.getNewdoc());
        textView = (RadioButton)this._$_findCachedViewById(R.id.rdQDE);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"rdQDE");
        textView.setText((CharSequence)localeManager.getQde());
    }

    private final void showDialog(String string2) {
        Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)string2, (int)0).show();
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    private final boolean validateIDCustomer(String var1_1) {
        var4_2 = new LocaleManager();
        var2_3 = true;
        if (var1_1 != null) {
            if (var1_1 == null) {
                throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
            }
            var3_4 = StringsKt.trim((CharSequence)var1_1).toString();
            if (var3_4 != null) {
                if (var3_4.length() == 9) return true;
            }
        }
        if (var1_1 != null) {
            if (var1_1 == null) {
                throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
            }
            var3_4 = StringsKt.trim((CharSequence)var1_1).toString();
            if (var3_4 != null && var3_4.length() == 12) {
                return true;
            }
        }
        if (var1_1 == null) ** GOTO lbl-1000
        if (var1_1 == null) {
            throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
        }
        var3_4 = StringsKt.trim((CharSequence)var1_1).toString();
        if (var3_4 != null) {
            var3_4 = var3_4.length();
        } else lbl-1000: // 2 sources:
        {
            var3_4 = null;
        }
        if (var3_4 != null) {
            if (var1_1 == null) {
                throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
            }
            if (((CharSequence)StringsKt.trim((CharSequence)var1_1).toString()).length() != 0) {
                var2_3 = false;
            }
            if (!var2_3) {
                Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)String.valueOf(var4_2.getErroridcustomer()), (int)0).show();
                return false;
            }
        }
        Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)String.valueOf(var4_2.getErrorempty()), (int)0).show();
        return false;
    }

    private final boolean validateNameCustomer(String string2) {
        LocaleManager localeManager = new LocaleManager();
        if (string2 != null) {
            if (string2 == null) {
                throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
            }
            string2 = StringsKt.trim((CharSequence)string2).toString();
        } else {
            string2 = null;
        }
        if (string2 == null || string2.hashCode() == 0 && string2.equals("")) {
            Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)String.valueOf(localeManager.getErrorempty()), (int)0).show();
            return false;
        }
        return true;
    }

    public void _$_clearFindViewByIdCache() {
        if (this._$_findViewCache != null) {
            this._$_findViewCache.clear();
        }
    }

    public View _$_findCachedViewById(int n) {
        View view;
        if (this._$_findViewCache == null) {
            this._$_findViewCache = new HashMap();
        }
        View view2 = view = (View)this._$_findViewCache.get(n);
        if (view == null) {
            view2 = this.getView();
            if (view2 == null) {
                return null;
            }
            view2 = view2.findViewById(n);
            this._$_findViewCache.put(n, view2);
        }
        return view2;
    }

    @Override
    public void checkDeferCMNDSGBSuccess() {
        this.closeDialog();
        this.isNext = true;
    }

    @Override
    public void checkDeferFail(@Nullable String string2) {
        this.isNext = false;
        Object object = this.edIDF1QDE;
        if (object == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edIDF1QDE");
        }
        object.setText((CharSequence)"");
        object = this.edCustomerIDQDE;
        if (object == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDQDE");
        }
        object.setText((CharSequence)"");
        object = this.edCustomerNameQDE;
        if (object == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameQDE");
        }
        object.setText((CharSequence)"");
        this.closeDialog();
        if (string2 == null) {
            object = string2;
        } else if (string2.hashCode() != 468705135) {
            object = string2;
        } else {
            object = string2;
            if (string2.equals("invalid idf1")) {
                object = MainApplication.Companion.getLocale().getErrorsearchdata();
            }
        }
        this.showDialog((String)object);
    }

    @Override
    public void errorDupCMNDSGB(@Nullable String string2) {
        this.closeDialog();
        this.showDialog(string2);
    }

    @Override
    public void idf1CanDefer() {
        this.closeDialog();
        this.editDeferDoc();
    }

    public void onActivityCreated(@Nullable Bundle bundle) {
        super.onActivityCreated(bundle);
        bundle = this.getContext();
        if (bundle == null) {
            Intrinsics.throwNpe();
        }
        Intrinsics.checkExpressionValueIsNotNull((Object)bundle, (String)"context!!");
        this.fileManager = new FileManager((Context)bundle);
        this.userModel = new UserModel();
        this.fileModel = new FileModel();
        this.configManager = new ConfigManager();
        this.locale = new LocaleManager();
        this.deferModel = new DeferModel();
        bundle = (RadioGroup)this._$_findCachedViewById(R.id.rdgNewQDE);
        if (bundle != null) {
            bundle.setOnCheckedChangeListener((RadioGroup.OnCheckedChangeListener)this);
        }
        if ((bundle = (Button)this._$_findCachedViewById(R.id.btnCreateFile)) != null) {
            bundle.setOnClickListener((View.OnClickListener)this);
        }
        if ((bundle = (Button)this._$_findCachedViewById(R.id.btnEditFile)) != null) {
            bundle.setOnClickListener((View.OnClickListener)this);
        }
        if ((bundle = this.edCustomerIDQDE) == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDQDE");
        }
        bundle.setOnEditorActionListener(new TextView.OnEditorActionListener(this){
            final /* synthetic */ FragmentCreateFile this$0;
            {
                this.this$0 = fragmentCreateFile;
            }

            public final boolean onEditorAction(TextView object, int n, android.view.KeyEvent keyEvent) {
                if (n == 3) {
                    FragmentCreateFile.access$getEdCustomerNameQDE$p(this.this$0).setText((CharSequence)"");
                    FragmentCreateFile.access$getEdIDF1QDE$p(this.this$0).setText((CharSequence)"");
                    FragmentCreateFile.access$hideSoftKeyboard(this.this$0);
                    object = FragmentCreateFile.access$getConfigManager$p(this.this$0);
                    keyEvent = null;
                    object = object != null ? Boolean.valueOf(object.isConnectedInternet()) : null;
                    if (object == null) {
                        Intrinsics.throwNpe();
                    }
                    if (object.booleanValue()) {
                        FragmentCreateFile.access$openDialog(this.this$0);
                        object = FragmentCreateFile.access$getDeferModel$p(this.this$0);
                        if (object != null) {
                            object.getDeferByCMND(this.this$0, FragmentCreateFile.access$getRequestDeferCMND$p(this.this$0), FragmentCreateFile.access$getEdCustomerIDQDE$p(this.this$0).getText().toString());
                        }
                    } else {
                        Context context = MainApplication.Companion.applicationContext();
                        LocaleManager localeManager = FragmentCreateFile.access$getLocale$p(this.this$0);
                        object = keyEvent;
                        if (localeManager != null) {
                            object = localeManager.getCheckinternet();
                        }
                        Toast.makeText((Context)context, (CharSequence)((CharSequence)object), (int)0).show();
                    }
                }
                return true;
            }
        });
        bundle = this.edIDF1QDE;
        if (bundle == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edIDF1QDE");
        }
        bundle.setOnEditorActionListener(new TextView.OnEditorActionListener(this){
            final /* synthetic */ FragmentCreateFile this$0;
            {
                this.this$0 = fragmentCreateFile;
            }

            public final boolean onEditorAction(TextView object, int n, android.view.KeyEvent keyEvent) {
                if (n != 3) {
                    return false;
                }
                FragmentCreateFile.access$hideSoftKeyboard(this.this$0);
                object = FragmentCreateFile.access$getConfigManager$p(this.this$0);
                keyEvent = null;
                object = object != null ? Boolean.valueOf(object.isConnectedInternet()) : null;
                if (object == null) {
                    Intrinsics.throwNpe();
                }
                if (object.booleanValue()) {
                    FragmentCreateFile.access$openDialog(this.this$0);
                    object = FragmentCreateFile.access$getDeferModel$p(this.this$0);
                    if (object != null) {
                        object.getDeferByIDF1(this.this$0, FragmentCreateFile.access$getRequestDeferIDF1$p(this.this$0), FragmentCreateFile.access$getEdIDF1QDE$p(this.this$0).getText().toString());
                        return false;
                    }
                } else {
                    FragmentCreateFile.access$closeDialog(this.this$0);
                    Context context = MainApplication.Companion.applicationContext();
                    LocaleManager localeManager = FragmentCreateFile.access$getLocale$p(this.this$0);
                    object = keyEvent;
                    if (localeManager != null) {
                        object = localeManager.getCheckinternet();
                    }
                    Toast.makeText((Context)context, (CharSequence)((CharSequence)object), (int)0).show();
                }
                return false;
            }
        });
    }

    public void onCheckedChanged(@Nullable RadioGroup radioGroup, int n) {
        if (n != 2131296520) {
            if (n != 2131296522) {
                return;
            }
            radioGroup = (LinearLayout)this._$_findCachedViewById(R.id.containerqda);
            if (radioGroup != null) {
                radioGroup.setVisibility(0);
            }
            if ((radioGroup = (LinearLayout)this._$_findCachedViewById(R.id.containernewfile)) != null) {
                radioGroup.setVisibility(8);
                return;
            }
        } else {
            radioGroup = (LinearLayout)this._$_findCachedViewById(R.id.containernewfile);
            if (radioGroup != null) {
                radioGroup.setVisibility(0);
            }
            if ((radioGroup = (LinearLayout)this._$_findCachedViewById(R.id.containerqda)) != null) {
                radioGroup.setVisibility(8);
            }
        }
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public void onClick(@Nullable View object) {
        Object object2 = null;
        Object object3 = null;
        Defer defer = null;
        Object var7_5 = null;
        Object object4 = null;
        if (object == null) return;
        object = object.getId();
        if (object != null && object.intValue() == 2131296317) {
            object = this.edCustomerNameNew;
            if (object == null) {
                Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameNew");
            }
            if ((object3 = this.edCustomerNameNew) == null) {
                Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameNew");
            }
            if ((object3 = object3.getText().toString()) == null) {
                throw new TypeCastException("null cannot be cast to non-null type java.lang.String");
            }
            object3 = object3.toUpperCase();
            Intrinsics.checkExpressionValueIsNotNull((Object)object3, (String)"(this as java.lang.String).toUpperCase()");
            object.setText((CharSequence)object3);
            object = this.configManager;
            object = object != null ? Boolean.valueOf(object.isConnectedInternet()) : null;
            if (object == null) {
                Intrinsics.throwNpe();
            }
            if (object.booleanValue()) {
                object = this.edCustomerIDNew;
                if (object == null) {
                    Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDNew");
                }
                if (this.validateIDCustomer(object.getText().toString())) {
                    object = this.edCustomerNameNew;
                    if (object == null) {
                        Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameNew");
                    }
                    if (this.validateNameCustomer(object.getText().toString())) {
                        this.openDialog();
                        object3 = new StringBuilder();
                        object = this.edCustomerNameNew;
                        if (object == null) {
                            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameNew");
                        }
                        object3.append((Object)object.getText());
                        object3.append('_');
                        object = this.edCustomerIDNew;
                        if (object == null) {
                            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDNew");
                        }
                        object3.append((Object)object.getText());
                        object3.append('_');
                        object2 = this.userModel;
                        object = object4;
                        if (object2 != null) {
                            object2 = object2.getInfoUser();
                            object = object4;
                            if (object2 != null) {
                                object = object2.getChannel();
                            }
                        }
                        object3.append((String)object);
                        object = object3.toString();
                        object3 = this.fileManager;
                        if (object3 != null && object3.checkNewFolderExits((String)object)) {
                            this.closeDialog();
                            this.createNewDoc();
                            return;
                        }
                        object = this.deferModel;
                        if (object == null) return;
                        object3 = this;
                        object2 = this.edCustomerIDNew;
                        if (object2 == null) {
                            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDNew");
                        }
                        object.checkDupCMNDSGB((DeferView)object3, object2.getText().toString());
                        return;
                    }
                }
                Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrorempty(), (int)0).show();
                this.closeDialog();
                return;
            }
            object = this.edCustomerIDNew;
            if (object == null) {
                Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDNew");
            }
            if (this.validateIDCustomer(object.getText().toString())) {
                object = this.edCustomerNameNew;
                if (object == null) {
                    Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameNew");
                }
                if (this.validateNameCustomer(object.getText().toString())) {
                    this.createNewDoc();
                    return;
                }
            }
            Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrorempty(), (int)0).show();
            this.closeDialog();
            return;
        }
        if (object == null) {
            return;
        }
        if (object.intValue() != 2131296321) return;
        object = this.edCustomerNameQDE;
        if (object == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameQDE");
        }
        object = object.getText();
        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"edCustomerNameQDE.text");
        boolean bl = ((CharSequence)object).length() > 0;
        if (bl) {
            if (this.isNext) {
                object = this.edCustomerIDQDE;
                if (object == null) {
                    Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDQDE");
                }
                object4 = object.getText().toString();
                object = this.defer;
                object = object != null ? object.getCustomer_id() : null;
                if (!Intrinsics.areEqual((Object)object4, (Object)object)) {
                    object = this.edIDF1QDE;
                    if (object == null) {
                        Intrinsics.throwUninitializedPropertyAccessException((String)"edIDF1QDE");
                    }
                    object4 = object.getText().toString();
                    object = this.defer;
                    object = object != null ? object.getIdf1() : null;
                    if (!Intrinsics.areEqual((Object)object4, (Object)object)) {
                        this.isNext = false;
                        object = this.edCustomerNameQDE;
                        if (object == null) {
                            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameQDE");
                        }
                        object.setText((CharSequence)"");
                        object3 = MainApplication.Companion.applicationContext();
                        object4 = this.locale;
                        object = object2;
                        if (object4 != null) {
                            object = object4.getErrorinputsearchqde();
                        }
                        Toast.makeText((Context)object3, (CharSequence)((CharSequence)object), (int)0).show();
                        return;
                    }
                }
                object = (object = this.defer) != null ? object.getIdf1() : null;
                if (object != null) {
                    object = this.defer;
                    object = object != null ? object.getIdf1() : null;
                    if (Intrinsics.areEqual((Object)object, (Object)"") ^ true) {
                        this.openDialog();
                        object2 = this.deferModel;
                        if (object2 == null) return;
                        object4 = this;
                        defer = this.defer;
                        object = object3;
                        if (defer != null) {
                            object = defer.getIdf1();
                        }
                        object2.checkDeferExpried((DeferView)object4, (String)object);
                        return;
                    }
                }
                this.editDeferDoc();
                return;
            }
            object3 = MainApplication.Companion.applicationContext();
            object2 = this.locale;
            object = defer;
            if (object2 != null) {
                object = object2.getErrorinputsearchqde();
            }
            Toast.makeText((Context)object3, (CharSequence)((CharSequence)object), (int)0).show();
            return;
        }
        object3 = MainApplication.Companion.applicationContext();
        object2 = this.locale;
        object = var7_5;
        if (object2 != null) {
            object = object2.getErrorinputsearchqde();
        }
        Toast.makeText((Context)object3, (CharSequence)((CharSequence)object), (int)0).show();
    }

    @Nullable
    public View onCreateView(@NotNull LayoutInflater layoutInflater, @Nullable ViewGroup viewGroup, @Nullable Bundle bundle) {
        Intrinsics.checkParameterIsNotNull((Object)layoutInflater, (String)"inflater");
        layoutInflater = layoutInflater.inflate(2131427403, viewGroup, false);
        viewGroup = layoutInflater.findViewById(2131296409);
        Intrinsics.checkExpressionValueIsNotNull((Object)viewGroup, (String)"view.findViewById(R.id.edCustomerNameQDE)");
        this.edCustomerNameQDE = (EditText)viewGroup;
        viewGroup = layoutInflater.findViewById(2131296411);
        Intrinsics.checkExpressionValueIsNotNull((Object)viewGroup, (String)"view.findViewById(R.id.edIDF1QDE)");
        this.edIDF1QDE = (EditText)viewGroup;
        viewGroup = layoutInflater.findViewById(2131296407);
        Intrinsics.checkExpressionValueIsNotNull((Object)viewGroup, (String)"view.findViewById(R.id.edCustomerIDQDE)");
        this.edCustomerIDQDE = (EditText)viewGroup;
        viewGroup = layoutInflater.findViewById(2131296408);
        Intrinsics.checkExpressionValueIsNotNull((Object)viewGroup, (String)"view.findViewById(R.id.edCustomerNameNew)");
        this.edCustomerNameNew = (EditText)viewGroup;
        viewGroup = layoutInflater.findViewById(2131296406);
        Intrinsics.checkExpressionValueIsNotNull((Object)viewGroup, (String)"view.findViewById(R.id.edCustomerIDNew)");
        this.edCustomerIDNew = (EditText)viewGroup;
        return layoutInflater;
    }

    public /* synthetic */ void onDestroyView() {
        super.onDestroyView();
        this._$_clearFindViewByIdCache();
    }

    public void onResume() {
        super.onResume();
        this.setLanguage();
    }

    public void onStop() {
        this.closeDialog();
        super.onStop();
    }

    @Override
    public void passCMNDSGB() {
        this.closeDialog();
        this.createNewDoc();
    }

    @Override
    public void showDataDefer(@Nullable Integer object, @Nullable Defer object2) {
        this.defer = object2;
        EditText editText = this.edIDF1QDE;
        if (editText == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edIDF1QDE");
        }
        Object var5_4 = null;
        String string2 = object2 != null ? object2.getIdf1() : null;
        editText.setText((CharSequence)string2);
        editText = this.edCustomerIDQDE;
        if (editText == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDQDE");
        }
        string2 = object2 != null ? object2.getCustomer_id() : null;
        editText.setText((CharSequence)string2);
        editText = this.edCustomerNameQDE;
        if (editText == null) {
            Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerNameQDE");
        }
        string2 = var5_4;
        if (object2 != null) {
            string2 = object2.getCustomer_name();
        }
        editText.setText((CharSequence)string2);
        int n = this.requestDeferCMND;
        if (object != null && object.intValue() == n) {
            object = this.deferModel;
            if (object != null) {
                object2 = this;
                string2 = this.edCustomerIDQDE;
                if (string2 == null) {
                    Intrinsics.throwUninitializedPropertyAccessException((String)"edCustomerIDQDE");
                }
                object.checkDeferByCMNDSGB((DeferView)object2, string2.getText().toString());
                return;
            }
        } else {
            n = this.requestDeferIDF1;
            if (object == null) {
                return;
            }
            if (object.intValue() == n) {
                this.closeDialog();
                this.isNext = true;
            }
        }
    }
}

