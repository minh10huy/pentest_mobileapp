/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.os.Bundle
 *  android.support.v4.app.DialogFragment
 *  android.view.LayoutInflater
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.view.ViewGroup
 *  android.widget.Button
 *  android.widget.EditText
 *  android.widget.TextView
 *  android.widget.Toast
 *  kotlin.Metadata
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.fragment.DialogCheckCMNDFragment$onViewCreated
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.NotNull
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.fragment;

import android.content.Context;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import java.util.HashMap;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.entity.Defer;
import ntb.mafc.mobile.fragment.DialogCheckCMNDFragment;
import ntb.mafc.mobile.fragment.DialogFragment;
import ntb.mafc.mobile.manager.ConfigManager;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import ntb.mafc.mobile.model.DeferModel;
import ntb.mafc.mobile.view.DeferView;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000h\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u000e\n\u0002\b\u0005\n\u0002\u0010\u000b\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\u0018\u00002\u00020\u00012\u00020\u0002B\u0005\u00a2\u0006\u0002\u0010\u0003J\u0010\u0010\u001c\u001a\u00020\u001d2\u0006\u0010\u001e\u001a\u00020\u0017H\u0002J\b\u0010\u001f\u001a\u00020 H\u0016J\u0012\u0010!\u001a\u00020 2\b\u0010\"\u001a\u0004\u0018\u00010\u0017H\u0016J\b\u0010#\u001a\u00020 H\u0002J\u0012\u0010$\u001a\u00020 2\b\u0010%\u001a\u0004\u0018\u00010\u0017H\u0016J\b\u0010&\u001a\u00020 H\u0016J&\u0010'\u001a\u0004\u0018\u00010(2\u0006\u0010)\u001a\u00020*2\b\u0010+\u001a\u0004\u0018\u00010,2\b\u0010-\u001a\u0004\u0018\u00010.H\u0016J\u001a\u0010/\u001a\u00020 2\u0006\u00100\u001a\u00020(2\b\u0010-\u001a\u0004\u0018\u00010.H\u0016J\b\u00101\u001a\u00020 H\u0016J!\u00102\u001a\u00020 2\b\u00103\u001a\u0004\u0018\u0001042\b\u00105\u001a\u0004\u0018\u000106H\u0016\u00a2\u0006\u0002\u00107R\u001c\u0010\u0004\u001a\u0004\u0018\u00010\u0005X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0006\u0010\u0007\"\u0004\b\b\u0010\tR\u001c\u0010\n\u001a\u0004\u0018\u00010\u000bX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\f\u0010\r\"\u0004\b\u000e\u0010\u000fR\u001c\u0010\u0010\u001a\u0004\u0018\u00010\u0011X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0012\u0010\u0013\"\u0004\b\u0014\u0010\u0015R\u001c\u0010\u0016\u001a\u0004\u0018\u00010\u0017X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0018\u0010\u0019\"\u0004\b\u001a\u0010\u001b\u00a8\u00068"}, d2={"Lntb/mafc/mobile/fragment/DialogCheckCMNDFragment;", "Landroid/support/v4/app/DialogFragment;", "Lntb/mafc/mobile/view/DeferView;", "()V", "configManager", "Lntb/mafc/mobile/manager/ConfigManager;", "getConfigManager", "()Lntb/mafc/mobile/manager/ConfigManager;", "setConfigManager", "(Lntb/mafc/mobile/manager/ConfigManager;)V", "deferModel", "Lntb/mafc/mobile/model/DeferModel;", "getDeferModel", "()Lntb/mafc/mobile/model/DeferModel;", "setDeferModel", "(Lntb/mafc/mobile/model/DeferModel;)V", "dialogFragment", "Lntb/mafc/mobile/fragment/DialogFragment;", "getDialogFragment", "()Lntb/mafc/mobile/fragment/DialogFragment;", "setDialogFragment", "(Lntb/mafc/mobile/fragment/DialogFragment;)V", "parentFolder", "", "getParentFolder", "()Ljava/lang/String;", "setParentFolder", "(Ljava/lang/String;)V", "checkCMND", "", "cmnd", "checkDeferCMNDSGBSuccess", "", "checkDeferFail", "message", "closeDialog", "errorDupCMNDSGB", "reason", "idf1CanDefer", "onCreateView", "Landroid/view/View;", "inflater", "Landroid/view/LayoutInflater;", "container", "Landroid/view/ViewGroup;", "savedInstanceState", "Landroid/os/Bundle;", "onViewCreated", "view", "passCMNDSGB", "showDataDefer", "requestCode", "", "defer", "Lntb/mafc/mobile/entity/Defer;", "(Ljava/lang/Integer;Lntb/mafc/mobile/entity/Defer;)V", "app_release"}, k=1, mv={1, 1, 11})
public final class DialogCheckCMNDFragment
extends android.support.v4.app.DialogFragment
implements DeferView {
    private HashMap _$_findViewCache;
    @Nullable
    private ConfigManager configManager;
    @Nullable
    private DeferModel deferModel;
    @Nullable
    private DialogFragment dialogFragment;
    @Nullable
    private String parentFolder;

    public static final /* synthetic */ boolean access$checkCMND(DialogCheckCMNDFragment dialogCheckCMNDFragment, @NotNull String string2) {
        return dialogCheckCMNDFragment.checkCMND(string2);
    }

    private final boolean checkCMND(String string2) {
        boolean bl;
        int n = string2.length();
        boolean bl2 = bl = true;
        if (n != 9) {
            bl2 = bl;
            if (n != 12) {
                bl2 = false;
            }
        }
        return bl2;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private final void closeDialog() {
        DialogFragment dialogFragment;
        try {
            if (this.dialogFragment == null || (dialogFragment = this.dialogFragment) == null) return;
        }
        catch (Exception exception) {
            return;
        }
        dialogFragment.dismissAllowingStateLoss();
    }

    public void _$_clearFindViewByIdCache() {
        if (this._$_findViewCache != null) {
            this._$_findViewCache.clear();
        }
    }

    public View _$_findCachedViewById(int n) {
        View view;
        if (this._$_findViewCache == null) {
            this._$_findViewCache = new HashMap();
        }
        View view2 = view = (View)this._$_findViewCache.get(n);
        if (view == null) {
            view2 = this.getView();
            if (view2 == null) {
                return null;
            }
            view2 = view2.findViewById(n);
            this._$_findViewCache.put(n, view2);
        }
        return view2;
    }

    @Override
    public void checkDeferCMNDSGBSuccess() {
    }

    @Override
    public void checkDeferFail(@Nullable String string2) {
    }

    @Override
    public void errorDupCMNDSGB(@Nullable String string2) {
        String string3;
        this.closeDialog();
        if (string2 == null) {
            string3 = string2;
        } else if (string2.hashCode() != -1986399639) {
            string3 = string2;
        } else {
            string3 = string2;
            if (string2.equals("NOT OK")) {
                string3 = String.valueOf(MainApplication.Companion.getLocale().getInvalidcmnd());
            }
        }
        Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)string3, (int)0).show();
    }

    @Nullable
    public final ConfigManager getConfigManager() {
        return this.configManager;
    }

    @Nullable
    public final DeferModel getDeferModel() {
        return this.deferModel;
    }

    @Nullable
    public final DialogFragment getDialogFragment() {
        return this.dialogFragment;
    }

    @Nullable
    public final String getParentFolder() {
        return this.parentFolder;
    }

    @Override
    public void idf1CanDefer() {
    }

    @Nullable
    public View onCreateView(@NotNull LayoutInflater layoutInflater, @Nullable ViewGroup viewGroup, @Nullable Bundle object) {
        Intrinsics.checkParameterIsNotNull((Object)layoutInflater, (String)"inflater");
        object = this.getArguments();
        object = object != null ? object.getString("parentFolder") : null;
        this.parentFolder = object;
        return layoutInflater.inflate(2131427384, viewGroup, false);
    }

    public /* synthetic */ void onDestroyView() {
        super.onDestroyView();
        this._$_clearFindViewByIdCache();
    }

    public void onViewCreated(@NotNull View view, @Nullable Bundle bundle) {
        Intrinsics.checkParameterIsNotNull((Object)view, (String)"view");
        super.onViewCreated(view, bundle);
        this.deferModel = new DeferModel();
        this.configManager = new ConfigManager();
        this.dialogFragment = new DialogFragment();
        bundle = (TextView)this._$_findCachedViewById(R.id.txtTitle);
        Intrinsics.checkExpressionValueIsNotNull((Object)bundle, (String)"txtTitle");
        bundle.setText((CharSequence)MainApplication.Companion.getLocale().getCheckcmnd());
        bundle = (EditText)this._$_findCachedViewById(R.id.edCustomerID);
        Intrinsics.checkExpressionValueIsNotNull((Object)bundle, (String)"edCustomerID");
        bundle.setHint((CharSequence)MainApplication.Companion.getLocale().getCustomerid());
        bundle = (Button)this._$_findCachedViewById(R.id.btnAgree);
        Intrinsics.checkExpressionValueIsNotNull((Object)bundle, (String)"btnAgree");
        bundle.setText((CharSequence)MainApplication.Companion.getLocale().getOk());
        ((Button)view.findViewById(R.id.btnAgree)).setOnClickListener(new View.OnClickListener(this){
            final /* synthetic */ DialogCheckCMNDFragment this$0;
            {
                this.this$0 = dialogCheckCMNDFragment;
            }

            public final void onClick(View object) {
                object = (EditText)this.this$0._$_findCachedViewById(R.id.edCustomerID);
                Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"edCustomerID");
                object = object.getText().toString();
                if (object == null) {
                    throw new kotlin.TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
                }
                if ((object = kotlin.text.StringsKt.trim((CharSequence)((CharSequence)object)).toString()).hashCode() == 0 && object.equals("")) {
                    Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErrorinputcmnd(), (int)0).show();
                    return;
                }
                object = this.this$0;
                Object object2 = (EditText)this.this$0._$_findCachedViewById(R.id.edCustomerID);
                Intrinsics.checkExpressionValueIsNotNull((Object)object2, (String)"edCustomerID");
                object2 = object2.getText().toString();
                if (object2 == null) {
                    throw new kotlin.TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
                }
                if (DialogCheckCMNDFragment.access$checkCMND((DialogCheckCMNDFragment)object, kotlin.text.StringsKt.trim((CharSequence)((CharSequence)object2)).toString())) {
                    object = this.this$0.getConfigManager();
                    if (object != null && object.isConnectedInternet()) {
                        object = this.this$0.getDialogFragment();
                        if (object != null) {
                            object2 = this.this$0.getContext();
                            if (object2 == null) {
                                throw new kotlin.TypeCastException("null cannot be cast to non-null type ntb.mafc.mobile.activity.HomePageActivity");
                            }
                            object.show(((ntb.mafc.mobile.activity.HomePageActivity)((Object)object2)).getSupportFragmentManager(), "dialog");
                        }
                        if ((object = this.this$0.getDeferModel()) != null) {
                            object2 = this.this$0;
                            EditText editText = (EditText)this.this$0._$_findCachedViewById(R.id.edCustomerID);
                            Intrinsics.checkExpressionValueIsNotNull((Object)editText, (String)"edCustomerID");
                            object.checkDupCMNDSGB((DeferView)object2, editText.getText().toString());
                        }
                        this.this$0.dismissAllowingStateLoss();
                        return;
                    }
                    Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)MainApplication.Companion.getLocale().getCheckinternet(), (int)0).show();
                    return;
                }
                Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErroridcustomer(), (int)0).show();
            }
        });
    }

    @Override
    public void passCMNDSGB() {
        this.closeDialog();
        Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)MainApplication.Companion.getLocale().getValidcmnd(), (int)0).show();
    }

    public final void setConfigManager(@Nullable ConfigManager configManager) {
        this.configManager = configManager;
    }

    public final void setDeferModel(@Nullable DeferModel deferModel) {
        this.deferModel = deferModel;
    }

    public final void setDialogFragment(@Nullable DialogFragment dialogFragment) {
        this.dialogFragment = dialogFragment;
    }

    public final void setParentFolder(@Nullable String string2) {
        this.parentFolder = string2;
    }

    @Override
    public void showDataDefer(@Nullable Integer n, @Nullable Defer defer) {
    }
}

