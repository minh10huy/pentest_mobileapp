/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.support.v4.app.Fragment
 *  android.support.v4.view.PagerAdapter
 *  android.support.v4.view.ViewPager
 *  android.support.v7.widget.RecyclerView
 *  android.support.v7.widget.RecyclerView$Adapter
 *  android.support.v7.widget.RecyclerView$ViewHolder
 *  android.view.LayoutInflater
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.view.ViewGroup
 *  android.widget.ImageView
 *  android.widget.TextView
 *  com.bumptech.glide.DrawableRequestBuilder
 *  com.bumptech.glide.DrawableTypeRequest
 *  com.bumptech.glide.Glide
 *  com.bumptech.glide.RequestManager
 *  com.bumptech.glide.request.target.Target
 *  kotlin.Metadata
 *  kotlin.TypeCastException
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.customadapter.AdapterRecyclerListDashboard$ViewHolder$bind
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.NotNull
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.customadapter;

import android.content.Context;
import android.support.v4.app.Fragment;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import com.bumptech.glide.DrawableRequestBuilder;
import com.bumptech.glide.DrawableTypeRequest;
import com.bumptech.glide.Glide;
import com.bumptech.glide.RequestManager;
import com.bumptech.glide.request.target.Target;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.activity.HomePageActivity;
import ntb.mafc.mobile.customadapter.AdapterRecyclerListDashboard;
import ntb.mafc.mobile.customadapter.ViewPagerAdapter;
import ntb.mafc.mobile.entity.DashBoard;
import ntb.mafc.mobile.fragment.FragmentListQDE;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import ntb.mafc.mobile.model.DashBoardModel;
import ntb.mafc.mobile.model.FileModel;
import ntb.mafc.mobile.model.UserModel;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000B\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010!\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\b\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\u0018\u00002\b\u0012\u0004\u0012\u00020\u00020\u0001:\u0001\u001eB\u001b\u0012\u0006\u0010\u0003\u001a\u00020\u0004\u0012\f\u0010\u0005\u001a\b\u0012\u0004\u0012\u00020\u00070\u0006\u00a2\u0006\u0002\u0010\bJ\b\u0010\u0014\u001a\u00020\u0015H\u0016J\u0018\u0010\u0016\u001a\u00020\u00172\u0006\u0010\u0018\u001a\u00020\u00022\u0006\u0010\u0019\u001a\u00020\u0015H\u0016J\u0018\u0010\u001a\u001a\u00020\u00022\u0006\u0010\u001b\u001a\u00020\u001c2\u0006\u0010\u001d\u001a\u00020\u0015H\u0016R\u001c\u0010\u0003\u001a\u0004\u0018\u00010\u0004X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\t\u0010\n\"\u0004\b\u000b\u0010\fR!\u0010\r\u001a\u0012\u0012\u0004\u0012\u00020\u00070\u000ej\b\u0012\u0004\u0012\u00020\u0007`\u000f\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0010\u0010\u0011R\u0017\u0010\u0005\u001a\b\u0012\u0004\u0012\u00020\u00070\u0006\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0012\u0010\u0013\u00a8\u0006\u001f"}, d2={"Lntb/mafc/mobile/customadapter/AdapterRecyclerListDashboard;", "Landroid/support/v7/widget/RecyclerView$Adapter;", "Lntb/mafc/mobile/customadapter/AdapterRecyclerListDashboard$ViewHolder;", "context", "Landroid/content/Context;", "listNotify", "", "Lntb/mafc/mobile/entity/DashBoard;", "(Landroid/content/Context;Ljava/util/List;)V", "getContext", "()Landroid/content/Context;", "setContext", "(Landroid/content/Context;)V", "list", "Ljava/util/ArrayList;", "Lkotlin/collections/ArrayList;", "getList", "()Ljava/util/ArrayList;", "getListNotify", "()Ljava/util/List;", "getItemCount", "", "onBindViewHolder", "", "holder", "position", "onCreateViewHolder", "parent", "Landroid/view/ViewGroup;", "viewType", "ViewHolder", "app_release"}, k=1, mv={1, 1, 11})
public final class AdapterRecyclerListDashboard
extends RecyclerView.Adapter<ViewHolder> {
    @Nullable
    private Context context;
    @NotNull
    private final ArrayList<DashBoard> list;
    @NotNull
    private final List<DashBoard> listNotify;

    public AdapterRecyclerListDashboard(@NotNull Context object, @NotNull List<DashBoard> object2) {
        Intrinsics.checkParameterIsNotNull((Object)object, (String)"context");
        Intrinsics.checkParameterIsNotNull(object2, (String)"listNotify");
        this.listNotify = object2;
        this.list = new ArrayList();
        this.context = object;
        object = MainApplication.Companion.getLocale().getWaitingupload();
        if (object == null) {
            Intrinsics.throwNpe();
        }
        object = new DashBoard(2131165304, (String)object);
        object2 = MainApplication.Companion.getLocale().getInpropress();
        if (object2 == null) {
            Intrinsics.throwNpe();
        }
        object2 = new DashBoard(2131165311, (String)object2);
        Object object3 = MainApplication.Companion.getLocale().getRemoveqde();
        if (object3 == null) {
            Intrinsics.throwNpe();
        }
        object3 = new DashBoard(2131165295, (String)object3);
        Object object4 = MainApplication.Companion.getLocale().getRemoveqdesgb();
        if (object4 == null) {
            Intrinsics.throwNpe();
        }
        object4 = new DashBoard(2131165293, (String)object4);
        Object object5 = MainApplication.Companion.getLocale().getDerferuploaded();
        if (object5 == null) {
            Intrinsics.throwNpe();
        }
        object5 = new DashBoard(2131165286, (String)object5);
        Object object6 = MainApplication.Companion.getLocale().getCancel();
        if (object6 == null) {
            Intrinsics.throwNpe();
        }
        object6 = new DashBoard(2131165306, (String)object6);
        Object object7 = MainApplication.Companion.getLocale().getFinishqde();
        if (object7 == null) {
            Intrinsics.throwNpe();
        }
        object7 = new DashBoard(2131165292, (String)object7);
        Object object8 = MainApplication.Companion.getLocale().getUpload();
        if (object8 == null) {
            Intrinsics.throwNpe();
        }
        object8 = new DashBoard(2131165312, (String)object8);
        Object object9 = MainApplication.Companion.getLocale().getAll();
        if (object9 == null) {
            Intrinsics.throwNpe();
        }
        object9 = new DashBoard(2131165313, (String)object9);
        this.list.add((DashBoard)object);
        this.list.add((DashBoard)object2);
        this.list.add((DashBoard)object3);
        this.list.add((DashBoard)object4);
        this.list.add((DashBoard)object5);
        this.list.add((DashBoard)object6);
        this.list.add((DashBoard)object7);
        this.list.add((DashBoard)object8);
        this.list.add((DashBoard)object9);
    }

    @Nullable
    public final Context getContext() {
        return this.context;
    }

    public int getItemCount() {
        return this.list.size();
    }

    @NotNull
    public final ArrayList<DashBoard> getList() {
        return this.list;
    }

    @NotNull
    public final List<DashBoard> getListNotify() {
        return this.listNotify;
    }

    public void onBindViewHolder(@NotNull ViewHolder viewHolder, int n) {
        Intrinsics.checkParameterIsNotNull((Object)((Object)viewHolder), (String)"holder");
        DashBoard dashBoard = this.list.get(n);
        Intrinsics.checkExpressionValueIsNotNull((Object)dashBoard, (String)"list.get(position)");
        viewHolder.bind(dashBoard, this.context, this.listNotify);
    }

    @NotNull
    public ViewHolder onCreateViewHolder(@NotNull ViewGroup viewGroup, int n) {
        Intrinsics.checkParameterIsNotNull((Object)viewGroup, (String)"parent");
        viewGroup = LayoutInflater.from((Context)viewGroup.getContext()).inflate(2131427369, viewGroup, false);
        Intrinsics.checkExpressionValueIsNotNull((Object)viewGroup, (String)"view");
        return new ViewHolder((View)viewGroup);
    }

    public final void setContext(@Nullable Context context) {
        this.context = context;
    }

    @Metadata(bv={1, 0, 2}, d1={"\u0000B\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010!\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0000\u0018\u00002\u00020\u0001B\r\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004J(\u0010\u0011\u001a\u00020\u00122\u0006\u0010\u0013\u001a\u00020\u00142\b\u0010\u0015\u001a\u0004\u0018\u00010\u00162\u000e\u0010\u0017\u001a\n\u0012\u0004\u0012\u00020\u0014\u0018\u00010\u0018J\u001c\u0010\u0019\u001a\u00020\u00122\b\u0010\u0015\u001a\u0004\u0018\u00010\u00162\b\u0010\u001a\u001a\u0004\u0018\u00010\u001bH\u0002R\u001c\u0010\u0005\u001a\u0004\u0018\u00010\u0006X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0007\u0010\b\"\u0004\b\t\u0010\nR\u001c\u0010\u000b\u001a\u0004\u0018\u00010\fX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\r\u0010\u000e\"\u0004\b\u000f\u0010\u0010\u00a8\u0006\u001c"}, d2={"Lntb/mafc/mobile/customadapter/AdapterRecyclerListDashboard$ViewHolder;", "Landroid/support/v7/widget/RecyclerView$ViewHolder;", "itemView", "Landroid/view/View;", "(Landroid/view/View;)V", "modelDashboardModel", "Lntb/mafc/mobile/model/DashBoardModel;", "getModelDashboardModel", "()Lntb/mafc/mobile/model/DashBoardModel;", "setModelDashboardModel", "(Lntb/mafc/mobile/model/DashBoardModel;)V", "userModel", "Lntb/mafc/mobile/model/UserModel;", "getUserModel", "()Lntb/mafc/mobile/model/UserModel;", "setUserModel", "(Lntb/mafc/mobile/model/UserModel;)V", "bind", "", "item", "Lntb/mafc/mobile/entity/DashBoard;", "context", "Landroid/content/Context;", "listNumberNotify", "", "showListFragmentQDE", "type", "", "app_release"}, k=1, mv={1, 1, 11})
    public static final class ViewHolder
    extends RecyclerView.ViewHolder {
        @Nullable
        private DashBoardModel modelDashboardModel;
        @Nullable
        private UserModel userModel;

        public ViewHolder(@NotNull View view) {
            Intrinsics.checkParameterIsNotNull((Object)view, (String)"itemView");
            super(view);
            this.modelDashboardModel = new DashBoardModel();
            this.userModel = new UserModel();
        }

        public static final /* synthetic */ void access$showListFragmentQDE(ViewHolder viewHolder, @Nullable Context context, @Nullable String string2) {
            viewHolder.showListFragmentQDE(context, string2);
        }

        private final void showListFragmentQDE(Context object, String string2) {
            if (object == null) {
                throw new TypeCastException("null cannot be cast to non-null type ntb.mafc.mobile.activity.HomePageActivity");
            }
            ViewPager viewPager = (ViewPager)((HomePageActivity)((Object)object))._$_findCachedViewById(R.id.viewPager);
            object = viewPager != null ? viewPager.getAdapter() : null;
            if (object == null) {
                throw new TypeCastException("null cannot be cast to non-null type ntb.mafc.mobile.customadapter.ViewPagerAdapter");
            }
            if ((object = ((ViewPagerAdapter)((Object)object)).getListFragment().get(3)) == null) {
                throw new TypeCastException("null cannot be cast to non-null type ntb.mafc.mobile.fragment.FragmentListQDE");
            }
            ((FragmentListQDE)object).setSearchType(string2);
            viewPager.setCurrentItem(3);
        }

        public final void bind(@NotNull DashBoard dashBoard, @Nullable Context context, @Nullable List<DashBoard> view) {
            Intrinsics.checkParameterIsNotNull((Object)dashBoard, (String)"item");
            Object object = (ImageView)this.itemView.findViewById(2131296458);
            Object object2 = (TextView)this.itemView.findViewById(2131296656);
            RequestManager requestManager = Glide.with((Context)context);
            Integer n = dashBoard.getImage();
            if (n == null) {
                Intrinsics.throwNpe();
            }
            requestManager.load(n).override(100, 100).into((ImageView)object);
            Intrinsics.checkExpressionValueIsNotNull((Object)object2, (String)"txtTitle");
            object2.setText((CharSequence)dashBoard.getTitle());
            int n2 = new FileModel().getListFileWaitingUploaded().size();
            if (view != null && view.size() > 0) {
                object = dashBoard.getTitle();
                if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getWaitingupload())) {
                    view = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView");
                    view = (TextView)view.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView.txtTotalNumber");
                    view.setVisibility(0);
                    view = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView");
                    view = (TextView)view.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView.txtTotalNumber");
                    object = new StringBuilder();
                    object.append('(');
                    object.append(n2);
                    object.append(')');
                    view.setText((CharSequence)object.toString());
                } else if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getInpropress())) {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object.setVisibility(0);
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object2 = new StringBuilder();
                    object2.append('(');
                    object2.append(((DashBoard)view.get(0)).getSl());
                    object2.append(')');
                    object.setText((CharSequence)object2.toString());
                } else if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getRemoveqdesgb())) {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object.setVisibility(0);
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object2 = new StringBuilder();
                    object2.append('(');
                    object2.append(((DashBoard)view.get(1)).getSl());
                    object2.append(')');
                    object.setText((CharSequence)object2.toString());
                    object = ((DashBoard)view.get(1)).getTong_notification();
                    if (object == null) {
                        Intrinsics.throwNpe();
                    }
                    if (object.intValue() > 0) {
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        object = (TextView)object.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtNumberNotify");
                        object.setText((CharSequence)String.valueOf(((DashBoard)view.get(1)).getTong_notification()));
                        view = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView");
                        view = (TextView)view.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView.txtNumberNotify");
                        view.setVisibility(0);
                    }
                } else if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getRemoveqde())) {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object.setVisibility(0);
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object2 = new StringBuilder();
                    object2.append('(');
                    object2.append(((DashBoard)view.get(2)).getSl());
                    object2.append(')');
                    object.setText((CharSequence)object2.toString());
                    object = ((DashBoard)view.get(2)).getTong_notification();
                    if (object == null) {
                        Intrinsics.throwNpe();
                    }
                    if (object.intValue() > 0) {
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        object = (TextView)object.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtNumberNotify");
                        object.setText((CharSequence)String.valueOf(((DashBoard)view.get(2)).getTong_notification()));
                        view = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView");
                        view = (TextView)view.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView.txtNumberNotify");
                        view.setVisibility(0);
                    }
                } else if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getDerferuploaded())) {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object.setVisibility(0);
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object2 = new StringBuilder();
                    object2.append('(');
                    object2.append(((DashBoard)view.get(3)).getSl());
                    object2.append(')');
                    object.setText((CharSequence)object2.toString());
                    object = ((DashBoard)view.get(3)).getTong_notification();
                    if (object == null) {
                        Intrinsics.throwNpe();
                    }
                    if (object.intValue() > 0) {
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        object = (TextView)object.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtNumberNotify");
                        object.setText((CharSequence)String.valueOf(((DashBoard)view.get(3)).getTong_notification()));
                        view = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView");
                        view = (TextView)view.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView.txtNumberNotify");
                        view.setVisibility(0);
                    }
                } else if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getCancel())) {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object.setVisibility(0);
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object2 = new StringBuilder();
                    object2.append('(');
                    object2.append(((DashBoard)view.get(5)).getSl());
                    object2.append(')');
                    object.setText((CharSequence)object2.toString());
                    object = ((DashBoard)view.get(5)).getTong_notification();
                    if (object == null) {
                        Intrinsics.throwNpe();
                    }
                    if (object.intValue() > 0) {
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        object = (TextView)object.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtNumberNotify");
                        object.setText((CharSequence)String.valueOf(((DashBoard)view.get(5)).getTong_notification()));
                        view = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView");
                        view = (TextView)view.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView.txtNumberNotify");
                        view.setVisibility(0);
                    }
                } else if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getFinishqde())) {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object.setVisibility(0);
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object2 = new StringBuilder();
                    object2.append('(');
                    object2.append(((DashBoard)view.get(4)).getSl());
                    object2.append(')');
                    object.setText((CharSequence)object2.toString());
                    object = ((DashBoard)view.get(4)).getTong_notification();
                    if (object == null) {
                        Intrinsics.throwNpe();
                    }
                    if (object.intValue() > 0) {
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        object = (TextView)object.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtNumberNotify");
                        object.setText((CharSequence)String.valueOf(((DashBoard)view.get(4)).getTong_notification()));
                        view = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView");
                        view = (TextView)view.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView.txtNumberNotify");
                        view.setVisibility(0);
                    }
                } else if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getUpload())) {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object.setVisibility(0);
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtTotalNumber);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtTotalNumber");
                    object2 = new StringBuilder();
                    object2.append('(');
                    object2.append(((DashBoard)view.get(6)).getSl());
                    object2.append(')');
                    object.setText((CharSequence)object2.toString());
                    object = ((DashBoard)view.get(6)).getTong_notification();
                    if (object == null) {
                        Intrinsics.throwNpe();
                    }
                    if (object.intValue() > 0) {
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        object = (TextView)object.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtNumberNotify");
                        object.setText((CharSequence)String.valueOf(((DashBoard)view.get(6)).getTong_notification()));
                        view = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView");
                        view = (TextView)view.findViewById(R.id.txtNumberNotify);
                        Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView.txtNumberNotify");
                        view.setVisibility(0);
                    }
                } else {
                    view = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView");
                    view = (TextView)view.findViewById(R.id.txtNumberNotify);
                    Intrinsics.checkExpressionValueIsNotNull((Object)view, (String)"itemView.txtNumberNotify");
                    view.setVisibility(4);
                }
            }
            this.itemView.setOnClickListener(new View.OnClickListener(this, dashBoard, context){
                final /* synthetic */ Context $context;
                final /* synthetic */ DashBoard $item;
                final /* synthetic */ ViewHolder this$0;
                {
                    this.this$0 = viewHolder;
                    this.$item = dashBoard;
                    this.$context = context;
                }

                public final void onClick(View object) {
                    object = this.$item.getTitle();
                    boolean bl = Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getRemoveqde());
                    DashBoardModel dashBoardModel = null;
                    DashBoardModel dashBoardModel2 = null;
                    if (bl) {
                        dashBoardModel = this.this$0.getModelDashboardModel();
                        if (dashBoardModel != null) {
                            Object object2 = this.this$0.getUserModel();
                            object = dashBoardModel2;
                            if (object2 != null) {
                                object2 = object2.getInfoUser();
                                object = dashBoardModel2;
                                if (object2 != null) {
                                    object = object2.getFullname();
                                }
                            }
                            if (object == null) {
                                Intrinsics.throwNpe();
                            }
                            dashBoardModel.updateViewerNotification((String)object, "MAFC", 0);
                        }
                        ViewHolder.access$showListFragmentQDE(this.this$0, this.$context, "DEFER MAFC");
                        return;
                    }
                    if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getWaitingupload())) {
                        object = this.$context;
                        if (object != null) {
                            object.startActivity(new android.content.Intent(this.$context, ntb.mafc.mobile.activity.ManageDocumentActivity.class).putExtra("iswaitingupload", true));
                            return;
                        }
                    } else {
                        if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getInpropress())) {
                            ViewHolder.access$showListFragmentQDE(this.this$0, this.$context, "IN PROGRESS");
                            return;
                        }
                        if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getRemoveqdesgb())) {
                            dashBoardModel2 = this.this$0.getModelDashboardModel();
                            if (dashBoardModel2 != null) {
                                Object object3 = this.this$0.getUserModel();
                                object = dashBoardModel;
                                if (object3 != null) {
                                    object3 = object3.getInfoUser();
                                    object = dashBoardModel;
                                    if (object3 != null) {
                                        object = object3.getFullname();
                                    }
                                }
                                if (object == null) {
                                    Intrinsics.throwNpe();
                                }
                                dashBoardModel2.updateViewerNotification((String)object, "SAIGON BPO", 0);
                            }
                            ViewHolder.access$showListFragmentQDE(this.this$0, this.$context, "DEFER SGB");
                            return;
                        }
                        if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getUpload())) {
                            ViewHolder.access$showListFragmentQDE(this.this$0, this.$context, "UPLOAD");
                            return;
                        }
                        if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getAll())) {
                            ViewHolder.access$showListFragmentQDE(this.this$0, this.$context, "");
                            return;
                        }
                        if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getOtherstatus())) {
                            ViewHolder.access$showListFragmentQDE(this.this$0, this.$context, "all");
                            return;
                        }
                        if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getDerferuploaded())) {
                            ViewHolder.access$showListFragmentQDE(this.this$0, this.$context, "DEFER UPLOAD");
                            return;
                        }
                        if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getFinishqde())) {
                            ViewHolder.access$showListFragmentQDE(this.this$0, this.$context, "FINISH DE");
                            return;
                        }
                        if (Intrinsics.areEqual((Object)object, (Object)MainApplication.Companion.getLocale().getCancel())) {
                            ViewHolder.access$showListFragmentQDE(this.this$0, this.$context, "CANCEL");
                        }
                    }
                }
            });
        }

        @Nullable
        public final DashBoardModel getModelDashboardModel() {
            return this.modelDashboardModel;
        }

        @Nullable
        public final UserModel getUserModel() {
            return this.userModel;
        }

        public final void setModelDashboardModel(@Nullable DashBoardModel dashBoardModel) {
            this.modelDashboardModel = dashBoardModel;
        }

        public final void setUserModel(@Nullable UserModel userModel) {
            this.userModel = userModel;
        }
    }

}

