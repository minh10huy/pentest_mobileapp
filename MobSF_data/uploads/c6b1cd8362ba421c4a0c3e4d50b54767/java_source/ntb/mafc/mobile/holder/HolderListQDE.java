/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.support.v7.widget.CardView
 *  android.support.v7.widget.RecyclerView
 *  android.support.v7.widget.RecyclerView$ViewHolder
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.widget.TextView
 *  kotlin.Metadata
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.holder.HolderListQDE$bindData
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.NotNull
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.holder;

import android.content.Context;
import android.support.v7.widget.CardView;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.TextView;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.entity.DashBoard;
import ntb.mafc.mobile.entity.Defer;
import ntb.mafc.mobile.holder.HolderListQDE;
import ntb.mafc.mobile.manager.FileManager;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import ntb.mafc.mobile.model.DeferModel;
import ntb.mafc.mobile.model.UserModel;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000D\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\u0018\u00002\u00020\u0001B\u0017\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\b\u0010\u0004\u001a\u0004\u0018\u00010\u0005\u00a2\u0006\u0002\u0010\u0006J\u0010\u0010!\u001a\u00020\"2\b\u0010#\u001a\u0004\u0018\u00010$R\u0013\u0010\u0004\u001a\u0004\u0018\u00010\u0005\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0007\u0010\bR\u001c\u0010\t\u001a\u0004\u0018\u00010\nX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u000b\u0010\f\"\u0004\b\r\u0010\u000eR\u001c\u0010\u000f\u001a\u0004\u0018\u00010\u0010X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0011\u0010\u0012\"\u0004\b\u0013\u0010\u0014R\u001c\u0010\u0015\u001a\u0004\u0018\u00010\u0016X\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0017\u0010\u0018\"\u0004\b\u0019\u0010\u001aR\u001c\u0010\u001b\u001a\u0004\u0018\u00010\u001cX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u001d\u0010\u001e\"\u0004\b\u001f\u0010 \u00a8\u0006%"}, d2={"Lntb/mafc/mobile/holder/HolderListQDE;", "Landroid/support/v7/widget/RecyclerView$ViewHolder;", "itemView", "Landroid/view/View;", "context", "Landroid/content/Context;", "(Landroid/view/View;Landroid/content/Context;)V", "getContext", "()Landroid/content/Context;", "defer", "Lntb/mafc/mobile/entity/Defer;", "getDefer", "()Lntb/mafc/mobile/entity/Defer;", "setDefer", "(Lntb/mafc/mobile/entity/Defer;)V", "deferModel", "Lntb/mafc/mobile/model/DeferModel;", "getDeferModel", "()Lntb/mafc/mobile/model/DeferModel;", "setDeferModel", "(Lntb/mafc/mobile/model/DeferModel;)V", "fileManager", "Lntb/mafc/mobile/manager/FileManager;", "getFileManager", "()Lntb/mafc/mobile/manager/FileManager;", "setFileManager", "(Lntb/mafc/mobile/manager/FileManager;)V", "userModel", "Lntb/mafc/mobile/model/UserModel;", "getUserModel", "()Lntb/mafc/mobile/model/UserModel;", "setUserModel", "(Lntb/mafc/mobile/model/UserModel;)V", "bindData", "", "item", "Lntb/mafc/mobile/entity/DashBoard;", "app_release"}, k=1, mv={1, 1, 11})
public final class HolderListQDE
extends RecyclerView.ViewHolder {
    @Nullable
    private final Context context;
    @Nullable
    private Defer defer;
    @Nullable
    private DeferModel deferModel;
    @Nullable
    private FileManager fileManager;
    @Nullable
    private UserModel userModel;

    public HolderListQDE(@NotNull View view, @Nullable Context context) {
        Intrinsics.checkParameterIsNotNull((Object)view, (String)"itemView");
        super(view);
        this.context = context;
        view = this.context;
        if (view == null) {
            Intrinsics.throwNpe();
        }
        this.fileManager = new FileManager((Context)view);
        this.deferModel = new DeferModel();
        this.userModel = new UserModel();
    }

    public final void bindData(@Nullable DashBoard dashBoard) {
        block20 : {
            Object object;
            block19 : {
                object = this.itemView;
                Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                TextView textView = (TextView)object.findViewById(R.id.txtCustomerName);
                Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"itemView.txtCustomerName");
                Object var3_4 = null;
                object = dashBoard != null ? dashBoard.getCustomer_name() : null;
                textView.setText((CharSequence)object);
                object = this.itemView;
                Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                textView = (TextView)object.findViewById(R.id.txtCustomerID);
                Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"itemView.txtCustomerID");
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append(MainApplication.Companion.getLocale().getCustomerid());
                stringBuilder.append(" : ");
                object = dashBoard != null ? dashBoard.getCustomer_id() : null;
                stringBuilder.append((String)object);
                textView.setText((CharSequence)stringBuilder.toString());
                object = this.itemView;
                Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                textView = (TextView)object.findViewById(R.id.txtDateExpired);
                Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"itemView.txtDateExpired");
                stringBuilder = new StringBuilder();
                stringBuilder.append(MainApplication.Companion.getLocale().getDate());
                stringBuilder.append(" : ");
                object = dashBoard != null ? dashBoard.getLast_time() : null;
                stringBuilder.append((String)object);
                textView.setText((CharSequence)stringBuilder.toString());
                object = this.itemView;
                Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                textView = (TextView)object.findViewById(R.id.txtStatus);
                Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"itemView.txtStatus");
                object = dashBoard != null ? dashBoard.getFlag() : null;
                textView.setText((CharSequence)object);
                object = this.itemView;
                Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                textView = (TextView)object.findViewById(R.id.txtLastStatus);
                Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"itemView.txtLastStatus");
                stringBuilder = new StringBuilder();
                stringBuilder.append(MainApplication.Companion.getLocale().getStatus());
                stringBuilder.append(" : ");
                object = dashBoard != null ? dashBoard.getStatus_f1() : null;
                stringBuilder.append((String)object);
                textView.setText((CharSequence)stringBuilder.toString());
                object = dashBoard != null ? dashBoard.getReason_sgb() : null;
                if (Intrinsics.areEqual((Object)object, (Object)"") ^ true) {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    textView = (TextView)object.findViewById(R.id.txtReason);
                    Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"itemView.txtReason");
                    stringBuilder = new StringBuilder();
                    stringBuilder.append(MainApplication.Companion.getLocale().getReason());
                    stringBuilder.append(" : ");
                    if (dashBoard == null || (object = dashBoard.getReason_sgb()) == null) {
                        object = "";
                    }
                    stringBuilder.append((String)object);
                    textView.setText((CharSequence)stringBuilder.toString());
                } else if (Intrinsics.areEqual((Object)dashBoard.getReason_mafc(), (Object)"") ^ true) {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    textView = (TextView)object.findViewById(R.id.txtReason);
                    Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"itemView.txtReason");
                    stringBuilder = new StringBuilder();
                    stringBuilder.append(MainApplication.Companion.getLocale().getReason());
                    stringBuilder.append(" : ");
                    if (dashBoard == null || (object = dashBoard.getReason_mafc()) == null) {
                        object = "";
                    }
                    stringBuilder.append((String)object);
                    textView.setText((CharSequence)stringBuilder.toString());
                } else {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtReason);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtReason");
                    object.setVisibility(8);
                }
                object = dashBoard != null ? dashBoard.getApp_id() : null;
                if (Intrinsics.areEqual((Object)object, (Object)"") ^ true) {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    textView = (TextView)object.findViewById(R.id.txtIDF1);
                    Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"itemView.txtIDF1");
                    stringBuilder = new StringBuilder();
                    stringBuilder.append(MainApplication.Companion.getLocale().getIdf1());
                    stringBuilder.append(" : ");
                    object = dashBoard != null ? dashBoard.getApp_id() : null;
                    stringBuilder.append((String)object);
                    textView.setText((CharSequence)stringBuilder.toString());
                } else if (Intrinsics.areEqual((Object)dashBoard.getApp_id(), (Object)"")) {
                    object = this.itemView;
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                    object = (TextView)object.findViewById(R.id.txtIDF1);
                    Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtIDF1");
                    object.setVisibility(8);
                }
                object = dashBoard != null ? dashBoard.getFlag() : null;
                if (object == null) break block19;
                switch (object.hashCode()) {
                    default: {
                        break;
                    }
                    case 1980572282: {
                        if (!object.equals("CANCEL")) break;
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        ((CardView)object.findViewById(R.id.containerStatus)).setBackgroundResource(2131034167);
                        break block20;
                    }
                    case 1742323343: {
                        if (!object.equals("DEFER UPLOAD")) break;
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        ((CardView)object.findViewById(R.id.containerStatus)).setBackgroundResource(2131034162);
                        break block20;
                    }
                    case 1595933384: {
                        if (!object.equals("IN PROGRESS")) break;
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        ((CardView)object.findViewById(R.id.containerStatus)).setBackgroundResource(2131034158);
                        break block20;
                    }
                    case 1394900640: {
                        if (!object.equals("DEFER SGB")) break;
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        ((CardView)object.findViewById(R.id.containerStatus)).setBackgroundResource(2131034164);
                        break block20;
                    }
                    case 292062559: {
                        if (!object.equals("DEFER MAFC")) break;
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        textView = (TextView)object.findViewById(R.id.txtReason);
                        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"itemView.txtReason");
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(MainApplication.Companion.getLocale().getReason());
                        stringBuilder.append(" : ");
                        object = var3_4;
                        if (dashBoard != null) {
                            object = dashBoard.getReason_mafc();
                        }
                        stringBuilder.append((String)object);
                        textView.setText((CharSequence)stringBuilder.toString());
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        ((CardView)object.findViewById(R.id.containerStatus)).setBackgroundResource(2131034164);
                        break block20;
                    }
                    case -917056722: {
                        if (!object.equals("FINISH DE")) break;
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        ((CardView)object.findViewById(R.id.containerStatus)).setBackgroundResource(2131034162);
                        break block20;
                    }
                    case -1785265663: {
                        if (!object.equals("UPLOAD")) break;
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        ((CardView)object.findViewById(R.id.containerStatus)).setBackgroundResource(2131034162);
                        object = this.itemView;
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
                        object = (TextView)object.findViewById(R.id.txtLastStatus);
                        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView.txtLastStatus");
                        object.setVisibility(8);
                        break block20;
                    }
                }
            }
            object = this.itemView;
            Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
            ((CardView)object.findViewById(R.id.containerStatus)).setBackgroundResource(2131034158);
        }
        this.itemView.setOnClickListener(new View.OnClickListener(this, dashBoard){
            final /* synthetic */ DashBoard $item;
            final /* synthetic */ HolderListQDE this$0;
            {
                this.this$0 = holderListQDE;
                this.$item = dashBoard;
            }

            public final void onClick(View object) {
                ntb.mafc.mobile.entity.NotificationEntity notificationEntity = new ntb.mafc.mobile.entity.NotificationEntity();
                object = this.$item;
                Context context = null;
                object = object != null ? object.getCustomer_name() : null;
                notificationEntity.setClient_name((String)object);
                object = this.$item;
                object = object != null ? object.getApp_id() : null;
                notificationEntity.setApp_id((String)object);
                object = this.$item;
                object = object != null ? object.getLast_time() : null;
                notificationEntity.setDate_app_creation((String)object);
                object = this.$item;
                object = object != null ? object.getStatus_f1() : null;
                notificationEntity.setLast_cas_status((String)object);
                object = this.$item;
                object = object != null ? object.getReason_sgb() : null;
                notificationEntity.setReason_sgb((String)object);
                object = this.$item;
                object = object != null ? object.getReason_mafc() : null;
                notificationEntity.setReason_mafc((String)object);
                object = this.$item;
                object = object != null ? object.getCustomer_id() : null;
                notificationEntity.setClient_id((String)object);
                object = this.$item;
                object = object != null ? object.getDefer_stt() : null;
                notificationEntity.set_defer((java.lang.Integer)object);
                object = this.$item;
                object = object != null ? object.getCustomer_phone() : null;
                notificationEntity.setCustomer_phone((String)object);
                DashBoard dashBoard = this.$item;
                object = context;
                if (dashBoard != null) {
                    object = dashBoard.getFlag();
                }
                if (object != null && object.hashCode() == -1785265663 && object.equals("UPLOAD")) {
                    return;
                }
                object = new android.content.Intent(this.this$0.getContext(), ntb.mafc.mobile.activity.DetailNotificationActivity.class);
                object.putExtra("datanotifyfromlistqde", (android.os.Parcelable)notificationEntity);
                context = this.this$0.getContext();
                if (context == null) {
                    throw new kotlin.TypeCastException("null cannot be cast to non-null type ntb.mafc.mobile.activity.HomePageActivity");
                }
                ((ntb.mafc.mobile.activity.HomePageActivity)context).startActivityForResult((android.content.Intent)object, 123);
            }
        });
    }

    @Nullable
    public final Context getContext() {
        return this.context;
    }

    @Nullable
    public final Defer getDefer() {
        return this.defer;
    }

    @Nullable
    public final DeferModel getDeferModel() {
        return this.deferModel;
    }

    @Nullable
    public final FileManager getFileManager() {
        return this.fileManager;
    }

    @Nullable
    public final UserModel getUserModel() {
        return this.userModel;
    }

    public final void setDefer(@Nullable Defer defer) {
        this.defer = defer;
    }

    public final void setDeferModel(@Nullable DeferModel deferModel) {
        this.deferModel = deferModel;
    }

    public final void setFileManager(@Nullable FileManager fileManager) {
        this.fileManager = fileManager;
    }

    public final void setUserModel(@Nullable UserModel userModel) {
        this.userModel = userModel;
    }
}

