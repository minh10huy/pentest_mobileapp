/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.DialogInterface
 *  android.content.DialogInterface$OnClickListener
 *  android.content.Intent
 *  android.support.v7.app.AlertDialog
 *  android.support.v7.app.AlertDialog$Builder
 *  android.support.v7.app.AppCompatActivity
 *  android.support.v7.widget.RecyclerView
 *  android.support.v7.widget.RecyclerView$ViewHolder
 *  android.view.ContextMenu
 *  android.view.ContextMenu$ContextMenuInfo
 *  android.view.MenuItem
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.view.View$OnCreateContextMenuListener
 *  android.view.View$OnLongClickListener
 *  android.widget.TextView
 *  android.widget.Toast
 *  kotlin.Metadata
 *  kotlin.TypeCastException
 *  kotlin.jvm.internal.Intrinsics
 *  ntb.mafc.mobile.holder.HolderManageDocument$bindData
 *  ntb.mafc.mobile.holder.HolderManageDocument$showDialog
 *  ntb.mafc.mobile.manager.LocaleManager
 *  ntb.mafc.mobile.manager.MainApplication
 *  ntb.mafc.mobile.manager.MainApplication$Companion
 *  org.jetbrains.annotations.NotNull
 *  org.jetbrains.annotations.Nullable
 */
package ntb.mafc.mobile.holder;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.RecyclerView;
import android.view.ContextMenu;
import android.view.MenuItem;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;
import java.io.File;
import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import kotlin.text.StringsKt;
import ntb.mafc.mobile.R;
import ntb.mafc.mobile.activity.DocumentActivity;
import ntb.mafc.mobile.entity.Defer;
import ntb.mafc.mobile.fragment.DialogFragment;
import ntb.mafc.mobile.holder.HolderManageDocument;
import ntb.mafc.mobile.manager.ConfigManager;
import ntb.mafc.mobile.manager.LocaleManager;
import ntb.mafc.mobile.manager.MainApplication;
import ntb.mafc.mobile.model.DeferModel;
import ntb.mafc.mobile.view.DeferView;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@Metadata(bv={1, 0, 2}, d1={"\u0000h\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u000b\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\u0018\u00002\u00020\u00012\u00020\u00022\u00020\u0003B\r\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u00a2\u0006\u0002\u0010\u0006J\u001a\u0010\u0013\u001a\u00020\u00142\b\u0010\u000b\u001a\u0004\u0018\u00010\f2\b\u0010\u0015\u001a\u0004\u0018\u00010\u0016J\b\u0010\u0017\u001a\u00020\u0014H\u0016J\u0012\u0010\u0018\u001a\u00020\u00142\b\u0010\u0019\u001a\u0004\u0018\u00010\bH\u0016J\b\u0010\u001a\u001a\u00020\u0014H\u0002J(\u0010\u001b\u001a\u00020\u00142\u0006\u0010\u000b\u001a\u00020\f2\u0006\u0010\r\u001a\u00020\b2\u0006\u0010\u001c\u001a\u00020\b2\u0006\u0010\u0007\u001a\u00020\bH\u0002J\u0012\u0010\u001d\u001a\u00020\u00142\b\u0010\u001e\u001a\u0004\u0018\u00010\bH\u0016J\b\u0010\u001f\u001a\u00020\u0014H\u0016J&\u0010 \u001a\u00020\u00142\b\u0010!\u001a\u0004\u0018\u00010\"2\b\u0010#\u001a\u0004\u0018\u00010\u00052\b\u0010$\u001a\u0004\u0018\u00010%H\u0016J\b\u0010&\u001a\u00020\u0014H\u0016J!\u0010'\u001a\u00020\u00142\b\u0010(\u001a\u0004\u0018\u00010)2\b\u0010*\u001a\u0004\u0018\u00010+H\u0016\u00a2\u0006\u0002\u0010,J\u0012\u0010-\u001a\u00020\u00142\b\u0010\u0019\u001a\u0004\u0018\u00010\bH\u0002R\u0010\u0010\u0007\u001a\u0004\u0018\u00010\bX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\t\u001a\u0004\u0018\u00010\nX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\u000b\u001a\u0004\u0018\u00010\fX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\r\u001a\u0004\u0018\u00010\bX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\u000e\u001a\u0004\u0018\u00010\u000fX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\u0010\u001a\u0004\u0018\u00010\u0011X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\u0012\u001a\u0004\u0018\u00010\bX\u0082\u000e\u00a2\u0006\u0002\n\u0000\u00a8\u0006."}, d2={"Lntb/mafc/mobile/holder/HolderManageDocument;", "Landroid/support/v7/widget/RecyclerView$ViewHolder;", "Landroid/view/View$OnCreateContextMenuListener;", "Lntb/mafc/mobile/view/DeferView;", "itemView", "Landroid/view/View;", "(Landroid/view/View;)V", "channel", "", "configManager", "Lntb/mafc/mobile/manager/ConfigManager;", "context", "Landroid/content/Context;", "customerName", "deferModel", "Lntb/mafc/mobile/model/DeferModel;", "dialogFragment", "Lntb/mafc/mobile/fragment/DialogFragment;", "idCustomer", "bindData", "", "item", "Ljava/io/File;", "checkDeferCMNDSGBSuccess", "checkDeferFail", "message", "closeDialog", "createNewDoc", "customerID", "errorDupCMNDSGB", "reason", "idf1CanDefer", "onCreateContextMenu", "menu", "Landroid/view/ContextMenu;", "v", "menuInfo", "Landroid/view/ContextMenu$ContextMenuInfo;", "passCMNDSGB", "showDataDefer", "requestCode", "", "defer", "Lntb/mafc/mobile/entity/Defer;", "(Ljava/lang/Integer;Lntb/mafc/mobile/entity/Defer;)V", "showDialog", "app_release"}, k=1, mv={1, 1, 11})
public final class HolderManageDocument
extends RecyclerView.ViewHolder
implements View.OnCreateContextMenuListener,
DeferView {
    private String channel;
    private ConfigManager configManager;
    private Context context;
    private String customerName;
    private DeferModel deferModel;
    private DialogFragment dialogFragment;
    private String idCustomer;

    public HolderManageDocument(@NotNull View view) {
        Intrinsics.checkParameterIsNotNull((Object)view, (String)"itemView");
        super(view);
        this.configManager = new ConfigManager();
        this.deferModel = new DeferModel();
    }

    public static final /* synthetic */ void access$createNewDoc(HolderManageDocument holderManageDocument, @NotNull Context context, @NotNull String string2, @NotNull String string3, @NotNull String string4) {
        holderManageDocument.createNewDoc(context, string2, string3, string4);
    }

    @Nullable
    public static final /* synthetic */ String access$getChannel$p(HolderManageDocument holderManageDocument) {
        return holderManageDocument.channel;
    }

    @Nullable
    public static final /* synthetic */ ConfigManager access$getConfigManager$p(HolderManageDocument holderManageDocument) {
        return holderManageDocument.configManager;
    }

    @Nullable
    public static final /* synthetic */ String access$getCustomerName$p(HolderManageDocument holderManageDocument) {
        return holderManageDocument.customerName;
    }

    @Nullable
    public static final /* synthetic */ DeferModel access$getDeferModel$p(HolderManageDocument holderManageDocument) {
        return holderManageDocument.deferModel;
    }

    @Nullable
    public static final /* synthetic */ DialogFragment access$getDialogFragment$p(HolderManageDocument holderManageDocument) {
        return holderManageDocument.dialogFragment;
    }

    @Nullable
    public static final /* synthetic */ String access$getIdCustomer$p(HolderManageDocument holderManageDocument) {
        return holderManageDocument.idCustomer;
    }

    public static final /* synthetic */ void access$setChannel$p(HolderManageDocument holderManageDocument, @Nullable String string2) {
        holderManageDocument.channel = string2;
    }

    public static final /* synthetic */ void access$setConfigManager$p(HolderManageDocument holderManageDocument, @Nullable ConfigManager configManager) {
        holderManageDocument.configManager = configManager;
    }

    public static final /* synthetic */ void access$setCustomerName$p(HolderManageDocument holderManageDocument, @Nullable String string2) {
        holderManageDocument.customerName = string2;
    }

    public static final /* synthetic */ void access$setDeferModel$p(HolderManageDocument holderManageDocument, @Nullable DeferModel deferModel) {
        holderManageDocument.deferModel = deferModel;
    }

    public static final /* synthetic */ void access$setDialogFragment$p(HolderManageDocument holderManageDocument, @Nullable DialogFragment dialogFragment) {
        holderManageDocument.dialogFragment = dialogFragment;
    }

    public static final /* synthetic */ void access$setIdCustomer$p(HolderManageDocument holderManageDocument, @Nullable String string2) {
        holderManageDocument.idCustomer = string2;
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    private final void closeDialog() {
        DialogFragment dialogFragment;
        try {
            if (this.dialogFragment == null || (dialogFragment = this.dialogFragment) == null) return;
        }
        catch (Exception exception) {
            return;
        }
        dialogFragment.dismissAllowingStateLoss();
    }

    private final void createNewDoc(Context context, String string2, String string3, String string4) {
        this.closeDialog();
        CharSequence charSequence = new StringBuilder();
        charSequence.append(MainApplication.Companion.getNameFolderNewDocument());
        charSequence.append('/');
        charSequence.append(string2);
        charSequence.append('_');
        charSequence.append(string3);
        charSequence.append('_');
        charSequence.append(string4);
        charSequence = charSequence.toString();
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(string2);
        stringBuilder.append('_');
        stringBuilder.append(string3);
        stringBuilder.append('_');
        stringBuilder.append(string4);
        string4 = stringBuilder.toString();
        if (string2 == null) {
            throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
        }
        int n = ((CharSequence)StringsKt.trim((CharSequence)string2).toString()).length();
        int n2 = 1;
        n = n > 0 ? 1 : 0;
        if (n != 0) {
            if (string3 == null) {
                throw new TypeCastException("null cannot be cast to non-null type kotlin.CharSequence");
            }
            n = ((CharSequence)StringsKt.trim((CharSequence)string3).toString()).length() > 0 ? n2 : 0;
            if (n != 0) {
                context.startActivity(new Intent(context, DocumentActivity.class).putExtra("isdefer", false).putExtra("title", string4).putExtra("nameFolderTwo", (String)charSequence).putExtra("idcustomer", string3).putExtra("customername", string2));
                if (context == null) {
                    throw new TypeCastException("null cannot be cast to non-null type android.support.v7.app.AppCompatActivity");
                }
                ((AppCompatActivity)context).finish();
                return;
            }
        }
        Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)MainApplication.Companion.getLocale().getErroremptyidandcustomername(), (int)0).show();
    }

    private final void showDialog(String string2) {
        Context context = this.context;
        if (context == null) {
            Intrinsics.throwNpe();
        }
        context = new AlertDialog.Builder(context);
        context.setMessage((CharSequence)string2).setTitle((CharSequence)MainApplication.Companion.getLocale().getNotification());
        context.setPositiveButton((CharSequence)MainApplication.Companion.getLocale().getOk(), (DialogInterface.OnClickListener)showDialog.INSTANCE);
        context.create().show();
    }

    public final void bindData(@Nullable Context context, @Nullable File file) {
        this.dialogFragment = new DialogFragment();
        Object object = this.dialogFragment;
        if (object != null) {
            object.setCancelable(false);
        }
        this.context = context;
        object = this.itemView;
        Intrinsics.checkExpressionValueIsNotNull((Object)object, (String)"itemView");
        TextView textView = (TextView)object.findViewById(R.id.txtFolderName);
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"itemView.txtFolderName");
        Object var4_5 = null;
        object = file != null ? file.getName() : null;
        textView.setText((CharSequence)object);
        textView = this.itemView;
        Intrinsics.checkExpressionValueIsNotNull((Object)textView, (String)"itemView");
        object = var4_5;
        if (file != null) {
            object = file.getAbsoluteFile();
        }
        textView.setTag(object);
        this.itemView.setOnCreateContextMenuListener((View.OnCreateContextMenuListener)this);
        this.itemView.setOnLongClickListener(new View.OnLongClickListener(context, file){
            final /* synthetic */ Context $context;
            final /* synthetic */ File $item;
            {
                this.$context = context;
                this.$item = file;
            }

            public final boolean onLongClick(View view) {
                Context context = this.$context;
                if (context == null) {
                    throw new TypeCastException("null cannot be cast to non-null type ntb.mafc.mobile.activity.ManageDocumentActivity");
                }
                ((ntb.mafc.mobile.activity.ManageDocumentActivity)context).getPositionContextMenuSelected(this.$item);
                view.showContextMenu();
                return true;
            }
        });
        this.itemView.setOnClickListener(new View.OnClickListener(this, file, context){
            final /* synthetic */ Context $context;
            final /* synthetic */ File $item;
            final /* synthetic */ HolderManageDocument this$0;
            {
                this.this$0 = holderManageDocument;
                this.$item = file;
                this.$context = context;
            }

            public final void onClick(View object) {
                object = this.$item;
                String string2 = null;
                object = object != null && (object = object.getName()) != null ? StringsKt.split$default((CharSequence)((CharSequence)object), (String[])new String[]{"_"}, (boolean)false, (int)0, (int)6, null) : null;
                if (object != null) {
                    HolderManageDocument.access$setCustomerName$p(this.this$0, (String)object.get(0));
                    HolderManageDocument.access$setIdCustomer$p(this.this$0, (String)object.get(1));
                    HolderManageDocument.access$setChannel$p(this.this$0, (String)object.get(2));
                    object = HolderManageDocument.access$getConfigManager$p(this.this$0);
                    if (object != null && object.isConnectedInternet()) {
                        DialogFragment dialogFragment = HolderManageDocument.access$getDialogFragment$p(this.this$0);
                        if (dialogFragment != null) {
                            Object object2 = this.$context;
                            object = object2;
                            if (!(object2 instanceof ntb.mafc.mobile.activity.ManageDocumentActivity)) {
                                object = null;
                            }
                            object2 = (ntb.mafc.mobile.activity.ManageDocumentActivity)object;
                            object = string2;
                            if (object2 != null) {
                                object = object2.getSupportFragmentManager();
                            }
                            dialogFragment.show((android.support.v4.app.FragmentManager)object, "dialog");
                        }
                        if ((object = HolderManageDocument.access$getDeferModel$p(this.this$0)) != null) {
                            object.checkDupCMNDSGB(this.this$0, HolderManageDocument.access$getIdCustomer$p(this.this$0));
                            return;
                        }
                    } else {
                        HolderManageDocument holderManageDocument = this.this$0;
                        Context context = this.$context;
                        if (context == null) {
                            Intrinsics.throwNpe();
                        }
                        if ((object = HolderManageDocument.access$getCustomerName$p(this.this$0)) == null) {
                            object = "";
                        }
                        string2 = HolderManageDocument.access$getIdCustomer$p(this.this$0);
                        if (string2 == null) {
                            string2 = "";
                        }
                        String string3 = HolderManageDocument.access$getChannel$p(this.this$0);
                        if (string3 == null) {
                            string3 = "";
                        }
                        HolderManageDocument.access$createNewDoc(holderManageDocument, context, (String)object, string2, string3);
                    }
                }
            }
        });
    }

    @Override
    public void checkDeferCMNDSGBSuccess() {
    }

    @Override
    public void checkDeferFail(@Nullable String string2) {
    }

    @Override
    public void errorDupCMNDSGB(@Nullable String string2) {
        this.closeDialog();
        Toast.makeText((Context)MainApplication.Companion.applicationContext(), (CharSequence)string2, (int)0).show();
    }

    @Override
    public void idf1CanDefer() {
    }

    public void onCreateContextMenu(@Nullable ContextMenu contextMenu, @Nullable View view, @Nullable ContextMenu.ContextMenuInfo contextMenuInfo) {
        if (contextMenu != null) {
            contextMenu.add(0, 1111, 0, (CharSequence)MainApplication.Companion.getLocale().getRename());
        }
        if (contextMenu != null) {
            contextMenu.add(0, 2222, 0, (CharSequence)MainApplication.Companion.getLocale().getDelete());
        }
    }

    @Override
    public void passCMNDSGB() {
        String string2;
        Context context = this.context;
        if (context == null) {
            Intrinsics.throwNpe();
        }
        if ((string2 = this.customerName) == null) {
            string2 = "";
        }
        String string3 = this.idCustomer;
        if (string3 == null) {
            string3 = "";
        }
        String string4 = this.channel;
        if (string4 == null) {
            string4 = "";
        }
        this.createNewDoc(context, string2, string3, string4);
    }

    @Override
    public void showDataDefer(@Nullable Integer n, @Nullable Defer defer) {
    }
}

