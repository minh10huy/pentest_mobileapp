/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  kotlin.text.StringsKt
 *  kotlin.text.SystemProperties
 */
package kotlin.text;

import kotlin.Metadata;
import kotlin.internal.InlineOnly;
import kotlin.jvm.internal.Intrinsics;
import kotlin.text.StringsKt;
import kotlin.text.StringsKt__RegexExtensionsKt;
import kotlin.text.SystemProperties;
import org.jetbrains.annotations.NotNull;

@Metadata(bv={1, 0, 2}, d1={"\u0000R\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\f\n\u0002\u0010\r\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0010\u000b\n\u0002\u0010\u0005\n\u0002\u0010\u0019\n\u0002\u0010\u0006\n\u0002\u0010\u0007\n\u0002\u0010\b\n\u0002\u0010\t\n\u0002\u0010\n\n\u0002\u0010\u000e\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0002\u001a\u0012\u0010\u0000\u001a\u00060\u0001j\u0002`\u0002*\u00060\u0001j\u0002`\u0002\u001a\u001d\u0010\u0000\u001a\u00060\u0001j\u0002`\u0002*\u00060\u0001j\u0002`\u00022\u0006\u0010\u0003\u001a\u00020\u0004H\u0087\b\u001a\u001f\u0010\u0000\u001a\u00060\u0001j\u0002`\u0002*\u00060\u0001j\u0002`\u00022\b\u0010\u0003\u001a\u0004\u0018\u00010\u0005H\u0087\b\u001a\u0012\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u0007\u001a\u001f\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\b\u0010\u0003\u001a\u0004\u0018\u00010\bH\u0087\b\u001a\u001f\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\b\u0010\u0003\u001a\u0004\u0018\u00010\tH\u0087\b\u001a\u001d\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\u0006\u0010\u0003\u001a\u00020\nH\u0087\b\u001a\u001d\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\u0006\u0010\u0003\u001a\u00020\u000bH\u0087\b\u001a\u001d\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\u0006\u0010\u0003\u001a\u00020\u0004H\u0087\b\u001a\u001d\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\u0006\u0010\u0003\u001a\u00020\fH\u0087\b\u001a\u001f\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\b\u0010\u0003\u001a\u0004\u0018\u00010\u0005H\u0087\b\u001a\u001d\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\u0006\u0010\u0003\u001a\u00020\rH\u0087\b\u001a\u001d\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\u0006\u0010\u0003\u001a\u00020\u000eH\u0087\b\u001a\u001d\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\u0006\u0010\u0003\u001a\u00020\u000fH\u0087\b\u001a\u001d\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\u0006\u0010\u0003\u001a\u00020\u0010H\u0087\b\u001a\u001d\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\u0006\u0010\u0003\u001a\u00020\u0011H\u0087\b\u001a\u001f\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\b\u0010\u0003\u001a\u0004\u0018\u00010\u0012H\u0087\b\u001a%\u0010\u0000\u001a\u00060\u0006j\u0002`\u0007*\u00060\u0006j\u0002`\u00072\u000e\u0010\u0003\u001a\n\u0018\u00010\u0006j\u0004\u0018\u0001`\u0007H\u0087\b\u001a!\u0010\u0013\u001a\u00020\u0014*\u00060\u0006j\u0002`\u00072\u0006\u0010\u0015\u001a\u00020\u000f2\u0006\u0010\u0003\u001a\u00020\u0004H\u0087\n\u00a8\u0006\u0016"}, d2={"appendln", "Ljava/lang/Appendable;", "Lkotlin/text/Appendable;", "value", "", "", "Ljava/lang/StringBuilder;", "Lkotlin/text/StringBuilder;", "Ljava/lang/StringBuffer;", "", "", "", "", "", "", "", "", "", "", "set", "", "index", "kotlin-stdlib"}, k=5, mv={1, 1, 10}, xi=1, xs="kotlin/text/StringsKt")
class StringsKt__StringBuilderJVMKt
extends StringsKt__RegexExtensionsKt {
    @NotNull
    public static final Appendable appendln(@NotNull Appendable appendable) {
        Intrinsics.checkParameterIsNotNull(appendable, "$receiver");
        appendable = appendable.append(SystemProperties.LINE_SEPARATOR);
        Intrinsics.checkExpressionValueIsNotNull(appendable, "append(SystemProperties.LINE_SEPARATOR)");
        return appendable;
    }

    @InlineOnly
    private static final Appendable appendln(@NotNull Appendable appendable, char c) {
        appendable = appendable.append(c);
        Intrinsics.checkExpressionValueIsNotNull(appendable, "append(value)");
        return StringsKt.appendln((Appendable)appendable);
    }

    @InlineOnly
    private static final Appendable appendln(@NotNull Appendable appendable, CharSequence charSequence) {
        appendable = appendable.append(charSequence);
        Intrinsics.checkExpressionValueIsNotNull(appendable, "append(value)");
        return StringsKt.appendln((Appendable)appendable);
    }

    @NotNull
    public static final StringBuilder appendln(@NotNull StringBuilder stringBuilder) {
        Intrinsics.checkParameterIsNotNull(stringBuilder, "$receiver");
        stringBuilder.append(SystemProperties.LINE_SEPARATOR);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(SystemProperties.LINE_SEPARATOR)");
        return stringBuilder;
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, byte by) {
        stringBuilder.append(by);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value.toInt())");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, char c) {
        stringBuilder.append(c);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, double d) {
        stringBuilder.append(d);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, float f) {
        stringBuilder.append(f);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, int n) {
        stringBuilder.append(n);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, long l) {
        stringBuilder.append(l);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, CharSequence charSequence) {
        stringBuilder.append(charSequence);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, Object object) {
        stringBuilder.append(object);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, String string2) {
        stringBuilder.append(string2);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, StringBuffer stringBuffer) {
        stringBuilder.append(stringBuffer);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, StringBuilder stringBuilder2) {
        stringBuilder.append(stringBuilder2);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, short s) {
        stringBuilder.append(s);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value.toInt())");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, boolean bl) {
        stringBuilder.append(bl);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final StringBuilder appendln(@NotNull StringBuilder stringBuilder, char[] arrc) {
        stringBuilder.append(arrc);
        Intrinsics.checkExpressionValueIsNotNull(stringBuilder, "append(value)");
        return StringsKt.appendln((StringBuilder)stringBuilder);
    }

    @InlineOnly
    private static final void set(@NotNull StringBuilder stringBuilder, int n, char c) {
        Intrinsics.checkParameterIsNotNull(stringBuilder, "$receiver");
        stringBuilder.setCharAt(n, c);
    }
}

