/*
 * Decompiled with CFR 0_132.
 * 
 * Could not load the following classes:
 *  kotlin.Metadata
 *  kotlin.SinceKotlin
 *  kotlin.internal.ContractsDsl
 */
package kotlin.internal.contracts;

import kotlin.Metadata;
import kotlin.SinceKotlin;
import kotlin.internal.ContractsDsl;

@Metadata(bv={1, 0, 2}, d1={"\u0000\f\n\u0002\u0018\u0002\n\u0002\u0010\u0010\n\u0002\b\u0006\b\u0081\u0001\u0018\u00002\b\u0012\u0004\u0012\u00020\u00000\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002j\u0002\b\u0003j\u0002\b\u0004j\u0002\b\u0005j\u0002\b\u0006\u00a8\u0006\u0007"}, d2={"Lkotlin/internal/contracts/InvocationKind;", "", "(Ljava/lang/String;I)V", "AT_MOST_ONCE", "AT_LEAST_ONCE", "EXACTLY_ONCE", "UNKNOWN", "kotlin-stdlib"}, k=1, mv={1, 1, 10})
@SinceKotlin(version="1.2")
@ContractsDsl
public final class InvocationKind
extends Enum<InvocationKind> {
    private static final /* synthetic */ InvocationKind[] $VALUES;
    @ContractsDsl
    public static final /* enum */ InvocationKind AT_LEAST_ONCE;
    @ContractsDsl
    public static final /* enum */ InvocationKind AT_MOST_ONCE;
    @ContractsDsl
    public static final /* enum */ InvocationKind EXACTLY_ONCE;
    @ContractsDsl
    public static final /* enum */ InvocationKind UNKNOWN;

    static {
        InvocationKind invocationKind;
        InvocationKind invocationKind2;
        InvocationKind invocationKind3;
        InvocationKind invocationKind4;
        AT_MOST_ONCE = invocationKind = new InvocationKind();
        AT_LEAST_ONCE = invocationKind2 = new InvocationKind();
        EXACTLY_ONCE = invocationKind4 = new InvocationKind();
        UNKNOWN = invocationKind3 = new InvocationKind();
        $VALUES = new InvocationKind[]{invocationKind, invocationKind2, invocationKind4, invocationKind3};
    }

    protected InvocationKind() {
    }

    public static InvocationKind valueOf(String string2) {
        return Enum.valueOf(InvocationKind.class, string2);
    }

    public static InvocationKind[] values() {
        return (InvocationKind[])$VALUES.clone();
    }
}

