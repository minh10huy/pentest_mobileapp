.class public Lcom/itextpdf/xmp/impl/XMPNormalizer;
.super Ljava/lang/Object;
.source "XMPNormalizer.java"


# static fields
.field private static dcArrayForms:Ljava/util/Map;


# direct methods
.method static constructor <clinit>()V
    .registers 0

    .line 0
    invoke-static {}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->initDCArrays()V

    return-void
.end method

.method private constructor <init>()V
    .registers 1

    .line 0
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method private static compareAliasedSubtrees(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;Z)V
    .registers 7
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/16 v1, 0xcb

    if-eqz v0, :cond_96

    .line 546
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildrenLength()I

    move-result v0

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildrenLength()I

    move-result v2

    if-eq v0, v2, :cond_1c

    goto/16 :goto_96

    :cond_1c
    if-nez p2, :cond_4c

    .line 553
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_44

    .line 554
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p2

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {p2, v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_44

    .line 555
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifierLength()I

    move-result p2

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifierLength()I

    move-result v0

    if-eq p2, v0, :cond_4c

    .line 558
    :cond_44
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Mismatch between alias and base nodes"

    invoke-direct {p0, p1, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    .line 562
    :cond_4c
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p2

    .line 563
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v0

    .line 564
    :goto_54
    invoke-interface {p2}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    const/4 v2, 0x0

    if-eqz v1, :cond_71

    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_71

    .line 566
    invoke-interface {p2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    .line 567
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/xmp/impl/XMPNode;

    .line 568
    invoke-static {v1, v3, v2}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->compareAliasedSubtrees(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;Z)V

    goto :goto_54

    .line 572
    :cond_71
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateQualifier()Ljava/util/Iterator;

    move-result-object p0

    .line 573
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateQualifier()Ljava/util/Iterator;

    move-result-object p1

    .line 574
    :goto_79
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result p2

    if-eqz p2, :cond_95

    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result p2

    if-eqz p2, :cond_95

    .line 576
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Lcom/itextpdf/xmp/impl/XMPNode;

    .line 577
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/xmp/impl/XMPNode;

    .line 578
    invoke-static {p2, v0, v2}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->compareAliasedSubtrees(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;Z)V

    goto :goto_79

    :cond_95
    return-void

    .line 548
    :cond_96
    :goto_96
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Mismatch between alias and base nodes"

    invoke-direct {p0, p1, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0
.end method

.method private static deleteEmptySchemas(Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 2

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p0

    :cond_4
    :goto_4
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1a

    .line 523
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/xmp/impl/XMPNode;

    .line 524
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result v0

    if-nez v0, :cond_4

    .line 526
    invoke-interface {p0}, Ljava/util/Iterator;->remove()V

    goto :goto_4

    :cond_1a
    return-void
.end method

.method private static fixGPSTimeStamp(Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    const-string v0, "exif:GPSTimeStamp"

    const/4 v1, 0x0

    .line 0
    invoke-static {p0, v0, v1}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findChildNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    .line 480
    if-nez v0, :cond_a

    return-void

    :cond_a
    :try_start_a
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/xmp/XMPUtils;->convertToDate(Ljava/lang/String;)Lcom/itextpdf/xmp/XMPDateTime;

    .line 481
    move-result-object v2

    invoke-interface {v2}, Lcom/itextpdf/xmp/XMPDateTime;->getYear()I

    .line 482
    move-result v3

    if-nez v3, :cond_64

    invoke-interface {v2}, Lcom/itextpdf/xmp/XMPDateTime;->getMonth()I

    .line 483
    move-result v3

    if-nez v3, :cond_64

    invoke-interface {v2}, Lcom/itextpdf/xmp/XMPDateTime;->getDay()I

    move-result v3

    if-eqz v3, :cond_25

    .line 488
    goto :goto_64

    :cond_25
    const-string v3, "exif:DateTimeOriginal"

    invoke-static {p0, v3, v1}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findChildNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v3

    if-nez v3, :cond_33

    .line 492
    const-string v3, "exif:DateTimeDigitized"

    invoke-static {p0, v3, v1}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findChildNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    .line 495
    move-result-object v3

    :cond_33
    invoke-virtual {v3}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p0

    invoke-static {p0}, Lcom/itextpdf/xmp/XMPUtils;->convertToDate(Ljava/lang/String;)Lcom/itextpdf/xmp/XMPDateTime;

    .line 496
    move-result-object p0

    invoke-interface {v2}, Lcom/itextpdf/xmp/XMPDateTime;->getCalendar()Ljava/util/Calendar;

    .line 497
    move-result-object v1

    const/4 v2, 0x1

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getYear()I

    move-result v3

    invoke-virtual {v1, v2, v3}, Ljava/util/Calendar;->set(II)V

    .line 498
    const/4 v2, 0x2

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getMonth()I

    move-result v3

    invoke-virtual {v1, v2, v3}, Ljava/util/Calendar;->set(II)V

    .line 499
    const/4 v2, 0x5

    invoke-interface {p0}, Lcom/itextpdf/xmp/XMPDateTime;->getDay()I

    move-result p0

    .line 500
    invoke-virtual {v1, v2, p0}, Ljava/util/Calendar;->set(II)V

    new-instance p0, Lcom/itextpdf/xmp/impl/XMPDateTimeImpl;

    .line 501
    invoke-direct {p0, v1}, Lcom/itextpdf/xmp/impl/XMPDateTimeImpl;-><init>(Ljava/util/Calendar;)V

    invoke-static {p0}, Lcom/itextpdf/xmp/XMPUtils;->convertFromDate(Lcom/itextpdf/xmp/XMPDateTime;)Ljava/lang/String;

    move-result-object p0

    invoke-virtual {v0, p0}, Lcom/itextpdf/xmp/impl/XMPNode;->setValue(Ljava/lang/String;)V
    :try_end_63
    .catch Lcom/itextpdf/xmp/XMPException; {:try_start_a .. :try_end_63} :catch_65

    return-void

    :cond_64
    :goto_64
    return-void

    :catch_65
    return-void
.end method

.method private static initDCArrays()V
    .registers 4

    .line 0
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    sput-object v0, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    .line 690
    new-instance v0, Lcom/itextpdf/xmp/options/PropertyOptions;

    invoke-direct {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;-><init>()V

    const/4 v1, 0x1

    .line 691
    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setArray(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 692
    sget-object v2, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    const-string v3, "dc:contributor"

    invoke-interface {v2, v3, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 693
    sget-object v2, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    const-string v3, "dc:language"

    invoke-interface {v2, v3, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 694
    sget-object v2, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    const-string v3, "dc:publisher"

    invoke-interface {v2, v3, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 695
    sget-object v2, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    const-string v3, "dc:relation"

    invoke-interface {v2, v3, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 696
    sget-object v2, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    const-string v3, "dc:subject"

    invoke-interface {v2, v3, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 697
    sget-object v2, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    const-string v3, "dc:type"

    invoke-interface {v2, v3, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 700
    new-instance v0, Lcom/itextpdf/xmp/options/PropertyOptions;

    invoke-direct {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;-><init>()V

    .line 701
    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setArray(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 702
    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setArrayOrdered(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 703
    sget-object v2, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    const-string v3, "dc:creator"

    invoke-interface {v2, v3, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 704
    sget-object v2, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    const-string v3, "dc:date"

    invoke-interface {v2, v3, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 707
    new-instance v0, Lcom/itextpdf/xmp/options/PropertyOptions;

    invoke-direct {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;-><init>()V

    .line 708
    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setArray(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 709
    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setArrayOrdered(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 710
    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setArrayAlternate(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 711
    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setArrayAltText(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 712
    sget-object v1, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    const-string v2, "dc:description"

    invoke-interface {v1, v2, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 713
    sget-object v1, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    const-string v2, "dc:rights"

    invoke-interface {v1, v2, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 714
    sget-object v1, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    const-string v2, "dc:title"

    invoke-interface {v1, v2, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    return-void
.end method

.method private static migrateAudioCopyright(Lcom/itextpdf/xmp/XMPMeta;Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 15

    .line 0
    :try_start_0
    move-object v0, p0

    check-cast v0, Lcom/itextpdf/xmp/impl/XMPMetaImpl;

    .line 616
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    const-string v1, "http://purl.org/dc/elements/1.1/"

    const/4 v2, 0x1

    .line 615
    invoke-static {v0, v1, v2}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findSchemaNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    .line 618
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v1

    const-string v3, "\n\n"

    const-string v4, "dc:rights"

    const/4 v5, 0x0

    .line 621
    invoke-static {v0, v4, v5}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findChildNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    if-eqz v0, :cond_94

    .line 623
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result v4

    if-nez v4, :cond_24

    goto :goto_94

    :cond_24
    const-string v4, "x-default"

    .line 632
    invoke-static {v0, v4}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->lookupLanguageItem(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;)I

    move-result v4

    if-gez v4, :cond_47

    .line 637
    invoke-virtual {v0, v2}, Lcom/itextpdf/xmp/impl/XMPNode;->getChild(I)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v11

    const-string v7, "http://purl.org/dc/elements/1.1/"

    const-string v8, "rights"

    const-string v9, ""

    const-string v10, "x-default"

    const/4 v12, 0x0

    move-object v6, p0

    .line 638
    invoke-interface/range {v6 .. v12}, Lcom/itextpdf/xmp/XMPMeta;->setLocalizedText(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    const-string p0, "x-default"

    .line 640
    invoke-static {v0, p0}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->lookupLanguageItem(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;)I

    move-result v4

    .line 644
    :cond_47
    invoke-virtual {v0, v4}, Lcom/itextpdf/xmp/impl/XMPNode;->getChild(I)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p0

    .line 645
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v0

    .line 646
    invoke-virtual {v0, v3}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v2

    if-gez v2, :cond_71

    .line 651
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_b0

    .line 655
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->setValue(Ljava/lang/String;)V

    goto :goto_b0

    :cond_71
    add-int/lit8 v2, v2, 0x2

    .line 661
    invoke-virtual {v0, v2}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_b0

    .line 664
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v5, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->setValue(Ljava/lang/String;)V

    goto :goto_b0

    .line 626
    :cond_94
    :goto_94
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v5, "http://purl.org/dc/elements/1.1/"

    const-string v6, "rights"

    const-string v7, ""

    const-string v8, "x-default"

    const/4 v10, 0x0

    move-object v4, p0

    .line 627
    invoke-interface/range {v4 .. v10}, Lcom/itextpdf/xmp/XMPMeta;->setLocalizedText(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    .line 671
    :cond_b0
    :goto_b0
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getParent()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p0

    invoke-virtual {p0, p1}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChild(Lcom/itextpdf/xmp/impl/XMPNode;)V
    :try_end_b7
    .catch Lcom/itextpdf/xmp/XMPException; {:try_start_0 .. :try_end_b7} :catch_b7

    :catch_b7
    return-void
.end method

.method private static moveExplicitAliases(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/options/ParseOptions;)V
    .registers 13
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getHasAliases()Z

    move-result v0

    if-nez v0, :cond_7

    return-void

    :cond_7
    const/4 v0, 0x0

    .line 318
    invoke-virtual {p0, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->setHasAliases(Z)V

    .line 320
    invoke-virtual {p1}, Lcom/itextpdf/xmp/options/ParseOptions;->getStrictAliasing()Z

    move-result p1

    .line 322
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getUnmodifiableChildren()Ljava/util/List;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_17
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_120

    .line 324
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/xmp/impl/XMPNode;

    .line 325
    invoke-virtual {v2}, Lcom/itextpdf/xmp/impl/XMPNode;->getHasAliases()Z

    move-result v3

    if-nez v3, :cond_2a

    goto :goto_17

    .line 330
    :cond_2a
    invoke-virtual {v2}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v3

    :cond_2e
    :goto_2e
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_11b

    .line 332
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/xmp/impl/XMPNode;

    .line 334
    invoke-virtual {v4}, Lcom/itextpdf/xmp/impl/XMPNode;->isAlias()Z

    move-result v5

    if-nez v5, :cond_41

    goto :goto_2e

    .line 339
    :cond_41
    invoke-virtual {v4, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->setAlias(Z)V

    .line 342
    invoke-static {}, Lcom/itextpdf/xmp/XMPMetaFactory;->getSchemaRegistry()Lcom/itextpdf/xmp/XMPSchemaRegistry;

    move-result-object v5

    .line 343
    invoke-virtual {v4}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v6

    invoke-interface {v5, v6}, Lcom/itextpdf/xmp/XMPSchemaRegistry;->findAlias(Ljava/lang/String;)Lcom/itextpdf/xmp/properties/XMPAliasInfo;

    move-result-object v5

    if-eqz v5, :cond_2e

    .line 348
    invoke-interface {v5}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getNamespace()Ljava/lang/String;

    move-result-object v6

    const/4 v7, 0x0

    const/4 v8, 0x1

    .line 347
    invoke-static {p0, v6, v7, v8}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findSchemaNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v6

    .line 349
    invoke-virtual {v6, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->setImplicit(Z)V

    .line 351
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    .line 353
    invoke-interface {v5}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getPrefix()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v5}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getPropName()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    .line 352
    invoke-static {v6, v9, v0}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findChildNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v9

    if-nez v9, :cond_d3

    .line 356
    invoke-interface {v5}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getAliasForm()Lcom/itextpdf/xmp/options/AliasOptions;

    move-result-object v7

    invoke-virtual {v7}, Lcom/itextpdf/xmp/options/AliasOptions;->isSimple()Z

    move-result v7

    if-eqz v7, :cond_a7

    .line 360
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    invoke-interface {v5}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getPrefix()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v5}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getPropName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    .line 361
    invoke-virtual {v4, v5}, Lcom/itextpdf/xmp/impl/XMPNode;->setName(Ljava/lang/String;)V

    .line 362
    invoke-virtual {v6, v4}, Lcom/itextpdf/xmp/impl/XMPNode;->addChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    .line 364
    invoke-interface {v3}, Ljava/util/Iterator;->remove()V

    goto :goto_2e

    .line 370
    :cond_a7
    new-instance v7, Lcom/itextpdf/xmp/impl/XMPNode;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    invoke-interface {v5}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getPrefix()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v5}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getPropName()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    .line 371
    invoke-interface {v5}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getAliasForm()Lcom/itextpdf/xmp/options/AliasOptions;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/xmp/options/AliasOptions;->toPropertyOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v5

    invoke-direct {v7, v8, v5}, Lcom/itextpdf/xmp/impl/XMPNode;-><init>(Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    .line 372
    invoke-virtual {v6, v7}, Lcom/itextpdf/xmp/impl/XMPNode;->addChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    .line 373
    invoke-static {v3, v4, v7}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->transplantArrayItemAlias(Ljava/util/Iterator;Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto/16 :goto_2e

    .line 377
    :cond_d3
    invoke-interface {v5}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getAliasForm()Lcom/itextpdf/xmp/options/AliasOptions;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/xmp/options/AliasOptions;->isSimple()Z

    move-result v6

    if-eqz v6, :cond_e7

    if-eqz p1, :cond_e2

    .line 384
    invoke-static {v4, v9, v8}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->compareAliasedSubtrees(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;Z)V

    .line 387
    :cond_e2
    invoke-interface {v3}, Ljava/util/Iterator;->remove()V

    goto/16 :goto_2e

    .line 396
    :cond_e7
    invoke-interface {v5}, Lcom/itextpdf/xmp/properties/XMPAliasInfo;->getAliasForm()Lcom/itextpdf/xmp/options/AliasOptions;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/xmp/options/AliasOptions;->isArrayAltText()Z

    move-result v5

    if-eqz v5, :cond_100

    const-string v5, "x-default"

    .line 398
    invoke-static {v9, v5}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->lookupLanguageItem(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;)I

    move-result v5

    const/4 v6, -0x1

    if-eq v5, v6, :cond_10a

    .line 402
    invoke-virtual {v9, v5}, Lcom/itextpdf/xmp/impl/XMPNode;->getChild(I)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v5

    move-object v7, v5

    goto :goto_10a

    .line 405
    :cond_100
    invoke-virtual {v9}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result v5

    if-eqz v5, :cond_10a

    .line 407
    invoke-virtual {v9, v8}, Lcom/itextpdf/xmp/impl/XMPNode;->getChild(I)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v7

    :cond_10a
    :goto_10a
    if-nez v7, :cond_111

    .line 412
    invoke-static {v3, v4, v9}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->transplantArrayItemAlias(Ljava/util/Iterator;Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto/16 :goto_2e

    :cond_111
    if-eqz p1, :cond_116

    .line 418
    invoke-static {v4, v7, v8}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->compareAliasedSubtrees(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;Z)V

    .line 421
    :cond_116
    invoke-interface {v3}, Ljava/util/Iterator;->remove()V

    goto/16 :goto_2e

    .line 426
    :cond_11b
    invoke-virtual {v2, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->setHasAliases(Z)V

    goto/16 :goto_17

    :cond_120
    return-void
.end method

.method private static normalizeDCArrays(Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 7
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    const/4 v0, 0x1

    .line 0
    :goto_1
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildrenLength()I

    move-result v1

    if-gt v0, v1, :cond_73

    .line 211
    invoke-virtual {p0, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChild(I)Lcom/itextpdf/xmp/impl/XMPNode;

    .line 213
    move-result-object v1

    sget-object v2, Lcom/itextpdf/xmp/impl/XMPNormalizer;->dcArrayForms:Ljava/util/Map;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-interface {v2, v3}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/xmp/options/PropertyOptions;

    if-nez v2, :cond_1a

    .line 218
    goto :goto_70

    :cond_1a
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/xmp/options/PropertyOptions;->isSimple()Z

    move-result v3

    if-eqz v3, :cond_56

    .line 222
    new-instance v3, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4, v2}, Lcom/itextpdf/xmp/impl/XMPNode;-><init>(Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    const-string v4, "[]"

    .line 223
    invoke-virtual {v1, v4}, Lcom/itextpdf/xmp/impl/XMPNode;->setName(Ljava/lang/String;)V

    .line 224
    invoke-virtual {v3, v1}, Lcom/itextpdf/xmp/impl/XMPNode;->addChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    .line 225
    invoke-virtual {p0, v0, v3}, Lcom/itextpdf/xmp/impl/XMPNode;->replaceChild(ILcom/itextpdf/xmp/impl/XMPNode;)V

    .line 228
    invoke-virtual {v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArrayAltText()Z

    move-result v2

    if-eqz v2, :cond_70

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v2

    invoke-virtual {v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->getHasLanguage()Z

    move-result v2

    if-nez v2, :cond_70

    .line 230
    new-instance v2, Lcom/itextpdf/xmp/impl/XMPNode;

    const-string v3, "xml:lang"

    const-string v4, "x-default"

    const/4 v5, 0x0

    invoke-direct {v2, v3, v4, v5}, Lcom/itextpdf/xmp/impl/XMPNode;-><init>(Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    .line 231
    invoke-virtual {v1, v2}, Lcom/itextpdf/xmp/impl/XMPNode;->addQualifier(Lcom/itextpdf/xmp/impl/XMPNode;)V

    .line 237
    goto :goto_70

    :cond_56
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v3

    const/16 v4, 0x1e00

    const/4 v5, 0x0

    invoke-virtual {v3, v4, v5}, Lcom/itextpdf/xmp/options/PropertyOptions;->setOption(IZ)V

    .line 243
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v3

    invoke-virtual {v3, v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->mergeWith(Lcom/itextpdf/xmp/options/PropertyOptions;)V

    .line 245
    invoke-virtual {v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArrayAltText()Z

    move-result v2

    if-eqz v2, :cond_70

    .line 248
    invoke-static {v1}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->repairAltText(Lcom/itextpdf/xmp/impl/XMPNode;)V

    :cond_70
    :goto_70
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_73
    return-void
.end method

.method static process(Lcom/itextpdf/xmp/impl/XMPMetaImpl;Lcom/itextpdf/xmp/options/ParseOptions;)Lcom/itextpdf/xmp/XMPMeta;
    .registers 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    .line 85
    invoke-static {p0}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->touchUpDataModel(Lcom/itextpdf/xmp/impl/XMPMetaImpl;)V

    .line 86
    invoke-static {v0, p1}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->moveExplicitAliases(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/options/ParseOptions;)V

    .line 88
    invoke-static {v0}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->tweakOldXMP(Lcom/itextpdf/xmp/impl/XMPNode;)V

    .line 90
    invoke-static {v0}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->deleteEmptySchemas(Lcom/itextpdf/xmp/impl/XMPNode;)V

    return-object p0
.end method

.method private static repairAltText(Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    if-eqz p0, :cond_65

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArray()Z

    move-result v0

    if-nez v0, :cond_d

    .line 273
    goto :goto_65

    :cond_d
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setArrayOrdered(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setArrayAlternate(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setArrayAltText(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 275
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object p0

    :cond_21
    :goto_21
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    .line 277
    if-eqz v0, :cond_64

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    .line 278
    check-cast v0, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->isCompositeProperty()Z

    move-result v1

    .line 281
    if-eqz v1, :cond_3b

    invoke-interface {p0}, Ljava/util/Iterator;->remove()V

    .line 283
    goto :goto_21

    :cond_3b
    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->getHasLanguage()Z

    move-result v1

    .line 285
    if-nez v1, :cond_21

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v1

    .line 286
    if-eqz v1, :cond_60

    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v1

    if-nez v1, :cond_52

    .line 294
    goto :goto_60

    :cond_52
    new-instance v1, Lcom/itextpdf/xmp/impl/XMPNode;

    const-string v2, "xml:lang"

    const-string v3, "x-repair"

    const/4 v4, 0x0

    invoke-direct {v1, v2, v3, v4}, Lcom/itextpdf/xmp/impl/XMPNode;-><init>(Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    .line 295
    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/impl/XMPNode;->addQualifier(Lcom/itextpdf/xmp/impl/XMPNode;)V

    .line 289
    goto :goto_21

    :cond_60
    :goto_60
    invoke-interface {p0}, Ljava/util/Iterator;->remove()V

    goto :goto_21

    :cond_64
    return-void

    :cond_65
    :goto_65
    return-void
.end method

.method private static touchUpDataModel(Lcom/itextpdf/xmp/impl/XMPMetaImpl;)V
    .registers 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    const-string v1, "http://purl.org/dc/elements/1.1/"

    const/4 v2, 0x1

    invoke-static {v0, v1, v2}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findSchemaNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    .line 155
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPMetaImpl;->getRoot()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v0

    :cond_12
    :goto_12
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_7a

    .line 157
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    const-string v2, "http://purl.org/dc/elements/1.1/"

    .line 158
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2e

    .line 160
    invoke-static {v1}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->normalizeDCArrays(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto :goto_12

    :cond_2e
    const-string v2, "http://ns.adobe.com/exif/1.0/"

    .line 162
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    const/4 v3, 0x0

    if-eqz v2, :cond_4a

    .line 165
    invoke-static {v1}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->fixGPSTimeStamp(Lcom/itextpdf/xmp/impl/XMPNode;)V

    const-string v2, "exif:UserComment"

    .line 166
    invoke-static {v1, v2, v3}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findChildNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    if-eqz v1, :cond_12

    .line 170
    invoke-static {v1}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->repairAltText(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto :goto_12

    :cond_4a
    const-string v2, "http://ns.adobe.com/xmp/1.0/DynamicMedia/"

    .line 173
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_62

    const-string v2, "xmpDM:copyright"

    .line 177
    invoke-static {v1, v2, v3}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findChildNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    if-eqz v1, :cond_12

    .line 181
    invoke-static {p0, v1}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->migrateAudioCopyright(Lcom/itextpdf/xmp/XMPMeta;Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto :goto_12

    :cond_62
    const-string v2, "http://ns.adobe.com/xap/1.0/rights/"

    .line 184
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_12

    const-string v2, "xmpRights:UsageTerms"

    .line 186
    invoke-static {v1, v2, v3}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findChildNode(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Z)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    if-eqz v1, :cond_12

    .line 190
    invoke-static {v1}, Lcom/itextpdf/xmp/impl/XMPNormalizer;->repairAltText(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto :goto_12

    :cond_7a
    return-void
.end method

.method private static transplantArrayItemAlias(Ljava/util/Iterator;Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 7
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    .line 0
    invoke-virtual {p2}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArrayAltText()Z

    move-result v0

    if-eqz v0, :cond_2b

    .line 443
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->getHasLanguage()Z

    move-result v0

    if-eqz v0, :cond_1e

    .line 445
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string p1, "Alias to x-default already has a language qualifier"

    const/16 p2, 0xcb

    invoke-direct {p0, p1, p2}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    .line 449
    :cond_1e
    new-instance v0, Lcom/itextpdf/xmp/impl/XMPNode;

    const-string v1, "xml:lang"

    const-string v2, "x-default"

    const/4 v3, 0x0

    invoke-direct {v0, v1, v2, v3}, Lcom/itextpdf/xmp/impl/XMPNode;-><init>(Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    .line 450
    invoke-virtual {p1, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->addQualifier(Lcom/itextpdf/xmp/impl/XMPNode;)V

    .line 453
    :cond_2b
    invoke-interface {p0}, Ljava/util/Iterator;->remove()V

    const-string p0, "[]"

    .line 454
    invoke-virtual {p1, p0}, Lcom/itextpdf/xmp/impl/XMPNode;->setName(Ljava/lang/String;)V

    .line 455
    invoke-virtual {p2, p1}, Lcom/itextpdf/xmp/impl/XMPNode;->addChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    return-void
.end method

.method private static tweakOldXMP(Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_68

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v0

    const/16 v1, 0x24

    if-lt v0, v1, :cond_68

    .line 113
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v0

    const-string v1, "uuid:"

    .line 114
    invoke-virtual {v0, v1}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_27

    const/4 v1, 0x5

    .line 116
    invoke-virtual {v0, v1}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v0

    .line 119
    :cond_27
    invoke-static {v0}, Lcom/itextpdf/xmp/impl/Utils;->checkUUIDFormat(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_68

    const-string v1, "http://ns.adobe.com/xap/1.0/mm/"

    const-string v2, "InstanceID"

    .line 122
    invoke-static {v1, v2}, Lcom/itextpdf/xmp/impl/xpath/XMPPathParser;->expandXPath(Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/xmp/impl/xpath/XMPPath;

    move-result-object v1

    const/4 v2, 0x1

    const/4 v3, 0x0

    .line 123
    invoke-static {p0, v1, v2, v3}, Lcom/itextpdf/xmp/impl/XMPNodeUtils;->findNode(Lcom/itextpdf/xmp/impl/XMPNode;Lcom/itextpdf/xmp/impl/xpath/XMPPath;ZLcom/itextpdf/xmp/options/PropertyOptions;)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    if-eqz v1, :cond_5e

    .line 126
    invoke-virtual {v1, v3}, Lcom/itextpdf/xmp/impl/XMPNode;->setOptions(Lcom/itextpdf/xmp/options/PropertyOptions;)V

    .line 127
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "uuid:"

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->setValue(Ljava/lang/String;)V

    .line 128
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->removeChildren()V

    .line 129
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->removeQualifiers()V

    .line 130
    invoke-virtual {p0, v3}, Lcom/itextpdf/xmp/impl/XMPNode;->setName(Ljava/lang/String;)V

    goto :goto_68

    .line 134
    :cond_5e
    new-instance p0, Lcom/itextpdf/xmp/XMPException;

    const-string v0, "Failure creating xmpMM:InstanceID"

    const/16 v1, 0x9

    invoke-direct {p0, v0, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw p0

    :cond_68
    :goto_68
    return-void
.end method
