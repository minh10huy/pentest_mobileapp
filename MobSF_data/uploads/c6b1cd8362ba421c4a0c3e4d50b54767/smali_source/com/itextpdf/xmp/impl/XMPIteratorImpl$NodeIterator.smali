.class Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;
.super Ljava/lang/Object;
.source "XMPIteratorImpl.java"

# interfaces
.implements Ljava/util/Iterator;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lcom/itextpdf/xmp/impl/XMPIteratorImpl;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x2
    name = "NodeIterator"
.end annotation


# static fields
.field protected static final ITERATE_CHILDREN:I = 0x1

.field protected static final ITERATE_NODE:I = 0x0

.field protected static final ITERATE_QUALIFIER:I = 0x2


# instance fields
.field private childrenIterator:Ljava/util/Iterator;

.field private index:I

.field private path:Ljava/lang/String;

.field private returnProperty:Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

.field private state:I

.field private subIterator:Ljava/util/Iterator;

.field final synthetic this$0:Lcom/itextpdf/xmp/impl/XMPIteratorImpl;

.field private visitedNode:Lcom/itextpdf/xmp/impl/XMPNode;


# direct methods
.method public constructor <init>(Lcom/itextpdf/xmp/impl/XMPIteratorImpl;)V
    .registers 3

    .line 0
    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->this$0:Lcom/itextpdf/xmp/impl/XMPIteratorImpl;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 p1, 0x0

    .line 238
    iput p1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->state:I

    const/4 v0, 0x0

    .line 244
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->childrenIterator:Ljava/util/Iterator;

    .line 246
    iput p1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->index:I

    .line 248
    sget-object p1, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->subIterator:Ljava/util/Iterator;

    .line 250
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->returnProperty:Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/xmp/impl/XMPIteratorImpl;Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;I)V
    .registers 8

    .line 0
    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->this$0:Lcom/itextpdf/xmp/impl/XMPIteratorImpl;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, 0x0

    .line 238
    iput v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->state:I

    const/4 v1, 0x0

    .line 244
    iput-object v1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->childrenIterator:Ljava/util/Iterator;

    .line 246
    iput v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->index:I

    .line 248
    sget-object v2, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    invoke-interface {v2}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    iput-object v2, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->subIterator:Ljava/util/Iterator;

    .line 250
    iput-object v1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->returnProperty:Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

    .line 270
    iput-object p2, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->visitedNode:Lcom/itextpdf/xmp/impl/XMPNode;

    .line 271
    iput v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->state:I

    .line 272
    invoke-virtual {p2}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isSchemaNode()Z

    move-result v0

    if-eqz v0, :cond_2c

    .line 274
    invoke-virtual {p2}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl;->setBaseNS(Ljava/lang/String;)V

    .line 278
    :cond_2c
    invoke-virtual {p0, p2, p3, p4}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->accumulatePath(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;I)Ljava/lang/String;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->path:Ljava/lang/String;

    return-void
.end method

.method private iterateChildren(Ljava/util/Iterator;)Z
    .registers 8

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->this$0:Lcom/itextpdf/xmp/impl/XMPIteratorImpl;

    iget-boolean v0, v0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl;->skipSiblings:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_13

    .line 359
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->this$0:Lcom/itextpdf/xmp/impl/XMPIteratorImpl;

    iput-boolean v1, v0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl;->skipSiblings:Z

    .line 360
    sget-object v0, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->subIterator:Ljava/util/Iterator;

    .line 365
    :cond_13
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->subIterator:Ljava/util/Iterator;

    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    const/4 v2, 0x1

    if-nez v0, :cond_3a

    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_3a

    .line 367
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/xmp/impl/XMPNode;

    .line 368
    iget v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->index:I

    add-int/2addr v0, v2

    iput v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->index:I

    .line 369
    new-instance v0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;

    iget-object v3, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->this$0:Lcom/itextpdf/xmp/impl/XMPIteratorImpl;

    iget-object v4, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->path:Ljava/lang/String;

    iget v5, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->index:I

    invoke-direct {v0, v3, p1, v4, v5}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;-><init>(Lcom/itextpdf/xmp/impl/XMPIteratorImpl;Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;I)V

    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->subIterator:Ljava/util/Iterator;

    .line 372
    :cond_3a
    iget-object p1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->subIterator:Ljava/util/Iterator;

    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result p1

    if-eqz p1, :cond_4d

    .line 374
    iget-object p1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->subIterator:Ljava/util/Iterator;

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->returnProperty:Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

    return v2

    :cond_4d
    return v1
.end method


# virtual methods
.method protected accumulatePath(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;I)Ljava/lang/String;
    .registers 7

    .line 0
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getParent()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    if-eqz v0, :cond_7e

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isSchemaNode()Z

    move-result v0

    if-eqz v0, :cond_12

    goto/16 :goto_7e

    .line 430
    :cond_12
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getParent()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArray()Z

    move-result v0

    if-eqz v0, :cond_40

    const-string p1, ""

    .line 433
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "["

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p3}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object p3

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, "]"

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p3

    move-object v2, p3

    move-object p3, p1

    move-object p1, v2

    goto :goto_46

    :cond_40
    const-string p3, "/"

    .line 438
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object p1

    :goto_46
    if-eqz p2, :cond_7d

    .line 442
    invoke-virtual {p2}, Ljava/lang/String;->length()I

    move-result v0

    if-nez v0, :cond_4f

    goto :goto_7d

    .line 446
    :cond_4f
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->this$0:Lcom/itextpdf/xmp/impl/XMPIteratorImpl;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl;->getOptions()Lcom/itextpdf/xmp/options/IteratorOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/IteratorOptions;->isJustLeafname()Z

    move-result v0

    if-eqz v0, :cond_6a

    const-string p2, "?"

    .line 448
    invoke-virtual {p1, p2}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result p2

    if-nez p2, :cond_64

    goto :goto_69

    :cond_64
    const/4 p2, 0x1

    .line 450
    invoke-virtual {p1, p2}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object p1

    :goto_69
    return-object p1

    .line 454
    :cond_6a
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    return-object p1

    :cond_7d
    :goto_7d
    return-object p1

    :cond_7e
    :goto_7e
    const/4 p1, 0x0

    return-object p1
.end method

.method protected createPropertyInfo(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/xmp/properties/XMPPropertyInfo;
    .registers 11

    .line 0
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isSchemaNode()Z

    move-result v0

    if-eqz v0, :cond_d

    const/4 v0, 0x0

    :goto_b
    move-object v6, v0

    goto :goto_12

    :cond_d
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object v0

    goto :goto_b

    .line 471
    :goto_12
    new-instance v0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator$1;

    move-object v1, v0

    move-object v2, p0

    move-object v3, p1

    move-object v4, p2

    move-object v5, p3

    invoke-direct/range {v1 .. v6}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator$1;-><init>(Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    return-object v0
.end method

.method protected getChildrenIterator()Ljava/util/Iterator;
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->childrenIterator:Ljava/util/Iterator;

    return-object v0
.end method

.method protected getReturnProperty()Lcom/itextpdf/xmp/properties/XMPPropertyInfo;
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->returnProperty:Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

    return-object v0
.end method

.method public hasNext()Z
    .registers 3

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->returnProperty:Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

    const/4 v1, 0x1

    if-eqz v0, :cond_6

    return v1

    .line 296
    :cond_6
    iget v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->state:I

    if-nez v0, :cond_f

    .line 298
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->reportNode()Z

    move-result v0

    return v0

    .line 300
    :cond_f
    iget v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->state:I

    if-ne v0, v1, :cond_46

    .line 302
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->childrenIterator:Ljava/util/Iterator;

    if-nez v0, :cond_1f

    .line 304
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->visitedNode:Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->childrenIterator:Ljava/util/Iterator;

    .line 307
    :cond_1f
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->childrenIterator:Ljava/util/Iterator;

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->iterateChildren(Ljava/util/Iterator;)Z

    move-result v0

    if-nez v0, :cond_45

    .line 309
    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->visitedNode:Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->hasQualifier()Z

    move-result v1

    if-eqz v1, :cond_45

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->this$0:Lcom/itextpdf/xmp/impl/XMPIteratorImpl;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl;->getOptions()Lcom/itextpdf/xmp/options/IteratorOptions;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/IteratorOptions;->isOmitQualifiers()Z

    move-result v1

    if-nez v1, :cond_45

    const/4 v0, 0x2

    .line 311
    iput v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->state:I

    const/4 v0, 0x0

    .line 312
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->childrenIterator:Ljava/util/Iterator;

    .line 313
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->hasNext()Z

    move-result v0

    :cond_45
    return v0

    .line 319
    :cond_46
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->childrenIterator:Ljava/util/Iterator;

    if-nez v0, :cond_52

    .line 321
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->visitedNode:Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateQualifier()Ljava/util/Iterator;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->childrenIterator:Ljava/util/Iterator;

    .line 324
    :cond_52
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->childrenIterator:Ljava/util/Iterator;

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->iterateChildren(Ljava/util/Iterator;)Z

    move-result v0

    return v0
.end method

.method public next()Ljava/lang/Object;
    .registers 3

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_c

    .line 395
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->returnProperty:Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

    const/4 v1, 0x0

    .line 396
    iput-object v1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->returnProperty:Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

    return-object v0

    .line 401
    :cond_c
    new-instance v0, Ljava/util/NoSuchElementException;

    const-string v1, "There are no more nodes to return"

    invoke-direct {v0, v1}, Ljava/util/NoSuchElementException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public remove()V
    .registers 2

    .line 0
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    invoke-direct {v0}, Ljava/lang/UnsupportedOperationException;-><init>()V

    throw v0
.end method

.method protected reportNode()Z
    .registers 5

    const/4 v0, 0x1

    .line 0
    iput v0, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->state:I

    .line 336
    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->visitedNode:Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getParent()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    if-eqz v1, :cond_30

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->this$0:Lcom/itextpdf/xmp/impl/XMPIteratorImpl;

    .line 337
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl;->getOptions()Lcom/itextpdf/xmp/options/IteratorOptions;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/IteratorOptions;->isJustLeafnodes()Z

    move-result v1

    if-eqz v1, :cond_1f

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->visitedNode:Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result v1

    if-nez v1, :cond_30

    .line 339
    :cond_1f
    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->visitedNode:Lcom/itextpdf/xmp/impl/XMPNode;

    iget-object v2, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->this$0:Lcom/itextpdf/xmp/impl/XMPIteratorImpl;

    invoke-virtual {v2}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl;->getBaseNS()Ljava/lang/String;

    move-result-object v2

    iget-object v3, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->path:Ljava/lang/String;

    invoke-virtual {p0, v1, v2, v3}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->createPropertyInfo(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/lang/String;Ljava/lang/String;)Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

    move-result-object v1

    iput-object v1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->returnProperty:Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

    .line 344
    return v0

    :cond_30
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->hasNext()Z

    move-result v0

    return v0
.end method

.method protected setChildrenIterator(Ljava/util/Iterator;)V
    .registers 2

    .line 0
    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->childrenIterator:Ljava/util/Iterator;

    return-void
.end method

.method protected setReturnProperty(Lcom/itextpdf/xmp/properties/XMPPropertyInfo;)V
    .registers 2

    .line 0
    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPIteratorImpl$NodeIterator;->returnProperty:Lcom/itextpdf/xmp/properties/XMPPropertyInfo;

    return-void
.end method
