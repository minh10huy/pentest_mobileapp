.class Lcom/itextpdf/xmp/impl/XMPNode;
.super Ljava/lang/Object;
.source "XMPNode.java"

# interfaces
.implements Ljava/lang/Comparable;


# static fields
.field static final synthetic $assertionsDisabled:Z


# instance fields
.field private alias:Z

.field private children:Ljava/util/List;

.field private hasAliases:Z

.field private hasValueChild:Z

.field private implicit:Z

.field private name:Ljava/lang/String;

.field private options:Lcom/itextpdf/xmp/options/PropertyOptions;

.field private parent:Lcom/itextpdf/xmp/impl/XMPNode;

.field private qualifier:Ljava/util/List;

.field private value:Ljava/lang/String;


# direct methods
.method static constructor <clinit>()V
    .registers 0

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V
    .registers 4

    const/4 v0, 0x0

    .line 0
    invoke-direct {p0, p1, v0, p2}, Lcom/itextpdf/xmp/impl/XMPNode;-><init>(Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V
    .registers 5

    .line 0
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, 0x0

    .line 68
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    .line 70
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    .line 72
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->options:Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 96
    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    .line 97
    iput-object p2, p0, Lcom/itextpdf/xmp/impl/XMPNode;->value:Ljava/lang/String;

    .line 98
    iput-object p3, p0, Lcom/itextpdf/xmp/impl/XMPNode;->options:Lcom/itextpdf/xmp/options/PropertyOptions;

    return-void
.end method

.method private assertChildNotExisting(Ljava/lang/String;)V
    .registers 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    const-string v0, "[]"

    .line 0
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 921
    if-nez v0, :cond_2c

    invoke-virtual {p0, p1}, Lcom/itextpdf/xmp/impl/XMPNode;->findChildByName(Ljava/lang/String;)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    .line 923
    if-eqz v0, :cond_2c

    new-instance v0, Lcom/itextpdf/xmp/XMPException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Duplicate property or field node \'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "\'"

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const/16 v1, 0xcb

    invoke-direct {v0, p1, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw v0

    :cond_2c
    return-void
.end method

.method private assertQualifierNotExisting(Ljava/lang/String;)V
    .registers 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    const-string v0, "[]"

    .line 0
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 937
    if-nez v0, :cond_2c

    invoke-virtual {p0, p1}, Lcom/itextpdf/xmp/impl/XMPNode;->findQualifierByName(Ljava/lang/String;)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v0

    .line 939
    if-eqz v0, :cond_2c

    new-instance v0, Lcom/itextpdf/xmp/XMPException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Duplicate \'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "\' qualifier"

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const/16 v1, 0xcb

    invoke-direct {v0, p1, v1}, Lcom/itextpdf/xmp/XMPException;-><init>(Ljava/lang/String;I)V

    throw v0

    :cond_2c
    return-void
.end method

.method private dumpNode(Ljava/lang/StringBuffer;ZII)V
    .registers 9

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_2
    if-ge v1, p3, :cond_c

    const/16 v2, 0x9

    .line 0
    .line 732
    invoke-virtual {p1, v2}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 734
    :cond_c
    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->parent:Lcom/itextpdf/xmp/impl/XMPNode;

    const/16 v2, 0x29

    if-eqz v1, :cond_49

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->isQualifier()Z

    .line 736
    move-result v1

    if-eqz v1, :cond_27

    .line 737
    const/16 p4, 0x3f

    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 739
    iget-object p4, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    goto :goto_67

    :cond_27
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getParent()Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArray()Z

    .line 741
    move-result v1

    if-eqz v1, :cond_43

    .line 742
    const/16 v1, 0x5b

    invoke-virtual {p1, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 743
    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    .line 747
    const/16 p4, 0x5d

    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    goto :goto_67

    :cond_43
    iget-object p4, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    .line 753
    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 754
    goto :goto_67

    :cond_49
    const-string p4, "ROOT NODE"

    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    iget-object p4, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    if-eqz p4, :cond_67

    iget-object p4, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    invoke-virtual {p4}, Ljava/lang/String;->length()I

    .line 757
    move-result p4

    if-lez p4, :cond_67

    .line 758
    const-string p4, " ("

    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 759
    iget-object p4, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    .line 763
    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    invoke-virtual {p1, v2}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    :cond_67
    :goto_67
    iget-object p4, p0, Lcom/itextpdf/xmp/impl/XMPNode;->value:Ljava/lang/String;

    if-eqz p4, :cond_82

    iget-object p4, p0, Lcom/itextpdf/xmp/impl/XMPNode;->value:Ljava/lang/String;

    invoke-virtual {p4}, Ljava/lang/String;->length()I

    .line 765
    move-result p4

    if-lez p4, :cond_82

    .line 766
    const-string p4, " = \""

    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    iget-object p4, p0, Lcom/itextpdf/xmp/impl/XMPNode;->value:Ljava/lang/String;

    .line 767
    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 771
    const/16 p4, 0x22

    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    :cond_82
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p4

    const/4 v1, -0x1

    invoke-virtual {p4, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->containsOneOf(I)Z

    .line 773
    move-result p4

    if-eqz p4, :cond_b0

    .line 774
    const-string p4, "\t("

    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p4

    invoke-virtual {p4}, Lcom/itextpdf/xmp/options/PropertyOptions;->toString()Ljava/lang/String;

    .line 775
    move-result-object p4

    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 776
    const-string p4, " : "

    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object p4

    invoke-virtual {p4}, Lcom/itextpdf/xmp/options/PropertyOptions;->getOptionsString()Ljava/lang/String;

    .line 777
    move-result-object p4

    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 780
    invoke-virtual {p1, v2}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    :cond_b0
    const/16 p4, 0xa

    .line 783
    invoke-virtual {p1, p4}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    if-eqz p2, :cond_102

    .line 785
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->hasQualifier()Z

    move-result p4

    .line 786
    if-eqz p4, :cond_102

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier()Ljava/util/List;

    move-result-object p4

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifierLength()I

    move-result v1

    new-array v1, v1, [Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-interface {p4, v1}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    .line 788
    move-result-object p4

    check-cast p4, [Lcom/itextpdf/xmp/impl/XMPNode;

    const/4 v1, 0x0

    :goto_ce
    array-length v2, p4

    .line 789
    if-le v2, v1, :cond_f0

    const-string v2, "xml:lang"

    aget-object v3, p4, v1

    invoke-virtual {v3}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    .line 790
    if-nez v2, :cond_ed

    const-string v2, "rdf:type"

    aget-object v3, p4, v1

    invoke-virtual {v3}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 795
    move-result v2

    if-eqz v2, :cond_f0

    :cond_ed
    add-int/lit8 v1, v1, 0x1

    .line 796
    goto :goto_ce

    :cond_f0
    array-length v2, p4

    invoke-static {p4, v1, v2}, Ljava/util/Arrays;->sort([Ljava/lang/Object;II)V

    .line 798
    const/4 v1, 0x0

    :goto_f5
    array-length v2, p4

    if-ge v1, v2, :cond_102

    .line 799
    aget-object v2, p4, v1

    add-int/lit8 v3, p3, 0x2

    add-int/lit8 v1, v1, 0x1

    .line 804
    invoke-direct {v2, p1, p2, v3, v1}, Lcom/itextpdf/xmp/impl/XMPNode;->dumpNode(Ljava/lang/StringBuffer;ZII)V

    goto :goto_f5

    :cond_102
    if-eqz p2, :cond_134

    .line 806
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result p4

    .line 807
    if-eqz p4, :cond_134

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildren()Ljava/util/List;

    move-result-object p4

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildrenLength()I

    move-result v1

    new-array v1, v1, [Lcom/itextpdf/xmp/impl/XMPNode;

    .line 808
    invoke-interface {p4, v1}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object p4

    check-cast p4, [Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v1

    .line 810
    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArray()Z

    .line 812
    move-result v1

    if-nez v1, :cond_127

    .line 814
    invoke-static {p4}, Ljava/util/Arrays;->sort([Ljava/lang/Object;)V

    :cond_127
    :goto_127
    array-length v1, p4

    if-ge v0, v1, :cond_134

    .line 815
    aget-object v1, p4, v0

    add-int/lit8 v2, p3, 0x1

    add-int/lit8 v0, v0, 0x1

    invoke-direct {v1, p1, p2, v2, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->dumpNode(Ljava/lang/StringBuffer;ZII)V

    goto :goto_127

    :cond_134
    return-void
.end method

.method private find(Ljava/util/List;Ljava/lang/String;)Lcom/itextpdf/xmp/impl/XMPNode;
    .registers 5

    if-eqz p1, :cond_1d

    .line 0
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :cond_6
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    .line 902
    if-eqz v0, :cond_1d

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    .line 903
    check-cast v0, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v0}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_6

    return-object v0

    :cond_1d
    const/4 p1, 0x0

    return-object p1
.end method

.method private getChildren()Ljava/util/List;
    .registers 3

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    if-nez v0, :cond_c

    .line 848
    new-instance v0, Ljava/util/ArrayList;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    .line 850
    :cond_c
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    return-object v0
.end method

.method private getQualifier()Ljava/util/List;
    .registers 3

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    if-nez v0, :cond_c

    .line 870
    new-instance v0, Ljava/util/ArrayList;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    .line 872
    :cond_c
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    return-object v0
.end method

.method private isLanguageNode()Z
    .registers 3

    const-string v0, "xml:lang"

    .line 0
    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    return v0
.end method

.method private isTypeNode()Z
    .registers 3

    const-string v0, "rdf:type"

    .line 0
    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    return v0
.end method


# virtual methods
.method public addChild(ILcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    .line 0
    invoke-virtual {p2}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->assertChildNotExisting(Ljava/lang/String;)V

    .line 171
    invoke-virtual {p2, p0}, Lcom/itextpdf/xmp/impl/XMPNode;->setParent(Lcom/itextpdf/xmp/impl/XMPNode;)V

    .line 172
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildren()Ljava/util/List;

    move-result-object v0

    add-int/lit8 p1, p1, -0x1

    invoke-interface {v0, p1, p2}, Ljava/util/List;->add(ILjava/lang/Object;)V

    return-void
.end method

.method public addChild(Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    .line 0
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->assertChildNotExisting(Ljava/lang/String;)V

    .line 155
    invoke-virtual {p1, p0}, Lcom/itextpdf/xmp/impl/XMPNode;->setParent(Lcom/itextpdf/xmp/impl/XMPNode;)V

    .line 156
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildren()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0, p1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    return-void
.end method

.method public addQualifier(Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/xmp/XMPException;
        }
    .end annotation

    .line 0
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/itextpdf/xmp/impl/XMPNode;->assertQualifierNotExisting(Ljava/lang/String;)V

    .line 286
    invoke-virtual {p1, p0}, Lcom/itextpdf/xmp/impl/XMPNode;->setParent(Lcom/itextpdf/xmp/impl/XMPNode;)V

    .line 287
    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setQualifier(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 288
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setHasQualifiers(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 291
    invoke-direct {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->isLanguageNode()Z

    move-result v0

    if-eqz v0, :cond_2d

    .line 294
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->options:Lcom/itextpdf/xmp/options/PropertyOptions;

    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setHasLanguage(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 295
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier()Ljava/util/List;

    move-result-object v0

    const/4 v1, 0x0

    invoke-interface {v0, v1, p1}, Ljava/util/List;->add(ILjava/lang/Object;)V

    goto :goto_4d

    .line 297
    :cond_2d
    invoke-direct {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->isTypeNode()Z

    move-result v0

    if-eqz v0, :cond_46

    .line 300
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->options:Lcom/itextpdf/xmp/options/PropertyOptions;

    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setHasType(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 301
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier()Ljava/util/List;

    move-result-object v0

    iget-object v1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->options:Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 302
    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->getHasLanguage()Z

    move-result v1

    .line 301
    invoke-interface {v0, v1, p1}, Ljava/util/List;->add(ILjava/lang/Object;)V

    goto :goto_4d

    .line 308
    :cond_46
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0, p1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    :goto_4d
    return-void
.end method

.method protected cleanupChildren()V
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_b

    const/4 v0, 0x0

    .line 222
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    :cond_b
    return-void
.end method

.method public clear()V
    .registers 2

    const/4 v0, 0x0

    .line 0
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->options:Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 120
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    .line 121
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->value:Ljava/lang/String;

    .line 122
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    .line 123
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    return-void
.end method

.method public clone()Ljava/lang/Object;
    .registers 5

    .line 0
    :try_start_0
    new-instance v0, Lcom/itextpdf/xmp/options/PropertyOptions;

    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->getOptions()I

    move-result v1

    invoke-direct {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;-><init>(I)V
    :try_end_d
    .catch Lcom/itextpdf/xmp/XMPException; {:try_start_0 .. :try_end_d} :catch_e

    goto :goto_13

    .line 453
    :catch_e
    new-instance v0, Lcom/itextpdf/xmp/options/PropertyOptions;

    invoke-direct {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;-><init>()V

    .line 456
    :goto_13
    new-instance v1, Lcom/itextpdf/xmp/impl/XMPNode;

    iget-object v2, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    iget-object v3, p0, Lcom/itextpdf/xmp/impl/XMPNode;->value:Ljava/lang/String;

    invoke-direct {v1, v2, v3, v0}, Lcom/itextpdf/xmp/impl/XMPNode;-><init>(Ljava/lang/String;Ljava/lang/String;Lcom/itextpdf/xmp/options/PropertyOptions;)V

    .line 457
    invoke-virtual {p0, v1}, Lcom/itextpdf/xmp/impl/XMPNode;->cloneSubtree(Lcom/itextpdf/xmp/impl/XMPNode;)V

    return-object v1
.end method

.method public cloneSubtree(Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 4

    .line 0
    :try_start_0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v0

    :goto_4
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_1a

    .line 475
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    .line 476
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {p1, v1}, Lcom/itextpdf/xmp/impl/XMPNode;->addChild(Lcom/itextpdf/xmp/impl/XMPNode;)V

    goto :goto_4

    .line 479
    :cond_1a
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateQualifier()Ljava/util/Iterator;

    move-result-object v0

    :goto_1e
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_34

    .line 481
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    .line 482
    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {p1, v1}, Lcom/itextpdf/xmp/impl/XMPNode;->addQualifier(Lcom/itextpdf/xmp/impl/XMPNode;)V
    :try_end_33
    .catch Lcom/itextpdf/xmp/XMPException; {:try_start_0 .. :try_end_33} :catch_34

    goto :goto_1e

    :catch_34
    :cond_34
    return-void
.end method

.method public compareTo(Ljava/lang/Object;)I
    .registers 3

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isSchemaNode()Z

    move-result v0

    if-eqz v0, :cond_17

    .line 514
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->value:Ljava/lang/String;

    check-cast p1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getValue()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/lang/String;->compareTo(Ljava/lang/String;)I

    move-result p1

    return p1

    .line 518
    :cond_17
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    check-cast p1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/lang/String;->compareTo(Ljava/lang/String;)I

    move-result p1

    return p1
.end method

.method public dumpNode(Z)Ljava/lang/String;
    .registers 4

    .line 0
    new-instance v0, Ljava/lang/StringBuffer;

    const/16 v1, 0x200

    invoke-direct {v0, v1}, Ljava/lang/StringBuffer;-><init>(I)V

    const/4 v1, 0x0

    .line 502
    invoke-direct {p0, v0, p1, v1, v1}, Lcom/itextpdf/xmp/impl/XMPNode;->dumpNode(Ljava/lang/StringBuffer;ZII)V

    .line 503
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method

.method public findChildByName(Ljava/lang/String;)Lcom/itextpdf/xmp/impl/XMPNode;
    .registers 3

    .line 0
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildren()Ljava/util/List;

    move-result-object v0

    invoke-direct {p0, v0, p1}, Lcom/itextpdf/xmp/impl/XMPNode;->find(Ljava/util/List;Ljava/lang/String;)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p1

    return-object p1
.end method

.method public findQualifierByName(Ljava/lang/String;)Lcom/itextpdf/xmp/impl/XMPNode;
    .registers 3

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    invoke-direct {p0, v0, p1}, Lcom/itextpdf/xmp/impl/XMPNode;->find(Ljava/util/List;Ljava/lang/String;)Lcom/itextpdf/xmp/impl/XMPNode;

    move-result-object p1

    return-object p1
.end method

.method public getChild(I)Lcom/itextpdf/xmp/impl/XMPNode;
    .registers 3

    .line 0
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildren()Ljava/util/List;

    move-result-object v0

    add-int/lit8 p1, p1, -0x1

    invoke-interface {v0, p1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/xmp/impl/XMPNode;

    return-object p1
.end method

.method public getChildrenLength()I
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    if-eqz v0, :cond_b

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    .line 242
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    goto :goto_c

    :cond_b
    const/4 v0, 0x0

    :goto_c
    return v0
.end method

.method public getHasAliases()Z
    .registers 2

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->hasAliases:Z

    return v0
.end method

.method public getHasValueChild()Z
    .registers 2

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->hasValueChild:Z

    return v0
.end method

.method public getName()Ljava/lang/String;
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    return-object v0
.end method

.method public getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->options:Lcom/itextpdf/xmp/options/PropertyOptions;

    if-nez v0, :cond_b

    .line 566
    new-instance v0, Lcom/itextpdf/xmp/options/PropertyOptions;

    invoke-direct {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->options:Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 568
    :cond_b
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->options:Lcom/itextpdf/xmp/options/PropertyOptions;

    return-object v0
.end method

.method public getParent()Lcom/itextpdf/xmp/impl/XMPNode;
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->parent:Lcom/itextpdf/xmp/impl/XMPNode;

    return-object v0
.end method

.method public getQualifier(I)Lcom/itextpdf/xmp/impl/XMPNode;
    .registers 3

    .line 0
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier()Ljava/util/List;

    move-result-object v0

    add-int/lit8 p1, p1, -0x1

    invoke-interface {v0, p1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/xmp/impl/XMPNode;

    return-object p1
.end method

.method public getQualifierLength()I
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    if-eqz v0, :cond_b

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    .line 273
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    goto :goto_c

    :cond_b
    const/4 v0, 0x0

    :goto_c
    return v0
.end method

.method public getUnmodifiableChildren()Ljava/util/List;
    .registers 3

    .line 0
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildren()Ljava/util/List;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    invoke-static {v0}, Ljava/util/Collections;->unmodifiableList(Ljava/util/List;)Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public getValue()Ljava/lang/String;
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->value:Ljava/lang/String;

    return-object v0
.end method

.method public hasChildren()Z
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    if-eqz v0, :cond_e

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    if-lez v0, :cond_e

    const/4 v0, 0x1

    goto :goto_f

    :cond_e
    const/4 v0, 0x0

    :goto_f
    return v0
.end method

.method public hasQualifier()Z
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    if-eqz v0, :cond_e

    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    if-lez v0, :cond_e

    const/4 v0, 0x1

    goto :goto_f

    :cond_e
    const/4 v0, 0x0

    :goto_f
    return v0
.end method

.method public isAlias()Z
    .registers 2

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->alias:Z

    return v0
.end method

.method public isImplicit()Z
    .registers 2

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->implicit:Z

    return v0
.end method

.method public iterateChildren()Ljava/util/Iterator;
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    if-eqz v0, :cond_d

    .line 383
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildren()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    return-object v0

    .line 387
    :cond_d
    sget-object v0, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->listIterator()Ljava/util/ListIterator;

    move-result-object v0

    return-object v0
.end method

.method public iterateQualifier()Ljava/util/Iterator;
    .registers 3

    .line 0
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    if-eqz v0, :cond_12

    .line 409
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 411
    new-instance v1, Lcom/itextpdf/xmp/impl/XMPNode$1;

    invoke-direct {v1, p0, v0}, Lcom/itextpdf/xmp/impl/XMPNode$1;-><init>(Lcom/itextpdf/xmp/impl/XMPNode;Ljava/util/Iterator;)V

    return-object v1

    .line 433
    :cond_12
    sget-object v0, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    return-object v0
.end method

.method public removeChild(I)V
    .registers 3

    .line 0
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildren()Ljava/util/List;

    move-result-object v0

    add-int/lit8 p1, p1, -0x1

    invoke-interface {v0, p1}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 196
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->cleanupChildren()V

    return-void
.end method

.method public removeChild(Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 3

    .line 0
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildren()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0, p1}, Ljava/util/List;->remove(Ljava/lang/Object;)Z

    .line 209
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->cleanupChildren()V

    return-void
.end method

.method public removeChildren()V
    .registers 2

    const/4 v0, 0x0

    .line 0
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    return-void
.end method

.method public removeQualifier(Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 5

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    .line 320
    invoke-direct {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->isLanguageNode()Z

    move-result v1

    const/4 v2, 0x0

    if-eqz v1, :cond_f

    .line 323
    invoke-virtual {v0, v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->setHasLanguage(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    goto :goto_18

    .line 325
    :cond_f
    invoke-direct {p1}, Lcom/itextpdf/xmp/impl/XMPNode;->isTypeNode()Z

    move-result v1

    if-eqz v1, :cond_18

    .line 328
    invoke-virtual {v0, v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->setHasType(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 331
    :cond_18
    :goto_18
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier()Ljava/util/List;

    move-result-object v1

    invoke-interface {v1, p1}, Ljava/util/List;->remove(Ljava/lang/Object;)Z

    .line 332
    iget-object p1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    invoke-interface {p1}, Ljava/util/List;->isEmpty()Z

    move-result p1

    if-eqz p1, :cond_2d

    .line 334
    invoke-virtual {v0, v2}, Lcom/itextpdf/xmp/options/PropertyOptions;->setHasQualifiers(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    const/4 p1, 0x0

    .line 335
    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    :cond_2d
    return-void
.end method

.method public removeQualifiers()V
    .registers 3

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    const/4 v1, 0x0

    .line 348
    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setHasQualifiers(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 349
    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setHasLanguage(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    .line 350
    invoke-virtual {v0, v1}, Lcom/itextpdf/xmp/options/PropertyOptions;->setHasType(Z)Lcom/itextpdf/xmp/options/PropertyOptions;

    const/4 v0, 0x0

    .line 351
    iput-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    return-void
.end method

.method public replaceChild(ILcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 4

    .line 0
    invoke-virtual {p2, p0}, Lcom/itextpdf/xmp/impl/XMPNode;->setParent(Lcom/itextpdf/xmp/impl/XMPNode;)V

    .line 185
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getChildren()Ljava/util/List;

    move-result-object v0

    add-int/lit8 p1, p1, -0x1

    invoke-interface {v0, p1, p2}, Ljava/util/List;->set(ILjava/lang/Object;)Ljava/lang/Object;

    return-void
.end method

.method public setAlias(Z)V
    .registers 2

    .line 0
    iput-boolean p1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->alias:Z

    return-void
.end method

.method public setHasAliases(Z)V
    .registers 2

    .line 0
    iput-boolean p1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->hasAliases:Z

    return-void
.end method

.method public setHasValueChild(Z)V
    .registers 2

    .line 0
    iput-boolean p1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->hasValueChild:Z

    return-void
.end method

.method public setImplicit(Z)V
    .registers 2

    .line 0
    iput-boolean p1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->implicit:Z

    return-void
.end method

.method public setName(Ljava/lang/String;)V
    .registers 2

    .line 0
    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->name:Ljava/lang/String;

    return-void
.end method

.method public setOptions(Lcom/itextpdf/xmp/options/PropertyOptions;)V
    .registers 2

    .line 0
    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->options:Lcom/itextpdf/xmp/options/PropertyOptions;

    return-void
.end method

.method protected setParent(Lcom/itextpdf/xmp/impl/XMPNode;)V
    .registers 2

    .line 0
    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->parent:Lcom/itextpdf/xmp/impl/XMPNode;

    return-void
.end method

.method public setValue(Ljava/lang/String;)V
    .registers 2

    .line 0
    iput-object p1, p0, Lcom/itextpdf/xmp/impl/XMPNode;->value:Ljava/lang/String;

    return-void
.end method

.method public sort()V
    .registers 6

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->hasQualifier()Z

    move-result v0

    if-eqz v0, :cond_5c

    .line 671
    invoke-direct {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifier()Ljava/util/List;

    move-result-object v0

    .line 672
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getQualifierLength()I

    move-result v1

    new-array v1, v1, [Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-interface {v0, v1}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lcom/itextpdf/xmp/impl/XMPNode;

    const/4 v1, 0x0

    const/4 v2, 0x0

    .line 674
    :goto_18
    array-length v3, v0

    if-le v3, v2, :cond_3f

    const-string v3, "xml:lang"

    aget-object v4, v0, v2

    .line 676
    invoke-virtual {v4}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_37

    const-string v3, "rdf:type"

    aget-object v4, v0, v2

    .line 677
    invoke-virtual {v4}, Lcom/itextpdf/xmp/impl/XMPNode;->getName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3f

    .line 680
    :cond_37
    aget-object v3, v0, v2

    invoke-virtual {v3}, Lcom/itextpdf/xmp/impl/XMPNode;->sort()V

    add-int/lit8 v2, v2, 0x1

    goto :goto_18

    .line 684
    :cond_3f
    array-length v3, v0

    invoke-static {v0, v2, v3}, Ljava/util/Arrays;->sort([Ljava/lang/Object;II)V

    .line 685
    iget-object v2, p0, Lcom/itextpdf/xmp/impl/XMPNode;->qualifier:Ljava/util/List;

    invoke-interface {v2}, Ljava/util/List;->listIterator()Ljava/util/ListIterator;

    move-result-object v2

    .line 686
    :goto_49
    array-length v3, v0

    if-ge v1, v3, :cond_5c

    .line 688
    invoke-interface {v2}, Ljava/util/ListIterator;->next()Ljava/lang/Object;

    .line 689
    aget-object v3, v0, v1

    invoke-interface {v2, v3}, Ljava/util/ListIterator;->set(Ljava/lang/Object;)V

    .line 690
    aget-object v3, v0, v1

    invoke-virtual {v3}, Lcom/itextpdf/xmp/impl/XMPNode;->sort()V

    add-int/lit8 v1, v1, 0x1

    goto :goto_49

    .line 695
    :cond_5c
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->hasChildren()Z

    move-result v0

    if-eqz v0, :cond_85

    .line 697
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->getOptions()Lcom/itextpdf/xmp/options/PropertyOptions;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/xmp/options/PropertyOptions;->isArray()Z

    move-result v0

    if-nez v0, :cond_71

    .line 699
    iget-object v0, p0, Lcom/itextpdf/xmp/impl/XMPNode;->children:Ljava/util/List;

    invoke-static {v0}, Ljava/util/Collections;->sort(Ljava/util/List;)V

    .line 701
    :cond_71
    invoke-virtual {p0}, Lcom/itextpdf/xmp/impl/XMPNode;->iterateChildren()Ljava/util/Iterator;

    move-result-object v0

    :goto_75
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_85

    .line 703
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/xmp/impl/XMPNode;

    invoke-virtual {v1}, Lcom/itextpdf/xmp/impl/XMPNode;->sort()V

    goto :goto_75

    :cond_85
    return-void
.end method
