.class Lcom/itextpdf/text/io/ByteBufferRandomAccessSource;
.super Ljava/lang/Object;
.source "ByteBufferRandomAccessSource.java"

# interfaces
.implements Lcom/itextpdf/text/io/RandomAccessSource;


# instance fields
.field private final byteBuffer:Ljava/nio/ByteBuffer;


# direct methods
.method public constructor <init>(Ljava/nio/ByteBuffer;)V
    .registers 2

    .line 0
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 68
    iput-object p1, p0, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource;->byteBuffer:Ljava/nio/ByteBuffer;

    return-void
.end method

.method private static clean(Ljava/nio/ByteBuffer;)Z
    .registers 2

    if-eqz p0, :cond_19

    .line 0
    invoke-virtual {p0}, Ljava/nio/ByteBuffer;->isDirect()Z

    move-result v0

    if-nez v0, :cond_9

    .line 142
    goto :goto_19

    :cond_9
    new-instance v0, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource$1;

    invoke-direct {v0, p0}, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource$1;-><init>(Ljava/nio/ByteBuffer;)V

    invoke-static {v0}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;

    move-result-object p0

    .line 160
    check-cast p0, Ljava/lang/Boolean;

    invoke-virtual {p0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p0

    return p0

    :cond_19
    :goto_19
    const/4 p0, 0x0

    return p0
.end method


# virtual methods
.method public close()V
    .registers 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource;->byteBuffer:Ljava/nio/ByteBuffer;

    invoke-static {v0}, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource;->clean(Ljava/nio/ByteBuffer;)Z

    return-void
.end method

.method public get(J)I
    .registers 7
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    const-wide/32 v0, 0x7fffffff

    cmp-long v2, p1, v0

    if-lez v2, :cond_f

    .line 0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    .line 83
    const-string p2, "Position must be less than Integer.MAX_VALUE"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_f
    const/4 v0, -0x1

    :try_start_10
    iget-object v1, p0, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource;->byteBuffer:Ljava/nio/ByteBuffer;

    invoke-virtual {v1}, Ljava/nio/ByteBuffer;->limit()I

    .line 86
    move-result v1

    int-to-long v1, v1

    cmp-long v3, p1, v1

    if-ltz v3, :cond_1c

    return v0

    :cond_1c
    iget-object v1, p0, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource;->byteBuffer:Ljava/nio/ByteBuffer;

    long-to-int p1, p1

    invoke-virtual {v1, p1}, Ljava/nio/ByteBuffer;->get(I)B

    move-result p1
    :try_end_23
    .catch Ljava/nio/BufferUnderflowException; {:try_start_10 .. :try_end_23} :catch_26

    and-int/lit16 p1, p1, 0xff

    return p1

    :catch_26
    return v0
.end method

.method public get(J[BII)I
    .registers 9
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    const-wide/32 v0, 0x7fffffff

    cmp-long v2, p1, v0

    if-lez v2, :cond_f

    .line 0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    .line 106
    const-string p2, "Position must be less than Integer.MAX_VALUE"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_f
    iget-object v0, p0, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource;->byteBuffer:Ljava/nio/ByteBuffer;

    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->limit()I

    move-result v0

    .line 109
    int-to-long v0, v0

    cmp-long v2, p1, v0

    if-ltz v2, :cond_1c

    const/4 p1, -0x1

    .line 110
    return p1

    :cond_1c
    iget-object v0, p0, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource;->byteBuffer:Ljava/nio/ByteBuffer;

    long-to-int p1, p1

    invoke-virtual {v0, p1}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;

    iget-object p1, p0, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource;->byteBuffer:Ljava/nio/ByteBuffer;

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->remaining()I

    .line 111
    move-result p1

    invoke-static {p5, p1}, Ljava/lang/Math;->min(II)I

    move-result p1

    iget-object p2, p0, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource;->byteBuffer:Ljava/nio/ByteBuffer;

    invoke-virtual {p2, p3, p4, p1}, Ljava/nio/ByteBuffer;->get([BII)Ljava/nio/ByteBuffer;

    return p1
.end method

.method public length()J
    .registers 3

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/io/ByteBufferRandomAccessSource;->byteBuffer:Ljava/nio/ByteBuffer;

    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->limit()I

    move-result v0

    int-to-long v0, v0

    return-wide v0
.end method
