.class public Lcom/itextpdf/text/pdf/PdfStructTreeController;
.super Ljava/lang/Object;
.source "PdfStructTreeController.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;
    }
.end annotation


# instance fields
.field private nullReference:Lcom/itextpdf/text/pdf/PdfIndirectReference;

.field private parentTree:Lcom/itextpdf/text/pdf/PdfDictionary;

.field protected reader:Lcom/itextpdf/text/pdf/PdfReader;

.field private roleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

.field private sourceClassMap:Lcom/itextpdf/text/pdf/PdfDictionary;

.field private sourceRoleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

.field private structTreeRoot:Lcom/itextpdf/text/pdf/PdfDictionary;

.field private structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

.field private writer:Lcom/itextpdf/text/pdf/PdfCopy;


# direct methods
.method protected constructor <init>(Lcom/itextpdf/text/pdf/PdfReader;Lcom/itextpdf/text/pdf/PdfCopy;)V
    .registers 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, 0x0

    .line 60
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->roleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 61
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->sourceRoleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 62
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->sourceClassMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 63
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->nullReference:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 69
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfCopy;->isTagged()Z

    move-result v0

    if-nez v0, :cond_21

    .line 70
    new-instance p1, Lcom/itextpdf/text/pdf/BadPdfFormatException;

    const-string p2, "no.structtreeroot.found"

    const/4 v0, 0x0

    new-array v0, v0, [Ljava/lang/Object;

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/BadPdfFormatException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 71
    :cond_21
    iput-object p2, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->writer:Lcom/itextpdf/text/pdf/PdfCopy;

    .line 72
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfCopy;->getStructureTreeRoot()Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    move-result-object p2

    iput-object p2, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    .line 73
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->PARENTTREE:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->STRUCTELEM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-direct {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>(Lcom/itextpdf/text/pdf/PdfName;)V

    invoke-virtual {p2, v0, v1}, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 74
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->setReader(Lcom/itextpdf/text/pdf/PdfReader;)V

    return-void
.end method

.method private addKid(Lcom/itextpdf/text/pdf/PdfObject;)V
    .registers 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v0

    if-nez v0, :cond_7

    return-void

    .line 262
    :cond_7
    check-cast p1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 263
    new-instance v0, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PRIndirectReference;)V

    .line 264
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->writer:Lcom/itextpdf/text/pdf/PdfCopy;

    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    invoke-virtual {v1, v0}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1f

    .line 265
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->writer:Lcom/itextpdf/text/pdf/PdfCopy;

    const/4 v2, 0x1

    const/4 v3, 0x0

    invoke-virtual {v1, p1, v2, v3}, Lcom/itextpdf/text/pdf/PdfCopy;->copyIndirect(Lcom/itextpdf/text/pdf/PRIndirectReference;ZZ)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 267
    :cond_1f
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->writer:Lcom/itextpdf/text/pdf/PdfCopy;

    iget-object p1, p1, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    invoke-virtual {p1, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->getRef()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object p1

    .line 269
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->writer:Lcom/itextpdf/text/pdf/PdfCopy;

    iget-boolean v0, v0, Lcom/itextpdf/text/pdf/PdfCopy;->updateRootKids:Z

    if-eqz v0, :cond_3f

    .line 270
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    invoke-virtual {p0, v0, p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->addKid(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 271
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->writer:Lcom/itextpdf/text/pdf/PdfCopy;

    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->structureTreeRootKidsForReaderImported(Lcom/itextpdf/text/pdf/PdfReader;)V

    :cond_3f
    return-void
.end method

.method public static checkTagged(Lcom/itextpdf/text/pdf/PdfReader;)Z
    .registers 3

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p0

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->STRUCTTREEROOT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    .line 95
    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    const/4 v0, 0x0

    if-eqz p0, :cond_30

    .line 96
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    if-nez v1, :cond_18

    goto :goto_30

    .line 98
    :cond_18
    check-cast p0, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 99
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->PARENTTREE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    if-eqz p0, :cond_2f

    .line 100
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result p0

    if-nez p0, :cond_2d

    goto :goto_2f

    :cond_2d
    const/4 p0, 0x1

    return p0

    :cond_2f
    :goto_2f
    return v0

    :cond_30
    :goto_30
    return v0
.end method

.method public static compareObjects(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfObject;)Z
    .registers 7

    .line 0
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    const/4 v0, 0x0

    if-nez p1, :cond_8

    return v0

    .line 313
    :cond_8
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v2

    if-eq v1, v2, :cond_13

    return v0

    .line 316
    :cond_13
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isBoolean()Z

    move-result v1

    const/4 v2, 0x1

    if-eqz v1, :cond_32

    if-ne p0, p1, :cond_1d

    return v2

    .line 319
    :cond_1d
    instance-of v1, p1, Lcom/itextpdf/text/pdf/PdfBoolean;

    if-eqz v1, :cond_31

    .line 320
    check-cast p0, Lcom/itextpdf/text/pdf/PdfBoolean;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfBoolean;->booleanValue()Z

    move-result p0

    check-cast p1, Lcom/itextpdf/text/pdf/PdfBoolean;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfBoolean;->booleanValue()Z

    move-result p1

    if-ne p0, p1, :cond_30

    const/4 v0, 0x1

    :cond_30
    return v0

    :cond_31
    return v0

    .line 323
    :cond_32
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v1

    if-eqz v1, :cond_3d

    .line 324
    invoke-virtual {p0, p1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result p0

    return p0

    .line 325
    :cond_3d
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v1

    if-eqz v1, :cond_5d

    if-ne p0, p1, :cond_46

    return v2

    .line 328
    :cond_46
    instance-of v1, p1, Lcom/itextpdf/text/pdf/PdfNumber;

    if-eqz v1, :cond_5c

    .line 329
    check-cast p0, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfNumber;->doubleValue()D

    move-result-wide v3

    check-cast p1, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->doubleValue()D

    move-result-wide p0

    cmpl-double v1, v3, p0

    if-nez v1, :cond_5b

    const/4 v0, 0x1

    :cond_5b
    return v0

    :cond_5c
    return v0

    .line 332
    :cond_5d
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isNull()Z

    move-result v1

    if-eqz v1, :cond_6c

    if-ne p0, p1, :cond_66

    return v2

    .line 335
    :cond_66
    instance-of p0, p1, Lcom/itextpdf/text/pdf/PdfNull;

    if-eqz p0, :cond_6b

    return v2

    :cond_6b
    return v0

    .line 338
    :cond_6c
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isString()Z

    move-result v1

    if-eqz v1, :cond_99

    if-ne p0, p1, :cond_75

    return v2

    .line 341
    :cond_75
    instance-of v1, p1, Lcom/itextpdf/text/pdf/PdfString;

    if-eqz v1, :cond_98

    .line 342
    check-cast p1, Lcom/itextpdf/text/pdf/PdfString;

    iget-object v1, p1, Lcom/itextpdf/text/pdf/PdfString;->value:Ljava/lang/String;

    if-nez v1, :cond_86

    move-object v1, p0

    check-cast v1, Lcom/itextpdf/text/pdf/PdfString;

    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfString;->value:Ljava/lang/String;

    if-eqz v1, :cond_96

    :cond_86
    check-cast p0, Lcom/itextpdf/text/pdf/PdfString;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfString;->value:Ljava/lang/String;

    if-eqz v1, :cond_97

    iget-object p0, p0, Lcom/itextpdf/text/pdf/PdfString;->value:Ljava/lang/String;

    iget-object p1, p1, Lcom/itextpdf/text/pdf/PdfString;->value:Ljava/lang/String;

    .line 343
    invoke-virtual {p0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-eqz p0, :cond_97

    :cond_96
    const/4 v0, 0x1

    :cond_97
    return v0

    :cond_98
    return v0

    .line 347
    :cond_99
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v1

    if-eqz v1, :cond_c8

    .line 348
    check-cast p0, Lcom/itextpdf/text/pdf/PdfArray;

    .line 349
    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    .line 350
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-eq v1, v3, :cond_ae

    return v0

    :cond_ae
    const/4 v1, 0x0

    .line 352
    :goto_af
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-ge v1, v3, :cond_c7

    .line 353
    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    invoke-static {v3, v4}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->compareObjects(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfObject;)Z

    move-result v3

    if-nez v3, :cond_c4

    return v0

    :cond_c4
    add-int/lit8 v1, v1, 0x1

    goto :goto_af

    :cond_c7
    return v2

    .line 357
    :cond_c8
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    if-eqz v1, :cond_103

    .line 358
    check-cast p0, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 359
    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 360
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfDictionary;->size()I

    move-result v1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->size()I

    move-result v3

    if-eq v1, v3, :cond_dd

    return v0

    .line 362
    :cond_dd
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfDictionary;->hashMap:Ljava/util/LinkedHashMap;

    invoke-virtual {v1}, Ljava/util/LinkedHashMap;->keySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_e7
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_102

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfName;

    .line 363
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    invoke-virtual {p1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v4, v3}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->compareObjects(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfObject;)Z

    move-result v3

    if-nez v3, :cond_e7

    return v0

    :cond_102
    return v2

    :cond_103
    return v0
.end method

.method private copyPageMarks(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfNumber;I)Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;
    .registers 9
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/pdf/BadPdfFormatException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->NUMS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfArray;

    if-nez v0, :cond_66

    .line 127
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->KIDS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    if-nez p1, :cond_1f

    .line 129
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->NOTFOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    return-object p1

    .line 130
    :cond_1f
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v0

    div-int/lit8 v0, v0, 0x2

    const/4 v1, 0x0

    :goto_26
    add-int v2, v0, v1

    .line 133
    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 134
    sget-object v4, Lcom/itextpdf/text/pdf/PdfStructTreeController$1;->$SwitchMap$com$itextpdf$text$pdf$PdfStructTreeController$returnType:[I

    invoke-direct {p0, v3, p2, p3}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->copyPageMarks(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfNumber;I)Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->ordinal()I

    move-result v3

    aget v3, v4, v3

    packed-switch v3, :pswitch_data_78

    .line 153
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->NOTFOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    return-object p1

    :pswitch_44
    if-nez v2, :cond_49

    .line 147
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->BELOW:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    return-object p1

    :cond_49
    if-nez v0, :cond_4e

    .line 149
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->NOTFOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    return-object p1

    .line 150
    :cond_4e
    div-int/lit8 v0, v0, 0x2

    goto :goto_26

    .line 139
    :pswitch_51
    div-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_56

    const/4 v0, 0x1

    :cond_56
    add-int v1, v0, v2

    .line 142
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-ne v1, v3, :cond_61

    .line 143
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->ABOVE:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    return-object p1

    :cond_61
    move v1, v2

    goto :goto_26

    .line 136
    :pswitch_63
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->FOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    return-object p1

    .line 157
    :cond_66
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result p1

    if-nez p1, :cond_6f

    .line 158
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->NOTFOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    return-object p1

    .line 159
    :cond_6f
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p1

    invoke-direct {p0, v0, p1, p3}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->findAndCopyMarks(Lcom/itextpdf/text/pdf/PdfArray;II)Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    move-result-object p1

    return-object p1

    :pswitch_data_78
    .packed-switch 0x1
        :pswitch_63
        :pswitch_51
        :pswitch_44
    .end packed-switch
.end method

.method private findAndCopyMarks(Lcom/itextpdf/text/pdf/PdfArray;II)Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;
    .registers 11
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/pdf/BadPdfFormatException;,
            Ljava/io/IOException;
        }
    .end annotation

    const/4 v0, 0x0

    .line 0
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    if-le v1, p2, :cond_e

    .line 165
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->BELOW:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    .line 166
    return-object p1

    :cond_e
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x2

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    if-ge v1, p2, :cond_21

    .line 167
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->ABOVE:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    .line 168
    return-object p1

    :cond_21
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    div-int/lit8 v1, v1, 0x4

    move v2, v1

    const/4 v1, 0x0

    :goto_29
    add-int v3, v1, v2

    mul-int/lit8 v4, v3, 0x2

    .line 173
    invoke-virtual {p1, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v5

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v5

    const/4 v6, 0x1

    if-ne v5, p2, :cond_be

    .line 175
    add-int/2addr v4, v6

    invoke-virtual {p1, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    .line 177
    move-object p2, p1

    :goto_3e
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v1

    if-eqz v1, :cond_49

    invoke-static {p2}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p2

    .line 178
    goto :goto_3e

    :cond_49
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v1

    if-eqz v1, :cond_9a

    .line 180
    const/4 p1, 0x0

    check-cast p2, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfArray;->iterator()Ljava/util/Iterator;

    move-result-object p2

    :goto_56
    invoke-interface {p2}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_96

    invoke-interface {p2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfObject;

    .line 181
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->isNull()Z

    move-result v2

    if-eqz v2, :cond_85

    .line 182
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->nullReference:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    if-nez v1, :cond_7d

    .line 183
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->writer:Lcom/itextpdf/text/pdf/PdfCopy;

    new-instance v2, Lcom/itextpdf/text/pdf/PdfNull;

    invoke-direct {v2}, Lcom/itextpdf/text/pdf/PdfNull;-><init>()V

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfIndirectObject;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v1

    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->nullReference:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 184
    :cond_7d
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->nullReference:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {v1, p3, v2}, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->setPageMark(ILcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 186
    goto :goto_56

    :cond_85
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->writer:Lcom/itextpdf/text/pdf/PdfCopy;

    invoke-virtual {v2, v1, v6, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->copyObject(Lcom/itextpdf/text/pdf/PdfObject;ZZ)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    if-nez p1, :cond_8e

    .line 188
    move-object p1, v1

    :cond_8e
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {v2, p3, v1}, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->setPageMark(ILcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 191
    goto :goto_56

    :cond_96
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->attachStructTreeRootKids(Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 192
    goto :goto_b8

    :cond_9a
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    if-eqz v1, :cond_bb

    .line 193
    check-cast p2, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-static {p2}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getKDict(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p2

    if-nez p2, :cond_ab

    .line 195
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->NOTFOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    .line 196
    return-object p1

    :cond_ab
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->writer:Lcom/itextpdf/text/pdf/PdfCopy;

    invoke-virtual {p2, p1, v6, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->copyObject(Lcom/itextpdf/text/pdf/PdfObject;ZZ)Lcom/itextpdf/text/pdf/PdfObject;

    .line 197
    move-result-object p1

    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    check-cast p1, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {p2, p3, p1}, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->setAnnotationMark(ILcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 200
    :goto_b8
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->FOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    .line 199
    return-object p1

    :cond_bb
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->NOTFOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    return-object p1

    :cond_be
    if-ge v5, p2, :cond_d7

    if-nez v2, :cond_c5

    .line 204
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->NOTFOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    return-object p1

    :cond_c5
    if-eq v2, v6, :cond_c9

    .line 207
    div-int/lit8 v2, v2, 0x2

    :cond_c9
    add-int v1, v2, v3

    .line 208
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v4

    if-ne v1, v4, :cond_d4

    .line 209
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->NOTFOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    return-object p1

    :cond_d4
    move v1, v3

    goto/16 :goto_29

    :cond_d7
    if-nez v3, :cond_dc

    .line 213
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->BELOW:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    return-object p1

    :cond_dc
    if-nez v2, :cond_e1

    .line 215
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->NOTFOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    .line 216
    return-object p1

    :cond_e1
    div-int/lit8 v2, v2, 0x2

    goto/16 :goto_29
.end method

.method private static getDirectArray(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/pdf/PdfArray;
    .registers 5

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    const/4 v1, 0x0

    .line 277
    :goto_6
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_3d

    .line 278
    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-nez v2, :cond_17

    goto :goto_3a

    .line 281
    :cond_17
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v3

    if-eqz v3, :cond_27

    .line 282
    check-cast v2, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectArray(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v2

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    goto :goto_3a

    .line 283
    :cond_27
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v3

    if-eqz v3, :cond_37

    .line 284
    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectDict(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    goto :goto_3a

    .line 286
    :cond_37
    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    :goto_3a
    add-int/lit8 v1, v1, 0x1

    goto :goto_6

    :cond_3d
    return-object v0
.end method

.method private static getDirectDict(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfDictionary;
    .registers 5

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 294
    iget-object p0, p0, Lcom/itextpdf/text/pdf/PdfDictionary;->hashMap:Ljava/util/LinkedHashMap;

    invoke-virtual {p0}, Ljava/util/LinkedHashMap;->entrySet()Ljava/util/Set;

    move-result-object p0

    invoke-interface {p0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object p0

    :goto_f
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_5e

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/Map$Entry;

    .line 295
    invoke-interface {v1}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfObject;

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-nez v2, :cond_28

    goto :goto_f

    .line 298
    :cond_28
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v3

    if-eqz v3, :cond_3e

    .line 299
    invoke-interface {v1}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    check-cast v2, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectArray(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_f

    .line 300
    :cond_3e
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v3

    if-eqz v3, :cond_54

    .line 301
    invoke-interface {v1}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectDict(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_f

    .line 303
    :cond_54
    invoke-interface {v1}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_f

    :cond_5e
    return-object v0
.end method

.method public static getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;
    .registers 2

    if-nez p0, :cond_4

    const/4 p0, 0x0

    return-object p0

    .line 0
    :cond_4
    :goto_4
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    .line 109
    move-result v0

    if-eqz v0, :cond_f

    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    goto :goto_4

    :cond_f
    return-object p0
.end method

.method static getKDict(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfDictionary;
    .registers 6

    .line 0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->K:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    const/4 v1, 0x0

    if-eqz v0, :cond_18

    .line 241
    sget-object p0, Lcom/itextpdf/text/pdf/PdfName;->OBJR:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v2

    invoke-virtual {p0, v2}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-eqz p0, :cond_40

    return-object v0

    .line 245
    :cond_18
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->K:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p0

    if-nez p0, :cond_21

    return-object v1

    :cond_21
    const/4 v0, 0x0

    .line 248
    :goto_22
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    if-ge v0, v2, :cond_40

    .line 249
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsDict(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    if-eqz v2, :cond_3d

    .line 251
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->OBJR:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3d

    return-object v2

    :cond_3d
    add-int/lit8 v0, v0, 0x1

    goto :goto_22

    :cond_40
    return-object v1
.end method


# virtual methods
.method protected addClass(Lcom/itextpdf/text/pdf/PdfObject;)V
    .registers 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    .line 373
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_39

    .line 374
    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->C:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-nez p1, :cond_16

    return-void

    .line 377
    :cond_16
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v0

    if-eqz v0, :cond_2e

    .line 378
    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    .line 379
    :goto_1e
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v0

    if-ge v1, v0, :cond_af

    .line 380
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->addClass(Lcom/itextpdf/text/pdf/PdfObject;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1e

    .line 382
    :cond_2e
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v0

    if-eqz v0, :cond_af

    .line 383
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->addClass(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto/16 :goto_af

    .line 384
    :cond_39
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v0

    if-eqz v0, :cond_af

    .line 385
    check-cast p1, Lcom/itextpdf/text/pdf/PdfName;

    .line 386
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->sourceClassMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    if-nez v0, :cond_60

    .line 387
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structTreeRoot:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->CLASSMAP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    if-eqz v0, :cond_5f

    .line 388
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v2

    if-nez v2, :cond_5a

    goto :goto_5f

    .line 391
    :cond_5a
    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->sourceClassMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    goto :goto_60

    :cond_5f
    :goto_5f
    return-void

    .line 393
    :cond_60
    :goto_60
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->sourceClassMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    if-nez v0, :cond_6d

    return-void

    .line 397
    :cond_6d
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    invoke-virtual {v2, p1}, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->getMappedClass(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-eqz v2, :cond_8c

    .line 399
    invoke-static {v2, v0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->compareObjects(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfObject;)Z

    move-result v0

    if-nez v0, :cond_af

    .line 400
    new-instance v0, Lcom/itextpdf/text/pdf/BadPdfFormatException;

    const-string v2, "conflict.in.classmap"

    const/4 v3, 0x1

    new-array v3, v3, [Ljava/lang/Object;

    aput-object p1, v3, v1

    invoke-static {v2, v3}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Lcom/itextpdf/text/pdf/BadPdfFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 403
    :cond_8c
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    if-eqz v1, :cond_9e

    .line 404
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectDict(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    invoke-virtual {v1, p1, v0}, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->mapClass(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_af

    .line 405
    :cond_9e
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v1

    if-eqz v1, :cond_af

    .line 406
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    check-cast v0, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectArray(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    invoke-virtual {v1, p1, v0}, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->mapClass(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_af
    :goto_af
    return-void
.end method

.method protected addKid(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfObject;)V
    .registers 5

    .line 0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->K:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    .line 448
    instance-of v1, v0, Lcom/itextpdf/text/pdf/PdfArray;

    if-eqz v1, :cond_d

    .line 449
    check-cast v0, Lcom/itextpdf/text/pdf/PdfArray;

    goto :goto_18

    .line 451
    :cond_d
    new-instance v1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    if-eqz v0, :cond_17

    .line 453
    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    :cond_17
    move-object v0, v1

    .line 455
    :goto_18
    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    .line 456
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->K:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    return-void
.end method

.method protected addRole(Lcom/itextpdf/text/pdf/PdfName;)V
    .registers 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    if-nez p1, :cond_3

    return-void

    .line 0
    :cond_3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->writer:Lcom/itextpdf/text/pdf/PdfCopy;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfCopy;->getStandardStructElems()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_d
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_20

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 417
    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v1

    .line 420
    if-eqz v1, :cond_d

    return-void

    :cond_20
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->sourceRoleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 421
    if-nez v0, :cond_3f

    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structTreeRoot:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ROLEMAP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    .line 422
    move-result-object v0

    if-eqz v0, :cond_3e

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    .line 425
    if-nez v1, :cond_39

    goto :goto_3e

    :cond_39
    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->sourceRoleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 427
    goto :goto_3f

    :cond_3e
    :goto_3e
    return-void

    :cond_3f
    :goto_3f
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->sourceRoleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    .line 428
    move-result-object v0

    if-eqz v0, :cond_8e

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v1

    .line 432
    if-nez v1, :cond_4e

    goto :goto_8e

    :cond_4e
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->roleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 433
    if-nez v1, :cond_68

    new-instance v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 434
    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->roleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ROLEMAP:Lcom/itextpdf/text/pdf/PdfName;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->roleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 435
    invoke-virtual {v1, v2, v3}, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->roleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {v1, p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 436
    goto :goto_8d

    :cond_68
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->roleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    .line 437
    move-result-object v1

    if-eqz v1, :cond_88

    invoke-virtual {v1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    .line 438
    move-result v0

    if-nez v0, :cond_8d

    new-instance v0, Lcom/itextpdf/text/pdf/BadPdfFormatException;

    const-string v1, "conflict.in.rolemap"

    const/4 v2, 0x1

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v3, 0x0

    aput-object p1, v2, v3

    invoke-static {v1, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Lcom/itextpdf/text/pdf/BadPdfFormatException;-><init>(Ljava/lang/String;)V

    .line 441
    throw v0

    :cond_88
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->roleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {v1, p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_8d
    :goto_8d
    return-void

    :cond_8e
    :goto_8e
    return-void
.end method

.method protected attachStructTreeRootKids(Lcom/itextpdf/text/pdf/PdfObject;)V
    .registers 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structTreeRoot:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->K:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    if-eqz v0, :cond_37

    .line 225
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v1

    if-nez v1, :cond_17

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v1

    if-nez v1, :cond_17

    goto :goto_37

    .line 229
    :cond_17
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result p1

    if-eqz p1, :cond_21

    .line 230
    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->addKid(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_3c

    .line 232
    :cond_21
    check-cast v0, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_27
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_3c

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfObject;

    .line 233
    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->addKid(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_27

    .line 227
    :cond_37
    :goto_37
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    invoke-virtual {p0, v0, p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->addKid(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_3c
    :goto_3c
    return-void
.end method

.method public copyStructTreeForPage(Lcom/itextpdf/text/pdf/PdfNumber;I)V
    .registers 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/pdf/BadPdfFormatException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->parentTree:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0, v0, p1, p2}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->copyPageMarks(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfNumber;I)Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    move-result-object p1

    sget-object p2, Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;->NOTFOUND:Lcom/itextpdf/text/pdf/PdfStructTreeController$returnType;

    if-ne p1, p2, :cond_19

    .line 120
    new-instance p1, Lcom/itextpdf/text/pdf/BadPdfFormatException;

    const-string p2, "invalid.structparent"

    const/4 v0, 0x0

    new-array v0, v0, [Ljava/lang/Object;

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/BadPdfFormatException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_19
    return-void
.end method

.method protected setReader(Lcom/itextpdf/text/pdf/PdfReader;)V
    .registers 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    .line 79
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->STRUCTTREEROOT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    .line 80
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    const/4 v0, 0x0

    if-eqz p1, :cond_4d

    .line 81
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    if-nez v1, :cond_1a

    goto :goto_4d

    .line 83
    :cond_1a
    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structTreeRoot:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 84
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->structTreeRoot:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->PARENTTREE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getDirectObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-eqz p1, :cond_3f

    .line 85
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    if-nez v1, :cond_33

    goto :goto_3f

    .line 87
    :cond_33
    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->parentTree:Lcom/itextpdf/text/pdf/PdfDictionary;

    const/4 p1, 0x0

    .line 88
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->sourceRoleMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 89
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->sourceClassMap:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 90
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->nullReference:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    return-void

    .line 86
    :cond_3f
    :goto_3f
    new-instance p1, Lcom/itextpdf/text/pdf/BadPdfFormatException;

    const-string v1, "the.document.does.not.contain.parenttree"

    new-array v0, v0, [Ljava/lang/Object;

    invoke-static {v1, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lcom/itextpdf/text/pdf/BadPdfFormatException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 82
    :cond_4d
    :goto_4d
    new-instance p1, Lcom/itextpdf/text/pdf/BadPdfFormatException;

    const-string v1, "no.structtreeroot.found"

    new-array v0, v0, [Ljava/lang/Object;

    invoke-static {v1, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lcom/itextpdf/text/pdf/BadPdfFormatException;-><init>(Ljava/lang/String;)V

    throw p1
.end method
