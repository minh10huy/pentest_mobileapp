.class public Lcom/itextpdf/text/pdf/hyphenation/CharVector;
.super Ljava/lang/Object;
.source "CharVector.java"

# interfaces
.implements Ljava/io/Serializable;
.implements Ljava/lang/Cloneable;


# static fields
.field private static final DEFAULT_BLOCK_SIZE:I = 0x800

.field private static final serialVersionUID:J = -0x43aa356f33c7e518L


# instance fields
.field private array:[C

.field private blockSize:I

.field private n:I


# direct methods
.method public constructor <init>()V
    .registers 2

    const/16 v0, 0x800

    .line 0
    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;-><init>(I)V

    return-void
.end method

.method public constructor <init>(I)V
    .registers 2

    .line 0
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    if-lez p1, :cond_8

    .line 52
    iput p1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->blockSize:I

    goto :goto_c

    :cond_8
    const/16 p1, 0x800

    .line 54
    iput p1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->blockSize:I

    .line 56
    :goto_c
    iget p1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->blockSize:I

    new-array p1, p1, [C

    iput-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    const/4 p1, 0x0

    .line 57
    iput p1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    return-void
.end method

.method public constructor <init>([C)V
    .registers 3

    .line 0
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/16 v0, 0x800

    .line 61
    iput v0, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->blockSize:I

    .line 62
    iput-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    .line 63
    array-length p1, p1

    iput p1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    return-void
.end method

.method public constructor <init>([CI)V
    .registers 3

    .line 0
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    if-lez p2, :cond_8

    .line 68
    iput p2, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->blockSize:I

    goto :goto_c

    :cond_8
    const/16 p2, 0x800

    .line 70
    iput p2, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->blockSize:I

    .line 72
    :goto_c
    iput-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    .line 73
    array-length p1, p1

    iput p1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    return-void
.end method


# virtual methods
.method public alloc(I)I
    .registers 7

    .line 0
    iget v0, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    .line 117
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    array-length v1, v1

    .line 118
    iget v2, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    add-int/2addr v2, p1

    if-lt v2, v1, :cond_17

    .line 119
    iget v2, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->blockSize:I

    add-int/2addr v2, v1

    new-array v2, v2, [C

    .line 120
    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    const/4 v4, 0x0

    invoke-static {v3, v4, v2, v4, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 121
    iput-object v2, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    .line 123
    :cond_17
    iget v1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    add-int/2addr v1, p1

    iput v1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    return v0
.end method

.method public capacity()I
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    array-length v0, v0

    return v0
.end method

.method public clear()V
    .registers 2

    const/4 v0, 0x0

    .line 0
    iput v0, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    return-void
.end method

.method public clone()Ljava/lang/Object;
    .registers 4

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    invoke-virtual {v1}, [C->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [C

    iget v2, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->blockSize:I

    invoke-direct {v0, v1, v2}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;-><init>([CI)V

    .line 85
    iget v1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    iput v1, v0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    return-object v0
.end method

.method public get(I)C
    .registers 3

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    aget-char p1, v0, p1

    return p1
.end method

.method public getArray()[C
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    return-object v0
.end method

.method public length()I
    .registers 2

    .line 0
    iget v0, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    return v0
.end method

.method public put(IC)V
    .registers 4

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    aput-char p2, v0, p1

    return-void
.end method

.method public trimToSize()V
    .registers 5

    .line 0
    iget v0, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    array-length v1, v1

    if-ge v0, v1, :cond_15

    .line 129
    iget v0, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    new-array v0, v0, [C

    .line 130
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    iget v2, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->n:I

    const/4 v3, 0x0

    invoke-static {v1, v3, v0, v3, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 131
    iput-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->array:[C

    :cond_15
    return-void
.end method
