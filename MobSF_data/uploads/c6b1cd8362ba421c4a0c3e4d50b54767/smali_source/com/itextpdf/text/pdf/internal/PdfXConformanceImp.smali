.class public Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;
.super Ljava/lang/Object;
.source "PdfXConformanceImp.java"

# interfaces
.implements Lcom/itextpdf/text/pdf/interfaces/PdfXConformance;


# instance fields
.field protected pdfxConformance:I

.field protected writer:Lcom/itextpdf/text/pdf/PdfWriter;


# direct methods
.method public constructor <init>(Lcom/itextpdf/text/pdf/PdfWriter;)V
    .registers 3

    .line 0
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, 0x0

    .line 70
    iput v0, p0, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->pdfxConformance:I

    .line 74
    iput-object p1, p0, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    return-void
.end method


# virtual methods
.method public checkPdfIsoConformance(ILjava/lang/Object;)V
    .registers 10

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    if-eqz v0, :cond_199

    iget-object v0, p0, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfWriter;->isPdfX()Z

    move-result v0

    if-nez v0, :cond_e

    goto/16 :goto_199

    .line 128
    :cond_e
    iget-object v0, p0, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfWriter;->getPDFXConformance()I

    move-result v0

    const/4 v1, 0x1

    const/4 v2, 0x0

    packed-switch p1, :pswitch_data_19a

    goto/16 :goto_198

    .line 208
    :pswitch_1b
    new-instance p1, Lcom/itextpdf/text/pdf/PdfXConformanceException;

    const-string p2, "layers.are.not.allowed"

    new-array v0, v2, [Ljava/lang/Object;

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/PdfXConformanceException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 191
    :pswitch_29
    check-cast p2, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-nez p2, :cond_2f

    goto/16 :goto_198

    .line 195
    :cond_2f
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->BM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-eqz p1, :cond_5b

    .line 196
    sget-object v0, Lcom/itextpdf/text/pdf/PdfGState;->BM_NORMAL:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_5b

    sget-object v0, Lcom/itextpdf/text/pdf/PdfGState;->BM_COMPATIBLE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_5b

    .line 197
    new-instance p2, Lcom/itextpdf/text/pdf/PdfXConformanceException;

    const-string v0, "blend.mode.1.not.allowed"

    new-array v1, v1, [Ljava/lang/Object;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object p1

    aput-object p1, v1, v2

    invoke-static {v0, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Lcom/itextpdf/text/pdf/PdfXConformanceException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 198
    :cond_5b
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->CA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    const-wide/high16 v3, 0x3ff0000000000000L

    if-eqz p1, :cond_83

    .line 200
    check-cast p1, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->doubleValue()D

    move-result-wide v5

    cmpl-double p1, v5, v3

    if-eqz p1, :cond_83

    .line 201
    new-instance p1, Lcom/itextpdf/text/pdf/PdfXConformanceException;

    const-string p2, "transparency.is.not.allowed.ca.eq.1"

    new-array v0, v1, [Ljava/lang/Object;

    invoke-static {v5, v6}, Ljava/lang/String;->valueOf(D)Ljava/lang/String;

    move-result-object v1

    aput-object v1, v0, v2

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/PdfXConformanceException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 202
    :cond_83
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->ca:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-eqz p1, :cond_198

    .line 204
    check-cast p1, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->doubleValue()D

    move-result-wide p1

    cmpl-double v0, p1, v3

    if-eqz v0, :cond_198

    .line 205
    new-instance v0, Lcom/itextpdf/text/pdf/PdfXConformanceException;

    const-string v3, "transparency.is.not.allowed.ca.eq.1"

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {p1, p2}, Ljava/lang/String;->valueOf(D)Ljava/lang/String;

    move-result-object p1

    aput-object p1, v1, v2

    invoke-static {v3, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Lcom/itextpdf/text/pdf/PdfXConformanceException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 171
    :pswitch_a9
    check-cast p2, Lcom/itextpdf/text/pdf/PdfImage;

    .line 172
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->SMASK:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/PdfImage;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-eqz p1, :cond_c1

    .line 173
    new-instance p1, Lcom/itextpdf/text/pdf/PdfXConformanceException;

    const-string p2, "the.smask.key.is.not.allowed.in.images"

    new-array v0, v2, [Ljava/lang/Object;

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/PdfXConformanceException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_c1
    if-eq v0, v1, :cond_c5

    goto/16 :goto_198

    .line 176
    :cond_c5
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->COLORSPACE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/PdfImage;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-nez p1, :cond_ce

    return-void

    .line 179
    :cond_ce
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result p2

    if-eqz p2, :cond_ea

    .line 180
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->DEVICERGB:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_198

    .line 181
    new-instance p1, Lcom/itextpdf/text/pdf/PdfXConformanceException;

    const-string p2, "colorspace.rgb.is.not.allowed"

    new-array v0, v2, [Ljava/lang/Object;

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/PdfXConformanceException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 183
    :cond_ea
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result p2

    if-eqz p2, :cond_198

    .line 184
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->CALRGB:Lcom/itextpdf/text/pdf/PdfName;

    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_198

    .line 185
    new-instance p1, Lcom/itextpdf/text/pdf/PdfXConformanceException;

    const-string p2, "colorspace.calrgb.is.not.allowed"

    new-array v0, v2, [Ljava/lang/Object;

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/PdfXConformanceException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 167
    :pswitch_10c
    check-cast p2, Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/BaseFont;->isEmbedded()Z

    move-result p1

    if-nez p1, :cond_198

    .line 168
    new-instance p1, Lcom/itextpdf/text/pdf/PdfXConformanceException;

    const-string v0, "all.the.fonts.must.be.embedded.this.one.isn.t.1"

    new-array v1, v1, [Ljava/lang/Object;

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/BaseFont;->getPostscriptFontName()Ljava/lang/String;

    move-result-object p2

    aput-object p2, v1, v2

    invoke-static {v0, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/PdfXConformanceException;-><init>(Ljava/lang/String;)V

    throw p1

    :pswitch_128
    if-ne v0, v1, :cond_198

    .line 164
    new-instance p1, Lcom/itextpdf/text/pdf/PdfXConformanceException;

    const-string p2, "colorspace.rgb.is.not.allowed"

    new-array v0, v2, [Ljava/lang/Object;

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/PdfXConformanceException;-><init>(Ljava/lang/String;)V

    throw p1

    :pswitch_138
    if-eq v0, v1, :cond_13b

    goto :goto_198

    .line 133
    :cond_13b
    instance-of p1, p2, Lcom/itextpdf/text/pdf/ExtendedColor;

    if-eqz p1, :cond_186

    .line 134
    check-cast p2, Lcom/itextpdf/text/pdf/ExtendedColor;

    .line 135
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/ExtendedColor;->getType()I

    move-result p1

    packed-switch p1, :pswitch_data_1ac

    goto :goto_198

    .line 146
    :pswitch_149
    check-cast p2, Lcom/itextpdf/text/pdf/ShadingColor;

    .line 147
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/ShadingColor;->getPdfShadingPattern()Lcom/itextpdf/text/pdf/PdfShadingPattern;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfShadingPattern;->getShading()Lcom/itextpdf/text/pdf/PdfShading;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfShading;->getColorSpace()Lcom/itextpdf/text/BaseColor;

    move-result-object p1

    invoke-virtual {p0, v1, p1}, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->checkPdfIsoConformance(ILjava/lang/Object;)V

    goto :goto_198

    .line 150
    :pswitch_15b
    check-cast p2, Lcom/itextpdf/text/pdf/PatternColor;

    .line 151
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PatternColor;->getPainter()Lcom/itextpdf/text/pdf/PdfPatternPainter;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfPatternPainter;->getDefaultColor()Lcom/itextpdf/text/BaseColor;

    move-result-object p1

    invoke-virtual {p0, v1, p1}, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->checkPdfIsoConformance(ILjava/lang/Object;)V

    goto :goto_198

    .line 142
    :pswitch_169
    check-cast p2, Lcom/itextpdf/text/pdf/SpotColor;

    .line 143
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/SpotColor;->getPdfSpotColor()Lcom/itextpdf/text/pdf/PdfSpotColor;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfSpotColor;->getAlternativeCS()Lcom/itextpdf/text/BaseColor;

    move-result-object p1

    invoke-virtual {p0, v1, p1}, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->checkPdfIsoConformance(ILjava/lang/Object;)V

    goto :goto_198

    :pswitch_177
    return-void

    .line 140
    :pswitch_178
    new-instance p1, Lcom/itextpdf/text/pdf/PdfXConformanceException;

    const-string p2, "colorspace.rgb.is.not.allowed"

    new-array v0, v2, [Ljava/lang/Object;

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/PdfXConformanceException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 155
    :cond_186
    instance-of p1, p2, Lcom/itextpdf/text/BaseColor;

    if-eqz p1, :cond_198

    .line 156
    new-instance p1, Lcom/itextpdf/text/pdf/PdfXConformanceException;

    const-string p2, "colorspace.rgb.is.not.allowed"

    new-array v0, v2, [Ljava/lang/Object;

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/PdfXConformanceException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_198
    :goto_198
    :pswitch_198
    return-void

    :cond_199
    :goto_199
    return-void

    :pswitch_data_19a
    .packed-switch 0x1
        :pswitch_138
        :pswitch_198
        :pswitch_128
        :pswitch_10c
        :pswitch_a9
        :pswitch_29
        :pswitch_1b
    .end packed-switch

    :pswitch_data_1ac
    .packed-switch 0x0
        :pswitch_178
        :pswitch_177
        :pswitch_177
        :pswitch_169
        :pswitch_15b
        :pswitch_149
    .end packed-switch
.end method

.method public getPDFXConformance()I
    .registers 2

    .line 0
    iget v0, p0, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->pdfxConformance:I

    return v0
.end method

.method public isPdfIso()Z
    .registers 2

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->isPdfX()Z

    move-result v0

    return v0
.end method

.method public isPdfX()Z
    .registers 2

    .line 0
    iget v0, p0, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->pdfxConformance:I

    if-eqz v0, :cond_6

    const/4 v0, 0x1

    goto :goto_7

    :cond_6
    const/4 v0, 0x0

    :goto_7
    return v0
.end method

.method public isPdfX1A2001()Z
    .registers 3

    .line 0
    iget v0, p0, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->pdfxConformance:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_6

    goto :goto_7

    :cond_6
    const/4 v1, 0x0

    :goto_7
    return v1
.end method

.method public isPdfX32002()Z
    .registers 3

    .line 0
    iget v0, p0, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->pdfxConformance:I

    const/4 v1, 0x2

    if-ne v0, v1, :cond_7

    const/4 v0, 0x1

    goto :goto_8

    :cond_7
    const/4 v0, 0x0

    :goto_8
    return v0
.end method

.method public setPDFXConformance(I)V
    .registers 2

    .line 0
    iput p1, p0, Lcom/itextpdf/text/pdf/internal/PdfXConformanceImp;->pdfxConformance:I

    return-void
.end method
