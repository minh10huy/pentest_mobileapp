.class public Lcom/itextpdf/text/pdf/PdfCopy;
.super Lcom/itextpdf/text/pdf/PdfWriter;
.source "PdfCopy.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/itextpdf/text/pdf/PdfCopy$StampContent;,
        Lcom/itextpdf/text/pdf/PdfCopy$PageStamp;,
        Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;,
        Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;
    }
.end annotation


# static fields
.field protected static COUNTER:Lcom/itextpdf/text/log/Counter;

.field private static final LOGGER:Lcom/itextpdf/text/log/Logger;

.field private static final annotId:Lcom/itextpdf/text/pdf/PdfName;

.field private static annotIdCnt:I

.field protected static final fieldKeys:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/PdfName;",
            ">;"
        }
    .end annotation
.end field

.field private static final iTextTag:Lcom/itextpdf/text/pdf/PdfName;

.field protected static final widgetKeys:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/PdfName;",
            ">;"
        }
    .end annotation
.end field

.field private static final zero:Ljava/lang/Integer;


# instance fields
.field private acroForm:Lcom/itextpdf/text/pdf/PdfIndirectReference;

.field private calculationOrder:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private calculationOrderRefs:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private currentStructArrayNumber:I

.field protected disableIndirects:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;"
        }
    .end annotation
.end field

.field protected fieldArray:Lcom/itextpdf/text/pdf/PdfArray;

.field protected fieldTemplates:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/PdfTemplate;",
            ">;"
        }
    .end annotation
.end field

.field private fieldTree:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field protected fields:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/AcroFields;",
            ">;"
        }
    .end annotation
.end field

.field private hasSignature:Z

.field protected importedPages:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;",
            ">;"
        }
    .end annotation
.end field

.field protected indirectMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Lcom/itextpdf/text/pdf/PdfReader;",
            "Ljava/util/HashMap<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            "Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;",
            ">;>;"
        }
    .end annotation
.end field

.field protected indirectObjects:Ljava/util/LinkedHashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/LinkedHashMap<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            "Lcom/itextpdf/text/pdf/PdfIndirectObject;",
            ">;"
        }
    .end annotation
.end field

.field protected indirects:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            "Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;",
            ">;"
        }
    .end annotation
.end field

.field protected mergeFields:Z

.field private mergeFieldsInternalCall:Z

.field private mergedMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/Integer;",
            "Lcom/itextpdf/text/pdf/PdfIndirectObject;",
            ">;"
        }
    .end annotation
.end field

.field private mergedRadioButtons:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet<",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private mergedSet:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/PdfIndirectObject;",
            ">;"
        }
    .end annotation
.end field

.field private mergedTextFields:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/Object;",
            "Lcom/itextpdf/text/pdf/PdfString;",
            ">;"
        }
    .end annotation
.end field

.field protected namePtr:[I

.field private needAppearances:Z

.field protected parentObjects:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;"
        }
    .end annotation
.end field

.field protected reader:Lcom/itextpdf/text/pdf/PdfReader;

.field private readersWithImportedStructureTreeRootKids:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/PdfReader;",
            ">;"
        }
    .end annotation
.end field

.field private resources:Lcom/itextpdf/text/pdf/PdfDictionary;

.field private rotateContents:Z

.field protected savedObjects:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfIndirectObject;",
            ">;"
        }
    .end annotation
.end field

.field private structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

.field protected structTreeRootReference:Lcom/itextpdf/text/pdf/PRIndirectReference;

.field private tabOrder:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Lcom/itextpdf/text/pdf/PdfArray;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;>;"
        }
    .end annotation
.end field

.field private unmergedIndirectRefsMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            "Lcom/itextpdf/text/pdf/PdfIndirectObject;",
            ">;"
        }
    .end annotation
.end field

.field private unmergedMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/Integer;",
            "Lcom/itextpdf/text/pdf/PdfIndirectObject;",
            ">;"
        }
    .end annotation
.end field

.field protected updateRootKids:Z


# direct methods
.method static constructor <clinit>()V
    .registers 2

    .line 0
    const-class v0, Lcom/itextpdf/text/pdf/PdfCopy;

    invoke-static {v0}, Lcom/itextpdf/text/log/LoggerFactory;->getLogger(Ljava/lang/Class;)Lcom/itextpdf/text/log/Logger;

    move-result-object v0

    sput-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->LOGGER:Lcom/itextpdf/text/log/Logger;

    .line 102
    const-class v0, Lcom/itextpdf/text/pdf/PdfCopy;

    invoke-static {v0}, Lcom/itextpdf/text/log/CounterFactory;->getCounter(Ljava/lang/Class;)Lcom/itextpdf/text/log/Counter;

    move-result-object v0

    sput-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->COUNTER:Lcom/itextpdf/text/log/Counter;

    .line 129
    new-instance v0, Lcom/itextpdf/text/pdf/PdfName;

    const-string v1, "iTextAnnotId"

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    sput-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    .line 147
    new-instance v0, Lcom/itextpdf/text/pdf/PdfName;

    const-string v1, "_iTextTag_"

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    sput-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->iTextTag:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v0, 0x0

    .line 148
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    sput-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->zero:Ljava/lang/Integer;

    .line 1778
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    sput-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    .line 1779
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    sput-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    .line 1781
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->SUBTYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1782
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->CONTENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1783
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->RECT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1784
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->NM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1785
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->M:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1786
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1787
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->BS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1788
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->BORDER:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1789
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1790
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1791
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->C:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1792
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->A:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1793
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->STRUCTPARENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1794
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->OC:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1795
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->H:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1796
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->MK:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1797
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1798
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->Q:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1799
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->P:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1800
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1801
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1802
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->AA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1803
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1804
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->TU:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1805
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->TM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1806
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1807
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1808
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DV:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1809
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1810
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->RV:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1811
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->OPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1812
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->MAXLEN:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1813
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->TI:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1814
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->I:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1815
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->LOCK:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1816
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->SV:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/Document;Ljava/io/OutputStream;)V
    .registers 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/DocumentException;
        }
    .end annotation

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/PdfDocument;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfDocument;-><init>()V

    invoke-direct {p0, v0, p2}, Lcom/itextpdf/text/pdf/PdfWriter;-><init>(Lcom/itextpdf/text/pdf/PdfDocument;Ljava/io/OutputStream;)V

    const/4 p2, 0x1

    .line 111
    new-array v0, p2, [I

    const/4 v1, 0x0

    aput v1, v0, v1

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->namePtr:[I

    .line 113
    iput-boolean p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->rotateContents:Z

    const/4 p2, 0x0

    .line 116
    iput-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    .line 117
    iput v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentStructArrayNumber:I

    .line 127
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->updateRootKids:Z

    .line 132
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    .line 133
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->needAppearances:Z

    .line 146
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFieldsInternalCall:Z

    .line 149
    new-instance p2, Ljava/util/HashSet;

    invoke-direct {p2}, Ljava/util/HashSet;-><init>()V

    iput-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedRadioButtons:Ljava/util/HashSet;

    .line 150
    new-instance p2, Ljava/util/HashMap;

    invoke-direct {p2}, Ljava/util/HashMap;-><init>()V

    iput-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedTextFields:Ljava/util/HashMap;

    .line 152
    new-instance p2, Ljava/util/HashSet;

    invoke-direct {p2}, Ljava/util/HashSet;-><init>()V

    iput-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->readersWithImportedStructureTreeRootKids:Ljava/util/HashSet;

    .line 187
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pdf:Lcom/itextpdf/text/pdf/PdfDocument;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/Document;->addDocListener(Lcom/itextpdf/text/DocListener;)V

    .line 188
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pdf:Lcom/itextpdf/text/pdf/PdfDocument;

    invoke-virtual {p1, p0}, Lcom/itextpdf/text/pdf/PdfDocument;->addWriter(Lcom/itextpdf/text/pdf/PdfWriter;)V

    .line 189
    new-instance p1, Ljava/util/HashMap;

    invoke-direct {p1}, Ljava/util/HashMap;-><init>()V

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    .line 190
    new-instance p1, Ljava/util/HashMap;

    invoke-direct {p1}, Ljava/util/HashMap;-><init>()V

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->parentObjects:Ljava/util/HashMap;

    .line 191
    new-instance p1, Ljava/util/HashSet;

    invoke-direct {p1}, Ljava/util/HashSet;-><init>()V

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->disableIndirects:Ljava/util/HashSet;

    .line 193
    new-instance p1, Ljava/util/LinkedHashMap;

    invoke-direct {p1}, Ljava/util/LinkedHashMap;-><init>()V

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    .line 194
    new-instance p1, Ljava/util/ArrayList;

    invoke-direct {p1}, Ljava/util/ArrayList;-><init>()V

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->savedObjects:Ljava/util/ArrayList;

    .line 195
    new-instance p1, Ljava/util/ArrayList;

    invoke-direct {p1}, Ljava/util/ArrayList;-><init>()V

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    return-void
.end method

.method static synthetic access$000(Lcom/itextpdf/text/pdf/PdfCopy;)Z
    .registers 1

    .line 0
    iget-boolean p0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->rotateContents:Z

    return p0
.end method

.method private addFieldResources(Lcom/itextpdf/text/pdf/PdfDictionary;)V
    .registers 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldArray:Lcom/itextpdf/text/pdf/PdfArray;

    if-nez v0, :cond_5

    return-void

    .line 1680
    :cond_5
    new-instance v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 1681
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ACROFORM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1682
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->FIELDS:Lcom/itextpdf/text/pdf/PdfName;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldArray:Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {v0, p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1683
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v1, Lcom/itextpdf/text/pdf/PdfString;

    const-string v2, "/Helv 0 Tf 0 g "

    invoke-direct {v1, v2}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1684
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldTemplates:Ljava/util/HashSet;

    invoke-virtual {p1}, Ljava/util/HashSet;->isEmpty()Z

    move-result p1

    if-eqz p1, :cond_2b

    return-void

    .line 1686
    :cond_2b
    new-instance p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p1}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 1687
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1688
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldTemplates:Ljava/util/HashSet;

    invoke-virtual {v0}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_3b
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_51

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfTemplate;

    .line 1689
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfTemplate;->getResources()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-static {p1, v1}, Lcom/itextpdf/text/pdf/PdfFormField;->mergeResources(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfDictionary;)V

    goto :goto_3b

    .line 1692
    :cond_51
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    if-nez v0, :cond_63

    .line 1694
    new-instance v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 1695
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1697
    :cond_63
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->HELV:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result p1

    if-nez p1, :cond_9b

    .line 1698
    new-instance p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-direct {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 1699
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->BASEFONT:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->HELVETICA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1700
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->WIN_ANSI_ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1701
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->NAME:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->HELV:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1702
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->SUBTYPE:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TYPE1:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1703
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->HELV:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfIndirectObject;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object p1

    invoke-virtual {v0, v1, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1705
    :cond_9b
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->ZADB:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result p1

    if-nez p1, :cond_cc

    .line 1706
    new-instance p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-direct {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 1707
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->BASEFONT:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ZAPFDINGBATS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1708
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->NAME:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ZADB:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1709
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->SUBTYPE:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TYPE1:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1710
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ZADB:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfIndirectObject;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object p1

    invoke-virtual {v0, v1, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_cc
    return-void
.end method

.method private addPageOffsetToField(Ljava/util/Map;I)V
    .registers 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/text/pdf/AcroFields$Item;",
            ">;I)V"
        }
    .end annotation

    if-nez p2, :cond_3

    return-void

    .line 0
    :cond_3
    invoke-interface {p1}, Ljava/util/Map;->values()Ljava/util/Collection;

    move-result-object p1

    invoke-interface {p1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :cond_b
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_2d

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    .line 1331
    check-cast v0, Lcom/itextpdf/text/pdf/AcroFields$Item;

    const/4 v1, 0x0

    :goto_18
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    .line 1332
    move-result v2

    if-ge v1, v2, :cond_b

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getPage(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    .line 1333
    move-result v2

    add-int/2addr v2, p2

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->forcePage(II)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_18

    :cond_2d
    return-void
.end method

.method private adjustTabOrder(Lcom/itextpdf/text/pdf/PdfArray;Lcom/itextpdf/text/pdf/PdfIndirectReference;Lcom/itextpdf/text/pdf/PdfNumber;)V
    .registers 10

    .line 0
    invoke-virtual {p3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p3

    .line 1622
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tabOrder:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/ArrayList;

    const/4 v1, 0x0

    if-nez v0, :cond_34

    .line 1624
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 1625
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    :goto_1a
    if-ge v1, v2, :cond_24

    .line 1627
    sget-object v3, Lcom/itextpdf/text/pdf/PdfCopy;->zero:Ljava/lang/Integer;

    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_1a

    .line 1629
    :cond_24
    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p3

    invoke-virtual {v0, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 1630
    iget-object p3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tabOrder:Ljava/util/HashMap;

    invoke-virtual {p3, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1631
    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    goto :goto_67

    .line 1634
    :cond_34
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    move v3, v2

    :goto_3b
    const/4 v4, -0x2

    if-ltz v3, :cond_5b

    .line 1636
    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Integer;

    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    move-result v5

    if-gt v5, p3, :cond_58

    add-int/lit8 v3, v3, 0x1

    .line 1637
    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v0, v3, v2}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 1638
    invoke-virtual {p1, v3, p2}, Lcom/itextpdf/text/pdf/PdfArray;->add(ILcom/itextpdf/text/pdf/PdfObject;)V

    const/4 v2, -0x2

    goto :goto_5b

    :cond_58
    add-int/lit8 v3, v3, -0x1

    goto :goto_3b

    :cond_5b
    :goto_5b
    if-eq v2, v4, :cond_67

    .line 1644
    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p3

    invoke-virtual {v0, v1, p3}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 1645
    invoke-virtual {p1, v1, p2}, Lcom/itextpdf/text/pdf/PdfArray;->add(ILcom/itextpdf/text/pdf/PdfObject;)V

    :cond_67
    :goto_67
    return-void
.end method

.method private branchForm(Ljava/util/HashMap;Lcom/itextpdf/text/pdf/PdfIndirectReference;Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfArray;
    .registers 22
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Ljava/lang/Object;",
            ">;",
            "Lcom/itextpdf/text/pdf/PdfIndirectReference;",
            "Ljava/lang/String;",
            ")",
            "Lcom/itextpdf/text/pdf/PdfArray;"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    move-object/from16 v0, p0

    move-object/from16 v1, p2

    .line 0
    new-instance v2, Lcom/itextpdf/text/pdf/PdfArray;

    .line 1528
    invoke-direct {v2}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    invoke-virtual/range {p1 .. p1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_11
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_226

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 1529
    move-result-object v4

    check-cast v4, Ljava/util/Map$Entry;

    invoke-interface {v4}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    .line 1530
    move-result-object v5

    check-cast v5, Ljava/lang/String;

    .line 1531
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    .line 1532
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfCopy;->getPdfIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v6

    new-instance v7, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v7}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 1534
    if-eqz v1, :cond_37

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->PARENT:Lcom/itextpdf/text/pdf/PdfName;

    .line 1535
    invoke-virtual {v7, v8, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_37
    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->T:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v9, Lcom/itextpdf/text/pdf/PdfString;

    const-string v10, "UnicodeBig"

    invoke-direct {v9, v5, v10}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 1536
    invoke-virtual {v7, v8, v9}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v9, p3

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, "."

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1537
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    iget-object v8, v0, Lcom/itextpdf/text/pdf/PdfCopy;->calculationOrder:Ljava/util/ArrayList;

    invoke-virtual {v8, v5}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    .line 1539
    move-result v8

    if-ltz v8, :cond_66

    iget-object v10, v0, Lcom/itextpdf/text/pdf/PdfCopy;->calculationOrderRefs:Ljava/util/ArrayList;

    .line 1540
    invoke-virtual {v10, v8, v6}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    :cond_66
    instance-of v8, v4, Ljava/util/HashMap;

    .line 1541
    const/4 v10, 0x1

    if-eqz v8, :cond_80

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->KIDS:Lcom/itextpdf/text/pdf/PdfName;

    check-cast v4, Ljava/util/HashMap;

    invoke-direct {v0, v4, v6, v5}, Lcom/itextpdf/text/pdf/PdfCopy;->branchForm(Ljava/util/HashMap;Lcom/itextpdf/text/pdf/PdfIndirectReference;Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfArray;

    .line 1542
    move-result-object v4

    invoke-virtual {v7, v8, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1543
    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    invoke-virtual {v0, v7, v6, v10}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfIndirectReference;Z)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    .line 1546
    move-object/from16 v16, v3

    goto/16 :goto_220

    .line 1547
    :cond_80
    check-cast v4, Ljava/util/ArrayList;

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 1548
    invoke-virtual {v7, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->mergeDifferent(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v8

    .line 1549
    const/4 v11, 0x3

    if-ne v8, v11, :cond_ce

    const/4 v5, 0x2

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 1550
    invoke-virtual {v7, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->mergeDifferent(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {v4, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    .line 1551
    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    iget-object v5, v0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    sub-int/2addr v4, v10

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    .line 1552
    check-cast v4, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    iget-object v4, v4, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->mergedFields:Lcom/itextpdf/text/pdf/PdfArray;

    sget-object v5, Lcom/itextpdf/text/pdf/PdfCopy;->iTextTag:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    .line 1553
    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/PdfNumber;

    sget-object v8, Lcom/itextpdf/text/pdf/PdfCopy;->iTextTag:Lcom/itextpdf/text/pdf/PdfName;

    .line 1554
    invoke-virtual {v7, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v11, Lcom/itextpdf/text/pdf/PdfName;->ANNOT:Lcom/itextpdf/text/pdf/PdfName;

    .line 1555
    invoke-virtual {v7, v8, v11}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-direct {v0, v4, v6, v5}, Lcom/itextpdf/text/pdf/PdfCopy;->adjustTabOrder(Lcom/itextpdf/text/pdf/PdfArray;Lcom/itextpdf/text/pdf/PdfIndirectReference;Lcom/itextpdf/text/pdf/PdfNumber;)V

    move-object/from16 v16, v3

    .line 1557
    const/4 v3, 0x1

    goto/16 :goto_21a

    :cond_ce
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 1558
    move-result-object v8

    check-cast v8, Lcom/itextpdf/text/pdf/PdfDictionary;

    new-instance v11, Lcom/itextpdf/text/pdf/PdfArray;

    .line 1559
    invoke-direct {v11}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    const/4 v12, 0x1

    :goto_da
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    .line 1560
    move-result v13

    if-ge v12, v13, :cond_212

    invoke-virtual {v4, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Ljava/lang/Integer;

    .line 1561
    invoke-virtual {v13}, Ljava/lang/Integer;->intValue()I

    move-result v13

    iget-object v14, v0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    sub-int/2addr v13, v10

    invoke-virtual {v14, v13}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    .line 1562
    check-cast v13, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    iget-object v13, v13, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->mergedFields:Lcom/itextpdf/text/pdf/PdfArray;

    new-instance v14, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v14}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 1563
    add-int/lit8 v15, v12, 0x1

    invoke-virtual {v4, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 1564
    invoke-virtual {v14, v15}, Lcom/itextpdf/text/pdf/PdfDictionary;->merge(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    sget-object v15, Lcom/itextpdf/text/pdf/PdfName;->PARENT:Lcom/itextpdf/text/pdf/PdfName;

    .line 1565
    invoke-virtual {v14, v15, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    sget-object v15, Lcom/itextpdf/text/pdf/PdfCopy;->iTextTag:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v14, v15}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    .line 1566
    move-result-object v15

    check-cast v15, Lcom/itextpdf/text/pdf/PdfNumber;

    sget-object v10, Lcom/itextpdf/text/pdf/PdfCopy;->iTextTag:Lcom/itextpdf/text/pdf/PdfName;

    .line 1567
    invoke-virtual {v14, v10}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    invoke-static {v8}, Lcom/itextpdf/text/pdf/PdfCopy;->isTextField(Lcom/itextpdf/text/pdf/PdfDictionary;)Z

    .line 1568
    move-result v10

    if-eqz v10, :cond_192

    sget-object v10, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    .line 1569
    invoke-virtual {v8, v10}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v10

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->AP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v14, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->getDirectObject(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    .line 1571
    if-eqz v10, :cond_18f

    if-eqz v5, :cond_18f

    iget-object v1, v0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedTextFields:Ljava/util/HashMap;

    invoke-virtual {v1, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 1572
    move-result v1

    if-nez v1, :cond_13b

    iget-object v1, v0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedTextFields:Ljava/util/HashMap;

    .line 1575
    invoke-virtual {v1, v4, v10}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_18f

    :cond_13b
    :try_start_13b
    new-instance v1, Lcom/itextpdf/text/pdf/TextField;

    .line 1576
    const/4 v10, 0x0

    invoke-direct {v1, v0, v10, v10}, Lcom/itextpdf/text/pdf/TextField;-><init>(Lcom/itextpdf/text/pdf/PdfWriter;Lcom/itextpdf/text/Rectangle;Ljava/lang/String;)V

    iget-object v10, v0, Lcom/itextpdf/text/pdf/PdfCopy;->fields:Ljava/util/ArrayList;
    :try_end_143
    .catch Lcom/itextpdf/text/DocumentException; {:try_start_13b .. :try_end_143} :catch_18f

    move-object/from16 v16, v3

    const/4 v3, 0x0

    :try_start_146
    invoke-virtual {v10, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/itextpdf/text/pdf/AcroFields;

    .line 1577
    invoke-virtual {v10, v14, v1}, Lcom/itextpdf/text/pdf/AcroFields;->decodeGenericDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/BaseField;)V

    sget-object v10, Lcom/itextpdf/text/pdf/PdfName;->RECT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v14, v10}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v10

    .line 1578
    invoke-static {v10}, Lcom/itextpdf/text/pdf/PdfReader;->getNormalizedRectangle(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/Rectangle;

    move-result-object v10

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/TextField;->getRotation()I

    move-result v3

    const/16 v9, 0x5a

    if-eq v3, v9, :cond_169

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/TextField;->getRotation()I

    move-result v3

    .line 1579
    const/16 v9, 0x10e

    if-ne v3, v9, :cond_16d

    .line 1580
    :cond_169
    invoke-virtual {v10}, Lcom/itextpdf/text/Rectangle;->rotate()Lcom/itextpdf/text/Rectangle;

    .line 1581
    move-result-object v10

    :cond_16d
    invoke-virtual {v1, v10}, Lcom/itextpdf/text/pdf/TextField;->setBox(Lcom/itextpdf/text/Rectangle;)V

    iget-object v3, v0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedTextFields:Ljava/util/HashMap;

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfString;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    .line 1582
    move-result-object v3

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/TextField;->setText(Ljava/lang/String;)V

    .line 1583
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/TextField;->getAppearance()Lcom/itextpdf/text/pdf/PdfAppearance;

    move-result-object v1

    check-cast v5, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->N:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfAppearance;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v1

    invoke-virtual {v5, v3, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V
    :try_end_18e
    .catch Lcom/itextpdf/text/DocumentException; {:try_start_146 .. :try_end_18e} :catch_1ec

    goto :goto_1ec

    :catch_18f
    :cond_18f
    :goto_18f
    move-object/from16 v16, v3

    .line 1589
    goto :goto_1ec

    :cond_192
    move-object/from16 v16, v3

    invoke-static {v8}, Lcom/itextpdf/text/pdf/PdfCopy;->isCheckButton(Lcom/itextpdf/text/pdf/PdfDictionary;)Z

    .line 1590
    move-result v1

    if-eqz v1, :cond_1b0

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    .line 1591
    invoke-virtual {v8, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v1

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v14, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v3

    .line 1593
    if-eqz v1, :cond_1ec

    if-eqz v3, :cond_1ec

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    .line 1594
    invoke-virtual {v14, v3, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_1ec

    :cond_1b0
    invoke-static {v8}, Lcom/itextpdf/text/pdf/PdfCopy;->isRadioButton(Lcom/itextpdf/text/pdf/PdfDictionary;)Z

    .line 1595
    move-result v1

    if-eqz v1, :cond_1ec

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    .line 1596
    invoke-virtual {v8, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v1

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v14, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v3

    .line 1597
    if-eqz v1, :cond_1ec

    if-eqz v3, :cond_1ec

    invoke-virtual {v0, v14}, Lcom/itextpdf/text/pdf/PdfCopy;->getOffStateName(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v5

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    .line 1598
    move-result v3

    if-nez v3, :cond_1ec

    iget-object v3, v0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedRadioButtons:Ljava/util/HashSet;

    invoke-virtual {v3, v4}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 1599
    move-result v3

    if-nez v3, :cond_1e3

    iget-object v3, v0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedRadioButtons:Ljava/util/HashSet;

    .line 1600
    invoke-virtual {v3, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    .line 1602
    invoke-virtual {v14, v3, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_1ec

    :cond_1e3
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->AS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v14}, Lcom/itextpdf/text/pdf/PdfCopy;->getOffStateName(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfName;

    .line 1606
    move-result-object v3

    invoke-virtual {v14, v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :catch_1ec
    :cond_1ec
    :goto_1ec
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->ANNOT:Lcom/itextpdf/text/pdf/PdfName;

    .line 1607
    invoke-virtual {v14, v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfCopy;->getPdfIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v1

    const/4 v3, 0x1

    invoke-virtual {v0, v14, v1, v3}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfIndirectReference;Z)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    move-result-object v1

    .line 1608
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfIndirectObject;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 1609
    move-result-object v1

    invoke-direct {v0, v13, v1, v15}, Lcom/itextpdf/text/pdf/PdfCopy;->adjustTabOrder(Lcom/itextpdf/text/pdf/PdfArray;Lcom/itextpdf/text/pdf/PdfIndirectReference;Lcom/itextpdf/text/pdf/PdfNumber;)V

    invoke-virtual {v11, v1}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    add-int/lit8 v12, v12, 0x2

    move-object/from16 v3, v16

    move-object/from16 v1, p2

    const/4 v5, 0x0

    move-object/from16 v9, p3

    const/4 v10, 0x1

    goto/16 :goto_da

    .line 1611
    :cond_212
    move-object/from16 v16, v3

    const/4 v3, 0x1

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->KIDS:Lcom/itextpdf/text/pdf/PdfName;

    .line 1613
    invoke-virtual {v7, v1, v11}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1614
    :goto_21a
    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    invoke-virtual {v0, v7, v6, v3}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfIndirectReference;Z)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    :goto_220
    move-object/from16 v3, v16

    move-object/from16 v1, p2

    goto/16 :goto_11

    :cond_226
    return-object v2
.end method

.method private checkStructureTreeRootKids(Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;)I
    .registers 7

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x1

    if-nez v0, :cond_a

    return v1

    .line 322
    :cond_a
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_10
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    const/4 v3, 0x0

    if-eqz v2, :cond_29

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    .line 323
    iget-object v2, v2, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    iget-object v4, p1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v2, v4}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_10

    const/4 v0, 0x1

    goto :goto_2a

    :cond_29
    const/4 v0, 0x0

    :goto_2a
    if-nez v0, :cond_2d

    return v1

    .line 332
    :cond_2d
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    sub-int/2addr v2, v1

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    .line 333
    iget-object v2, v0, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    iget-object v4, p1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v2, v4}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_58

    .line 335
    iget v2, p1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->pageNumber:I

    iget v0, v0, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->pageNumber:I

    if-le v2, v0, :cond_58

    .line 336
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->readersWithImportedStructureTreeRootKids:Ljava/util/HashSet;

    iget-object p1, p1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v0, p1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_57

    return v3

    :cond_57
    return v1

    :cond_58
    const/4 p1, -0x1

    return p1
.end method

.method private clearIndirects(Lcom/itextpdf/text/pdf/PdfReader;)V
    .registers 7

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ljava/util/HashMap;

    .line 298
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 299
    invoke-virtual {p1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_15
    :goto_15
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_60

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 300
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;

    iget-object v3, v3, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->theRef:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 301
    new-instance v4, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v4, v3}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 302
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {v3, v4}, Ljava/util/LinkedHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-nez v3, :cond_40

    .line 304
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_15

    .line 306
    :cond_40
    iget-object v4, v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v4

    if-nez v4, :cond_58

    iget-object v4, v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v4

    if-nez v4, :cond_58

    iget-object v3, v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v3

    if-eqz v3, :cond_15

    .line 307
    :cond_58
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_15

    .line 311
    :cond_60
    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_64
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_74

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/RefKey;

    .line 312
    invoke-virtual {p1, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_64

    :cond_74
    return-void
.end method

.method private containsInactivePg(Lcom/itextpdf/text/pdf/PdfDictionary;Ljava/util/HashSet;)Z
    .registers 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/itextpdf/text/pdf/PdfDictionary;",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            ">;)Z"
        }
    .end annotation

    .line 0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->PG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-eqz p1, :cond_17

    .line 1037
    new-instance v0, Lcom/itextpdf/text/pdf/RefKey;

    check-cast p1, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {p2, v0}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result p1

    if-nez p1, :cond_17

    const/4 p1, 0x1

    return p1

    :cond_17
    const/4 p1, 0x0

    return p1
.end method

.method private createAcroForms()V
    .registers 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldTree:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_2b

    .line 1459
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_e
    :goto_e
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_2a

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    .line 1460
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->mergedFields:Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    if-lez v2, :cond_e

    .line 1461
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->mergedFields:Lcom/itextpdf/text/pdf/PdfArray;

    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->annotsIndirectReference:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {p0, v2, v1}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfIndirectReference;)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    goto :goto_e

    :cond_2a
    return-void

    .line 1465
    :cond_2b
    new-instance v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 1466
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DR:Lcom/itextpdf/text/pdf/PdfName;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->resources:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0, v2}, Lcom/itextpdf/text/pdf/PdfCopy;->propagate(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1468
    iget-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->needAppearances:Z

    if-eqz v1, :cond_46

    .line 1469
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->NEEDAPPEARANCES:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfBoolean;->PDFTRUE:Lcom/itextpdf/text/pdf/PdfBoolean;

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1471
    :cond_46
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DA:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v2, Lcom/itextpdf/text/pdf/PdfString;

    const-string v3, "/Helv 0 Tf 0 g "

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1472
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tabOrder:Ljava/util/HashMap;

    .line 1473
    new-instance v1, Ljava/util/ArrayList;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->calculationOrder:Ljava/util/ArrayList;

    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->calculationOrderRefs:Ljava/util/ArrayList;

    .line 1474
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FIELDS:Lcom/itextpdf/text/pdf/PdfName;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldTree:Ljava/util/HashMap;

    const/4 v3, 0x0

    const-string v4, ""

    invoke-direct {p0, v2, v3, v4}, Lcom/itextpdf/text/pdf/PdfCopy;->branchForm(Ljava/util/HashMap;Lcom/itextpdf/text/pdf/PdfIndirectReference;Ljava/lang/String;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1475
    iget-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->hasSignature:Z

    if-eqz v1, :cond_7f

    .line 1476
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->SIGFLAGS:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v2, Lcom/itextpdf/text/pdf/PdfNumber;

    const/4 v3, 0x3

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1477
    :cond_7f
    new-instance v1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    const/4 v2, 0x0

    .line 1478
    :goto_85
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->calculationOrderRefs:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-ge v2, v3, :cond_9f

    .line 1479
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->calculationOrderRefs:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    .line 1480
    instance-of v4, v3, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    if-eqz v4, :cond_9c

    .line 1481
    check-cast v3, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    :cond_9c
    add-int/lit8 v2, v2, 0x1

    goto :goto_85

    .line 1483
    :cond_9f
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    if-lez v2, :cond_aa

    .line 1484
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->CO:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1485
    :cond_aa
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfIndirectObject;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->acroForm:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 1486
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_ba
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_ce

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    .line 1487
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->mergedFields:Lcom/itextpdf/text/pdf/PdfArray;

    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->annotsIndirectReference:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {p0, v2, v1}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfIndirectReference;)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    goto :goto_ba

    :cond_ce
    return-void
.end method

.method private createWidgets(Ljava/util/ArrayList;Lcom/itextpdf/text/pdf/AcroFields$Item;)V
    .registers 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Object;",
            ">;",
            "Lcom/itextpdf/text/pdf/AcroFields$Item;",
            ")V"
        }
    .end annotation

    const/4 v0, 0x0

    .line 0
    :goto_1
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/AcroFields$Item;->size()I

    move-result v1

    if-ge v0, v1, :cond_68

    .line 1418
    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getPage(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {p1, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 1419
    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 1420
    move-result-object v1

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->DR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-eqz v2, :cond_25

    .line 1422
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->resources:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-static {v3, v2}, Lcom/itextpdf/text/pdf/PdfFormField;->mergeResources(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfDictionary;)V

    .line 1423
    :cond_25
    new-instance v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v2}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 1424
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :cond_32
    :goto_32
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_4e

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 1425
    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/PdfName;

    .line 1426
    sget-object v5, Lcom/itextpdf/text/pdf/PdfCopy;->widgetKeys:Ljava/util/HashSet;

    invoke-virtual {v5, v4}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_32

    .line 1427
    invoke-virtual {v1, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-virtual {v2, v4, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1429
    goto :goto_32

    :cond_4e
    sget-object v1, Lcom/itextpdf/text/pdf/PdfCopy;->iTextTag:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v3, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getTabOrder(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    add-int/lit8 v4, v4, 0x1

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {v2, v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1430
    invoke-virtual {p1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_68
    return-void
.end method

.method private findActiveParents(Ljava/util/HashSet;)Ljava/util/ArrayList;
    .registers 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            ">;)",
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfIndirectReference;",
            ">;"
        }
    .end annotation

    .line 0
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 1045
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1, p1}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    const/4 v2, 0x0

    .line 1046
    :goto_b
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-ge v2, v3, :cond_53

    .line 1047
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/LinkedHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-eqz v3, :cond_50

    .line 1048
    iget-object v4, v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v4

    if-nez v4, :cond_28

    goto :goto_50

    .line 1049
    :cond_28
    iget-object v3, v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v3, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->P:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-eqz v3, :cond_50

    .line 1050
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v4

    if-nez v4, :cond_50

    .line 1051
    new-instance v4, Lcom/itextpdf/text/pdf/RefKey;

    check-cast v3, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {v4, v3}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 1052
    invoke-virtual {p1, v4}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_50

    .line 1053
    invoke-virtual {p1, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1054
    invoke-virtual {v1, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 1055
    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_50
    :goto_50
    add-int/lit8 v2, v2, 0x1

    goto :goto_b

    :cond_53
    return-object v0
.end method

.method private findActives(Ljava/util/ArrayList;Ljava/util/HashSet;Ljava/util/HashSet;)V
    .registers 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfIndirectReference;",
            ">;",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            ">;",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/PdfName;",
            ">;)V"
        }
    .end annotation

    const/4 v0, 0x0

    .line 0
    :goto_1
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-ge v0, v1, :cond_47

    .line 1092
    new-instance v1, Lcom/itextpdf/text/pdf/RefKey;

    invoke-virtual {p1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {v1, v2}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 1093
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {v2, v1}, Ljava/util/LinkedHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-eqz v1, :cond_44

    .line 1094
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    if-nez v2, :cond_21

    .line 1095
    goto :goto_44

    :cond_21
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v2

    if-eqz v2, :cond_3d

    packed-switch v2, :pswitch_data_48

    .line 1104
    goto :goto_44

    :pswitch_2d
    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0, v1, p1, p2, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->findActivesFromDict(Lcom/itextpdf/text/pdf/PdfDictionary;Ljava/util/ArrayList;Ljava/util/HashSet;Ljava/util/HashSet;)V

    .line 1100
    goto :goto_44

    :pswitch_35
    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {p0, v1, p1, p2, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->findActivesFromArray(Lcom/itextpdf/text/pdf/PdfArray;Ljava/util/ArrayList;Ljava/util/HashSet;Ljava/util/HashSet;)V

    .line 1097
    goto :goto_44

    :cond_3d
    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {p0, v1, p1, p2}, Lcom/itextpdf/text/pdf/PdfCopy;->findActivesFromReference(Lcom/itextpdf/text/pdf/PdfIndirectReference;Ljava/util/ArrayList;Ljava/util/HashSet;)V

    :cond_44
    :goto_44
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_47
    return-void

    :pswitch_data_48
    .packed-switch 0x5
        :pswitch_35
        :pswitch_2d
        :pswitch_2d
    .end packed-switch
.end method

.method private findActivesFromArray(Lcom/itextpdf/text/pdf/PdfArray;Ljava/util/ArrayList;Ljava/util/HashSet;Ljava/util/HashSet;)V
    .registers 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/itextpdf/text/pdf/PdfArray;",
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfIndirectReference;",
            ">;",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            ">;",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/PdfName;",
            ">;)V"
        }
    .end annotation

    .line 0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_4
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_2c

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfObject;

    .line 1123
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v1

    if-eqz v1, :cond_26

    packed-switch v1, :pswitch_data_2e

    goto :goto_4

    .line 1132
    :pswitch_1a
    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0, v0, p2, p3, p4}, Lcom/itextpdf/text/pdf/PdfCopy;->findActivesFromDict(Lcom/itextpdf/text/pdf/PdfDictionary;Ljava/util/ArrayList;Ljava/util/HashSet;Ljava/util/HashSet;)V

    goto :goto_4

    .line 1128
    :pswitch_20
    check-cast v0, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {p0, v0, p2, p3, p4}, Lcom/itextpdf/text/pdf/PdfCopy;->findActivesFromArray(Lcom/itextpdf/text/pdf/PdfArray;Ljava/util/ArrayList;Ljava/util/HashSet;Ljava/util/HashSet;)V

    goto :goto_4

    .line 1125
    :cond_26
    check-cast v0, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {p0, v0, p2, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->findActivesFromReference(Lcom/itextpdf/text/pdf/PdfIndirectReference;Ljava/util/ArrayList;Ljava/util/HashSet;)V

    goto :goto_4

    :cond_2c
    return-void

    nop

    :pswitch_data_2e
    .packed-switch 0x5
        :pswitch_20
        :pswitch_1a
        :pswitch_1a
    .end packed-switch
.end method

.method private findActivesFromDict(Lcom/itextpdf/text/pdf/PdfDictionary;Ljava/util/ArrayList;Ljava/util/HashSet;Ljava/util/HashSet;)V
    .registers 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/itextpdf/text/pdf/PdfDictionary;",
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfIndirectReference;",
            ">;",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            ">;",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/PdfName;",
            ">;)V"
        }
    .end annotation

    .line 0
    invoke-direct {p0, p1, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->containsInactivePg(Lcom/itextpdf/text/pdf/PdfDictionary;Ljava/util/HashSet;)Z

    move-result v0

    if-eqz v0, :cond_7

    return-void

    .line 1140
    :cond_7
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_f
    :goto_f
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_7c

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    .line 1141
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    .line 1142
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->P:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_28

    goto :goto_f

    .line 1143
    :cond_28
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->C:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_60

    .line 1144
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v1

    if-eqz v1, :cond_54

    .line 1145
    check-cast v2, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfArray;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_3c
    :goto_3c
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_f

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfObject;

    .line 1146
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v3

    if-eqz v3, :cond_3c

    check-cast v2, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p4, v2}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_3c

    .line 1149
    :cond_54
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v1

    if-eqz v1, :cond_f

    check-cast v2, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p4, v2}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_f

    .line 1152
    :cond_60
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v1

    if-eqz v1, :cond_76

    packed-switch v1, :pswitch_data_7e

    goto :goto_f

    .line 1161
    :pswitch_6a
    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0, v2, p2, p3, p4}, Lcom/itextpdf/text/pdf/PdfCopy;->findActivesFromDict(Lcom/itextpdf/text/pdf/PdfDictionary;Ljava/util/ArrayList;Ljava/util/HashSet;Ljava/util/HashSet;)V

    goto :goto_f

    .line 1157
    :pswitch_70
    check-cast v2, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {p0, v2, p2, p3, p4}, Lcom/itextpdf/text/pdf/PdfCopy;->findActivesFromArray(Lcom/itextpdf/text/pdf/PdfArray;Ljava/util/ArrayList;Ljava/util/HashSet;Ljava/util/HashSet;)V

    goto :goto_f

    .line 1154
    :cond_76
    check-cast v2, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {p0, v2, p2, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->findActivesFromReference(Lcom/itextpdf/text/pdf/PdfIndirectReference;Ljava/util/ArrayList;Ljava/util/HashSet;)V

    goto :goto_f

    :cond_7c
    return-void

    nop

    :pswitch_data_7e
    .packed-switch 0x5
        :pswitch_70
        :pswitch_6a
        :pswitch_6a
    .end packed-switch
.end method

.method private findActivesFromReference(Lcom/itextpdf/text/pdf/PdfIndirectReference;Ljava/util/ArrayList;Ljava/util/HashSet;)V
    .registers 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/itextpdf/text/pdf/PdfIndirectReference;",
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfIndirectReference;",
            ">;",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            ">;)V"
        }
    .end annotation

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 1112
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {v1, v0}, Ljava/util/LinkedHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-eqz v1, :cond_22

    .line 1113
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v2

    if-eqz v2, :cond_22

    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0, v1, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->containsInactivePg(Lcom/itextpdf/text/pdf/PdfDictionary;Ljava/util/HashSet;)Z

    move-result v1

    if-eqz v1, :cond_22

    return-void

    .line 1115
    :cond_22
    invoke-virtual {p3, v0}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_2e

    .line 1116
    invoke-virtual {p3, v0}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 1117
    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_2e
    return-void
.end method

.method private fixPgKey(Ljava/util/ArrayList;Ljava/util/HashSet;)V
    .registers 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfIndirectReference;",
            ">;",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            ">;)V"
        }
    .end annotation

    .line 0
    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :cond_4
    :goto_4
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_a0

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 1064
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    new-instance v2, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v2, v0}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {v1, v2}, Ljava/util/LinkedHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-eqz v0, :cond_4

    .line 1065
    iget-object v1, v0, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    if-nez v1, :cond_28

    goto :goto_4

    .line 1066
    :cond_28
    iget-object v0, v0, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 1067
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->PG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    if-eqz v1, :cond_4

    .line 1068
    new-instance v2, Lcom/itextpdf/text/pdf/RefKey;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {v2, v1}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {p2, v2}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_42

    goto :goto_4

    .line 1069
    :cond_42
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->K:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v1

    if-nez v1, :cond_4b

    goto :goto_4

    :cond_4b
    const/4 v2, 0x0

    .line 1071
    :goto_4c
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_4

    .line 1072
    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    .line 1073
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v4

    if-eqz v4, :cond_63

    add-int/lit8 v3, v2, -0x1

    .line 1074
    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->remove(I)Lcom/itextpdf/text/pdf/PdfObject;

    move v2, v3

    goto :goto_9d

    .line 1076
    :cond_63
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    new-instance v5, Lcom/itextpdf/text/pdf/RefKey;

    check-cast v3, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {v5, v3}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {v4, v5}, Ljava/util/LinkedHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-eqz v3, :cond_9d

    .line 1077
    iget-object v4, v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v4

    if-eqz v4, :cond_9d

    .line 1078
    iget-object v3, v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v3, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->PG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-eqz v3, :cond_9d

    .line 1079
    new-instance v4, Lcom/itextpdf/text/pdf/RefKey;

    move-object v5, v3

    check-cast v5, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {v4, v5}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {p2, v4}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_9d

    .line 1080
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->PG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto/16 :goto_4

    :cond_9d
    :goto_9d
    add-int/lit8 v2, v2, 0x1

    goto :goto_4c

    :cond_a0
    return-void
.end method

.method private static getCOName(Lcom/itextpdf/text/pdf/PdfReader;Lcom/itextpdf/text/pdf/PRIndirectReference;)Ljava/lang/String;
    .registers 4

    const-string p0, ""

    :goto_2
    if-eqz p1, :cond_3d

    .line 0
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    .line 1300
    move-result-object p1

    if-eqz p1, :cond_3d

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v0

    .line 1302
    const/4 v1, 0x6

    if-eq v0, v1, :cond_12

    .line 1303
    goto :goto_3d

    :cond_12
    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->T:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsString(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfString;

    .line 1305
    move-result-object v0

    if-eqz v0, :cond_34

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "."

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1307
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    :cond_34
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->PARENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 1309
    goto :goto_2

    :cond_3d
    :goto_3d
    const-string p1, "."

    invoke-virtual {p0, p1}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    .line 1310
    move-result p1

    if-eqz p1, :cond_50

    const/4 p1, 0x0

    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v0

    add-int/lit8 v0, v0, -0x2

    invoke-virtual {p0, p1, v0}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object p0

    :cond_50
    return-object p0
.end method

.method static getFlags(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/lang/Integer;
    .registers 3

    .line 0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v0

    .line 1821
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->BTN:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_10

    return-object v1

    .line 1823
    :cond_10
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p0

    if-nez p0, :cond_19

    return-object v1

    .line 1826
    :cond_19
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p0

    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p0

    return-object p0
.end method

.method static isCheckButton(Lcom/itextpdf/text/pdf/PdfDictionary;)Z
    .registers 3

    .line 0
    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->getFlags(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/lang/Integer;

    move-result-object p0

    if-eqz p0, :cond_1c

    .line 1831
    invoke-virtual {p0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    const/high16 v1, 0x10000

    and-int/2addr v0, v1

    if-nez v0, :cond_1a

    invoke-virtual {p0}, Ljava/lang/Integer;->intValue()I

    move-result p0

    const v0, 0x8000

    and-int/2addr p0, v0

    if-nez p0, :cond_1a

    goto :goto_1c

    :cond_1a
    const/4 p0, 0x0

    goto :goto_1d

    :cond_1c
    :goto_1c
    const/4 p0, 0x1

    :goto_1d
    return p0
.end method

.method static isRadioButton(Lcom/itextpdf/text/pdf/PdfDictionary;)Z
    .registers 3

    .line 0
    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->getFlags(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/lang/Integer;

    move-result-object p0

    if-eqz p0, :cond_1b

    .line 1836
    invoke-virtual {p0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    const/high16 v1, 0x10000

    and-int/2addr v0, v1

    if-nez v0, :cond_1b

    invoke-virtual {p0}, Ljava/lang/Integer;->intValue()I

    move-result p0

    const v0, 0x8000

    and-int/2addr p0, v0

    if-eqz p0, :cond_1b

    const/4 p0, 0x1

    goto :goto_1c

    :cond_1b
    const/4 p0, 0x0

    :goto_1c
    return p0
.end method

.method static isTextField(Lcom/itextpdf/text/pdf/PdfDictionary;)Z
    .registers 2

    .line 0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object p0

    .line 1841
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->TX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, p0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result p0

    return p0
.end method

.method private mergeField(Ljava/lang/String;Lcom/itextpdf/text/pdf/AcroFields$Item;)V
    .registers 9

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldTree:Ljava/util/HashMap;

    .line 1348
    new-instance v1, Ljava/util/StringTokenizer;

    const-string v2, "."

    invoke-direct {v1, p1, v2}, Ljava/util/StringTokenizer;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 1349
    invoke-virtual {v1}, Ljava/util/StringTokenizer;->hasMoreTokens()Z

    move-result p1

    if-nez p1, :cond_10

    return-void

    .line 1352
    :cond_10
    :goto_10
    invoke-virtual {v1}, Ljava/util/StringTokenizer;->nextToken()Ljava/lang/String;

    move-result-object p1

    .line 1353
    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    .line 1354
    invoke-virtual {v1}, Ljava/util/StringTokenizer;->hasMoreTokens()Z

    move-result v3

    if-eqz v3, :cond_35

    if-nez v2, :cond_2c

    .line 1356
    new-instance v2, Ljava/util/LinkedHashMap;

    invoke-direct {v2}, Ljava/util/LinkedHashMap;-><init>()V

    .line 1357
    invoke-virtual {v0, p1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1358
    move-object v0, v2

    check-cast v0, Ljava/util/HashMap;

    goto :goto_10

    .line 1361
    :cond_2c
    instance-of p1, v2, Ljava/util/HashMap;

    if-eqz p1, :cond_34

    .line 1362
    move-object v0, v2

    check-cast v0, Ljava/util/HashMap;

    goto :goto_10

    :cond_34
    return-void

    .line 1367
    :cond_35
    instance-of v1, v2, Ljava/util/HashMap;

    if-eqz v1, :cond_3a

    return-void

    :cond_3a
    const/4 v1, 0x0

    .line 1369
    invoke-virtual {p2, v1}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getMerged(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    if-nez v2, :cond_8b

    .line 1371
    new-instance v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 1372
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->SIG:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_57

    const/4 v2, 0x1

    .line 1373
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->hasSignature:Z

    .line 1374
    :cond_57
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :cond_5f
    :goto_5f
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_7b

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    .line 1375
    check-cast v4, Lcom/itextpdf/text/pdf/PdfName;

    .line 1376
    sget-object v5, Lcom/itextpdf/text/pdf/PdfCopy;->fieldKeys:Ljava/util/HashSet;

    invoke-virtual {v5, v4}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_5f

    .line 1377
    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-virtual {v1, v4, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_5f

    .line 1379
    :cond_7b
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 1380
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 1381
    invoke-direct {p0, v2, p2}, Lcom/itextpdf/text/pdf/PdfCopy;->createWidgets(Ljava/util/ArrayList;Lcom/itextpdf/text/pdf/AcroFields$Item;)V

    .line 1382
    invoke-virtual {v0, p1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto/16 :goto_103

    .line 1385
    :cond_8b
    check-cast v2, Ljava/util/ArrayList;

    .line 1386
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 1387
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfName;

    .line 1388
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/PdfName;

    if-eqz v0, :cond_104

    .line 1389
    invoke-virtual {v0, v4}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_ac

    goto :goto_104

    .line 1392
    :cond_ac
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-eqz p1, :cond_c1

    .line 1393
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v4

    if-eqz v4, :cond_c1

    .line 1394
    check-cast p1, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p1

    goto :goto_c2

    :cond_c1
    const/4 p1, 0x0

    .line 1396
    :goto_c2
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-eqz v3, :cond_d6

    .line 1397
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v4

    if-eqz v4, :cond_d6

    .line 1398
    check-cast v3, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    .line 1399
    :cond_d6
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->BTN:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_f1

    xor-int v0, p1, v1

    const/high16 v1, 0x10000

    and-int v3, v0, v1

    if-eqz v3, :cond_e7

    return-void

    :cond_e7
    and-int/2addr p1, v1

    if-nez p1, :cond_100

    const p1, 0x8000

    and-int/2addr p1, v0

    if-eqz p1, :cond_100

    return-void

    .line 1405
    :cond_f1
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->CH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_100

    xor-int/2addr p1, v1

    const/high16 v0, 0x20000

    and-int/2addr p1, v0

    if-eqz p1, :cond_100

    return-void

    .line 1409
    :cond_100
    invoke-direct {p0, v2, p2}, Lcom/itextpdf/text/pdf/PdfCopy;->createWidgets(Ljava/util/ArrayList;Lcom/itextpdf/text/pdf/AcroFields$Item;)V

    :goto_103
    return-void

    :cond_104
    :goto_104
    return-void
.end method

.method private mergeFields()V
    .registers 7

    const/4 v0, 0x0

    const/4 v1, 0x0

    .line 0
    :goto_2
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fields:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 1317
    if-ge v0, v2, :cond_3c

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fields:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    .line 1318
    check-cast v2, Lcom/itextpdf/text/pdf/AcroFields;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/AcroFields;->getFields()Ljava/util/Map;

    .line 1319
    move-result-object v3

    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v1, v4, :cond_36

    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    iget-object v4, v4, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    iget-object v5, v2, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    .line 1320
    if-ne v4, v5, :cond_36

    invoke-direct {p0, v3, v1}, Lcom/itextpdf/text/pdf/PdfCopy;->addPageOffsetToField(Ljava/util/Map;I)V

    .line 1321
    iget-object v2, v2, Lcom/itextpdf/text/pdf/AcroFields;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getNumberOfPages()I

    .line 1323
    move-result v2

    add-int/2addr v1, v2

    :cond_36
    invoke-direct {p0, v3}, Lcom/itextpdf/text/pdf/PdfCopy;->mergeWithMaster(Ljava/util/Map;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    :cond_3c
    return-void
.end method

.method private mergeWithMaster(Ljava/util/Map;)V
    .registers 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/text/pdf/AcroFields$Item;",
            ">;)V"
        }
    .end annotation

    .line 0
    invoke-interface {p1}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object p1

    invoke-interface {p1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_8
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_24

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map$Entry;

    .line 1340
    invoke-interface {v0}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    .line 1341
    invoke-interface {v0}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/AcroFields$Item;

    invoke-direct {p0, v1, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->mergeField(Ljava/lang/String;Lcom/itextpdf/text/pdf/AcroFields$Item;)V

    goto :goto_8

    :cond_24
    return-void
.end method

.method private propagate(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;
    .registers 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    if-nez p1, :cond_8

    .line 0
    new-instance p1, Lcom/itextpdf/text/pdf/PdfNull;

    invoke-direct {p1}, Lcom/itextpdf/text/pdf/PdfNull;-><init>()V

    .line 1437
    return-object p1

    :cond_8
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v0

    .line 1438
    if-eqz v0, :cond_26

    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    .line 1439
    const/4 v0, 0x0

    :goto_11
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    .line 1440
    if-ge v0, v1, :cond_25

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/PdfCopy;->propagate(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-virtual {p1, v0, v1}, Lcom/itextpdf/text/pdf/PdfArray;->set(ILcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    add-int/lit8 v0, v0, 0x1

    .line 1443
    goto :goto_11

    :cond_25
    return-object p1

    :cond_26
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v0

    if-nez v0, :cond_4b

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v0

    if-eqz v0, :cond_33

    .line 1449
    goto :goto_4b

    :cond_33
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v0

    .line 1450
    if-eqz v0, :cond_4a

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    .line 1451
    move-result-object p1

    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->propagate(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfIndirectObject;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object p1

    .line 1444
    return-object p1

    :cond_4a
    return-object p1

    .line 1445
    :cond_4b
    :goto_4b
    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_55
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_6d

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    .line 1446
    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-direct {p0, v2}, Lcom/itextpdf/text/pdf/PdfCopy;->propagate(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_55

    :cond_6d
    return-object p1
.end method

.method private removeInactiveReferences(Lcom/itextpdf/text/pdf/PdfArray;Ljava/util/HashSet;)V
    .registers 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/itextpdf/text/pdf/PdfArray;",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            ">;)V"
        }
    .end annotation

    const/4 v0, 0x0

    .line 0
    :goto_1
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_36

    .line 1028
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    .line 1029
    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v2

    if-nez v2, :cond_1f

    new-instance v2, Lcom/itextpdf/text/pdf/RefKey;

    move-object v3, v1

    check-cast v3, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {p2, v2}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2d

    .line 1030
    :cond_1f
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v2

    if-eqz v2, :cond_33

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0, v1, p2}, Lcom/itextpdf/text/pdf/PdfCopy;->containsInactivePg(Lcom/itextpdf/text/pdf/PdfDictionary;Ljava/util/HashSet;)Z

    move-result v1

    if-eqz v1, :cond_33

    :cond_2d
    add-int/lit8 v1, v0, -0x1

    .line 1031
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->remove(I)Lcom/itextpdf/text/pdf/PdfObject;

    move v0, v1

    :cond_33
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_36
    return-void
.end method

.method private updateAnnotationReferences(Lcom/itextpdf/text/pdf/PdfObject;)V
    .registers 7

    .line 0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v0

    if-eqz v0, :cond_60

    .line 1229
    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    const/4 v0, 0x0

    .line 1230
    :goto_9
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_d1

    .line 1231
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    if-eqz v1, :cond_5a

    .line 1232
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v2

    if-nez v2, :cond_5a

    .line 1233
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->unmergedIndirectRefsMap:Ljava/util/HashMap;

    new-instance v3, Lcom/itextpdf/text/pdf/RefKey;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {v3, v1}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {v2, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-eqz v1, :cond_5d

    .line 1235
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v2

    if-eqz v2, :cond_5d

    .line 1236
    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    if-eqz v1, :cond_5d

    .line 1238
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedMap:Ljava/util/HashMap;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v2, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-eqz v1, :cond_5d

    .line 1240
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfIndirectObject;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v1

    invoke-virtual {p1, v0, v1}, Lcom/itextpdf/text/pdf/PdfArray;->set(ILcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    goto :goto_5d

    .line 1246
    :cond_5a
    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/PdfCopy;->updateAnnotationReferences(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_5d
    :goto_5d
    add-int/lit8 v0, v0, 0x1

    goto :goto_9

    .line 1249
    :cond_60
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v0

    if-nez v0, :cond_6c

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v0

    if-eqz v0, :cond_d1

    .line 1250
    :cond_6c
    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 1251
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_76
    :goto_76
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_d1

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    .line 1252
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-eqz v2, :cond_cd

    .line 1253
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v3

    if-nez v3, :cond_cd

    .line 1254
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->unmergedIndirectRefsMap:Ljava/util/HashMap;

    new-instance v4, Lcom/itextpdf/text/pdf/RefKey;

    check-cast v2, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {v4, v2}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-eqz v2, :cond_76

    .line 1256
    iget-object v3, v2, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v3

    if-eqz v3, :cond_76

    .line 1257
    iget-object v2, v2, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v3, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v2

    if-eqz v2, :cond_76

    .line 1259
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedMap:Ljava/util/HashMap;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v3, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-eqz v2, :cond_76

    .line 1261
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfIndirectObject;->getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v2

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_76

    .line 1267
    :cond_cd
    invoke-direct {p0, v2}, Lcom/itextpdf/text/pdf/PdfCopy;->updateAnnotationReferences(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_76

    :cond_d1
    return-void
.end method

.method private updateCalculationOrder(Lcom/itextpdf/text/pdf/PdfReader;)V
    .registers 8

    .line 0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    .line 1275
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ACROFORM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    if-nez v0, :cond_d

    return-void

    .line 1278
    :cond_d
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->CO:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    if-eqz v0, :cond_64

    .line 1279
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    if-nez v1, :cond_1c

    goto :goto_64

    .line 1281
    :cond_1c
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getAcroFields()Lcom/itextpdf/text/pdf/AcroFields;

    move-result-object v1

    const/4 v2, 0x0

    .line 1282
    :goto_21
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_63

    .line 1283
    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-eqz v3, :cond_60

    .line 1284
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v4

    if-nez v4, :cond_34

    goto :goto_60

    .line 1286
    :cond_34
    check-cast v3, Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-static {p1, v3}, Lcom/itextpdf/text/pdf/PdfCopy;->getCOName(Lcom/itextpdf/text/pdf/PdfReader;Lcom/itextpdf/text/pdf/PRIndirectReference;)Ljava/lang/String;

    move-result-object v3

    .line 1287
    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/AcroFields;->getFieldItem(Ljava/lang/String;)Lcom/itextpdf/text/pdf/AcroFields$Item;

    move-result-object v4

    if-nez v4, :cond_41

    goto :goto_60

    .line 1289
    :cond_41
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 1290
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->calculationOrder:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_5b

    goto :goto_60

    .line 1292
    :cond_5b
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->calculationOrder:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_60
    :goto_60
    add-int/lit8 v2, v2, 0x1

    goto :goto_21

    :cond_63
    return-void

    :cond_64
    :goto_64
    return-void
.end method

.method private updateReferences(Lcom/itextpdf/text/pdf/PdfObject;)V
    .registers 7

    .line 0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v0

    if-nez v0, :cond_4f

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v0

    if-eqz v0, :cond_d

    goto :goto_4f

    .line 1507
    :cond_d
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v0

    if-eqz v0, :cond_96

    .line 1508
    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    const/4 v0, 0x0

    .line 1509
    :goto_16
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_96

    .line 1510
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    .line 1511
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v2

    if-eqz v2, :cond_49

    .line 1512
    check-cast v1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRIndirectReference;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v2

    .line 1513
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    invoke-virtual {v3, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/HashMap;

    .line 1514
    new-instance v3, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v3, v1}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PRIndirectReference;)V

    invoke-virtual {v2, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;

    if-eqz v1, :cond_4c

    .line 1516
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->getRef()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v1

    invoke-virtual {p1, v0, v1}, Lcom/itextpdf/text/pdf/PdfArray;->set(ILcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    goto :goto_4c

    .line 1519
    :cond_49
    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/PdfCopy;->updateReferences(Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_4c
    :goto_4c
    add-int/lit8 v0, v0, 0x1

    goto :goto_16

    .line 1493
    :cond_4f
    :goto_4f
    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 1494
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_59
    :goto_59
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_96

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    .line 1495
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    .line 1496
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v3

    if-eqz v3, :cond_92

    .line 1497
    check-cast v2, Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRIndirectReference;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v3

    .line 1498
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    invoke-virtual {v4, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/HashMap;

    .line 1499
    new-instance v4, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v4, v2}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PRIndirectReference;)V

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;

    if-eqz v2, :cond_59

    .line 1501
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->getRef()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v2

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_59

    .line 1504
    :cond_92
    invoke-direct {p0, v2}, Lcom/itextpdf/text/pdf/PdfCopy;->updateReferences(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_59

    :cond_96
    return-void
.end method

.method private writeObjectToBody(Lcom/itextpdf/text/pdf/PdfIndirectObject;)V
    .registers 9
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_84

    .line 1189
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->updateAnnotationReferences(Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 1190
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v0

    if-nez v0, :cond_1b

    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v0

    if-eqz v0, :cond_84

    .line 1191
    :cond_1b
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 1192
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->unmergedIndirectRefsMap:Ljava/util/HashMap;

    new-instance v4, Lcom/itextpdf/text/pdf/RefKey;

    iget v5, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->number:I

    iget v6, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->generation:I

    invoke-direct {v4, v5, v6}, Lcom/itextpdf/text/pdf/RefKey;-><init>(II)V

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_49

    .line 1193
    sget-object v3, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v3

    if-eqz v3, :cond_49

    .line 1194
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedMap:Ljava/util/HashMap;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_49

    const/4 v2, 0x1

    .line 1197
    :cond_49
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedSet:Ljava/util/HashSet;

    invoke-virtual {v3, p1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_84

    .line 1198
    sget-object v3, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v3

    if-eqz v3, :cond_84

    .line 1200
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->unmergedMap:Ljava/util/HashMap;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-eqz v3, :cond_84

    .line 1201
    iget-object v4, v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v4

    if-eqz v4, :cond_84

    .line 1202
    iget-object v3, v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v3, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->STRUCTPARENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v3

    if-eqz v3, :cond_84

    .line 1204
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->STRUCTPARENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v4, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_84
    if-nez v2, :cond_b9

    .line 1214
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    const/4 v2, 0x0

    if-eqz v0, :cond_a6

    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v0

    if-eqz v0, :cond_a6

    .line 1215
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    move-object v2, v0

    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 1216
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-eqz v0, :cond_a7

    .line 1218
    sget-object v3, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    goto :goto_a7

    :cond_a6
    move-object v0, v2

    .line 1220
    :cond_a7
    :goto_a7
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->body:Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;

    iget-object v4, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    iget v5, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->number:I

    iget p1, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->generation:I

    invoke-virtual {v3, v4, v5, p1, v1}, Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;->add(Lcom/itextpdf/text/pdf/PdfObject;IIZ)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    if-eqz v0, :cond_b9

    .line 1222
    sget-object p1, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_b9
    return-void
.end method


# virtual methods
.method public add(Lcom/itextpdf/text/pdf/PdfOutline;)Lcom/itextpdf/text/pdf/PdfIndirectReference;
    .registers 2

    const/4 p1, 0x0

    return-object p1
.end method

.method add(Lcom/itextpdf/text/pdf/PdfPage;Lcom/itextpdf/text/pdf/PdfContents;)Lcom/itextpdf/text/pdf/PdfIndirectReference;
    .registers 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/pdf/PdfException;
        }
    .end annotation

    const/4 p1, 0x0

    return-object p1
.end method

.method public addAnnotation(Lcom/itextpdf/text/pdf/PdfAnnotation;)V
    .registers 2

    return-void
.end method

.method public addDocument(Lcom/itextpdf/text/pdf/PdfReader;)V
    .registers 11
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/DocumentException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->document:Lcom/itextpdf/text/Document;

    invoke-virtual {v0}, Lcom/itextpdf/text/Document;->isOpen()Z

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_17

    .line 796
    new-instance p1, Lcom/itextpdf/text/DocumentException;

    const-string v0, "the.document.is.not.open.yet.you.can.only.add.meta.information"

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lcom/itextpdf/text/DocumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 798
    :cond_17
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    const/4 v2, 0x1

    if-eqz v0, :cond_34

    .line 799
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v3, "document.1.has.already.been.added"

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    aput-object p1, v2, v1

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 801
    :cond_34
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->isOpenedWithFullPermissions()Z

    move-result v0

    if-nez v0, :cond_48

    .line 802
    new-instance p1, Lcom/itextpdf/text/exceptions/BadPasswordException;

    const-string v0, "pdfreader.not.opened.with.owner.password"

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lcom/itextpdf/text/exceptions/BadPasswordException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 803
    :cond_48
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-eqz v0, :cond_a6

    .line 804
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->consolidateNamedDestinations()V

    .line 805
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->shuffleSubsetNames()I

    const/4 v0, 0x1

    .line 806
    :goto_53
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getNumberOfPages()I

    move-result v3

    if-gt v0, v3, :cond_91

    .line 807
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPageNRelease(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    if-eqz v3, :cond_8e

    .line 808
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v4

    if-eqz v4, :cond_8e

    .line 809
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v3

    if-eqz v3, :cond_8e

    const/4 v4, 0x0

    .line 811
    :goto_70
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_8e

    .line 812
    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getAsDict(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v5

    if-eqz v5, :cond_8b

    .line 814
    sget-object v6, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v7, Lcom/itextpdf/text/pdf/PdfNumber;

    sget v8, Lcom/itextpdf/text/pdf/PdfCopy;->annotIdCnt:I

    add-int/2addr v8, v2

    sput v8, Lcom/itextpdf/text/pdf/PdfCopy;->annotIdCnt:I

    invoke-direct {v7, v8}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {v5, v6, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_8b
    add-int/lit8 v4, v4, 0x1

    goto :goto_70

    :cond_8e
    add-int/lit8 v0, v0, 0x1

    goto :goto_53

    .line 819
    :cond_91
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getAcroFields()Lcom/itextpdf/text/pdf/AcroFields;

    move-result-object v0

    .line 822
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/AcroFields;->isGenerateAppearances()Z

    move-result v3

    xor-int/2addr v3, v2

    if-eqz v3, :cond_9e

    .line 824
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->needAppearances:Z

    .line 825
    :cond_9e
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fields:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 826
    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->updateCalculationOrder(Lcom/itextpdf/text/pdf/PdfReader;)V

    .line 828
    :cond_a6
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tagged:Z

    if-eqz v0, :cond_b2

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->checkTagged(Lcom/itextpdf/text/pdf/PdfReader;)Z

    move-result v0

    if-eqz v0, :cond_b2

    const/4 v0, 0x1

    goto :goto_b3

    :cond_b2
    const/4 v0, 0x0

    .line 829
    :goto_b3
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFieldsInternalCall:Z

    .line 830
    :goto_b5
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getNumberOfPages()I

    move-result v3

    if-gt v2, v3, :cond_c5

    .line 831
    invoke-virtual {p0, p1, v2, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->getImportedPage(Lcom/itextpdf/text/pdf/PdfReader;IZ)Lcom/itextpdf/text/pdf/PdfImportedPage;

    move-result-object v3

    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/PdfCopy;->addPage(Lcom/itextpdf/text/pdf/PdfImportedPage;)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_b5

    .line 833
    :cond_c5
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFieldsInternalCall:Z

    return-void
.end method

.method public addDocument(Lcom/itextpdf/text/pdf/PdfReader;Ljava/util/List;)V
    .registers 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/itextpdf/text/pdf/PdfReader;",
            "Ljava/util/List<",
            "Ljava/lang/Integer;",
            ">;)V"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/DocumentException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_1e

    .line 715
    new-instance p2, Ljava/lang/IllegalArgumentException;

    const-string v0, "document.1.has.already.been.added"

    const/4 v2, 0x1

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    aput-object p1, v2, v1

    invoke-static {v0, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 717
    :cond_1e
    invoke-virtual {p1, p2, v1}, Lcom/itextpdf/text/pdf/PdfReader;->selectPages(Ljava/util/List;Z)V

    .line 718
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->addDocument(Lcom/itextpdf/text/pdf/PdfReader;)V

    return-void
.end method

.method public addPage(Lcom/itextpdf/text/Rectangle;I)V
    .registers 7
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/DocumentException;
        }
    .end annotation

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_1c

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFieldsInternalCall:Z

    if-nez v0, :cond_1c

    .line 702
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "1.method.cannot.be.used.in.mergeFields.mode.please.use.addDocument"

    new-array v0, v2, [Ljava/lang/Object;

    const-string v2, "addPage"

    aput-object v2, v0, v1

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 704
    :cond_1c
    new-instance v0, Lcom/itextpdf/text/pdf/PdfRectangle;

    invoke-direct {v0, p1, p2}, Lcom/itextpdf/text/pdf/PdfRectangle;-><init>(Lcom/itextpdf/text/Rectangle;I)V

    .line 705
    new-instance p1, Lcom/itextpdf/text/pdf/PageResources;

    invoke-direct {p1}, Lcom/itextpdf/text/pdf/PageResources;-><init>()V

    .line 706
    new-instance p2, Lcom/itextpdf/text/pdf/PdfPage;

    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PageResources;->getResources()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    invoke-direct {p2, v0, v3, p1, v1}, Lcom/itextpdf/text/pdf/PdfPage;-><init>(Lcom/itextpdf/text/pdf/PdfRectangle;Ljava/util/HashMap;Lcom/itextpdf/text/pdf/PdfDictionary;I)V

    .line 707
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->TABS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->getTabs()Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v0

    invoke-virtual {p2, p1, v0}, Lcom/itextpdf/text/pdf/PdfPage;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 708
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->root:Lcom/itextpdf/text/pdf/PdfPages;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfPages;->addPage(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    .line 709
    iget p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPageNumber:I

    add-int/2addr p1, v2

    iput p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPageNumber:I

    .line 710
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pdf:Lcom/itextpdf/text/pdf/PdfDocument;

    iget p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPageNumber:I

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDocument;->setPageCount(I)V

    return-void
.end method

.method public addPage(Lcom/itextpdf/text/pdf/PdfImportedPage;)V
    .registers 8
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    const/4 v1, 0x1

    if-eqz v0, :cond_1c

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFieldsInternalCall:Z

    if-nez v0, :cond_1c

    .line 658
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string v0, "1.method.cannot.be.used.in.mergeFields.mode.please.use.addDocument"

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v2, 0x0

    const-string v3, "addPage"

    aput-object v3, v1, v2

    invoke-static {v0, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 661
    :cond_1c
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->setFromIPage(Lcom/itextpdf/text/pdf/PdfImportedPage;)I

    move-result v0

    .line 662
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    .line 663
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPageOrigRef(I)Lcom/itextpdf/text/pdf/PRIndirectReference;

    move-result-object v3

    .line 664
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v4, v0}, Lcom/itextpdf/text/pdf/PdfReader;->releasePage(I)V

    .line 665
    new-instance v0, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v0, v3}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PRIndirectReference;)V

    .line 667
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    invoke-virtual {v3, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;

    if-eqz v3, :cond_52

    .line 668
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->getCopied()Z

    move-result v4

    if-nez v4, :cond_52

    .line 669
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pageReferences:Ljava/util/ArrayList;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->getRef()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 670
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->setCopied()V

    .line 672
    :cond_52
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->getCurrentPage()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v4

    if-nez v3, :cond_62

    .line 674
    new-instance v3, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 675
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    invoke-virtual {v4, v0, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 677
    :cond_62
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->setCopied()V

    .line 678
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tagged:Z

    if-eqz v0, :cond_79

    .line 679
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->STRUCTTREEROOT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PRIndirectReference;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeRootReference:Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 680
    :cond_79
    invoke-virtual {p0, v2}, Lcom/itextpdf/text/pdf/PdfCopy;->copyDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    .line 681
    iget-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-eqz v2, :cond_9f

    .line 682
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    sub-int/2addr v3, v1

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    .line 683
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->body:Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;->getPdfIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v3

    iput-object v3, v2, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->annotsIndirectReference:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 684
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->annotsIndirectReference:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {v0, v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 686
    :cond_9f
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->root:Lcom/itextpdf/text/pdf/PdfPages;

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfPages;->addPage(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    .line 687
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfImportedPage;->setCopied()V

    .line 688
    iget p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPageNumber:I

    add-int/2addr p1, v1

    iput p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPageNumber:I

    .line 689
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pdf:Lcom/itextpdf/text/pdf/PdfDocument;

    iget v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPageNumber:I

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDocument;->setPageCount(I)V

    const/4 p1, 0x0

    .line 690
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeRootReference:Lcom/itextpdf/text/pdf/PRIndirectReference;

    return-void
.end method

.method public addToBody(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfIndirectReference;)Lcom/itextpdf/text/pdf/PdfIndirectObject;
    .registers 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    const/4 v0, 0x0

    .line 0
    invoke-virtual {p0, p1, p2, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfIndirectReference;Z)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    move-result-object p1

    return-object p1
.end method

.method public addToBody(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfIndirectReference;Z)Lcom/itextpdf/text/pdf/PdfIndirectObject;
    .registers 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    if-eqz p3, :cond_5

    .line 0
    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->updateReferences(Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 847
    :cond_5
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tagged:Z

    if-nez v0, :cond_d

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-eqz v0, :cond_43

    :cond_d
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    if-eqz v0, :cond_43

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v0

    if-nez v0, :cond_29

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v0

    if-nez v0, :cond_29

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v0

    if-nez v0, :cond_29

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isNull()Z

    move-result v0

    .line 848
    if-eqz v0, :cond_43

    :cond_29
    new-instance v0, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v0, p2}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 849
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {v1, v0}, Ljava/util/LinkedHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    .line 851
    if-nez v1, :cond_47

    new-instance v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    invoke-direct {v1, p2, p1, p0}, Lcom/itextpdf/text/pdf/PdfIndirectObject;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfWriter;)V

    .line 852
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {p2, v0, v1}, Ljava/util/LinkedHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 856
    goto :goto_47

    :cond_43
    invoke-super {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfWriter;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfIndirectReference;)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    .line 858
    move-result-object v1

    :cond_47
    :goto_47
    iget-boolean p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-eqz p2, :cond_8b

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result p2

    .line 859
    if-eqz p2, :cond_8b

    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object p2, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p1

    if-eqz p1, :cond_8b

    .line 862
    if-eqz p3, :cond_70

    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedMap:Ljava/util/HashMap;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p1

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    invoke-virtual {p2, p1, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 863
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedSet:Ljava/util/HashSet;

    invoke-virtual {p1, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 865
    goto :goto_8b

    :cond_70
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->unmergedMap:Ljava/util/HashMap;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p1

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    invoke-virtual {p2, p1, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 866
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->unmergedIndirectRefsMap:Ljava/util/HashMap;

    new-instance p2, Lcom/itextpdf/text/pdf/RefKey;

    iget p3, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->number:I

    iget v0, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->generation:I

    invoke-direct {p2, p3, v0}, Lcom/itextpdf/text/pdf/RefKey;-><init>(II)V

    invoke-virtual {p1, p2, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_8b
    :goto_8b
    return-object v1
.end method

.method protected cacheObject(Lcom/itextpdf/text/pdf/PdfIndirectObject;)V
    .registers 5

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tagged:Z

    if-nez v0, :cond_8

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-eqz v0, :cond_27

    :cond_8
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    if-eqz v0, :cond_27

    .line 876
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->savedObjects:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 877
    new-instance v0, Lcom/itextpdf/text/pdf/RefKey;

    iget v1, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->number:I

    iget v2, p1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->generation:I

    invoke-direct {v0, v1, v2}, Lcom/itextpdf/text/pdf/RefKey;-><init>(II)V

    .line 878
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {v1, v0}, Ljava/util/LinkedHashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_27

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {v1, v0, p1}, Ljava/util/LinkedHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_27
    return-void
.end method

.method public close()V
    .registers 2

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->open:Z

    if-eqz v0, :cond_c

    .line 1727
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pdf:Lcom/itextpdf/text/pdf/PdfDocument;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfDocument;->close()V

    .line 1728
    invoke-super {p0}, Lcom/itextpdf/text/pdf/PdfWriter;->close()V

    :cond_c
    return-void
.end method

.method protected copyArray(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/pdf/PdfArray;
    .registers 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    const/4 v0, 0x0

    .line 0
    invoke-virtual {p0, p1, v0, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->copyArray(Lcom/itextpdf/text/pdf/PdfArray;ZZ)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p1

    return-object p1
.end method

.method protected copyArray(Lcom/itextpdf/text/pdf/PdfArray;ZZ)Lcom/itextpdf/text/pdf/PdfArray;
    .registers 8
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/PdfArray;-><init>(I)V

    .line 564
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->listIterator()Ljava/util/ListIterator;

    move-result-object v1

    :cond_d
    :goto_d
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_28

    .line 565
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfObject;

    .line 566
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->parentObjects:Ljava/util/HashMap;

    invoke-virtual {v3, v2, p1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 567
    invoke-virtual {p0, v2, p2, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->copyObject(Lcom/itextpdf/text/pdf/PdfObject;ZZ)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-eqz v2, :cond_d

    .line 569
    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    goto :goto_d

    :cond_28
    return-object v0
.end method

.method protected copyDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfDictionary;
    .registers 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    const/4 v0, 0x0

    .line 0
    invoke-virtual {p0, p1, v0, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->copyDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;ZZ)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    return-object p1
.end method

.method protected copyDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;ZZ)Lcom/itextpdf/text/pdf/PdfDictionary;
    .registers 10
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->size()I

    move-result v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>(I)V

    .line 473
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    if-eqz p2, :cond_54

    if-eqz p3, :cond_44

    .line 477
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->PG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v2

    if-eqz v2, :cond_44

    .line 480
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->disableIndirects:Ljava/util/HashSet;

    invoke-virtual {p2, p1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 481
    :goto_24
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->parentObjects:Ljava/util/HashMap;

    invoke-virtual {p2, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_42

    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->disableIndirects:Ljava/util/HashSet;

    invoke-virtual {p2, p1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result p2

    if-nez p2, :cond_42

    .line 482
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->parentObjects:Ljava/util/HashMap;

    invoke-virtual {p2, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfObject;

    .line 483
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->disableIndirects:Ljava/util/HashSet;

    invoke-virtual {p2, p1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_24

    :cond_42
    const/4 p1, 0x0

    return-object p1

    .line 488
    :cond_44
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->S:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v2

    .line 489
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->addRole(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 490
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    invoke-virtual {v2, p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->addClass(Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 492
    :cond_54
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    if-eqz v2, :cond_95

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/PdfStructTreeController;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    if-eqz v2, :cond_95

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->STRUCTPARENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v2

    if-nez v2, :cond_6e

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->STRUCTPARENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v2

    if-eqz v2, :cond_95

    .line 493
    :cond_6e
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->STRUCTPARENT:Lcom/itextpdf/text/pdf/PdfName;

    .line 494
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->STRUCTPARENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v3

    if-eqz v3, :cond_7a

    .line 495
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->STRUCTPARENTS:Lcom/itextpdf/text/pdf/PdfName;

    .line 497
    :cond_7a
    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    .line 498
    new-instance v4, Lcom/itextpdf/text/pdf/PdfNumber;

    iget v5, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentStructArrayNumber:I

    invoke-direct {v4, v5}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {v0, v2, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 499
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    check-cast v3, Lcom/itextpdf/text/pdf/PdfNumber;

    iget v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentStructArrayNumber:I

    add-int/lit8 v5, v4, 0x1

    iput v5, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentStructArrayNumber:I

    invoke-virtual {v2, v3, v4}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->copyStructTreeForPage(Lcom/itextpdf/text/pdf/PdfNumber;I)V

    .line 501
    :cond_95
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :cond_9d
    :goto_9d
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_113

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    .line 502
    check-cast v3, Lcom/itextpdf/text/pdf/PdfName;

    .line 503
    invoke-virtual {p1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    .line 504
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    if-eqz v5, :cond_c8

    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    iget-object v5, v5, Lcom/itextpdf/text/pdf/PdfStructTreeController;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    if-eqz v5, :cond_c8

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->STRUCTPARENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_9d

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->STRUCTPARENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_c8

    goto :goto_9d

    .line 507
    :cond_c8
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->PAGE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_ef

    .line 508
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->B:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_9d

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->PARENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_9d

    .line 509
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfCopy;->parentObjects:Ljava/util/HashMap;

    invoke-virtual {v5, v4, p1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 510
    invoke-virtual {p0, v4, p2, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->copyObject(Lcom/itextpdf/text/pdf/PdfObject;ZZ)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    if-eqz v4, :cond_9d

    .line 512
    invoke-virtual {v0, v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_9d

    .line 517
    :cond_ef
    iget-boolean v5, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tagged:Z

    if-eqz v5, :cond_109

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v5

    if-eqz v5, :cond_109

    move-object v5, v4

    check-cast v5, Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-virtual {p0, v5}, Lcom/itextpdf/text/pdf/PdfCopy;->isStructTreeRootReference(Lcom/itextpdf/text/pdf/PdfIndirectReference;)Z

    move-result v5

    if-eqz v5, :cond_109

    .line 518
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->getReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v4

    goto :goto_10d

    .line 520
    :cond_109
    invoke-virtual {p0, v4, p2, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->copyObject(Lcom/itextpdf/text/pdf/PdfObject;ZZ)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    :goto_10d
    if-eqz v4, :cond_9d

    .line 523
    invoke-virtual {v0, v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_9d

    :cond_113
    return-object v0
.end method

.method public copyDocumentFields(Lcom/itextpdf/text/pdf/PdfReader;)V
    .registers 12
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/DocumentException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->document:Lcom/itextpdf/text/Document;

    invoke-virtual {v0}, Lcom/itextpdf/text/Document;->isOpen()Z

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_17

    .line 729
    new-instance p1, Lcom/itextpdf/text/DocumentException;

    const-string v0, "the.document.is.not.open.yet.you.can.only.add.meta.information"

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lcom/itextpdf/text/DocumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 732
    :cond_17
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    const/4 v2, 0x1

    if-eqz v0, :cond_34

    .line 733
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v3, "document.1.has.already.been.added"

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    aput-object p1, v2, v1

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 736
    :cond_34
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->isOpenedWithFullPermissions()Z

    move-result v0

    if-nez v0, :cond_48

    .line 737
    new-instance p1, Lcom/itextpdf/text/exceptions/BadPasswordException;

    const-string v0, "pdfreader.not.opened.with.owner.password"

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lcom/itextpdf/text/exceptions/BadPasswordException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 739
    :cond_48
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-nez v0, :cond_5e

    .line 740
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string v0, "1.method.can.be.only.used.in.mergeFields.mode.please.use.addDocument"

    new-array v2, v2, [Ljava/lang/Object;

    const-string v3, "copyDocumentFields"

    aput-object v3, v2, v1

    invoke-static {v0, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 742
    :cond_5e
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    .line 743
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    invoke-virtual {v0, p1, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 745
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->consolidateNamedDestinations()V

    .line 746
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->shuffleSubsetNames()I

    .line 747
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tagged:Z

    if-eqz v0, :cond_a1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->checkTagged(Lcom/itextpdf/text/pdf/PdfReader;)Z

    move-result v0

    if-eqz v0, :cond_a1

    .line 748
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->STRUCTTREEROOT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PRIndirectReference;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeRootReference:Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 749
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    if-eqz v0, :cond_9a

    .line 750
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    iget-object v0, v0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    if-eq p1, v0, :cond_a1

    .line 751
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->setReader(Lcom/itextpdf/text/pdf/PdfReader;)V

    goto :goto_a1

    .line 753
    :cond_9a
    new-instance v0, Lcom/itextpdf/text/pdf/PdfStructTreeController;

    invoke-direct {v0, p1, p0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;-><init>(Lcom/itextpdf/text/pdf/PdfReader;Lcom/itextpdf/text/pdf/PdfCopy;)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    .line 757
    :cond_a1
    :goto_a1
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    const/4 v3, 0x1

    .line 759
    :goto_a7
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getNumberOfPages()I

    move-result v4

    if-gt v3, v4, :cond_12e

    .line 760
    invoke-virtual {p1, v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPageNRelease(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v4

    if-eqz v4, :cond_12a

    .line 761
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v5

    if-eqz v5, :cond_12a

    .line 762
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v4

    if-eqz v4, :cond_12a

    .line 763
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v5

    if-lez v5, :cond_12a

    .line 764
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v5, v3, :cond_df

    .line 765
    new-instance p1, Lcom/itextpdf/text/DocumentException;

    const-string v0, "there.are.not.enough.imported.pages.for.copied.fields"

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lcom/itextpdf/text/DocumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 766
    :cond_df
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    invoke-virtual {v5, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/util/HashMap;

    new-instance v6, Lcom/itextpdf/text/pdf/RefKey;

    iget-object v7, p1, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v7, v3}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageOrigRef(I)Lcom/itextpdf/text/pdf/PRIndirectReference;

    move-result-object v7

    invoke-direct {v6, v7}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PRIndirectReference;)V

    new-instance v7, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;

    iget-object v8, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pageReferences:Ljava/util/ArrayList;

    add-int/lit8 v9, v3, -0x1

    invoke-virtual {v8, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {v7, v8}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {v5, v6, v7}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    const/4 v5, 0x0

    .line 767
    :goto_105
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v6

    if-ge v5, v6, :cond_12a

    .line 768
    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/PdfArray;->getAsDict(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    if-eqz v6, :cond_127

    .line 770
    sget-object v7, Lcom/itextpdf/text/pdf/PdfCopy;->annotId:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v8, Lcom/itextpdf/text/pdf/PdfNumber;

    sget v9, Lcom/itextpdf/text/pdf/PdfCopy;->annotIdCnt:I

    add-int/2addr v9, v2

    sput v9, Lcom/itextpdf/text/pdf/PdfCopy;->annotIdCnt:I

    invoke-direct {v8, v9}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {v6, v7, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 771
    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    invoke-interface {v0, v6}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    :cond_127
    add-int/lit8 v5, v5, 0x1

    goto :goto_105

    :cond_12a
    add-int/lit8 v3, v3, 0x1

    goto/16 :goto_a7

    .line 778
    :cond_12e
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_132
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_142

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfObject;

    .line 779
    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfCopy;->copyObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    goto :goto_132

    .line 782
    :cond_142
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tagged:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_150

    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    if-eqz v0, :cond_150

    .line 783
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->attachStructTreeRootKids(Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 785
    :cond_150
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getAcroFields()Lcom/itextpdf/text/pdf/AcroFields;

    move-result-object v0

    .line 786
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/AcroFields;->isGenerateAppearances()Z

    move-result v3

    xor-int/2addr v3, v2

    if-eqz v3, :cond_15d

    .line 788
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->needAppearances:Z

    .line 789
    :cond_15d
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fields:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 790
    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->updateCalculationOrder(Lcom/itextpdf/text/pdf/PdfReader;)V

    .line 791
    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeRootReference:Lcom/itextpdf/text/pdf/PRIndirectReference;

    return-void
.end method

.method protected copyIndirect(Lcom/itextpdf/text/pdf/PRIndirectReference;)Lcom/itextpdf/text/pdf/PdfIndirectReference;
    .registers 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    const/4 v0, 0x0

    .line 0
    invoke-virtual {p0, p1, v0, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->copyIndirect(Lcom/itextpdf/text/pdf/PRIndirectReference;ZZ)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object p1

    return-object p1
.end method

.method protected copyIndirect(Lcom/itextpdf/text/pdf/PRIndirectReference;ZZ)Lcom/itextpdf/text/pdf/PdfIndirectReference;
    .registers 11
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PRIndirectReference;)V

    .line 403
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    invoke-virtual {v1, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;

    .line 404
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    const/4 v3, 0x0

    if-eqz p2, :cond_26

    if-eqz p3, :cond_26

    .line 406
    instance-of v4, v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-eqz v4, :cond_26

    .line 407
    move-object v4, v2

    check-cast v4, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 408
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->PG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v4

    if-eqz v4, :cond_26

    return-object v3

    :cond_26
    if-eqz v1, :cond_33

    .line 413
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->getRef()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v4

    .line 414
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->getCopied()Z

    move-result v5

    if-eqz v5, :cond_43

    return-object v4

    .line 419
    :cond_33
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->body:Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;->getPdfIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object v4

    .line 420
    new-instance v1, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;

    invoke-direct {v1, v4}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 421
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    invoke-virtual {v5, v0, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_43
    if-eqz v2, :cond_7a

    .line 424
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v5

    if-eqz v5, :cond_7a

    .line 425
    move-object v5, v2

    check-cast v5, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    if-eqz v5, :cond_7a

    .line 427
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->PAGE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_63

    return-object v4

    .line 430
    :cond_63
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->CATALOG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_7a

    .line 431
    sget-object p1, Lcom/itextpdf/text/pdf/PdfCopy;->LOGGER:Lcom/itextpdf/text/log/Logger;

    const-string p2, "make.copy.of.catalog.dictionary.is.forbidden"

    const/4 p3, 0x0

    new-array p3, p3, [Ljava/lang/Object;

    invoke-static {p2, p3}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-interface {p1, p2}, Lcom/itextpdf/text/log/Logger;->warn(Ljava/lang/String;)V

    return-object v3

    .line 436
    :cond_7a
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->setCopied()V

    if-eqz v2, :cond_84

    .line 437
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfCopy;->parentObjects:Ljava/util/HashMap;

    invoke-virtual {v5, v2, p1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 438
    :cond_84
    invoke-virtual {p0, v2, p2, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->copyObject(Lcom/itextpdf/text/pdf/PdfObject;ZZ)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    .line 439
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->disableIndirects:Ljava/util/HashSet;

    invoke-virtual {p2, v2}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_93

    .line 440
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfCopy$IndirectReferences;->setNotCopied()V

    :cond_93
    if-eqz p1, :cond_99

    .line 443
    invoke-virtual {p0, p1, v4}, Lcom/itextpdf/text/pdf/PdfCopy;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfIndirectReference;)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    return-object v4

    .line 447
    :cond_99
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    invoke-virtual {p1, v0}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    return-object v3
.end method

.method protected copyObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;
    .registers 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    const/4 v0, 0x0

    .line 0
    invoke-virtual {p0, p1, v0, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->copyObject(Lcom/itextpdf/text/pdf/PdfObject;ZZ)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    return-object p1
.end method

.method protected copyObject(Lcom/itextpdf/text/pdf/PdfObject;ZZ)Lcom/itextpdf/text/pdf/PdfObject;
    .registers 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    if-nez p1, :cond_5

    .line 0
    sget-object p1, Lcom/itextpdf/text/pdf/PdfNull;->PDFNULL:Lcom/itextpdf/text/pdf/PdfNull;

    .line 588
    return-object p1

    :cond_5
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfObject;->type:I

    packed-switch v0, :pswitch_data_74

    .line 610
    :pswitch_a
    iget p2, p1, Lcom/itextpdf/text/pdf/PdfObject;->type:I

    .line 611
    if-gez p2, :cond_59

    check-cast p1, Lcom/itextpdf/text/pdf/PdfLiteral;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfLiteral;->toString()Ljava/lang/String;

    move-result-object p1

    .line 612
    const-string p2, "true"

    invoke-virtual {p1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-nez p2, :cond_53

    const-string p2, "false"

    invoke-virtual {p1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_4d

    goto :goto_53

    :pswitch_25
    if-nez p2, :cond_30

    .line 594
    if-nez p3, :cond_30

    check-cast p1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->copyIndirect(Lcom/itextpdf/text/pdf/PRIndirectReference;)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 596
    move-result-object p1

    return-object p1

    :cond_30
    check-cast p1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-virtual {p0, p1, p2, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->copyIndirect(Lcom/itextpdf/text/pdf/PRIndirectReference;ZZ)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 607
    move-result-object p1

    return-object p1

    :pswitch_37
    check-cast p1, Lcom/itextpdf/text/pdf/PRStream;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->copyStream(Lcom/itextpdf/text/pdf/PRStream;)Lcom/itextpdf/text/pdf/PdfStream;

    .line 590
    move-result-object p1

    return-object p1

    :pswitch_3e
    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {p0, p1, p2, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->copyDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;ZZ)Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 598
    move-result-object p1

    return-object p1

    :pswitch_45
    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {p0, p1, p2, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->copyArray(Lcom/itextpdf/text/pdf/PdfArray;ZZ)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p1

    .line 615
    return-object p1

    :pswitch_4c
    return-object p1

    :cond_4d
    new-instance p2, Lcom/itextpdf/text/pdf/PdfLiteral;

    invoke-direct {p2, p1}, Lcom/itextpdf/text/pdf/PdfLiteral;-><init>(Ljava/lang/String;)V

    .line 613
    return-object p2

    :cond_53
    :goto_53
    new-instance p2, Lcom/itextpdf/text/pdf/PdfBoolean;

    invoke-direct {p2, p1}, Lcom/itextpdf/text/pdf/PdfBoolean;-><init>(Ljava/lang/String;)V

    .line 617
    return-object p2

    :cond_59
    sget-object p2, Ljava/lang/System;->out:Ljava/io/PrintStream;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "CANNOT COPY type "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p1, p1, Lcom/itextpdf/text/pdf/PdfObject;->type:I

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    const/4 p1, 0x0

    return-object p1

    nop

    :pswitch_data_74
    .packed-switch 0x0
        :pswitch_4c
        :pswitch_4c
        :pswitch_4c
        :pswitch_4c
        :pswitch_4c
        :pswitch_45
        :pswitch_3e
        :pswitch_37
        :pswitch_4c
        :pswitch_a
        :pswitch_25
    .end packed-switch
.end method

.method protected copyStream(Lcom/itextpdf/text/pdf/PRStream;)Lcom/itextpdf/text/pdf/PdfStream;
    .registers 7
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/PRStream;

    const/4 v1, 0x0

    invoke-direct {v0, p1, v1}, Lcom/itextpdf/text/pdf/PRStream;-><init>(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/PdfDictionary;)V

    .line 545
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PRStream;->getKeys()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_e
    :goto_e
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_2d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    .line 546
    check-cast v2, Lcom/itextpdf/text/pdf/PdfName;

    .line 547
    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PRStream;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    .line 548
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->parentObjects:Ljava/util/HashMap;

    invoke-virtual {v4, v3, p1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 549
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/PdfCopy;->copyObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-eqz v3, :cond_e

    .line 551
    invoke-virtual {v0, v2, v3}, Lcom/itextpdf/text/pdf/PRStream;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_e

    :cond_2d
    return-object v0
.end method

.method public createPageStamp(Lcom/itextpdf/text/pdf/PdfImportedPage;)Lcom/itextpdf/text/pdf/PdfCopy$PageStamp;
    .registers 4

    .line 0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfImportedPage;->getPageNumber()I

    move-result v0

    .line 1869
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfImportedPage;->getPdfReaderInstance()Lcom/itextpdf/text/pdf/PdfReaderInstance;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReaderInstance;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object p1

    .line 1870
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->isTagged()Z

    move-result v1

    if-eqz v1, :cond_21

    .line 1871
    new-instance p1, Ljava/lang/RuntimeException;

    const-string v0, "creating.page.stamp.not.allowed.for.tagged.reader"

    const/4 v1, 0x0

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 1872
    :cond_21
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    .line 1873
    new-instance v1, Lcom/itextpdf/text/pdf/PdfCopy$PageStamp;

    invoke-direct {v1, p1, v0, p0}, Lcom/itextpdf/text/pdf/PdfCopy$PageStamp;-><init>(Lcom/itextpdf/text/pdf/PdfReader;Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfCopy;)V

    return-object v1
.end method

.method protected fixStructureTreeRoot(Ljava/util/HashSet;Ljava/util/HashSet;)V
    .registers 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/RefKey;",
            ">;",
            "Ljava/util/HashSet<",
            "Lcom/itextpdf/text/pdf/PdfName;",
            ">;)V"
        }
    .end annotation

    .line 0
    new-instance v0, Ljava/util/HashMap;

    invoke-virtual {p2}, Ljava/util/HashSet;->size()I

    move-result v1

    invoke-direct {v0, v1}, Ljava/util/HashMap;-><init>(I)V

    .line 351
    invoke-virtual {p2}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;

    move-result-object p2

    :cond_d
    :goto_d
    invoke-interface {p2}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_29

    invoke-interface {p2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    .line 352
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->classes:Ljava/util/HashMap;

    invoke-virtual {v2, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfObject;

    if-eqz v2, :cond_d

    .line 353
    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_d

    .line 356
    :cond_29
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    iput-object v0, p2, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->classes:Ljava/util/HashMap;

    .line 358
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->K:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p2

    if-eqz p2, :cond_58

    const/4 v0, 0x0

    .line 360
    :goto_38
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_58

    .line 361
    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 362
    new-instance v2, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v2, v1}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 363
    invoke-virtual {p1, v2}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_55

    add-int/lit8 v1, v0, -0x1

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/PdfArray;->remove(I)Lcom/itextpdf/text/pdf/PdfObject;

    move v0, v1

    :cond_55
    add-int/lit8 v0, v0, 0x1

    goto :goto_38

    :cond_58
    return-void
.end method

.method protected fixTaggedStructure()V
    .registers 15
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structureTreeRoot:Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfStructureTreeRoot;->getNumTree()Ljava/util/HashMap;

    move-result-object v0

    .line 929
    new-instance v1, Ljava/util/HashSet;

    invoke-direct {v1}, Ljava/util/HashSet;-><init>()V

    .line 930
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 933
    iget-boolean v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-eqz v3, :cond_27

    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->acroForm:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    if-eqz v3, :cond_27

    .line 934
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->acroForm:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 935
    new-instance v3, Lcom/itextpdf/text/pdf/RefKey;

    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfCopy;->acroForm:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {v1, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 937
    :cond_27
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pageReferences:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_2d
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_45

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 938
    invoke-virtual {v2, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 939
    new-instance v5, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v5, v4}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {v1, v5}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_2d

    .line 943
    :cond_45
    invoke-virtual {v0}, Ljava/util/HashMap;->size()I

    move-result v3

    const/4 v4, 0x1

    sub-int/2addr v3, v4

    const/4 v5, 0x0

    const/4 v6, 0x0

    :goto_4d
    const/4 v7, 0x0

    if-ltz v3, :cond_140

    .line 944
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    invoke-virtual {v0, v8}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    if-nez v8, :cond_5e

    goto/16 :goto_13c

    .line 948
    :cond_5e
    new-instance v9, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v9, v8}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 949
    iget-object v10, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {v10, v9}, Ljava/util/LinkedHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    iget-object v10, v10, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    .line 950
    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v11

    if-eqz v11, :cond_ae

    .line 952
    iget-object v7, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pageReferences:Ljava/util/ArrayList;

    check-cast v10, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v11, Lcom/itextpdf/text/pdf/PdfName;->PG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v10, v11}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v11

    invoke-virtual {v7, v11}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_85

    :goto_83
    const/4 v7, 0x1

    goto :goto_9b

    .line 955
    :cond_85
    invoke-static {v10}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->getKDict(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v7

    if-eqz v7, :cond_9a

    .line 956
    iget-object v10, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pageReferences:Ljava/util/ArrayList;

    sget-object v11, Lcom/itextpdf/text/pdf/PdfName;->PG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v11}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v7

    invoke-virtual {v10, v7}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_9a

    goto :goto_83

    :cond_9a
    const/4 v7, 0x0

    :goto_9b
    if-eqz v7, :cond_a5

    .line 961
    invoke-virtual {v1, v9}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 962
    invoke-virtual {v2, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto/16 :goto_13c

    .line 964
    :cond_a5
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    invoke-virtual {v0, v7}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    goto/16 :goto_13c

    .line 966
    :cond_ae
    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v11

    if-eqz v11, :cond_13c

    .line 967
    invoke-virtual {v1, v9}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 968
    invoke-virtual {v2, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 969
    check-cast v10, Lcom/itextpdf/text/pdf/PdfArray;

    .line 970
    iget-object v8, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pageReferences:Ljava/util/ArrayList;

    add-int/lit8 v9, v6, 0x1

    invoke-virtual {v8, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 971
    invoke-virtual {v2, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 972
    new-instance v8, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v8, v6}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    invoke-virtual {v1, v8}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    move-object v8, v7

    const/4 v7, 0x0

    .line 974
    :goto_d3
    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v11

    if-ge v7, v11, :cond_13b

    .line 975
    invoke-virtual {v10, v7}, Lcom/itextpdf/text/pdf/PdfArray;->getDirectObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v11

    check-cast v11, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 976
    invoke-virtual {v11, v8}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v12

    if-eqz v12, :cond_e6

    goto :goto_138

    .line 977
    :cond_e6
    new-instance v8, Lcom/itextpdf/text/pdf/RefKey;

    invoke-direct {v8, v11}, Lcom/itextpdf/text/pdf/RefKey;-><init>(Lcom/itextpdf/text/pdf/PdfIndirectReference;)V

    .line 978
    invoke-virtual {v1, v8}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 979
    invoke-virtual {v2, v11}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 981
    iget-object v12, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {v12, v8}, Ljava/util/LinkedHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    .line 982
    iget-object v12, v8, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v12

    if-eqz v12, :cond_137

    .line 983
    iget-object v8, v8, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v8, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 984
    sget-object v12, Lcom/itextpdf/text/pdf/PdfName;->PG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v8, v12}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v12

    check-cast v12, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    if-eqz v12, :cond_137

    .line 986
    iget-object v13, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pageReferences:Ljava/util/ArrayList;

    invoke-virtual {v13, v12}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v13

    if-nez v13, :cond_137

    invoke-virtual {v12, v6}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v12

    if-nez v12, :cond_137

    .line 987
    sget-object v12, Lcom/itextpdf/text/pdf/PdfName;->PG:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v8, v12, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 988
    sget-object v12, Lcom/itextpdf/text/pdf/PdfName;->K:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v8, v12}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v8

    if-eqz v8, :cond_137

    .line 990
    invoke-virtual {v8, v5}, Lcom/itextpdf/text/pdf/PdfArray;->getDirectObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v12

    .line 991
    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v12

    if-eqz v12, :cond_137

    invoke-virtual {v8, v5}, Lcom/itextpdf/text/pdf/PdfArray;->remove(I)Lcom/itextpdf/text/pdf/PdfObject;

    :cond_137
    move-object v8, v11

    :goto_138
    add-int/lit8 v7, v7, 0x1

    goto :goto_d3

    :cond_13b
    move v6, v9

    :cond_13c
    :goto_13c
    add-int/lit8 v3, v3, -0x1

    goto/16 :goto_4d

    .line 1000
    :cond_140
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    .line 1002
    invoke-direct {p0, v2, v1, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->findActives(Ljava/util/ArrayList;Ljava/util/HashSet;Ljava/util/HashSet;)V

    .line 1004
    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/PdfCopy;->findActiveParents(Ljava/util/HashSet;)Ljava/util/ArrayList;

    move-result-object v2

    .line 1006
    invoke-direct {p0, v2, v1}, Lcom/itextpdf/text/pdf/PdfCopy;->fixPgKey(Ljava/util/ArrayList;Ljava/util/HashSet;)V

    .line 1008
    invoke-virtual {p0, v1, v0}, Lcom/itextpdf/text/pdf/PdfCopy;->fixStructureTreeRoot(Ljava/util/HashSet;Ljava/util/HashSet;)V

    .line 1010
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {v0}, Ljava/util/LinkedHashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_15c
    :goto_15c
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1be

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 1011
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_176

    .line 1012
    invoke-interface {v2, v7}, Ljava/util/Map$Entry;->setValue(Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_15c

    .line 1015
    :cond_176
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    iget-object v3, v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v3

    if-eqz v3, :cond_192

    .line 1016
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v2, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {p0, v2, v1}, Lcom/itextpdf/text/pdf/PdfCopy;->removeInactiveReferences(Lcom/itextpdf/text/pdf/PdfArray;Ljava/util/HashSet;)V

    goto :goto_15c

    .line 1017
    :cond_192
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    iget-object v3, v3, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v3

    if-eqz v3, :cond_15c

    .line 1018
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/PdfIndirectObject;->object:Lcom/itextpdf/text/pdf/PdfObject;

    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->K:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-eqz v2, :cond_15c

    .line 1019
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v3

    if-eqz v3, :cond_15c

    .line 1020
    check-cast v2, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {p0, v2, v1}, Lcom/itextpdf/text/pdf/PdfCopy;->removeInactiveReferences(Lcom/itextpdf/text/pdf/PdfArray;Ljava/util/HashSet;)V

    goto :goto_15c

    :cond_1be
    return-void
.end method

.method protected flushAcroFields()V
    .registers 8
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-eqz v0, :cond_c2

    .line 895
    :try_start_4
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_a
    :goto_a
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_8d

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    .line 896
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    iget v3, v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->pageNumber:I

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    if-eqz v2, :cond_a

    .line 898
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v2

    if-eqz v2, :cond_a

    .line 899
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-nez v3, :cond_2f

    goto :goto_a

    .line 901
    :cond_2f
    iget-object v3, v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getAcroFields()Lcom/itextpdf/text/pdf/AcroFields;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/AcroFields;->getFields()Ljava/util/Map;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Map;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :cond_41
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_65

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/AcroFields$Item;

    .line 902
    iget-object v4, v4, Lcom/itextpdf/text/pdf/AcroFields$Item;->widget_refs:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_53
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_41

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 903
    iget-object v6, v2, Lcom/itextpdf/text/pdf/PdfArray;->arrayList:Ljava/util/ArrayList;

    invoke-virtual {v6, v5}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto :goto_53

    .line 906
    :cond_65
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    iget-object v4, v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/HashMap;

    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    .line 907
    iget-object v2, v2, Lcom/itextpdf/text/pdf/PdfArray;->arrayList:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_77
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_a

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfObject;

    .line 908
    iget-object v4, v1, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;->mergedFields:Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/PdfCopy;->copyObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    goto :goto_77

    .line 912
    :cond_8d
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->keySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_97
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_a7

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfReader;

    .line 913
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfReader;->removeFields()V

    goto :goto_97

    .line 915
    :cond_a7
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields()V

    .line 916
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->createAcroForms()V
    :try_end_ad
    .catch Ljava/lang/ClassCastException; {:try_start_4 .. :try_end_ad} :catch_bb
    .catchall {:try_start_4 .. :try_end_ad} :catchall_b2

    .line 920
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tagged:Z

    if-nez v0, :cond_c2

    goto :goto_bf

    :catchall_b2
    move-exception v0

    iget-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tagged:Z

    if-nez v1, :cond_ba

    .line 921
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->flushIndirectObjects()V

    :cond_ba
    throw v0

    .line 920
    :catch_bb
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->tagged:Z

    if-nez v0, :cond_c2

    .line 921
    :goto_bf
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->flushIndirectObjects()V

    :cond_c2
    return-void
.end method

.method protected flushIndirectObjects()V
    .registers 7
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->savedObjects:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_6
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_21

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    .line 1169
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    new-instance v3, Lcom/itextpdf/text/pdf/RefKey;

    iget v4, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->number:I

    iget v1, v1, Lcom/itextpdf/text/pdf/PdfIndirectObject;->generation:I

    invoke-direct {v3, v4, v1}, Lcom/itextpdf/text/pdf/RefKey;-><init>(II)V

    invoke-virtual {v2, v3}, Ljava/util/LinkedHashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_6

    .line 1170
    :cond_21
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    .line 1171
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    invoke-virtual {v1}, Ljava/util/LinkedHashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_30
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_54

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 1172
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    if-eqz v3, :cond_4c

    .line 1173
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfIndirectObject;

    invoke-direct {p0, v2}, Lcom/itextpdf/text/pdf/PdfCopy;->writeObjectToBody(Lcom/itextpdf/text/pdf/PdfIndirectObject;)V

    goto :goto_30

    .line 1175
    :cond_4c
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_30

    .line 1177
    :cond_54
    new-instance v1, Ljava/util/ArrayList;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->body:Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;->xrefs:Ljava/util/TreeSet;

    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 1178
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_61
    :goto_61
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_85

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference;

    .line 1179
    new-instance v3, Lcom/itextpdf/text/pdf/RefKey;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference;->getRefnum()I

    move-result v4

    const/4 v5, 0x0

    invoke-direct {v3, v4, v5}, Lcom/itextpdf/text/pdf/RefKey;-><init>(II)V

    .line 1180
    invoke-virtual {v0, v3}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_61

    .line 1181
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->body:Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;

    iget-object v3, v3, Lcom/itextpdf/text/pdf/PdfWriter$PdfBody;->xrefs:Ljava/util/TreeSet;

    invoke-virtual {v3, v2}, Ljava/util/TreeSet;->remove(Ljava/lang/Object;)Z

    goto :goto_61

    :cond_85
    const/4 v0, 0x0

    .line 1183
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectObjects:Ljava/util/LinkedHashMap;

    return-void
.end method

.method protected flushTaggedObjects()V
    .registers 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    :try_start_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->fixTaggedStructure()V
    :try_end_3
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_3} :catch_3
    .catchall {:try_start_0 .. :try_end_3} :catchall_7

    .line 887
    :catch_3
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->flushIndirectObjects()V

    goto :goto_c

    :catchall_7
    move-exception v0

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfCopy;->flushIndirectObjects()V

    throw v0

    :goto_c
    return-void
.end method

.method public freeReader(Lcom/itextpdf/text/pdf/PdfReader;)V
    .registers 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_13

    .line 1753
    new-instance p1, Ljava/lang/UnsupportedOperationException;

    const-string v0, "it.is.not.possible.to.free.reader.in.merge.fields.mode"

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 1754
    :cond_13
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ID:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    if-eqz v0, :cond_27

    .line 1756
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getAsString(I)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfString;->getBytes()[B

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->originalFileID:[B

    .line 1757
    :cond_27
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    const/4 v0, 0x0

    .line 1768
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPdfReaderInstance:Lcom/itextpdf/text/pdf/PdfReaderInstance;

    .line 1771
    invoke-super {p0, p1}, Lcom/itextpdf/text/pdf/PdfWriter;->freeReader(Lcom/itextpdf/text/pdf/PdfReader;)V

    return-void
.end method

.method protected getCatalog(Lcom/itextpdf/text/pdf/PdfIndirectReference;)Lcom/itextpdf/text/pdf/PdfDictionary;
    .registers 4

    .line 0
    :try_start_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->pdf:Lcom/itextpdf/text/pdf/PdfDocument;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfDocument;->getCatalog(Lcom/itextpdf/text/pdf/PdfIndirectReference;)Lcom/itextpdf/text/pdf/PdfDocument$PdfCatalog;

    move-result-object p1

    .line 1658
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->buildStructTreeRootForTagged(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    .line 1659
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldArray:Lcom/itextpdf/text/pdf/PdfArray;

    if-eqz v0, :cond_11

    .line 1660
    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->addFieldResources(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    goto :goto_20

    .line 1661
    :cond_11
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-eqz v0, :cond_20

    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->acroForm:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    if-eqz v0, :cond_20

    .line 1662
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->ACROFORM:Lcom/itextpdf/text/pdf/PdfName;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->acroForm:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {p1, v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V
    :try_end_20
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_20} :catch_21

    :cond_20
    :goto_20
    return-object p1

    :catch_21
    move-exception p1

    .line 1667
    new-instance v0, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v0
.end method

.method protected getCounter()Lcom/itextpdf/text/log/Counter;
    .registers 2

    .line 0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfCopy;->COUNTER:Lcom/itextpdf/text/log/Counter;

    return-object v0
.end method

.method public getImportedPage(Lcom/itextpdf/text/pdf/PdfReader;I)Lcom/itextpdf/text/pdf/PdfImportedPage;
    .registers 6

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-eqz v0, :cond_1c

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFieldsInternalCall:Z

    if-nez v0, :cond_1c

    .line 245
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "1.method.cannot.be.used.in.mergeFields.mode.please.use.addDocument"

    const/4 v0, 0x1

    new-array v0, v0, [Ljava/lang/Object;

    const/4 v1, 0x0

    const-string v2, "getImportedPage"

    aput-object v2, v0, v1

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 247
    :cond_1c
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-eqz v0, :cond_2c

    .line 248
    new-instance v0, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    iget-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    invoke-direct {v0, p1, p2, v1}, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;-><init>(Lcom/itextpdf/text/pdf/PdfReader;IZ)V

    .line 249
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 251
    :cond_2c
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    if-eqz v0, :cond_35

    .line 252
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    const/4 v1, 0x0

    iput-object v1, v0, Lcom/itextpdf/text/pdf/PdfStructTreeController;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    .line 253
    :cond_35
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->disableIndirects:Ljava/util/HashSet;

    invoke-virtual {v0}, Ljava/util/HashSet;->clear()V

    .line 254
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->parentObjects:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->clear()V

    .line 255
    invoke-virtual {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfCopy;->getImportedPageImpl(Lcom/itextpdf/text/pdf/PdfReader;I)Lcom/itextpdf/text/pdf/PdfImportedPage;

    move-result-object p1

    return-object p1
.end method

.method public getImportedPage(Lcom/itextpdf/text/pdf/PdfReader;IZ)Lcom/itextpdf/text/pdf/PdfImportedPage;
    .registers 7
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/itextpdf/text/pdf/BadPdfFormatException;
        }
    .end annotation

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_1c

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFieldsInternalCall:Z

    if-nez v0, :cond_1c

    .line 260
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "1.method.cannot.be.used.in.mergeFields.mode.please.use.addDocument"

    new-array p3, v2, [Ljava/lang/Object;

    const-string v0, "getImportedPage"

    aput-object v0, p3, v1

    invoke-static {p2, p3}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 262
    :cond_1c
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->updateRootKids:Z

    if-nez p3, :cond_35

    .line 264
    iget-boolean p3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    if-eqz p3, :cond_30

    .line 265
    new-instance p3, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    invoke-direct {p3, p1, p2, v0}, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;-><init>(Lcom/itextpdf/text/pdf/PdfReader;IZ)V

    .line 266
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v0, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 268
    :cond_30
    invoke-virtual {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfCopy;->getImportedPageImpl(Lcom/itextpdf/text/pdf/PdfReader;I)Lcom/itextpdf/text/pdf/PdfImportedPage;

    move-result-object p1

    return-object p1

    .line 270
    :cond_35
    iget-object p3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    if-eqz p3, :cond_45

    .line 271
    iget-object p3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    iget-object p3, p3, Lcom/itextpdf/text/pdf/PdfStructTreeController;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    if-eq p1, p3, :cond_4c

    .line 272
    iget-object p3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    invoke-virtual {p3, p1}, Lcom/itextpdf/text/pdf/PdfStructTreeController;->setReader(Lcom/itextpdf/text/pdf/PdfReader;)V

    goto :goto_4c

    .line 274
    :cond_45
    new-instance p3, Lcom/itextpdf/text/pdf/PdfStructTreeController;

    invoke-direct {p3, p1, p0}, Lcom/itextpdf/text/pdf/PdfStructTreeController;-><init>(Lcom/itextpdf/text/pdf/PdfReader;Lcom/itextpdf/text/pdf/PdfCopy;)V

    iput-object p3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeController:Lcom/itextpdf/text/pdf/PdfStructTreeController;

    .line 276
    :cond_4c
    :goto_4c
    new-instance p3, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    invoke-direct {p3, p1, p2, v0}, Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;-><init>(Lcom/itextpdf/text/pdf/PdfReader;IZ)V

    .line 277
    invoke-direct {p0, p3}, Lcom/itextpdf/text/pdf/PdfCopy;->checkStructureTreeRootKids(Lcom/itextpdf/text/pdf/PdfCopy$ImportedPage;)I

    move-result v0

    packed-switch v0, :pswitch_data_7a

    goto :goto_66

    .line 286
    :pswitch_5b
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->updateRootKids:Z

    goto :goto_66

    .line 283
    :pswitch_5e
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->updateRootKids:Z

    goto :goto_66

    .line 279
    :pswitch_61
    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->clearIndirects(Lcom/itextpdf/text/pdf/PdfReader;)V

    .line 280
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->updateRootKids:Z

    .line 289
    :goto_66
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->importedPages:Ljava/util/ArrayList;

    invoke-virtual {v0, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 291
    iget-object p3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->disableIndirects:Ljava/util/HashSet;

    invoke-virtual {p3}, Ljava/util/HashSet;->clear()V

    .line 292
    iget-object p3, p0, Lcom/itextpdf/text/pdf/PdfCopy;->parentObjects:Ljava/util/HashMap;

    invoke-virtual {p3}, Ljava/util/HashMap;->clear()V

    .line 293
    invoke-virtual {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfCopy;->getImportedPageImpl(Lcom/itextpdf/text/pdf/PdfReader;I)Lcom/itextpdf/text/pdf/PdfImportedPage;

    move-result-object p1

    return-object p1

    :pswitch_data_7a
    .packed-switch -0x1
        :pswitch_61
        :pswitch_5e
        :pswitch_5b
    .end packed-switch
.end method

.method protected getImportedPageImpl(Lcom/itextpdf/text/pdf/PdfReader;I)Lcom/itextpdf/text/pdf/PdfImportedPage;
    .registers 4

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPdfReaderInstance:Lcom/itextpdf/text/pdf/PdfReaderInstance;

    if-eqz v0, :cond_13

    .line 370
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPdfReaderInstance:Lcom/itextpdf/text/pdf/PdfReaderInstance;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReaderInstance;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v0

    if-eq v0, p1, :cond_19

    .line 380
    invoke-super {p0, p1}, Lcom/itextpdf/text/pdf/PdfWriter;->getPdfReaderInstance(Lcom/itextpdf/text/pdf/PdfReader;)Lcom/itextpdf/text/pdf/PdfReaderInstance;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPdfReaderInstance:Lcom/itextpdf/text/pdf/PdfReaderInstance;

    goto :goto_19

    .line 384
    :cond_13
    invoke-super {p0, p1}, Lcom/itextpdf/text/pdf/PdfWriter;->getPdfReaderInstance(Lcom/itextpdf/text/pdf/PdfReader;)Lcom/itextpdf/text/pdf/PdfReaderInstance;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPdfReaderInstance:Lcom/itextpdf/text/pdf/PdfReaderInstance;

    .line 388
    :cond_19
    :goto_19
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPdfReaderInstance:Lcom/itextpdf/text/pdf/PdfReaderInstance;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfReaderInstance;->getImportedPage(I)Lcom/itextpdf/text/pdf/PdfImportedPage;

    move-result-object p1

    return-object p1
.end method

.method protected getOffStateName(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfName;
    .registers 2

    .line 0
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->Off:Lcom/itextpdf/text/pdf/PdfName;

    return-object p1
.end method

.method public isRotateContents()Z
    .registers 2

    .line 0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->rotateContents:Z

    return v0
.end method

.method protected isStructTreeRootReference(Lcom/itextpdf/text/pdf/PdfIndirectReference;)Z
    .registers 5

    const/4 v0, 0x0

    if-eqz p1, :cond_1a

    .line 0
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeRootReference:Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 1674
    if-nez v1, :cond_8

    goto :goto_1a

    :cond_8
    iget v1, p1, Lcom/itextpdf/text/pdf/PdfIndirectReference;->number:I

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeRootReference:Lcom/itextpdf/text/pdf/PRIndirectReference;

    iget v2, v2, Lcom/itextpdf/text/pdf/PRIndirectReference;->number:I

    if-ne v1, v2, :cond_19

    iget p1, p1, Lcom/itextpdf/text/pdf/PdfIndirectReference;->generation:I

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->structTreeRootReference:Lcom/itextpdf/text/pdf/PRIndirectReference;

    iget v1, v1, Lcom/itextpdf/text/pdf/PRIndirectReference;->generation:I

    if-ne p1, v1, :cond_19

    const/4 v0, 0x1

    :cond_19
    return v0

    :cond_1a
    :goto_1a
    return v0
.end method

.method protected setFromIPage(Lcom/itextpdf/text/pdf/PdfImportedPage;)I
    .registers 3

    .line 0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfImportedPage;->getPageNumber()I

    move-result v0

    .line 634
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfImportedPage;->getPdfReaderInstance()Lcom/itextpdf/text/pdf/PdfReaderInstance;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->currentPdfReaderInstance:Lcom/itextpdf/text/pdf/PdfReaderInstance;

    .line 635
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReaderInstance;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    .line 636
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfCopy;->setFromReader(Lcom/itextpdf/text/pdf/PdfReader;)V

    return v0
.end method

.method protected setFromReader(Lcom/itextpdf/text/pdf/PdfReader;)V
    .registers 4

    .line 0
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->reader:Lcom/itextpdf/text/pdf/PdfReader;

    .line 645
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/HashMap;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    .line 646
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    if-nez v0, :cond_1e

    .line 647
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    .line 648
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirectMap:Ljava/util/HashMap;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->indirects:Ljava/util/HashMap;

    invoke-virtual {v0, p1, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_1e
    return-void
.end method

.method public setMergeFields()V
    .registers 2

    const/4 v0, 0x1

    .line 0
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergeFields:Z

    .line 226
    new-instance v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->resources:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 227
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fields:Ljava/util/ArrayList;

    .line 228
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->calculationOrder:Ljava/util/ArrayList;

    .line 229
    new-instance v0, Ljava/util/LinkedHashMap;

    invoke-direct {v0}, Ljava/util/LinkedHashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->fieldTree:Ljava/util/HashMap;

    .line 230
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->unmergedMap:Ljava/util/HashMap;

    .line 231
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->unmergedIndirectRefsMap:Ljava/util/HashMap;

    .line 232
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedMap:Ljava/util/HashMap;

    .line 233
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->mergedSet:Ljava/util/HashSet;

    return-void
.end method

.method public setPageEvent(Lcom/itextpdf/text/pdf/PdfPageEvent;)V
    .registers 2

    .line 0
    new-instance p1, Ljava/lang/UnsupportedOperationException;

    invoke-direct {p1}, Ljava/lang/UnsupportedOperationException;-><init>()V

    throw p1
.end method

.method public setRotateContents(Z)V
    .registers 2

    .line 0
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfCopy;->rotateContents:Z

    return-void
.end method

.method protected structureTreeRootKidsForReaderImported(Lcom/itextpdf/text/pdf/PdfReader;)V
    .registers 3

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfCopy;->readersWithImportedStructureTreeRootKids:Ljava/util/HashSet;

    invoke-virtual {v0, p1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    return-void
.end method
