.class public Lcom/itextpdf/text/pdf/parser/clipper/Paths;
.super Ljava/util/ArrayList;
.source "Paths.java"


# annotations
.annotation system Ldalvik/annotation/Signature;
    value = {
        "Ljava/util/ArrayList<",
        "Lcom/itextpdf/text/pdf/parser/clipper/Path;",
        ">;"
    }
.end annotation


# static fields
.field private static final serialVersionUID:J = 0x1a83a509a702aad4L


# direct methods
.method public constructor <init>()V
    .registers 1

    .line 0
    invoke-direct {p0}, Ljava/util/ArrayList;-><init>()V

    return-void
.end method

.method public constructor <init>(I)V
    .registers 2

    .line 0
    invoke-direct {p0, p1}, Ljava/util/ArrayList;-><init>(I)V

    return-void
.end method

.method public static closedPathsFromPolyTree(Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 3

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;-><init>()V

    .line 90
    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode$NodeType;->CLOSED:Lcom/itextpdf/text/pdf/parser/clipper/PolyNode$NodeType;

    invoke-virtual {v0, p0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->addPolyNode(Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;Lcom/itextpdf/text/pdf/parser/clipper/PolyNode$NodeType;)V

    return-object v0
.end method

.method public static makePolyTreeToPaths(Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 3

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;-><init>()V

    .line 98
    sget-object v1, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode$NodeType;->ANY:Lcom/itextpdf/text/pdf/parser/clipper/PolyNode$NodeType;

    invoke-virtual {v0, p0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->addPolyNode(Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;Lcom/itextpdf/text/pdf/parser/clipper/PolyNode$NodeType;)V

    return-object v0
.end method

.method public static openPathsFromPolyTree(Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 4

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;-><init>()V

    .line 105
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/PolyTree;->getChilds()Ljava/util/List;

    move-result-object p0

    invoke-interface {p0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object p0

    :cond_d
    :goto_d
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_27

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;

    .line 106
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;->isOpen()Z

    move-result v2

    if-eqz v2, :cond_d

    .line 107
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;->getPolygon()Lcom/itextpdf/text/pdf/parser/clipper/Path;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->add(Ljava/lang/Object;)Z

    goto :goto_d

    :cond_27
    return-object v0
.end method


# virtual methods
.method public addPolyNode(Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;Lcom/itextpdf/text/pdf/parser/clipper/PolyNode$NodeType;)V
    .registers 5

    .line 0
    sget-object v0, Lcom/itextpdf/text/pdf/parser/clipper/Paths$1;->$SwitchMap$com$itextpdf$text$pdf$parser$clipper$PolyNode$NodeType:[I

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode$NodeType;->ordinal()I

    move-result v1

    aget v0, v0, v1

    const/4 v1, 0x1

    packed-switch v0, :pswitch_data_40

    goto :goto_14

    .line 132
    :pswitch_d
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;->isOpen()Z

    move-result v0

    xor-int/2addr v1, v0

    goto :goto_14

    :pswitch_13
    return-void

    .line 138
    :goto_14
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;->getPolygon()Lcom/itextpdf/text/pdf/parser/clipper/Path;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->size()I

    move-result v0

    if-lez v0, :cond_27

    if-eqz v1, :cond_27

    .line 139
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;->getPolygon()Lcom/itextpdf/text/pdf/parser/clipper/Path;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->add(Ljava/lang/Object;)Z

    .line 141
    :cond_27
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;->getChilds()Ljava/util/List;

    move-result-object p1

    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_2f
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_3f

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;

    .line 142
    invoke-virtual {p0, v0, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->addPolyNode(Lcom/itextpdf/text/pdf/parser/clipper/PolyNode;Lcom/itextpdf/text/pdf/parser/clipper/PolyNode$NodeType;)V

    goto :goto_2f

    :cond_3f
    return-void

    :pswitch_data_40
    .packed-switch 0x1
        :pswitch_13
        :pswitch_d
    .end packed-switch
.end method

.method public cleanPolygons()Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 3

    const-wide v0, 0x3ff6a3d70a3d70a4L

    .line 0
    invoke-virtual {p0, v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->cleanPolygons(D)Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    move-result-object v0

    return-object v0
.end method

.method public cleanPolygons(D)Lcom/itextpdf/text/pdf/parser/clipper/Paths;
    .registers 6

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/parser/clipper/Paths;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->size()I

    move-result v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;-><init>(I)V

    const/4 v1, 0x0

    .line 152
    :goto_a
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->size()I

    move-result v2

    if-ge v1, v2, :cond_20

    .line 153
    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v2, p1, p2}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->cleanPolygon(D)Lcom/itextpdf/text/pdf/parser/clipper/Path;

    move-result-object v2

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->add(Ljava/lang/Object;)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_a

    :cond_20
    return-object v0
.end method

.method public getBounds()Lcom/itextpdf/text/pdf/parser/clipper/LongRect;
    .registers 11

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->size()I

    move-result v0

    .line 162
    new-instance v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;-><init>()V

    const/4 v2, 0x0

    const/4 v3, 0x0

    :goto_b
    if-ge v3, v0, :cond_1c

    .line 163
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->isEmpty()Z

    move-result v4

    if-eqz v4, :cond_1c

    add-int/lit8 v3, v3, 0x1

    goto :goto_b

    :cond_1c
    if-ne v3, v0, :cond_1f

    return-object v1

    .line 170
    :cond_1f
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v4, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v4

    iput-wide v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->left:J

    .line 171
    iget-wide v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->left:J

    iput-wide v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->right:J

    .line 172
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v4, v2}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v4

    iput-wide v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->top:J

    .line 173
    iget-wide v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->top:J

    iput-wide v4, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->bottom:J

    :goto_4b
    if-ge v3, v0, :cond_104

    const/4 v4, 0x0

    .line 175
    :goto_4e
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->size()I

    move-result v5

    if-ge v4, v5, :cond_100

    .line 176
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    iget-wide v7, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->left:J

    cmp-long v9, v5, v7

    if-gez v9, :cond_83

    .line 177
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    iput-wide v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->left:J

    goto :goto_ab

    .line 179
    :cond_83
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    iget-wide v7, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->right:J

    cmp-long v9, v5, v7

    if-lez v9, :cond_ab

    .line 180
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getX()J

    move-result-wide v5

    iput-wide v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->right:J

    .line 182
    :cond_ab
    :goto_ab
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v5

    iget-wide v7, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->top:J

    cmp-long v9, v5, v7

    if-gez v9, :cond_d4

    .line 183
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v5

    iput-wide v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->top:J

    goto :goto_fc

    .line 185
    :cond_d4
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v5

    iget-wide v7, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->bottom:J

    cmp-long v9, v5, v7

    if-lez v9, :cond_fc

    .line 186
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/parser/clipper/Point$LongPoint;->getY()J

    move-result-wide v5

    iput-wide v5, v1, Lcom/itextpdf/text/pdf/parser/clipper/LongRect;->bottom:J

    :cond_fc
    :goto_fc
    add-int/lit8 v4, v4, 0x1

    goto/16 :goto_4e

    :cond_100
    add-int/lit8 v3, v3, 0x1

    goto/16 :goto_4b

    :cond_104
    return-object v1
.end method

.method public reversePaths()V
    .registers 3

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/parser/clipper/Paths;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_4
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_14

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/parser/clipper/Path;

    .line 195
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/parser/clipper/Path;->reverse()V

    goto :goto_4

    :cond_14
    return-void
.end method
