.class public Lcom/itextpdf/text/pdf/MappedRandomAccessFile;
.super Ljava/lang/Object;
.source "MappedRandomAccessFile.java"


# static fields
.field private static final BUFSIZE:I = 0x40000000


# instance fields
.field private channel:Ljava/nio/channels/FileChannel;

.field private mappedBuffers:[Ljava/nio/MappedByteBuffer;

.field private pos:J

.field private size:J


# direct methods
.method public constructor <init>(Ljava/lang/String;Ljava/lang/String;)V
    .registers 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/FileNotFoundException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, 0x0

    .line 66
    iput-object v0, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->channel:Ljava/nio/channels/FileChannel;

    const-string v0, "rw"

    .line 81
    invoke-virtual {p2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1d

    .line 82
    new-instance v0, Ljava/io/RandomAccessFile;

    invoke-direct {v0, p1, p2}, Ljava/io/RandomAccessFile;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 83
    invoke-virtual {v0}, Ljava/io/RandomAccessFile;->getChannel()Ljava/nio/channels/FileChannel;

    move-result-object p1

    sget-object p2, Ljava/nio/channels/FileChannel$MapMode;->READ_WRITE:Ljava/nio/channels/FileChannel$MapMode;

    .line 82
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->init(Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileChannel$MapMode;)V

    goto :goto_2b

    .line 86
    :cond_1d
    new-instance p2, Ljava/io/FileInputStream;

    invoke-direct {p2, p1}, Ljava/io/FileInputStream;-><init>(Ljava/lang/String;)V

    .line 87
    invoke-virtual {p2}, Ljava/io/FileInputStream;->getChannel()Ljava/nio/channels/FileChannel;

    move-result-object p1

    sget-object p2, Ljava/nio/channels/FileChannel$MapMode;->READ_ONLY:Ljava/nio/channels/FileChannel$MapMode;

    .line 86
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->init(Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileChannel$MapMode;)V

    :goto_2b
    return-void
.end method

.method public static clean(Ljava/nio/ByteBuffer;)Z
    .registers 2

    if-eqz p0, :cond_19

    .line 0
    invoke-virtual {p0}, Ljava/nio/ByteBuffer;->isDirect()Z

    move-result v0

    if-nez v0, :cond_9

    .line 255
    goto :goto_19

    :cond_9
    new-instance v0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile$1;

    invoke-direct {v0, p0}, Lcom/itextpdf/text/pdf/MappedRandomAccessFile$1;-><init>(Ljava/nio/ByteBuffer;)V

    invoke-static {v0}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;

    move-result-object p0

    .line 273
    check-cast p0, Ljava/lang/Boolean;

    invoke-virtual {p0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p0

    return p0

    :cond_19
    :goto_19
    const/4 p0, 0x0

    return p0
.end method

.method private init(Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileChannel$MapMode;)V
    .registers 16
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iput-object p1, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->channel:Ljava/nio/channels/FileChannel;

    .line 104
    invoke-virtual {p1}, Ljava/nio/channels/FileChannel;->size()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->size:J

    const-wide/16 v0, 0x0

    .line 105
    iput-wide v0, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->pos:J

    .line 106
    iget-wide v2, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->size:J

    const-wide/32 v4, 0x40000000

    div-long/2addr v2, v4

    long-to-int v2, v2

    iget-wide v6, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->size:J

    rem-long/2addr v6, v4

    cmp-long v3, v6, v0

    const/4 v6, 0x0

    if-nez v3, :cond_1d

    const/4 v3, 0x0

    goto :goto_1e

    :cond_1d
    const/4 v3, 0x1

    :goto_1e
    add-int/2addr v2, v3

    .line 109
    new-array v3, v2, [Ljava/nio/MappedByteBuffer;

    iput-object v3, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    .line 112
    :goto_23
    :try_start_23
    iget-wide v7, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->size:J

    cmp-long v3, v0, v7

    if-gez v3, :cond_4a

    .line 113
    iget-wide v7, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->size:J

    const/4 v3, 0x0

    sub-long v9, v7, v0

    invoke-static {v9, v10, v4, v5}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v11

    .line 114
    iget-object v3, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    move-object v7, p1

    move-object v8, p2

    move-wide v9, v0

    invoke-virtual/range {v7 .. v12}, Ljava/nio/channels/FileChannel;->map(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;

    move-result-object v7

    aput-object v7, v3, v6

    .line 115
    iget-object v3, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    aget-object v3, v3, v6

    invoke-virtual {v3}, Ljava/nio/MappedByteBuffer;->load()Ljava/nio/MappedByteBuffer;

    add-int/lit8 v6, v6, 0x1

    add-long v7, v0, v4

    move-wide v0, v7

    goto :goto_23

    :cond_4a
    if-eq v6, v2, :cond_6b

    .line 119
    new-instance p1, Ljava/lang/Error;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Should never happen - "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " != "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/Error;-><init>(Ljava/lang/String;)V

    throw p1
    :try_end_6b
    .catch Ljava/io/IOException; {:try_start_23 .. :try_end_6b} :catch_71
    .catch Ljava/lang/RuntimeException; {:try_start_23 .. :try_end_6b} :catch_6c

    :cond_6b
    return-void

    :catch_6c
    move-exception p1

    .line 125
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->close()V

    .line 126
    throw p1

    :catch_71
    move-exception p1

    .line 122
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->close()V

    .line 123
    throw p1
.end method


# virtual methods
.method public close()V
    .registers 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    const/4 v0, 0x0

    .line 0
    :goto_1
    iget-object v1, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    array-length v1, v1

    const/4 v2, 0x0

    if-ge v0, v1, :cond_1b

    .line 225
    iget-object v1, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    aget-object v1, v1, v0

    if-eqz v1, :cond_18

    .line 226
    iget-object v1, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    aget-object v1, v1, v0

    invoke-static {v1}, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->clean(Ljava/nio/ByteBuffer;)Z

    .line 227
    iget-object v1, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    aput-object v2, v1, v0

    :cond_18
    add-int/lit8 v0, v0, 0x1

    .line 231
    goto :goto_1

    :cond_1b
    iget-object v0, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->channel:Ljava/nio/channels/FileChannel;

    if-eqz v0, :cond_24

    .line 232
    iget-object v0, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->channel:Ljava/nio/channels/FileChannel;

    invoke-virtual {v0}, Ljava/nio/channels/FileChannel;->close()V

    .line 233
    :cond_24
    iput-object v2, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->channel:Ljava/nio/channels/FileChannel;

    return-void
.end method

.method protected finalize()V
    .registers 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Throwable;
        }
    .end annotation

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->close()V

    .line 243
    invoke-super {p0}, Ljava/lang/Object;->finalize()V

    return-void
.end method

.method public getChannel()Ljava/nio/channels/FileChannel;
    .registers 2

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->channel:Ljava/nio/channels/FileChannel;

    return-object v0
.end method

.method public getFilePointer()J
    .registers 3

    .line 0
    iget-wide v0, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->pos:J

    return-wide v0
.end method

.method public length()J
    .registers 3

    .line 0
    iget-wide v0, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->size:J

    return-wide v0
.end method

.method public read()I
    .registers 9

    const/4 v0, -0x1

    .line 0
    :try_start_1
    iget-wide v1, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->pos:J

    const-wide/32 v3, 0x40000000

    div-long/2addr v1, v3

    .line 145
    long-to-int v1, v1

    iget-wide v5, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->pos:J

    rem-long/2addr v5, v3

    .line 147
    long-to-int v2, v5

    iget-object v3, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    array-length v3, v3

    if-lt v1, v3, :cond_12

    .line 150
    return v0

    :cond_12
    iget-object v3, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    aget-object v3, v3, v1

    invoke-virtual {v3}, Ljava/nio/MappedByteBuffer;->limit()I

    move-result v3

    if-lt v2, v3, :cond_1d

    .line 153
    return v0

    :cond_1d
    iget-object v3, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    aget-object v1, v3, v1

    invoke-virtual {v1, v2}, Ljava/nio/MappedByteBuffer;->get(I)B

    .line 154
    move-result v1

    iget-wide v2, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->pos:J

    const-wide/16 v4, 0x1

    add-long v6, v2, v4

    iput-wide v6, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->pos:J
    :try_end_2d
    .catch Ljava/nio/BufferUnderflowException; {:try_start_1 .. :try_end_2d} :catch_30

    and-int/lit16 v0, v1, 0xff

    return v0

    :catch_30
    return v0
.end method

.method public read([BII)I
    .registers 14

    .line 0
    iget-wide v0, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->pos:J

    const-wide/32 v2, 0x40000000

    div-long/2addr v0, v2

    long-to-int v0, v0

    .line 172
    iget-wide v4, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->pos:J

    rem-long/2addr v4, v2

    long-to-int v1, v4

    const/4 v2, 0x0

    move v3, p2

    const/4 p2, 0x0

    :goto_e
    if-ge p2, p3, :cond_3e

    .line 176
    iget-object v4, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    array-length v4, v4

    if-lt v0, v4, :cond_16

    goto :goto_3e

    .line 178
    :cond_16
    iget-object v4, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->mappedBuffers:[Ljava/nio/MappedByteBuffer;

    aget-object v4, v4, v0

    .line 179
    invoke-virtual {v4}, Ljava/nio/MappedByteBuffer;->limit()I

    move-result v5

    if-le v1, v5, :cond_21

    goto :goto_3e

    .line 181
    :cond_21
    invoke-virtual {v4, v1}, Ljava/nio/MappedByteBuffer;->position(I)Ljava/nio/Buffer;

    sub-int v1, p3, p2

    .line 182
    invoke-virtual {v4}, Ljava/nio/MappedByteBuffer;->remaining()I

    move-result v5

    invoke-static {v1, v5}, Ljava/lang/Math;->min(II)I

    move-result v1

    .line 183
    invoke-virtual {v4, p1, v3, v1}, Ljava/nio/MappedByteBuffer;->get([BII)Ljava/nio/ByteBuffer;

    add-int/2addr v3, v1

    .line 185
    iget-wide v4, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->pos:J

    int-to-long v6, v1

    add-long v8, v4, v6

    iput-wide v8, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->pos:J

    add-int/2addr p2, v1

    add-int/lit8 v0, v0, 0x1

    const/4 v1, 0x0

    goto :goto_e

    :cond_3e
    :goto_3e
    if-nez p2, :cond_41

    const/4 p2, -0x1

    :cond_41
    return p2
.end method

.method public seek(J)V
    .registers 3

    .line 0
    iput-wide p1, p0, Lcom/itextpdf/text/pdf/MappedRandomAccessFile;->pos:J

    return-void
.end method
