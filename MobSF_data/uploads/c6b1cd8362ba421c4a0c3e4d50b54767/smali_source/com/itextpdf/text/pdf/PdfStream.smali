.class public Lcom/itextpdf/text/pdf/PdfStream;
.super Lcom/itextpdf/text/pdf/PdfDictionary;
.source "PdfStream.java"


# static fields
.field public static final BEST_COMPRESSION:I = 0x9

.field public static final BEST_SPEED:I = 0x1

.field public static final DEFAULT_COMPRESSION:I = -0x1

.field static final ENDSTREAM:[B

.field public static final NO_COMPRESSION:I

.field static final SIZESTREAM:I

.field static final STARTSTREAM:[B


# instance fields
.field protected compressed:Z

.field protected compressionLevel:I

.field protected inputStream:Ljava/io/InputStream;

.field protected inputStreamLength:I

.field protected rawLength:I

.field protected ref:Lcom/itextpdf/text/pdf/PdfIndirectReference;

.field protected streamBytes:Ljava/io/ByteArrayOutputStream;

.field protected writer:Lcom/itextpdf/text/pdf/PdfWriter;


# direct methods
.method static constructor <clinit>()V
    .registers 2

    const-string v0, "stream\n"

    .line 0
    invoke-static {v0}, Lcom/itextpdf/text/DocWriter;->getISOBytes(Ljava/lang/String;)[B

    move-result-object v0

    sput-object v0, Lcom/itextpdf/text/pdf/PdfStream;->STARTSTREAM:[B

    .line 122
    const-string v0, "\nendstream"

    invoke-static {v0}, Lcom/itextpdf/text/DocWriter;->getISOBytes(Ljava/lang/String;)[B

    move-result-object v0

    .line 123
    sput-object v0, Lcom/itextpdf/text/pdf/PdfStream;->ENDSTREAM:[B

    sget-object v0, Lcom/itextpdf/text/pdf/PdfStream;->STARTSTREAM:[B

    array-length v0, v0

    sget-object v1, Lcom/itextpdf/text/pdf/PdfStream;->ENDSTREAM:[B

    array-length v1, v1

    add-int/2addr v0, v1

    sput v0, Lcom/itextpdf/text/pdf/PdfStream;->SIZESTREAM:I

    return-void
.end method

.method protected constructor <init>()V
    .registers 2

    .line 0
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    const/4 v0, 0x0

    .line 107
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressed:Z

    .line 112
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressionLevel:I

    const/4 v0, 0x0

    .line 114
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    const/4 v0, -0x1

    .line 117
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStreamLength:I

    const/4 v0, 0x7

    .line 171
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->type:I

    return-void
.end method

.method public constructor <init>(Ljava/io/InputStream;Lcom/itextpdf/text/pdf/PdfWriter;)V
    .registers 4

    .line 0
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    const/4 v0, 0x0

    .line 107
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressed:Z

    .line 112
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressionLevel:I

    const/4 v0, 0x0

    .line 114
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    const/4 v0, -0x1

    .line 117
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStreamLength:I

    const/4 v0, 0x7

    .line 158
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->type:I

    .line 159
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStream:Ljava/io/InputStream;

    .line 160
    iput-object p2, p0, Lcom/itextpdf/text/pdf/PdfStream;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    .line 161
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfWriter;->getPdfIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->ref:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    .line 162
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->LENGTH:Lcom/itextpdf/text/pdf/PdfName;

    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfStream;->ref:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfStream;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    return-void
.end method

.method public constructor <init>([B)V
    .registers 4

    .line 0
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    const/4 v0, 0x0

    .line 107
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressed:Z

    .line 112
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressionLevel:I

    const/4 v0, 0x0

    .line 114
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    const/4 v0, -0x1

    .line 117
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStreamLength:I

    const/4 v0, 0x7

    .line 135
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->type:I

    .line 136
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->bytes:[B

    .line 137
    array-length v0, p1

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->rawLength:I

    .line 138
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->LENGTH:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v1, Lcom/itextpdf/text/pdf/PdfNumber;

    array-length p1, p1

    invoke-direct {v1, p1}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {p0, v0, v1}, Lcom/itextpdf/text/pdf/PdfStream;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    return-void
.end method


# virtual methods
.method public flateCompress()V
    .registers 2

    const/4 v0, -0x1

    .line 0
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfStream;->flateCompress(I)V

    return-void
.end method

.method public flateCompress(I)V
    .registers 8

    .line 0
    sget-boolean v0, Lcom/itextpdf/text/Document;->compress:Z

    if-nez v0, :cond_5

    return-void

    .line 214
    :cond_5
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressed:Z

    if-eqz v0, :cond_a

    return-void

    .line 217
    :cond_a
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressionLevel:I

    .line 218
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStream:Ljava/io/InputStream;

    const/4 v1, 0x1

    if-eqz v0, :cond_14

    .line 219
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressed:Z

    return-void

    .line 223
    :cond_14
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FILTER:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfStream;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    const/4 v2, 0x0

    if-eqz v0, :cond_50

    .line 225
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v3

    if-eqz v3, :cond_30

    .line 226
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FLATEDECODE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_50

    return-void

    .line 229
    :cond_30
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v3

    if-eqz v3, :cond_42

    .line 230
    move-object v3, v0

    check-cast v3, Lcom/itextpdf/text/pdf/PdfArray;

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FLATEDECODE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfArray;->contains(Lcom/itextpdf/text/pdf/PdfObject;)Z

    move-result v3

    if-eqz v3, :cond_50

    return-void

    .line 234
    :cond_42
    new-instance p1, Ljava/lang/RuntimeException;

    const-string v0, "stream.could.not.be.compressed.filter.is.not.a.name.or.array"

    new-array v1, v2, [Ljava/lang/Object;

    invoke-static {v0, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 239
    :cond_50
    :try_start_50
    new-instance v3, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v3}, Ljava/io/ByteArrayOutputStream;-><init>()V

    .line 240
    new-instance v4, Ljava/util/zip/Deflater;

    invoke-direct {v4, p1}, Ljava/util/zip/Deflater;-><init>(I)V

    .line 241
    new-instance p1, Ljava/util/zip/DeflaterOutputStream;

    invoke-direct {p1, v3, v4}, Ljava/util/zip/DeflaterOutputStream;-><init>(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V

    .line 242
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    if-eqz v5, :cond_69

    .line 243
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    invoke-virtual {v5, p1}, Ljava/io/ByteArrayOutputStream;->writeTo(Ljava/io/OutputStream;)V

    goto :goto_6e

    .line 245
    :cond_69
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfStream;->bytes:[B

    invoke-virtual {p1, v5}, Ljava/util/zip/DeflaterOutputStream;->write([B)V

    .line 246
    :goto_6e
    invoke-virtual {p1}, Ljava/util/zip/DeflaterOutputStream;->close()V

    .line 247
    invoke-virtual {v4}, Ljava/util/zip/Deflater;->end()V

    .line 249
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    const/4 p1, 0x0

    .line 250
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->bytes:[B

    .line 251
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->LENGTH:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v3, Lcom/itextpdf/text/pdf/PdfNumber;

    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    invoke-virtual {v4}, Ljava/io/ByteArrayOutputStream;->size()I

    move-result v4

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {p0, p1, v3}, Lcom/itextpdf/text/pdf/PdfStream;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    if-nez v0, :cond_93

    .line 253
    sget-object p1, Lcom/itextpdf/text/pdf/PdfName;->FILTER:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FLATEDECODE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfStream;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_a2

    .line 256
    :cond_93
    new-instance p1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;-><init>(Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 257
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FLATEDECODE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v2, v0}, Lcom/itextpdf/text/pdf/PdfArray;->add(ILcom/itextpdf/text/pdf/PdfObject;)V

    .line 258
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FILTER:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0, p1}, Lcom/itextpdf/text/pdf/PdfStream;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 260
    :goto_a2
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressed:Z
    :try_end_a4
    .catch Ljava/io/IOException; {:try_start_50 .. :try_end_a4} :catch_a5

    return-void

    :catch_a5
    move-exception p1

    .line 263
    new-instance v0, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v0
.end method

.method public getRawLength()I
    .registers 2

    .line 0
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->rawLength:I

    return v0
.end method

.method protected superToPdf(Lcom/itextpdf/text/pdf/PdfWriter;Ljava/io/OutputStream;)V
    .registers 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    invoke-super {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->toPdf(Lcom/itextpdf/text/pdf/PdfWriter;Ljava/io/OutputStream;)V

    return-void
.end method

.method public toPdf(Lcom/itextpdf/text/pdf/PdfWriter;Ljava/io/OutputStream;)V
    .registers 11
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStream:Ljava/io/InputStream;

    if-eqz v0, :cond_f

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressed:Z

    if-eqz v0, :cond_f

    .line 285
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FILTER:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FLATEDECODE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0, v1}, Lcom/itextpdf/text/pdf/PdfStream;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_f
    const/4 v0, 0x0

    if-eqz p1, :cond_17

    .line 288
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfWriter;->getEncryption()Lcom/itextpdf/text/pdf/PdfEncryption;

    move-result-object v1

    goto :goto_18

    :cond_17
    move-object v1, v0

    :goto_18
    const/4 v2, 0x0

    if-eqz v1, :cond_48

    .line 290
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FILTER:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/PdfStream;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-eqz v3, :cond_48

    .line 292
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->CRYPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2d

    :goto_2b
    move-object v1, v0

    goto :goto_48

    .line 294
    :cond_2d
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v4

    if-eqz v4, :cond_48

    .line 295
    check-cast v3, Lcom/itextpdf/text/pdf/PdfArray;

    .line 296
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfArray;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_48

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->CRYPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_48

    goto :goto_2b

    .line 301
    :cond_48
    :goto_48
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->LENGTH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/PdfStream;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-eqz v1, :cond_76

    if-eqz v3, :cond_76

    .line 302
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v4

    if-eqz v4, :cond_76

    .line 303
    move-object v4, v3

    check-cast v4, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v4

    .line 304
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->LENGTH:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v6, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v1, v4}, Lcom/itextpdf/text/pdf/PdfEncryption;->calculateStreamSize(I)I

    move-result v4

    invoke-direct {v6, v4}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    invoke-virtual {p0, v5, v6}, Lcom/itextpdf/text/pdf/PdfStream;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 305
    invoke-virtual {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfStream;->superToPdf(Lcom/itextpdf/text/pdf/PdfWriter;Ljava/io/OutputStream;)V

    .line 306
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->LENGTH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v4, v3}, Lcom/itextpdf/text/pdf/PdfStream;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_79

    .line 309
    :cond_76
    invoke-virtual {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfStream;->superToPdf(Lcom/itextpdf/text/pdf/PdfWriter;Ljava/io/OutputStream;)V

    :goto_79
    const/16 v3, 0x9

    .line 310
    invoke-static {p1, v3, p0}, Lcom/itextpdf/text/pdf/PdfWriter;->checkPdfIsoConformance(Lcom/itextpdf/text/pdf/PdfWriter;ILjava/lang/Object;)V

    .line 311
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStream;->STARTSTREAM:[B

    invoke-virtual {p2, p1}, Ljava/io/OutputStream;->write([B)V

    .line 312
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStream:Ljava/io/InputStream;

    if-eqz p1, :cond_e0

    .line 313
    iput v2, p0, Lcom/itextpdf/text/pdf/PdfStream;->rawLength:I

    .line 315
    new-instance p1, Lcom/itextpdf/text/pdf/OutputStreamCounter;

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/OutputStreamCounter;-><init>(Ljava/io/OutputStream;)V

    if-eqz v1, :cond_9c

    .line 318
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfEncryption;->isEmbeddedFilesOnly()Z

    move-result v3

    if-nez v3, :cond_9c

    .line 319
    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/PdfEncryption;->getEncryptionStream(Ljava/io/OutputStream;)Lcom/itextpdf/text/pdf/OutputStreamEncryption;

    move-result-object v1

    move-object v3, v1

    goto :goto_9e

    :cond_9c
    move-object v1, p1

    move-object v3, v0

    .line 321
    :goto_9e
    iget-boolean v4, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressed:Z

    if-eqz v4, :cond_b4

    .line 322
    new-instance v0, Ljava/util/zip/Deflater;

    iget v4, p0, Lcom/itextpdf/text/pdf/PdfStream;->compressionLevel:I

    invoke-direct {v0, v4}, Ljava/util/zip/Deflater;-><init>(I)V

    .line 323
    new-instance v4, Ljava/util/zip/DeflaterOutputStream;

    const v5, 0x8000

    invoke-direct {v4, v1, v0, v5}, Ljava/util/zip/DeflaterOutputStream;-><init>(Ljava/io/OutputStream;Ljava/util/zip/Deflater;I)V

    move-object v5, v0

    move-object v0, v4

    goto :goto_b6

    :cond_b4
    move-object v5, v0

    move-object v4, v1

    :goto_b6
    const/16 v1, 0x1060

    .line 326
    new-array v6, v1, [B

    .line 328
    :goto_ba
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStream:Ljava/io/InputStream;

    invoke-virtual {v1, v6}, Ljava/io/InputStream;->read([B)I

    move-result v1

    if-gtz v1, :cond_d7

    if-eqz v0, :cond_ca

    .line 335
    invoke-virtual {v0}, Ljava/util/zip/DeflaterOutputStream;->finish()V

    .line 336
    invoke-virtual {v5}, Ljava/util/zip/Deflater;->end()V

    :cond_ca
    if-eqz v3, :cond_cf

    .line 339
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/OutputStreamEncryption;->finish()V

    .line 340
    :cond_cf
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/OutputStreamCounter;->getCounter()J

    move-result-wide v0

    long-to-int p1, v0

    iput p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStreamLength:I

    goto :goto_110

    .line 331
    :cond_d7
    invoke-virtual {v4, v6, v2, v1}, Ljava/io/OutputStream;->write([BII)V

    .line 332
    iget v7, p0, Lcom/itextpdf/text/pdf/PdfStream;->rawLength:I

    add-int/2addr v7, v1

    iput v7, p0, Lcom/itextpdf/text/pdf/PdfStream;->rawLength:I

    goto :goto_ba

    :cond_e0
    if-eqz v1, :cond_101

    .line 343
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfEncryption;->isEmbeddedFilesOnly()Z

    move-result p1

    if-nez p1, :cond_101

    .line 345
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    if-eqz p1, :cond_f7

    .line 346
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    invoke-virtual {p1}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object p1

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/PdfEncryption;->encryptByteArray([B)[B

    move-result-object p1

    goto :goto_fd

    .line 349
    :cond_f7
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->bytes:[B

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/PdfEncryption;->encryptByteArray([B)[B

    move-result-object p1

    .line 351
    :goto_fd
    invoke-virtual {p2, p1}, Ljava/io/OutputStream;->write([B)V

    goto :goto_110

    .line 354
    :cond_101
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    if-eqz p1, :cond_10b

    .line 355
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    invoke-virtual {p1, p2}, Ljava/io/ByteArrayOutputStream;->writeTo(Ljava/io/OutputStream;)V

    goto :goto_110

    .line 357
    :cond_10b
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfStream;->bytes:[B

    invoke-virtual {p2, p1}, Ljava/io/OutputStream;->write([B)V

    .line 360
    :goto_110
    sget-object p1, Lcom/itextpdf/text/pdf/PdfStream;->ENDSTREAM:[B

    invoke-virtual {p2, p1}, Ljava/io/OutputStream;->write([B)V

    return-void
.end method

.method public toString()Ljava/lang/String;
    .registers 3

    .line 0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfStream;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    if-nez v0, :cond_b

    const-string v0, "Stream"

    return-object v0

    .line 380
    :cond_b
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Stream of type: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfStream;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public writeContent(Ljava/io/OutputStream;)V
    .registers 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    if-eqz v0, :cond_a

    .line 370
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->streamBytes:Ljava/io/ByteArrayOutputStream;

    invoke-virtual {v0, p1}, Ljava/io/ByteArrayOutputStream;->writeTo(Ljava/io/OutputStream;)V

    goto :goto_13

    .line 371
    :cond_a
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->bytes:[B

    if-eqz v0, :cond_13

    .line 372
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->bytes:[B

    invoke-virtual {p1, v0}, Ljava/io/OutputStream;->write([B)V

    :cond_13
    :goto_13
    return-void
.end method

.method public writeLength()V
    .registers 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStream:Ljava/io/InputStream;

    const/4 v1, 0x0

    if-nez v0, :cond_13

    .line 184
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v2, "writelength.can.only.be.called.in.a.contructed.pdfstream.inputstream.pdfwriter"

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v2, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 185
    :cond_13
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStreamLength:I

    const/4 v2, -0x1

    if-ne v0, v2, :cond_26

    .line 186
    new-instance v0, Ljava/io/IOException;

    const-string v2, "writelength.can.only.be.called.after.output.of.the.stream.body"

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v2, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 187
    :cond_26
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfStream;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    new-instance v2, Lcom/itextpdf/text/pdf/PdfNumber;

    iget v3, p0, Lcom/itextpdf/text/pdf/PdfStream;->inputStreamLength:I

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(I)V

    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfStream;->ref:Lcom/itextpdf/text/pdf/PdfIndirectReference;

    invoke-virtual {v0, v2, v3, v1}, Lcom/itextpdf/text/pdf/PdfWriter;->addToBody(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfIndirectReference;Z)Lcom/itextpdf/text/pdf/PdfIndirectObject;

    return-void
.end method
