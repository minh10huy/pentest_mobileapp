.class public Lcom/itextpdf/text/pdf/codec/Base64$InputStream;
.super Ljava/io/FilterInputStream;
.source "Base64.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lcom/itextpdf/text/pdf/codec/Base64;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x9
    name = "InputStream"
.end annotation


# instance fields
.field private alphabet:[B

.field private breakLines:Z

.field private buffer:[B

.field private bufferLength:I

.field private decodabet:[B

.field private encode:Z

.field private lineLength:I

.field private numSigBytes:I

.field private options:I

.field private position:I


# direct methods
.method public constructor <init>(Ljava/io/InputStream;)V
    .registers 3

    const/4 v0, 0x0

    .line 0
    invoke-direct {p0, p1, v0}, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;-><init>(Ljava/io/InputStream;I)V

    return-void
.end method

.method public constructor <init>(Ljava/io/InputStream;I)V
    .registers 6

    .line 0
    invoke-direct {p0, p1}, Ljava/io/FilterInputStream;-><init>(Ljava/io/InputStream;)V

    and-int/lit8 p1, p2, 0x8

    const/16 v0, 0x8

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eq p1, v0, :cond_d

    const/4 p1, 0x1

    goto :goto_e

    :cond_d
    const/4 p1, 0x0

    .line 1325
    :goto_e
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->breakLines:Z

    and-int/lit8 p1, p2, 0x1

    if-ne p1, v2, :cond_15

    goto :goto_16

    :cond_15
    const/4 v2, 0x0

    .line 1326
    :goto_16
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->encode:Z

    .line 1327
    iget-boolean p1, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->encode:Z

    if-eqz p1, :cond_1e

    const/4 p1, 0x4

    goto :goto_1f

    :cond_1e
    const/4 p1, 0x3

    :goto_1f
    iput p1, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->bufferLength:I

    .line 1328
    iget p1, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->bufferLength:I

    new-array p1, p1, [B

    iput-object p1, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->buffer:[B

    const/4 p1, -0x1

    .line 1329
    iput p1, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->position:I

    .line 1330
    iput v1, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->lineLength:I

    .line 1331
    iput p2, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->options:I

    .line 1332
    # invokes: Lcom/itextpdf/text/pdf/codec/Base64;->getAlphabet(I)[B
    invoke-static {p2}, Lcom/itextpdf/text/pdf/codec/Base64;->access$000(I)[B

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->alphabet:[B

    .line 1333
    # invokes: Lcom/itextpdf/text/pdf/codec/Base64;->getDecodabet(I)[B
    invoke-static {p2}, Lcom/itextpdf/text/pdf/codec/Base64;->access$100(I)[B

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->decodabet:[B

    return-void
.end method


# virtual methods
.method public read()I
    .registers 11
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 0
    iget v0, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->position:I

    const/4 v1, -0x1

    const/4 v2, 0x0

    if-gez v0, :cond_77

    .line 1346
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->encode:Z

    const/4 v3, 0x4

    if-eqz v0, :cond_38

    const/4 v0, 0x3

    .line 1347
    new-array v4, v0, [B

    const/4 v5, 0x0

    const/4 v6, 0x0

    :goto_10
    if-ge v5, v0, :cond_27

    .line 1351
    :try_start_12
    iget-object v7, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->in:Ljava/io/InputStream;

    invoke-virtual {v7}, Ljava/io/InputStream;->read()I

    move-result v7

    if-ltz v7, :cond_24

    int-to-byte v7, v7

    .line 1355
    aput-byte v7, v4, v5
    :try_end_1d
    .catch Ljava/io/IOException; {:try_start_12 .. :try_end_1d} :catch_20

    add-int/lit8 v6, v6, 0x1

    goto :goto_24

    :catch_20
    move-exception v7

    if-nez v5, :cond_24

    .line 1363
    throw v7

    :cond_24
    :goto_24
    add-int/lit8 v5, v5, 0x1

    goto :goto_10

    :cond_27
    if-lez v6, :cond_37

    const/4 v5, 0x0

    .line 1369
    iget-object v7, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->buffer:[B

    const/4 v8, 0x0

    iget v9, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->options:I

    # invokes: Lcom/itextpdf/text/pdf/codec/Base64;->encode3to4([BII[BII)[B
    invoke-static/range {v4 .. v9}, Lcom/itextpdf/text/pdf/codec/Base64;->access$200([BII[BII)[B

    .line 1370
    iput v2, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->position:I

    .line 1371
    iput v3, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->numSigBytes:I

    goto :goto_77

    :cond_37
    return v1

    .line 1380
    :cond_38
    new-array v0, v3, [B

    const/4 v4, 0x0

    :goto_3b
    if-ge v4, v3, :cond_57

    .line 1385
    :cond_3d
    iget-object v5, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->in:Ljava/io/InputStream;

    invoke-virtual {v5}, Ljava/io/InputStream;->read()I

    move-result v5

    if-ltz v5, :cond_4e

    .line 1386
    iget-object v6, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->decodabet:[B

    and-int/lit8 v7, v5, 0x7f

    aget-byte v6, v6, v7

    const/4 v7, -0x5

    if-le v6, v7, :cond_3d

    :cond_4e
    if-gez v5, :cond_51

    goto :goto_57

    :cond_51
    int-to-byte v5, v5

    .line 1391
    aput-byte v5, v0, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_3b

    :cond_57
    :goto_57
    if-ne v4, v3, :cond_66

    .line 1395
    iget-object v3, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->buffer:[B

    iget v4, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->options:I

    # invokes: Lcom/itextpdf/text/pdf/codec/Base64;->decode4to3([BI[BII)I
    invoke-static {v0, v2, v3, v2, v4}, Lcom/itextpdf/text/pdf/codec/Base64;->access$300([BI[BII)I

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->numSigBytes:I

    .line 1396
    iput v2, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->position:I

    goto :goto_77

    :cond_66
    if-nez v4, :cond_69

    return v1

    .line 1403
    :cond_69
    new-instance v0, Ljava/io/IOException;

    const-string v1, "improperly.padded.base64.input"

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v1, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1410
    :cond_77
    :goto_77
    iget v0, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->position:I

    if-ltz v0, :cond_b0

    .line 1412
    iget v0, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->position:I

    iget v3, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->numSigBytes:I

    if-lt v0, v3, :cond_82

    return v1

    .line 1415
    :cond_82
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->encode:Z

    if-eqz v0, :cond_95

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->breakLines:Z

    if-eqz v0, :cond_95

    iget v0, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->lineLength:I

    const/16 v3, 0x4c

    if-lt v0, v3, :cond_95

    .line 1416
    iput v2, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->lineLength:I

    const/16 v0, 0xa

    return v0

    .line 1420
    :cond_95
    iget v0, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->lineLength:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->lineLength:I

    .line 1424
    iget-object v0, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->buffer:[B

    iget v2, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->position:I

    add-int/lit8 v3, v2, 0x1

    iput v3, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->position:I

    aget-byte v0, v0, v2

    .line 1426
    iget v2, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->position:I

    iget v3, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->bufferLength:I

    if-lt v2, v3, :cond_ad

    .line 1427
    iput v1, p0, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->position:I

    :cond_ad
    and-int/lit16 v0, v0, 0xff

    return v0

    .line 1437
    :cond_b0
    new-instance v0, Ljava/io/IOException;

    const-string v1, "error.in.base64.code.reading.stream"

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v1, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public read([BII)I
    .registers 7
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    const/4 v0, 0x0

    :goto_1
    if-ge v0, p3, :cond_15

    .line 0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/codec/Base64$InputStream;->read()I

    move-result v1

    if-ltz v1, :cond_11

    .line 1464
    add-int v2, p2, v0

    int-to-byte v1, v1

    aput-byte v1, p1, v2

    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_11
    if-nez v0, :cond_15

    const/4 p1, -0x1

    return p1

    :cond_15
    return v0
.end method
