.class public Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;
.super Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;
.source "HyphenationTree.java"

# interfaces
.implements Lcom/itextpdf/text/pdf/hyphenation/PatternConsumer;


# static fields
.field private static final serialVersionUID:J = -0x6bbc9e9963157ab8L


# instance fields
.field protected classmap:Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

.field private transient ivalues:Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

.field protected stoplist:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Object;",
            ">;>;"
        }
    .end annotation
.end field

.field protected vspace:Lcom/itextpdf/text/pdf/hyphenation/ByteVector;


# direct methods
.method public constructor <init>()V
    .registers 3

    .line 0
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;-><init>()V

    .line 57
    new-instance v0, Ljava/util/HashMap;

    const/16 v1, 0x17

    invoke-direct {v0, v1}, Ljava/util/HashMap;-><init>(I)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->stoplist:Ljava/util/HashMap;

    .line 58
    new-instance v0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->classmap:Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    .line 59
    new-instance v0, Lcom/itextpdf/text/pdf/hyphenation/ByteVector;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/hyphenation/ByteVector;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->vspace:Lcom/itextpdf/text/pdf/hyphenation/ByteVector;

    .line 60
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->vspace:Lcom/itextpdf/text/pdf/hyphenation/ByteVector;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/hyphenation/ByteVector;->alloc(I)I

    return-void
.end method


# virtual methods
.method public addClass(Ljava/lang/String;)V
    .registers 7

    .line 0
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    if-lez v0, :cond_26

    const/4 v0, 0x0

    .line 409
    invoke-virtual {p1, v0}, Ljava/lang/String;->charAt(I)C

    move-result v1

    const/4 v2, 0x2

    .line 410
    new-array v2, v2, [C

    const/4 v3, 0x1

    aput-char v0, v2, v3

    const/4 v3, 0x0

    .line 412
    :goto_12
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v4

    if-ge v3, v4, :cond_26

    .line 413
    invoke-virtual {p1, v3}, Ljava/lang/String;->charAt(I)C

    move-result v4

    aput-char v4, v2, v0

    .line 414
    iget-object v4, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->classmap:Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    invoke-virtual {v4, v2, v0, v1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insert([CIC)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_12

    :cond_26
    return-void
.end method

.method public addException(Ljava/lang/String;Ljava/util/ArrayList;)V
    .registers 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Object;",
            ">;)V"
        }
    .end annotation

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->stoplist:Ljava/util/HashMap;

    invoke-virtual {v0, p1, p2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    return-void
.end method

.method public addPattern(Ljava/lang/String;Ljava/lang/String;)V
    .registers 6

    .line 0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->ivalues:Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->find(Ljava/lang/String;)I

    move-result v0

    if-gtz v0, :cond_12

    .line 444
    invoke-virtual {p0, p2}, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->packValues(Ljava/lang/String;)I

    move-result v0

    .line 445
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->ivalues:Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    int-to-char v2, v0

    invoke-virtual {v1, p2, v2}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insert(Ljava/lang/String;C)V

    :cond_12
    int-to-char p2, v0

    .line 447
    invoke-virtual {p0, p1, p2}, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->insert(Ljava/lang/String;C)V

    return-void
.end method

.method public findPattern(Ljava/lang/String;)Ljava/lang/String;
    .registers 2

    .line 0
    invoke-super {p0, p1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->find(Ljava/lang/String;)I

    move-result p1

    if-ltz p1, :cond_b

    .line 127
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->unpackValues(I)Ljava/lang/String;

    move-result-object p1

    return-object p1

    :cond_b
    const-string p1, ""

    return-object p1
.end method

.method protected getValues(I)[B
    .registers 5

    .line 0
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 150
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->vspace:Lcom/itextpdf/text/pdf/hyphenation/ByteVector;

    add-int/lit8 v2, p1, 0x1

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/hyphenation/ByteVector;->get(I)B

    move-result p1

    :goto_d
    if-eqz p1, :cond_2d

    ushr-int/lit8 v1, p1, 0x4

    add-int/lit8 v1, v1, -0x1

    int-to-char v1, v1

    .line 153
    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    and-int/lit8 p1, p1, 0xf

    int-to-char p1, p1

    if-nez p1, :cond_1d

    goto :goto_2d

    :cond_1d
    add-int/lit8 p1, p1, -0x1

    int-to-char p1, p1

    .line 159
    invoke-virtual {v0, p1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 160
    iget-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->vspace:Lcom/itextpdf/text/pdf/hyphenation/ByteVector;

    add-int/lit8 v1, v2, 0x1

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/hyphenation/ByteVector;->get(I)B

    move-result p1

    move v2, v1

    goto :goto_d

    .line 162
    :cond_2d
    :goto_2d
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->length()I

    move-result p1

    new-array p1, p1, [B

    const/4 v1, 0x0

    .line 163
    :goto_34
    array-length v2, p1

    if-ge v1, v2, :cond_41

    .line 164
    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->charAt(I)C

    move-result v2

    int-to-byte v2, v2

    aput-byte v2, p1, v1

    add-int/lit8 v1, v1, 0x1

    goto :goto_34

    :cond_41
    return-object p1
.end method

.method protected hstrcmp([CI[CI)I
    .registers 8

    .line 0
    :goto_0
    aget-char v0, p1, p2

    aget-char v1, p3, p4

    const/4 v2, 0x0

    if-ne v0, v1, :cond_11

    .line 138
    aget-char v0, p1, p2

    if-nez v0, :cond_c

    return v2

    :cond_c
    add-int/lit8 p2, p2, 0x1

    add-int/lit8 p4, p4, 0x1

    goto :goto_0

    .line 142
    :cond_11
    aget-char v0, p3, p4

    if-nez v0, :cond_16

    return v2

    .line 145
    :cond_16
    aget-char p1, p1, p2

    aget-char p2, p3, p4

    sub-int/2addr p1, p2

    return p1
.end method

.method public hyphenate(Ljava/lang/String;II)Lcom/itextpdf/text/pdf/hyphenation/Hyphenation;
    .registers 10

    .line 0
    invoke-virtual {p1}, Ljava/lang/String;->toCharArray()[C

    move-result-object v1

    .line 268
    array-length v3, v1

    const/4 v2, 0x0

    move-object v0, p0

    move v4, p2

    move v5, p3

    invoke-virtual/range {v0 .. v5}, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->hyphenate([CIIII)Lcom/itextpdf/text/pdf/hyphenation/Hyphenation;

    move-result-object p1

    return-object p1
.end method

.method public hyphenate([CIIII)Lcom/itextpdf/text/pdf/hyphenation/Hyphenation;
    .registers 23

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    .line 312
    move/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    add-int/lit8 v6, v3, 0x3

    .line 0
    new-array v6, v6, [C

    const/4 v7, 0x2

    new-array v7, v7, [C

    .line 317
    const/4 v8, 0x0

    const/4 v9, 0x1

    move v11, v3

    const/4 v10, 0x1

    .line 318
    const/4 v12, 0x0

    const/4 v13, 0x0

    :goto_17
    const/4 v14, 0x0

    if-gt v10, v3, :cond_3e

    add-int v15, v2, v10

    sub-int/2addr v15, v9

    aget-char v15, v1, v15

    aput-char v15, v7, v8

    iget-object v15, v0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->classmap:Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    invoke-virtual {v15, v7, v8}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->find([CI)I

    move-result v15

    if-gez v15, :cond_33

    add-int/lit8 v14, v12, 0x1

    if-ne v10, v14, :cond_2f

    .line 330
    move v12, v14

    goto :goto_30

    :cond_2f
    const/4 v13, 0x1

    :goto_30
    add-int/lit8 v11, v11, -0x1

    goto :goto_3a

    :cond_33
    if-nez v13, :cond_3d

    sub-int v14, v10, v12

    int-to-char v15, v15

    aput-char v15, v6, v14

    .line 342
    :goto_3a
    add-int/lit8 v10, v10, 0x1

    .line 346
    goto :goto_17

    :cond_3d
    return-object v14

    :cond_3e
    add-int v7, v4, p5

    .line 347
    if-ge v11, v7, :cond_43

    return-object v14

    :cond_43
    add-int/lit8 v7, v11, 0x1

    new-array v10, v7, [I

    new-instance v13, Ljava/lang/String;

    .line 349
    invoke-direct {v13, v6, v9, v11}, Ljava/lang/String;-><init>([CII)V

    iget-object v15, v0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->stoplist:Ljava/util/HashMap;

    invoke-virtual {v15, v13}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v15

    if-eqz v15, :cond_85

    .line 351
    iget-object v6, v0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->stoplist:Ljava/util/HashMap;

    invoke-virtual {v6, v13}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 352
    move-result-object v6

    check-cast v6, Ljava/util/ArrayList;

    const/4 v7, 0x0

    .line 355
    const/4 v9, 0x0

    const/4 v13, 0x0

    :goto_5f
    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    .line 356
    move-result v15

    if-ge v7, v15, :cond_b6

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v15

    instance-of v14, v15, Ljava/lang/String;

    if-eqz v14, :cond_81

    check-cast v15, Ljava/lang/String;

    invoke-virtual {v15}, Ljava/lang/String;->length()I

    .line 358
    move-result v14

    add-int/2addr v9, v14

    if-lt v9, v4, :cond_81

    sub-int v14, v11, p5

    if-ge v9, v14, :cond_81

    add-int/lit8 v14, v13, 0x1

    .line 364
    add-int v15, v9, v12

    .line 365
    aput v15, v10, v13

    move v13, v14

    .line 366
    :cond_81
    add-int/lit8 v7, v7, 0x1

    const/4 v14, 0x0

    goto :goto_5f

    .line 367
    :cond_85
    const/16 v13, 0x2e

    aput-char v13, v6, v8

    aput-char v13, v6, v7

    .line 369
    add-int/lit8 v13, v11, 0x2

    aput-char v8, v6, v13

    add-int/lit8 v13, v11, 0x3

    new-array v13, v13, [B

    const/4 v14, 0x0

    :goto_94
    if-ge v14, v7, :cond_9c

    .line 377
    invoke-virtual {v0, v6, v14, v13}, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->searchPatterns([CI[B)V

    add-int/lit8 v14, v14, 0x1

    goto :goto_94

    :cond_9c
    const/4 v6, 0x0

    const/4 v7, 0x0

    :goto_9e
    if-ge v6, v11, :cond_b5

    add-int/lit8 v14, v6, 0x1

    aget-byte v15, v13, v14

    .line 379
    and-int/2addr v15, v9

    if-ne v15, v9, :cond_b3

    if-lt v6, v4, :cond_b3

    sub-int v15, v11, p5

    if-gt v6, v15, :cond_b3

    .line 387
    add-int/lit8 v15, v7, 0x1

    .line 388
    add-int/2addr v6, v12

    aput v6, v10, v7

    .line 389
    move v7, v15

    :cond_b3
    move v6, v14

    goto :goto_9e

    :cond_b5
    move v13, v7

    :cond_b6
    if-lez v13, :cond_c8

    new-array v4, v13, [I

    invoke-static {v10, v8, v4, v8, v13}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    new-instance v5, Lcom/itextpdf/text/pdf/hyphenation/Hyphenation;

    new-instance v6, Ljava/lang/String;

    invoke-direct {v6, v1, v2, v3}, Ljava/lang/String;-><init>([CII)V

    invoke-direct {v5, v6, v4}, Lcom/itextpdf/text/pdf/hyphenation/Hyphenation;-><init>(Ljava/lang/String;[I)V

    return-object v5

    :cond_c8
    const/4 v1, 0x0

    return-object v1
.end method

.method public loadSimplePatterns(Ljava/io/InputStream;)V
    .registers 4

    .line 0
    new-instance v0, Lcom/itextpdf/text/pdf/hyphenation/SimplePatternParser;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/hyphenation/SimplePatternParser;-><init>()V

    .line 109
    new-instance v1, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;-><init>()V

    iput-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->ivalues:Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    .line 111
    invoke-virtual {v0, p1, p0}, Lcom/itextpdf/text/pdf/hyphenation/SimplePatternParser;->parse(Ljava/io/InputStream;Lcom/itextpdf/text/pdf/hyphenation/PatternConsumer;)V

    .line 115
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->trimToSize()V

    .line 116
    iget-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->vspace:Lcom/itextpdf/text/pdf/hyphenation/ByteVector;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/hyphenation/ByteVector;->trimToSize()V

    .line 117
    iget-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->classmap:Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->trimToSize()V

    const/4 p1, 0x0

    .line 120
    iput-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->ivalues:Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    return-void
.end method

.method protected packValues(Ljava/lang/String;)I
    .registers 12

    .line 0
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    and-int/lit8 v1, v0, 0x1

    const/4 v2, 0x1

    if-ne v1, v2, :cond_e

    shr-int/lit8 v1, v0, 0x1

    add-int/lit8 v1, v1, 0x2

    goto :goto_11

    :cond_e
    shr-int/lit8 v1, v0, 0x1

    add-int/2addr v1, v2

    .line 75
    :goto_11
    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->vspace:Lcom/itextpdf/text/pdf/hyphenation/ByteVector;

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/hyphenation/ByteVector;->alloc(I)I

    move-result v3

    .line 76
    iget-object v4, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->vspace:Lcom/itextpdf/text/pdf/hyphenation/ByteVector;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/hyphenation/ByteVector;->getArray()[B

    move-result-object v4

    const/4 v5, 0x0

    const/4 v6, 0x0

    :goto_1f
    if-ge v6, v0, :cond_42

    shr-int/lit8 v7, v6, 0x1

    .line 79
    invoke-virtual {p1, v6}, Ljava/lang/String;->charAt(I)C

    move-result v8

    add-int/lit8 v8, v8, -0x30

    add-int/2addr v8, v2

    and-int/lit8 v8, v8, 0xf

    int-to-byte v8, v8

    and-int/lit8 v9, v6, 0x1

    if-ne v9, v2, :cond_39

    add-int/2addr v7, v3

    .line 81
    aget-byte v9, v4, v7

    or-int/2addr v8, v9

    int-to-byte v8, v8

    aput-byte v8, v4, v7

    goto :goto_3f

    :cond_39
    add-int/2addr v7, v3

    shl-int/lit8 v8, v8, 0x4

    int-to-byte v8, v8

    .line 83
    aput-byte v8, v4, v7

    :goto_3f
    add-int/lit8 v6, v6, 0x1

    goto :goto_1f

    :cond_42
    sub-int/2addr v1, v2

    add-int/2addr v1, v3

    .line 86
    aput-byte v5, v4, v1

    return v3
.end method

.method public printStats()V
    .registers 4

    .line 0
    sget-object v0, Ljava/lang/System;->out:Ljava/io/PrintStream;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Value space size = "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->vspace:Lcom/itextpdf/text/pdf/hyphenation/ByteVector;

    .line 453
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/hyphenation/ByteVector;->length()I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 452
    invoke-virtual {v0, v1}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    .line 454
    invoke-super {p0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->printStats()V

    return-void
.end method

.method protected searchPatterns([CI[B)V
    .registers 13

    .line 0
    aget-char v0, p1, p2

    .line 198
    iget-char v1, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->root:C

    move v2, v0

    move v0, p2

    :cond_6
    :goto_6
    if-lez v1, :cond_9a

    .line 200
    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->sc:[C

    array-length v3, v3

    if-ge v1, v3, :cond_9a

    .line 201
    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->sc:[C

    aget-char v3, v3, v1

    const/4 v4, 0x0

    const v5, 0xffff

    if-ne v3, v5, :cond_43

    .line 202
    iget-object v2, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->getArray()[C

    move-result-object v2

    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->lo:[C

    aget-char v3, v3, v1

    invoke-virtual {p0, p1, v0, v2, v3}, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->hstrcmp([CI[CI)I

    move-result p1

    if-nez p1, :cond_42

    .line 203
    iget-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->eq:[C

    aget-char p1, p1, v1

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->getValues(I)[B

    move-result-object p1

    .line 205
    array-length v0, p1

    :goto_30
    if-ge v4, v0, :cond_42

    aget-byte v1, p1, v4

    .line 206
    array-length v2, p3

    if-ge p2, v2, :cond_3d

    aget-byte v2, p3, p2

    if-le v1, v2, :cond_3d

    .line 207
    aput-byte v1, p3, p2

    :cond_3d
    add-int/lit8 p2, p2, 0x1

    add-int/lit8 v4, v4, 0x1

    goto :goto_30

    :cond_42
    return-void

    .line 214
    :cond_43
    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->sc:[C

    aget-char v3, v3, v1

    sub-int v3, v2, v3

    if-nez v3, :cond_8c

    if-nez v2, :cond_4e

    goto :goto_9a

    :cond_4e
    add-int/lit8 v0, v0, 0x1

    .line 219
    aget-char v2, p1, v0

    .line 220
    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->eq:[C

    aget-char v1, v3, v1

    move v3, v1

    :goto_57
    if-lez v3, :cond_6

    .line 225
    iget-object v6, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->sc:[C

    array-length v6, v6

    if-ge v3, v6, :cond_6

    .line 226
    iget-object v6, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->sc:[C

    aget-char v6, v6, v3

    if-ne v6, v5, :cond_65

    goto :goto_6

    .line 229
    :cond_65
    iget-object v6, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->sc:[C

    aget-char v6, v6, v3

    if-nez v6, :cond_87

    .line 230
    iget-object v5, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->eq:[C

    aget-char v3, v5, v3

    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->getValues(I)[B

    move-result-object v3

    .line 232
    array-length v5, v3

    move v6, p2

    :goto_75
    if-ge v4, v5, :cond_6

    aget-byte v7, v3, v4

    .line 233
    array-length v8, p3

    if-ge v6, v8, :cond_82

    aget-byte v8, p3, v6

    if-le v7, v8, :cond_82

    .line 234
    aput-byte v7, p3, v6

    :cond_82
    add-int/lit8 v6, v6, 0x1

    add-int/lit8 v4, v4, 0x1

    goto :goto_75

    .line 240
    :cond_87
    iget-object v6, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->lo:[C

    aget-char v3, v6, v3

    goto :goto_57

    :cond_8c
    if-gez v3, :cond_94

    .line 250
    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->lo:[C

    aget-char v1, v3, v1

    goto/16 :goto_6

    :cond_94
    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->hi:[C

    aget-char v1, v3, v1

    goto/16 :goto_6

    :cond_9a
    :goto_9a
    return-void
.end method

.method protected unpackValues(I)Ljava/lang/String;
    .registers 5

    .line 0
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 92
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->vspace:Lcom/itextpdf/text/pdf/hyphenation/ByteVector;

    add-int/lit8 v2, p1, 0x1

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/hyphenation/ByteVector;->get(I)B

    move-result p1

    :goto_d
    if-eqz p1, :cond_31

    ushr-int/lit8 v1, p1, 0x4

    add-int/lit8 v1, v1, -0x1

    add-int/lit8 v1, v1, 0x30

    int-to-char v1, v1

    .line 95
    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    and-int/lit8 p1, p1, 0xf

    int-to-char p1, p1

    if-nez p1, :cond_1f

    goto :goto_31

    :cond_1f
    add-int/lit8 p1, p1, -0x1

    add-int/lit8 p1, p1, 0x30

    int-to-char p1, p1

    .line 101
    invoke-virtual {v0, p1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 102
    iget-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/HyphenationTree;->vspace:Lcom/itextpdf/text/pdf/hyphenation/ByteVector;

    add-int/lit8 v1, v2, 0x1

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/hyphenation/ByteVector;->get(I)B

    move-result p1

    move v2, v1

    goto :goto_d

    .line 104
    :cond_31
    :goto_31
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method
